{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# problem\r\n\r\nCalling console.log() from the node plugin sends the data to nvim process. Because of [this](https://github.com/neovim/neovim/issues/23781), it actually crashes the nvim process. \r\n\r\n# expected behavior\r\n\r\nCalling console.log() from the node plugin should just log. \r\n\r\n# details\r\n\r\nfor instance with the code:\r\n\r\n```typescript\r\n  const client = (await plugin.nvim) as NeovimClient;\r\n  const ret = client.isApiReady;\r\n  console.warn(\"isApiReady \", ret); // true\r\n  console.log(\"This is sent to neovim\");\r\n```\r\n\r\nI attach to nvim and set a breakpoint on the following line https://github.com/neovim/neovim/blob/a4290f462ed7dc81e17b09bd27877b106b24b6bd/src/nvim/msgpack_rpc/channel.c#L304\r\n\r\n```\r\n.text:00000001403190A1 ; 32:     size = 0i64;\r\n.text:00000001403190A1                 mov     [rsp+1B8h+size], 0\r\n.text:00000001403190AD ; 33:     read_ptr = rbuffer_read_ptr(rbuf, &size);\r\n.text:00000001403190AD                 lea     rdx, [rsp+1B8h+size] ; read_count\r\n.text:00000001403190B5                 mov     rcx, [rsp+1B8h+rbuf] ; buf\r\n.text:00000001403190BD                 call    rbuffer_read_ptr\r\n.text:00000001403190C2 ; 34:     p->read_ptr = read_ptr;\r\n.text:00000001403190C2                 mov     rcx, [rsp+1B8h+p]\r\n.text:00000001403190CA                 mov     [rcx+Unpacker.read_ptr], rax\r\n.text:00000001403190D1 ; 35:     p->read_size = size;\r\n.text:00000001403190D1                 mov     rax, [rsp+1B8h+p]\r\n.text:00000001403190D9                 mov     rcx, [rsp+1B8h+size]\r\n.text:00000001403190E1                 mov     [rax+Unpacker.read_size], rcx\r\n.text:00000001403190E8 ; 36:     parse_msgpack(channel);\r\n.text:00000001403190E8                 mov     rcx, [rsp+1B8h+channel] ; channel          <----- breakpoint here\r\n.text:00000001403190ED                 call    parse_msgpack\r\n```\r\n\r\nfor instance I use this breakpoint on Windows. we can see below that nvim receives the data that we try to log with `console.log`. Also note that it doesn't receive the data that we log with `console.warn`:\r\n\r\n```\r\n0:000> bp nvim!receive_msgpack+0x168 \".printf \\\"size: 0x%lx\\\\n\\\", poi(rax+6c0); db poi(rax+6b8); g\"\r\nsize: 0x17\r\n000001e4`a907b8d0  54 68 69 73 20 69 73 20-73 65 6e 74 20 74 6f 20  This is sent to \r\n000001e4`a907b8e0  6e 65 6f 76 69 6d 0a 6e-65 91 b4 30 35 2f 30 33  neovim.ne..05/03\r\n\r\nDebug Error!\r\n\r\nProgram: C:\\neovim\\build\\bin\\nvim.exe\r\n\r\nabort() has been called\r\n\r\n(Press Retry to debug the application)\r\nModLoad: 00007ffb`26a30000 00007ffb`26a42000   C:\\Windows\\SYSTEM32\\kernel.appcore.dll\r\nModLoad: 00007ffb`1ac50000 00007ffb`1acfc000   C:\\Windows\\SYSTEM32\\TextShaping.dll\r\nModLoad: 00007ffa`fa4e0000 00007ffa`fa502000   C:\\Users\\Cedric\\AppData\\Local\\Temp\\8D05.tmp\r\nModLoad: 00007ffb`083f0000 00007ffb`08508000   C:\\Program Files (x86)\\Stardock\\Groupy\\groupy_64.dll\r\nModLoad: 00007ffb`2a300000 00007ffb`2a414000   C:\\Windows\\System32\\MSCTF.dll\r\nModLoad: 00007ffb`29ab0000 00007ffb`29b7d000   C:\\Windows\\System32\\OLEAUT32.dll\r\nModLoad: 00007ffb`19f20000 00007ffb`1a019000   C:\\Windows\\SYSTEM32\\textinputframework.dll\r\nModLoad: 00007ffb`24890000 00007ffb`24beb000   C:\\Windows\\System32\\CoreUIComponents.dll\r\nModLoad: 00007ffb`29500000 00007ffb`295ad000   C:\\Windows\\System32\\SHCORE.dll\r\nModLoad: 00007ffb`254e0000 00007ffb`255d2000   C:\\Windows\\System32\\CoreMessaging.dll\r\nModLoad: 00007ffb`27340000 00007ffb`27373000   C:\\Windows\\SYSTEM32\\ntmarta.dll\r\nModLoad: 00007ffb`23e80000 00007ffb`23fd5000   C:\\Windows\\SYSTEM32\\wintypes.dll\r\nModLoad: 00007ffb`25ae0000 00007ffb`25b0f000   C:\\Windows\\SYSTEM32\\dwmapi.dll\r\n(3128.8bf8): Break instruction exception - code 80000003 (first chance)\r\nucrtbased!issue_debug_notification+0x45:\r\n00007ffa`f0017475 cc              int     3\r\n0:000> k\r\n # Child-SP          RetAddr               Call Site\r\n00 00000069`dad2e600 00007ffa`f0017613     ucrtbased!issue_debug_notification+0x45 [minkernel\\crts\\ucrt\\src\\appcrt\\internal\\report_runtime_error.cpp @ 28] \r\n01 00000069`dad2e650 00007ffa`f002d86d     ucrtbased!__acrt_report_runtime_error+0x13 [minkernel\\crts\\ucrt\\src\\appcrt\\internal\\report_runtime_error.cpp @ 154] \r\n02 00000069`dad2e6b0 00007ffa`f00334b5     ucrtbased!abort+0x1d [minkernel\\crts\\ucrt\\src\\appcrt\\startup\\abort.cpp @ 61] \r\n03 00000069`dad2e6f0 00007ffa`f0033027     ucrtbased!common_assert_to_stderr_direct+0xe5 [minkernel\\crts\\ucrt\\src\\appcrt\\startup\\assert.cpp @ 161] \r\n04 00000069`dad2ebd0 00007ffa`f00310b8     ucrtbased!common_assert_to_stderr<wchar_t>+0x27 [minkernel\\crts\\ucrt\\src\\appcrt\\startup\\assert.cpp @ 179] \r\n05 00000069`dad2ec30 00007ffa`f0033a1f     ucrtbased!common_assert<wchar_t>+0x68 [minkernel\\crts\\ucrt\\src\\appcrt\\startup\\assert.cpp @ 420] \r\n06 00000069`dad2ec70 00007ff6`26af54b1     ucrtbased!_wassert+0x2f [minkernel\\crts\\ucrt\\src\\appcrt\\startup\\assert.cpp @ 444] \r\n07 00000069`dad2eca0 00007ff6`26af55ee     nvim!rbuffer_consumed+0x41 [C:\\neovim\\src\\nvim\\rbuffer.c @ 126] \r\n08 00000069`dad2ece0 00007ff6`26a5912c     nvim!rbuffer_consumed_compact+0x4e [C:\\neovim\\src\\nvim\\rbuffer.c @ 149] \r\n09 00000069`dad2ed10 00007ff6`26915f0e     nvim!receive_msgpack+0x1ac [C:\\neovim\\src\\nvim\\msgpack_rpc\\channel.c @ 311] \r\n0a 00000069`dad2eed0 00007ff6`26916099     nvim!read_event+0xbe [C:\\neovim\\src\\nvim\\event\\rstream.c @ 193] \r\n0b 00000069`dad2ef30 00007ff6`26915c23     nvim!invoke_read_cb+0x139 [C:\\neovim\\src\\nvim\\event\\rstream.c @ 204] \r\n0c 00000069`dad2f090 00007ff6`26d774fb     nvim!read_cb+0x153 [C:\\neovim\\src\\nvim\\event\\rstream.c @ 134] \r\n0d 00000069`dad2f110 00007ff6`26d729fd     nvim!uv__pipe_read_data+0x15b [C:\\neovim\\.deps\\build\\src\\libuv\\src\\win\\pipe.c @ 1929] \r\n0e 00000069`dad2f1d0 00007ff6`26d69a5d     nvim!uv__process_pipe_read_req+0x26d [C:\\neovim\\.deps\\build\\src\\libuv\\src\\win\\pipe.c @ 2053] \r\n0f 00000069`dad2f280 00007ff6`26d68ccb     nvim!uv__process_reqs+0x11d [C:\\neovim\\.deps\\build\\src\\libuv\\src\\win\\req-inl.h @ 159] \r\n10 00000069`dad2f2f0 00007ff6`26911d68     nvim!uv_run+0x16b [C:\\neovim\\.deps\\build\\src\\libuv\\src\\win\\core.c @ 658] \r\n11 00000069`dad2f330 00007ff6`26911df1     nvim!loop_uv_run+0xb8 [C:\\neovim\\src\\nvim\\event\\loop.c @ 65] \r\n12 00000069`dad2f380 00007ff6`26ac025a     nvim!loop_poll_events+0x21 [C:\\neovim\\src\\nvim\\event\\loop.c @ 86] \r\n13 00000069`dad2f3c0 00007ff6`26abf377     nvim!inbuf_poll+0x18a [C:\\neovim\\src\\nvim\\os\\input.c @ 467] \r\n14 00000069`dad2f440 00007ff6`26ba7d66     nvim!os_inchar+0x1c7 [C:\\neovim\\src\\nvim\\os\\input.c @ 150] \r\n15 00000069`dad2f490 00007ff6`26a643f9     nvim!state_enter+0x106 [C:\\neovim\\src\\nvim\\state.c @ 82] \r\n16 00000069`dad2f500 00007ff6`269e80a6     nvim!normal_enter+0xe9 [C:\\neovim\\src\\nvim\\normal.c @ 517] \r\n17 00000069`dad2f640 00007ff6`26db3179     nvim!wmain+0xf36 [C:\\neovim\\src\\nvim\\main.c @ 654] \r\n18 00000069`dad2f990 00007ff6`26db301e     nvim!invoke_main+0x39 [d:\\a01\\_work\\12\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 91] \r\n19 00000069`dad2f9e0 00007ff6`26db2ede     nvim!__scrt_common_main_seh+0x12e [d:\\a01\\_work\\12\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 288] \r\n1a 00000069`dad2fa50 00007ff6`26db320e     nvim!__scrt_common_main+0xe [d:\\a01\\_work\\12\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_common.inl @ 331] \r\n1b 00000069`dad2fa80 00007ffb`29997344     nvim!wmainCRTStartup+0xe [d:\\a01\\_work\\12\\s\\src\\vctools\\crt\\vcstartup\\src\\startup\\exe_wmain.cpp @ 17] \r\n1c 00000069`dad2fab0 00007ffb`2ab626b1     KERNEL32!BaseThreadInitThunk+0x14\r\n1d 00000069`dad2fae0 00000000`00000000     ntdll!RtlUserThreadStart+0x21\r\n```\r\n\r\nAt the end the problem I was describing in https://github.com/neovim/neovim/issues/23781#issuecomment-1971464708 was due to me using `console.log`...\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "NONE",
            "body": "`console.info` and `console.debug` have the same problem as `console.log`. \r\n\r\n`console.error` and `console.warn` don't have that problem. ",
            "created_at": "2024-03-05T17:09:24Z",
            "html_url": "https://github.com/neovim/node-client/issues/329#issuecomment-1979247307",
            "id": 1979247307,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/329",
            "node_id": "IC_kwDOAdOzk851-OrL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1979247307/reactions"
            },
            "updated_at": "2024-03-05T17:09:24Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1979247307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/387346?v=4",
                "events_url": "https://api.github.com/users/saidelike/events{/privacy}",
                "followers_url": "https://api.github.com/users/saidelike/followers",
                "following_url": "https://api.github.com/users/saidelike/following{/other_user}",
                "gists_url": "https://api.github.com/users/saidelike/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/saidelike",
                "id": 387346,
                "login": "saidelike",
                "node_id": "MDQ6VXNlcjM4NzM0Ng==",
                "organizations_url": "https://api.github.com/users/saidelike/orgs",
                "received_events_url": "https://api.github.com/users/saidelike/received_events",
                "repos_url": "https://api.github.com/users/saidelike/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/saidelike/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/saidelike/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/saidelike"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/node-client/issues/329/comments",
    "created_at": "2024-03-05T16:30:36Z",
    "events_url": "https://api.github.com/repos/neovim/node-client/issues/329/events",
    "html_url": "https://github.com/neovim/node-client/issues/329",
    "id": 2169661154,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/node-client/issues/329/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAdOzk86BUmbi",
    "number": 329,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/node-client/issues/329/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/node-client",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/node-client/issues/329/timeline",
    "title": "Nvim crashes or node exits when calling console.log() from the node plugin",
    "updated_at": "2024-03-05T17:09:26Z",
    "url": "https://api.github.com/repos/neovim/node-client/issues/329",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/387346?v=4",
        "events_url": "https://api.github.com/users/saidelike/events{/privacy}",
        "followers_url": "https://api.github.com/users/saidelike/followers",
        "following_url": "https://api.github.com/users/saidelike/following{/other_user}",
        "gists_url": "https://api.github.com/users/saidelike/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/saidelike",
        "id": 387346,
        "login": "saidelike",
        "node_id": "MDQ6VXNlcjM4NzM0Ng==",
        "organizations_url": "https://api.github.com/users/saidelike/orgs",
        "received_events_url": "https://api.github.com/users/saidelike/received_events",
        "repos_url": "https://api.github.com/users/saidelike/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/saidelike/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saidelike/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/saidelike"
    }
}