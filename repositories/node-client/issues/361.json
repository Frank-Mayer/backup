{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "It is kind of related to https://github.com/neovim/node-client/issues/360 but more specific.\r\n\r\nAt the moment, I start my node plugin test framework from init.lua at nvim startup and it worked fine on Windows/locally but it deadlocks on Linux/CI.\r\n\r\n```\r\n2024-05-18 07:21:15 INF     - recorded/actions/bringVestToCap\r\n2024-05-18 07:21:15 INF     - recorded/actions/callFine\r\n2024-05-18 07:21:15 INF     - recorded/actions/callFineOnBatt\r\n2024-05-18 07:21:15 INF     - recorded/actions/callVest\r\n2024-05-18 07:21:15 INF     - recorded/actions/callVestOnCap\r\n2024-05-18 07:21:15 INF     - recorded/actions/carveVest\r\n2024-05-18 07:21:15 DBG ------------------------------------------------------------------------------\r\n2024-05-18 07:21:15 DBG runTest(/home/runner/work/cursorless/cursorless/data/fixtures/recorded/actions/changeNextInstanceChar.yml)...\r\n2024-05-18 07:21:15 DBG request  -> nvim_command\r\n2024-05-18 07:22:55 DBG ------------------------------------------------------------------------------\r\n2024-05-18 07:22:55 DBG runTest(/home/runner/work/cursorless/cursorless/data/fixtures/recorded/actions/changeNextInstanceChar.yml)...\r\n2024-05-18 07:22:55 DBG request  -> nvim_command\r\n2024-05-18 07:24:35 DBG ------------------------------------------------------------------------------\r\n2024-05-18 07:24:35 DBG runTest(/home/runner/work/cursorless/cursorless/data/fixtures/recorded/actions/changeNextInstanceChar.yml)...\r\n2024-05-18 07:24:35 DBG request  -> nvim_command\r\n2024-05-18 07:26:15 DBG ------------------------------------------------------------------------------\r\n2024-05-18 07:26:15 DBG runTest(/home/runner/work/cursorless/cursorless/data/fixtures/recorded/actions/changeNextInstanceChar.yml)...\r\n2024-05-18 07:26:15 DBG request  -> nvim_command\r\n2024-05-18 07:27:55 DBG ------------------------------------------------------------------------------\r\n2024-05-18 07:27:55 DBG runTest(/home/runner/work/cursorless/cursorless/data/fixtures/recorded/actions/changeNextInstanceChar.yml)...\r\n2024-05-18 07:27:55 DBG request  -> nvim_command\r\n2024-05-18 07:29:35 DBG ------------------------------------------------------------------------------\r\n2024-05-18 07:29:35 DBG runTest(/home/runner/work/cursorless/cursorless/data/fixtures/recorded/actions/changeNextInstanceChar.yml)...\r\n2024-05-18 07:29:35 DBG request  -> nvim_command\r\n2024-05-18 07:31:15 INF     1) recorded/actions/changeNextInstanceChar\r\n2024-05-18 07:31:15 INF     - recorded/actions/chuckArgMadeAndAir\r\n```\r\n\r\nI am not sure if it is a Linux difference or a CI difference but I am investigating if there is any way to kick of the test differently (not from init.lua). For instance, is there a way for me to start nvim, wait a bit that it initialises and then call a function from it, either from node or vim script (since I export the node function into vim script anyway)?\r\n",
    "closed_at": "2024-05-21T16:05:53Z",
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "You issue was resolved here, correct? https://github.com/neovim/neovim/issues/28886",
            "created_at": "2024-05-21T16:05:53Z",
            "html_url": "https://github.com/neovim/node-client/issues/361#issuecomment-2122965148",
            "id": 2122965148,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/361",
            "node_id": "IC_kwDOAdOzk85-ieCc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/2122965148/reactions"
            },
            "updated_at": "2024-05-21T16:05:53Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/2122965148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Correct, it was due to \"hit enter to continue\" message that was blocking neovim command call from node. ",
            "created_at": "2024-05-21T17:09:33Z",
            "html_url": "https://github.com/neovim/node-client/issues/361#issuecomment-2123075408",
            "id": 2123075408,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/361",
            "node_id": "IC_kwDOAdOzk85-i49Q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/2123075408/reactions"
            },
            "updated_at": "2024-05-21T17:09:33Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/2123075408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/387346?v=4",
                "events_url": "https://api.github.com/users/saidelike/events{/privacy}",
                "followers_url": "https://api.github.com/users/saidelike/followers",
                "following_url": "https://api.github.com/users/saidelike/following{/other_user}",
                "gists_url": "https://api.github.com/users/saidelike/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/saidelike",
                "id": 387346,
                "login": "saidelike",
                "node_id": "MDQ6VXNlcjM4NzM0Ng==",
                "organizations_url": "https://api.github.com/users/saidelike/orgs",
                "received_events_url": "https://api.github.com/users/saidelike/received_events",
                "repos_url": "https://api.github.com/users/saidelike/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/saidelike/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/saidelike/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/saidelike"
            }
        }
    ],
    "comments": 2,
    "comments_url": "https://api.github.com/repos/neovim/node-client/issues/361/comments",
    "created_at": "2024-05-18T07:42:52Z",
    "events_url": "https://api.github.com/repos/neovim/node-client/issues/361/events",
    "html_url": "https://github.com/neovim/node-client/issues/361",
    "id": 2303909036,
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 176078515,
            "name": "question",
            "node_id": "MDU6TGFiZWwxNzYwNzg1MTU=",
            "url": "https://api.github.com/repos/neovim/node-client/labels/question"
        }
    ],
    "labels_url": "https://api.github.com/repos/neovim/node-client/issues/361/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAdOzk86JUtys",
    "number": 361,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/node-client/issues/361/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/node-client",
    "state": "closed",
    "state_reason": "not_planned",
    "timeline_url": "https://api.github.com/repos/neovim/node-client/issues/361/timeline",
    "title": "call a function in already started nvim after it has started",
    "updated_at": "2024-05-21T17:09:34Z",
    "url": "https://api.github.com/repos/neovim/node-client/issues/361",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/387346?v=4",
        "events_url": "https://api.github.com/users/saidelike/events{/privacy}",
        "followers_url": "https://api.github.com/users/saidelike/followers",
        "following_url": "https://api.github.com/users/saidelike/following{/other_user}",
        "gists_url": "https://api.github.com/users/saidelike/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/saidelike",
        "id": 387346,
        "login": "saidelike",
        "node_id": "MDQ6VXNlcjM4NzM0Ng==",
        "organizations_url": "https://api.github.com/users/saidelike/orgs",
        "received_events_url": "https://api.github.com/users/saidelike/received_events",
        "repos_url": "https://api.github.com/users/saidelike/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/saidelike/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saidelike/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/saidelike"
    }
}