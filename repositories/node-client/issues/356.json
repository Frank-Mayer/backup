{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "body": "# problems\r\n\r\nI am encountering this error https://github.com/neovim/neovim/blob/3a8265266e0c0fe31f34b7c0192e8ae7d83ae950/runtime/autoload/remote/host.vim#L81 when trying to register a node function after the node host has already been started.\r\n\r\nit would be nice to support registering node functions after the node host has started to allow easy deployment of node plugins.\r\n\r\n# details \r\n\r\nI currently have a **single** neovim plugin which contains 2 node clients.\r\n\r\nI am registering functions for both node clients myself from my own vim/lua scripts (instead of using `rplugins.vim`) to avoid having the user to call `:UpdateRemotePlugins` https://github.com/hands-free-vim/cursorless.nvim/blob/7165f98896affa68f38ebe6f6402ce7819078193/vim/cursorless.vim :\r\n\r\n```\r\nfunction RegisterFunctions(cursorless_nvim_path)\r\n     call remote#host#RegisterPlugin('node', a:cursorless_nvim_path . '/node/command-server', [\r\n          \\ {'sync': v:false, 'name': 'CommandServerLoadExtension', 'type': 'function', 'opts': {}},\r\n          \\ {'sync': v:false, 'name': 'CommandServerRunCommand', 'type': 'function', 'opts': {}},\r\n          \\ ])\r\n     call remote#host#RegisterPlugin('node', a:cursorless_nvim_path . 'node/cursorless-neovim', [\r\n          \\ {'sync': v:false, 'name': 'CursorlessLoadExtension', 'type': 'function', 'opts': {}},\r\n          \\ ])\r\nendfunction\r\n```\r\n\r\nThen I call `CommandServerLoadExtension` and `CursorlessLoadExtension` when my neovim plugin is initialized https://github.com/hands-free-vim/cursorless.nvim/blob/7165f98896affa68f38ebe6f6402ce7819078193/lua/cursorless/init.lua#L41 :\r\n\r\n```\r\nlocal function load_extensions()\r\n  vim.api.nvim_call_function('CursorlessLoadExtension', {})\r\n  vim.api.nvim_call_function('CommandServerLoadExtension', {})\r\n```\r\n\r\nthis worked fine.\r\n\r\nNow I want to split the 2 node clients into 2 **different** neovim node plugins.\r\n\r\nThe first node plugin will register the `CommandServer*` node functions and call the node function fine (`CommandServerLoadExtension`). \r\n\r\nHowever, from calling this function, the node host is started and it is impossible to register any other node function (`CursorlessLoadExtension`) in my second node plugin due to https://github.com/neovim/neovim/blob/3a8265266e0c0fe31f34b7c0192e8ae7d83ae950/runtime/autoload/remote/host.vim#L81",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "All of the `remote#host#RegisterPlugin` and \"remote plugin\" garbage will be removed, with the idea being to support exactly what you have requested here: any module can simply call `setHandler()` to define handlers for incoming requests. Then a \"remote plugin\" is simply a node module that imports the `neovim` node-client and defines handlers.\r\n\r\nThis is implemented in https://github.com/neovim/node-client/pull/344",
            "created_at": "2024-05-05T14:55:10Z",
            "html_url": "https://github.com/neovim/node-client/issues/356#issuecomment-2094840393",
            "id": 2094840393,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/356",
            "node_id": "IC_kwDOAdOzk8583LpJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/2094840393/reactions"
            },
            "updated_at": "2024-05-05T14:55:45Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/2094840393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 1,
    "comments_url": "https://api.github.com/repos/neovim/node-client/issues/356/comments",
    "created_at": "2024-05-04T07:31:50Z",
    "events_url": "https://api.github.com/repos/neovim/node-client/issues/356/events",
    "html_url": "https://github.com/neovim/node-client/issues/356",
    "id": 2278814672,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/node-client/issues/356/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "I_kwDOAdOzk86H0_PQ",
    "number": 356,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/node-client/issues/356/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/node-client",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/node-client/issues/356/timeline",
    "title": "Remote plugins: Add support for registering functions after host is loaded",
    "updated_at": "2024-05-05T14:55:45Z",
    "url": "https://api.github.com/repos/neovim/node-client/issues/356",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/387346?v=4",
        "events_url": "https://api.github.com/users/saidelike/events{/privacy}",
        "followers_url": "https://api.github.com/users/saidelike/followers",
        "following_url": "https://api.github.com/users/saidelike/following{/other_user}",
        "gists_url": "https://api.github.com/users/saidelike/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/saidelike",
        "id": 387346,
        "login": "saidelike",
        "node_id": "MDQ6VXNlcjM4NzM0Ng==",
        "organizations_url": "https://api.github.com/users/saidelike/orgs",
        "received_events_url": "https://api.github.com/users/saidelike/received_events",
        "repos_url": "https://api.github.com/users/saidelike/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/saidelike/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/saidelike/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/saidelike"
    }
}