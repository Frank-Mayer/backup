{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/node-client/issues/199/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/node-client/pulls/199/commits"
        },
        "html": {
            "href": "https://github.com/neovim/node-client/pull/199"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/node-client/issues/199"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/node-client/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/node-client/pulls/199/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/node-client/pulls/199"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/node-client/statuses/dc503f450d47148fce245bd595ab128d9e452be8"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/node-client/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/node-client/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/node-client/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/node-client/branches{/branch}",
            "clone_url": "https://github.com/neovim/node-client.git",
            "collaborators_url": "https://api.github.com/repos/neovim/node-client/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/node-client/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/node-client/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/node-client/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/node-client/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/node-client/contributors",
            "created_at": "2015-02-11T14:23:57Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/node-client/deployments",
            "description": "Nvim Node.js client and plugin host",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/node-client/downloads",
            "events_url": "https://api.github.com/repos/neovim/node-client/events",
            "fork": false,
            "forks": 44,
            "forks_count": 44,
            "forks_url": "https://api.github.com/repos/neovim/node-client/forks",
            "full_name": "neovim/node-client",
            "git_commits_url": "https://api.github.com/repos/neovim/node-client/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/node-client/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/node-client/git/tags{/sha}",
            "git_url": "git://github.com/neovim/node-client.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": true,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://neovim.io/node-client/",
            "hooks_url": "https://api.github.com/repos/neovim/node-client/hooks",
            "html_url": "https://github.com/neovim/node-client",
            "id": 30651283,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/node-client/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/node-client/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/node-client/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/node-client/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/node-client/labels{/name}",
            "language": "TypeScript",
            "languages_url": "https://api.github.com/repos/neovim/node-client/languages",
            "license": {
                "key": "mit",
                "name": "MIT License",
                "node_id": "MDc6TGljZW5zZTEz",
                "spdx_id": "MIT",
                "url": "https://api.github.com/licenses/mit"
            },
            "merges_url": "https://api.github.com/repos/neovim/node-client/merges",
            "milestones_url": "https://api.github.com/repos/neovim/node-client/milestones{/number}",
            "mirror_url": null,
            "name": "node-client",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDY1MTI4Mw==",
            "notifications_url": "https://api.github.com/repos/neovim/node-client/notifications{?since,all,participating}",
            "open_issues": 12,
            "open_issues_count": 12,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/node-client/pulls{/number}",
            "pushed_at": "2023-07-13T14:29:51Z",
            "releases_url": "https://api.github.com/repos/neovim/node-client/releases{/id}",
            "size": 2792,
            "ssh_url": "git@github.com:neovim/node-client.git",
            "stargazers_count": 414,
            "stargazers_url": "https://api.github.com/repos/neovim/node-client/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/node-client/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/node-client/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/node-client/subscription",
            "svn_url": "https://github.com/neovim/node-client",
            "tags_url": "https://api.github.com/repos/neovim/node-client/tags",
            "teams_url": "https://api.github.com/repos/neovim/node-client/teams",
            "topics": [
                "neovim",
                "nodejs",
                "nvim",
                "rpc",
                "typescript",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/node-client/git/trees{/sha}",
            "updated_at": "2023-07-15T03:45:38Z",
            "url": "https://api.github.com/repos/neovim/node-client",
            "visibility": "public",
            "watchers": 414,
            "watchers_count": 414,
            "web_commit_signoff_required": false
        },
        "sha": "635b642309e7be5391d8f546f22099950f58fb24",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Fix #170\r\n\r\nThis PR adds Extmark API binding to `Buffer`. I confirmed it worked on my local:\r\n\r\n```javascript\r\nconst cp = require('child_process');\r\nconst { attach } = require('./packages/neovim');\r\n\r\nconst proc = cp.spawn('nvim', ['-u', 'NONE', '-N', '--embed'], {});\r\n\r\n(async function () {\r\n  const nvim = await attach({ proc });\r\n\r\n  const buf = await nvim.buffer;\r\n  await buf.replace(['this is test'], 0);\r\n\r\n  const ns = await nvim.createNamespace('test');\r\n  console.log('namespace:', ns);\r\n\r\n  const id = await buf.setExtmark(ns, 0, 4);\r\n  console.log('Mark ID:', id);\r\n\r\n  const mark = await buf.getExtmarkById(ns, id);\r\n  console.log('Mark:', mark);\r\n\r\n  const marks = await buf.getExtmarks(ns, [0, 0], [0, 8]);\r\n  console.log('Marks:', marks);\r\n\r\n  const deleted = await buf.deleteExtmark(ns, id);\r\n  console.log('Deleted:', deleted);\r\n\r\n  const mark2 = await buf.getExtmarkById(ns, id);\r\n  console.log('Mark after delete:', mark2);\r\n\r\n  const marks2 = await buf.getExtmarks(ns, [0, 0], [0, 8]);\r\n  console.log('Marks after delete:', marks2);\r\n\r\n  nvim.quit();\r\n  proc.kill();\r\n})().catch(console.error);\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nnamespace: 1\r\nMark ID: 1\r\nMark: [ 0, 4 ]\r\nMarks: [ [ 1, 0, 4 ] ]\r\nDeleted: true\r\nMark after delete: []\r\nMarks after delete: []\r\n```\r\n\r\n",
    "closed_at": "2023-07-10T11:54:33Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/node-client/pull/199#discussion_r998360734"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/comments/998360734"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n   * @param {ExtmarkPosition} start Start of range: a 0-indexed (row, col) or valid extmark id (whose position defines the bound).\r\n```",
            "commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "created_at": "2022-10-18T15:03:47Z",
            "diff_hunk": "@@ -381,6 +533,111 @@ export class Buffer extends BaseApi {\n     if (!shouldDetach) return;\n     this[DETACH]();\n   }\n+\n+  /**\n+   * Gets extmarks in \"traversal order\" from a charwise region defined by\n+   * buffer positions (inclusive, 0-indexed).\n+   *\n+   * Region can be given as (row,col) tuples, or valid extmark ids (whose\n+   * positions define the bounds). 0 and -1 are understood as (0,0) and (-1,-1)\n+   *\n+   * If `end` is less than `start`, traversal works backwards. (Useful with\n+   * `limit`, to get the first marks prior to a given position.)\n+   *\n+   * @param {Number} namespaceId Namespace id from nvim_create_namespace()\n+   * @param {ExtmarkPosition} start Start of range: a 0-indexed (row, col) or valid extmark id\n+   *                                (whose position defines the bound).",
            "html_url": "https://github.com/neovim/node-client/pull/199#discussion_r998360734",
            "id": 998360734,
            "line": 549,
            "node_id": "PRRC_kwDOAdOzk847gcae",
            "original_commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "original_line": 549,
            "original_position": 182,
            "original_start_line": 548,
            "path": "packages/neovim/src/api/Buffer.ts",
            "position": 182,
            "pull_request_review_id": 1146017295,
            "pull_request_url": "https://api.github.com/repos/neovim/node-client/pulls/199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998360734/reactions"
            },
            "side": "RIGHT",
            "start_line": 548,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-10-18T15:05:19Z",
            "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998360734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79684?v=4",
                "events_url": "https://api.github.com/users/billyvg/events{/privacy}",
                "followers_url": "https://api.github.com/users/billyvg/followers",
                "following_url": "https://api.github.com/users/billyvg/following{/other_user}",
                "gists_url": "https://api.github.com/users/billyvg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/billyvg",
                "id": 79684,
                "login": "billyvg",
                "node_id": "MDQ6VXNlcjc5Njg0",
                "organizations_url": "https://api.github.com/users/billyvg/orgs",
                "received_events_url": "https://api.github.com/users/billyvg/received_events",
                "repos_url": "https://api.github.com/users/billyvg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/billyvg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/billyvg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/billyvg"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/node-client/pull/199#discussion_r998360987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/comments/998360987"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n   * @param {ExtmarkPosition} end End of range (inclusive): a 0-indexed (row, col) or valid extmark id (whose position defines the bound).\r\n```",
            "commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "created_at": "2022-10-18T15:03:57Z",
            "diff_hunk": "@@ -381,6 +533,111 @@ export class Buffer extends BaseApi {\n     if (!shouldDetach) return;\n     this[DETACH]();\n   }\n+\n+  /**\n+   * Gets extmarks in \"traversal order\" from a charwise region defined by\n+   * buffer positions (inclusive, 0-indexed).\n+   *\n+   * Region can be given as (row,col) tuples, or valid extmark ids (whose\n+   * positions define the bounds). 0 and -1 are understood as (0,0) and (-1,-1)\n+   *\n+   * If `end` is less than `start`, traversal works backwards. (Useful with\n+   * `limit`, to get the first marks prior to a given position.)\n+   *\n+   * @param {Number} namespaceId Namespace id from nvim_create_namespace()\n+   * @param {ExtmarkPosition} start Start of range: a 0-indexed (row, col) or valid extmark id\n+   *                                (whose position defines the bound).\n+   * @param {ExtmarkPosition} end End of range (inclusive): a 0-indexed (row, col) or valid\n+   *                              extmark id (whose position defines the bound).",
            "html_url": "https://github.com/neovim/node-client/pull/199#discussion_r998360987",
            "id": 998360987,
            "line": 551,
            "node_id": "PRRC_kwDOAdOzk847gceb",
            "original_commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "original_line": 551,
            "original_position": 184,
            "original_start_line": 550,
            "path": "packages/neovim/src/api/Buffer.ts",
            "position": 184,
            "pull_request_review_id": 1146017295,
            "pull_request_url": "https://api.github.com/repos/neovim/node-client/pulls/199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998360987/reactions"
            },
            "side": "RIGHT",
            "start_line": 550,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-10-18T15:05:19Z",
            "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998360987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79684?v=4",
                "events_url": "https://api.github.com/users/billyvg/events{/privacy}",
                "followers_url": "https://api.github.com/users/billyvg/followers",
                "following_url": "https://api.github.com/users/billyvg/following{/other_user}",
                "gists_url": "https://api.github.com/users/billyvg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/billyvg",
                "id": 79684,
                "login": "billyvg",
                "node_id": "MDQ6VXNlcjc5Njg0",
                "organizations_url": "https://api.github.com/users/billyvg/orgs",
                "received_events_url": "https://api.github.com/users/billyvg/received_events",
                "repos_url": "https://api.github.com/users/billyvg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/billyvg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/billyvg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/billyvg"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/node-client/pull/199#discussion_r998361593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/comments/998361593"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n   * @param {BufferGetExtmarksOptions} options Optional parameters. Keys:\r\n   *    • limit: Maximum number of marks to return\r\n   *    • details: Whether to include the details dict\r\n```",
            "commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "created_at": "2022-10-18T15:04:17Z",
            "diff_hunk": "@@ -381,6 +533,111 @@ export class Buffer extends BaseApi {\n     if (!shouldDetach) return;\n     this[DETACH]();\n   }\n+\n+  /**\n+   * Gets extmarks in \"traversal order\" from a charwise region defined by\n+   * buffer positions (inclusive, 0-indexed).\n+   *\n+   * Region can be given as (row,col) tuples, or valid extmark ids (whose\n+   * positions define the bounds). 0 and -1 are understood as (0,0) and (-1,-1)\n+   *\n+   * If `end` is less than `start`, traversal works backwards. (Useful with\n+   * `limit`, to get the first marks prior to a given position.)\n+   *\n+   * @param {Number} namespaceId Namespace id from nvim_create_namespace()\n+   * @param {ExtmarkPosition} start Start of range: a 0-indexed (row, col) or valid extmark id\n+   *                                (whose position defines the bound).\n+   * @param {ExtmarkPosition} end End of range (inclusive): a 0-indexed (row, col) or valid\n+   *                              extmark id (whose position defines the bound).\n+   * @param {BufferGetExtmarksOptions} options Optional parameters. Keys:\n+   *                                           • limit: Maximum number of marks to return\n+   *                                           • details: Whether to include the details dict",
            "html_url": "https://github.com/neovim/node-client/pull/199#discussion_r998361593",
            "id": 998361593,
            "line": 554,
            "node_id": "PRRC_kwDOAdOzk847gcn5",
            "original_commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "original_line": 554,
            "original_position": 187,
            "original_start_line": 552,
            "path": "packages/neovim/src/api/Buffer.ts",
            "position": 187,
            "pull_request_review_id": 1146017295,
            "pull_request_url": "https://api.github.com/repos/neovim/node-client/pulls/199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998361593/reactions"
            },
            "side": "RIGHT",
            "start_line": 552,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-10-18T15:05:19Z",
            "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998361593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79684?v=4",
                "events_url": "https://api.github.com/users/billyvg/events{/privacy}",
                "followers_url": "https://api.github.com/users/billyvg/followers",
                "following_url": "https://api.github.com/users/billyvg/following{/other_user}",
                "gists_url": "https://api.github.com/users/billyvg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/billyvg",
                "id": 79684,
                "login": "billyvg",
                "node_id": "MDQ6VXNlcjc5Njg0",
                "organizations_url": "https://api.github.com/users/billyvg/orgs",
                "received_events_url": "https://api.github.com/users/billyvg/received_events",
                "repos_url": "https://api.github.com/users/billyvg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/billyvg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/billyvg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/billyvg"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/node-client/pull/199#discussion_r998362186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/node-client/pulls/comments/998362186"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n   *    • details: Whether to include the details dict\r\n```",
            "commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "created_at": "2022-10-18T15:04:40Z",
            "diff_hunk": "@@ -381,6 +533,111 @@ export class Buffer extends BaseApi {\n     if (!shouldDetach) return;\n     this[DETACH]();\n   }\n+\n+  /**\n+   * Gets extmarks in \"traversal order\" from a charwise region defined by\n+   * buffer positions (inclusive, 0-indexed).\n+   *\n+   * Region can be given as (row,col) tuples, or valid extmark ids (whose\n+   * positions define the bounds). 0 and -1 are understood as (0,0) and (-1,-1)\n+   *\n+   * If `end` is less than `start`, traversal works backwards. (Useful with\n+   * `limit`, to get the first marks prior to a given position.)\n+   *\n+   * @param {Number} namespaceId Namespace id from nvim_create_namespace()\n+   * @param {ExtmarkPosition} start Start of range: a 0-indexed (row, col) or valid extmark id\n+   *                                (whose position defines the bound).\n+   * @param {ExtmarkPosition} end End of range (inclusive): a 0-indexed (row, col) or valid\n+   *                              extmark id (whose position defines the bound).\n+   * @param {BufferGetExtmarksOptions} options Optional parameters. Keys:\n+   *                                           • limit: Maximum number of marks to return\n+   *                                           • details: Whether to include the details dict\n+   *\n+   * @return List of [extmark_id, row, col] tuples in \"traversal order\".\n+   */\n+  getExtmarks(\n+    namespaceId: number,\n+    start: ExtmarkPosition,\n+    end: ExtmarkPosition,\n+    options: BufferGetExtmarksOptions = {}\n+  ): Promise<Array<[number, number, number]>> {\n+    return this.request(`${this.prefix}get_extmarks`, [\n+      this,\n+      namespaceId,\n+      start,\n+      end,\n+      options,\n+    ]);\n+  }\n+\n+  /**\n+   * Gets the position (0-indexed) of an extmark.\n+   *\n+   * @param {Number} ns_id Namespace id from |nvim_create_namespace()|\n+   * @param {Number} id Extmark id\n+   * @param {BufferGetExtmarkOptions} options Optional parameters. Keys:\n+   *                                   • details: Whether to include the details dict",
            "html_url": "https://github.com/neovim/node-client/pull/199#discussion_r998362186",
            "id": 998362186,
            "line": 579,
            "node_id": "PRRC_kwDOAdOzk847gcxK",
            "original_commit_id": "dc503f450d47148fce245bd595ab128d9e452be8",
            "original_line": 579,
            "original_position": 212,
            "original_start_line": null,
            "path": "packages/neovim/src/api/Buffer.ts",
            "position": 212,
            "pull_request_review_id": 1146017295,
            "pull_request_url": "https://api.github.com/repos/neovim/node-client/pulls/199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998362186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-10-18T15:05:19Z",
            "url": "https://api.github.com/repos/neovim/node-client/pulls/comments/998362186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79684?v=4",
                "events_url": "https://api.github.com/users/billyvg/events{/privacy}",
                "followers_url": "https://api.github.com/users/billyvg/followers",
                "following_url": "https://api.github.com/users/billyvg/following{/other_user}",
                "gists_url": "https://api.github.com/users/billyvg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/billyvg",
                "id": 79684,
                "login": "billyvg",
                "node_id": "MDQ6VXNlcjc5Njg0",
                "organizations_url": "https://api.github.com/users/billyvg/orgs",
                "received_events_url": "https://api.github.com/users/billyvg/received_events",
                "repos_url": "https://api.github.com/users/billyvg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/billyvg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/billyvg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/billyvg"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Is this generated? We should avoid manually writing interfaces that just map to `nvim --api-info`.\r\n\r\n",
            "created_at": "2022-10-12T13:46:14Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1276199908",
            "id": 1276199908,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MEUPk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1276199908/reactions"
            },
            "updated_at": "2022-10-12T13:46:14Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1276199908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is this generated?\r\n\r\nNo, it was hand-written. I agree that generating APIs from `nvim_api_info`. This time, I prioritized Extmark API since it was requested by the issue.\r\n\r\nI think it is a bit challenging to generate APIs. For example,\r\n\r\n- Some parameter type is just an `Array`. Its element type is unknown\r\n- Object property is `snake_case` in Vim script but it is `lowerCamel` in TypeScript. I'm not sure it is ok to convert cases of all properties automatically",
            "created_at": "2022-10-13T11:58:22Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277496314",
            "id": 1277496314,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJQv6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277496314/reactions"
            },
            "updated_at": "2022-10-13T11:58:22Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277496314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
                "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rhysd/followers",
                "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rhysd",
                "id": 823277,
                "login": "rhysd",
                "node_id": "MDQ6VXNlcjgyMzI3Nw==",
                "organizations_url": "https://api.github.com/users/rhysd/orgs",
                "received_events_url": "https://api.github.com/users/rhysd/received_events",
                "repos_url": "https://api.github.com/users/rhysd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rhysd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * Object property is `snake_case` in Vim script but it is `lowerCamel` in TypeScript. I'm not sure it is ok to convert cases of all properties automatically\r\n\r\nWhy don't we stick to the API names exactly? TypeScript \"conventions\" are not that important IMO.\r\n\r\n",
            "created_at": "2022-10-13T12:11:35Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277513010",
            "id": 1277513010,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJU0y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277513010/reactions"
            },
            "updated_at": "2022-10-13T12:11:35Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277513010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Why don't we stick to the API names exactly? \r\n\r\nSince using `snake_case` looks weird. Actually no browser APIs and no Node.js APIs are using `snake_case`. Yes, it is just a convention, but I don't think it is not important.",
            "created_at": "2022-10-13T12:23:10Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277525582",
            "id": 1277525582,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJX5O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277525582/reactions"
            },
            "updated_at": "2022-10-13T12:23:10Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277525582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
                "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rhysd/followers",
                "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rhysd",
                "id": 823277,
                "login": "rhysd",
                "node_id": "MDQ6VXNlcjgyMzI3Nw==",
                "organizations_url": "https://api.github.com/users/rhysd/orgs",
                "received_events_url": "https://api.github.com/users/rhysd/received_events",
                "repos_url": "https://api.github.com/users/rhysd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rhysd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "OK, I'll make a new issue for generating sources. Can we merge this PR at first? Then let me try to make some mechanism of code generation. (Though I'm not sure when I can take time to do it)",
            "created_at": "2022-10-13T12:25:05Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277527878",
            "id": 1277527878,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJYdG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277527878/reactions"
            },
            "updated_at": "2022-10-13T12:25:05Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277527878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
                "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rhysd/followers",
                "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rhysd",
                "id": 823277,
                "login": "rhysd",
                "node_id": "MDQ6VXNlcjgyMzI3Nw==",
                "organizations_url": "https://api.github.com/users/rhysd/orgs",
                "received_events_url": "https://api.github.com/users/rhysd/received_events",
                "repos_url": "https://api.github.com/users/rhysd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rhysd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Some parameter type is just an Array. Its element type is unknown\r\n\r\nThis doesn't sound like a blocker. Just type the items as `any`.\r\n\r\nI think we should strictly stick with auto-generation if we're going to provide anything beyond `request('nvim_foo', ...)`.",
            "created_at": "2022-10-13T12:26:25Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277529417",
            "id": 1277529417,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJY1J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277529417/reactions"
            },
            "updated_at": "2022-10-13T12:26:25Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277529417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Can we merge this PR at first?\r\n\r\nWill we be able to remove this later once auto-generation is in place? That might be a breaking change.",
            "created_at": "2022-10-13T12:27:17Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277530469",
            "id": 1277530469,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJZFl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277530469/reactions"
            },
            "updated_at": "2022-10-13T12:27:30Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277530469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Will we be able to remove this later once auto-generation is in place? That might be a breaking change.\r\n\r\nI think yes. Because the auto generated sources will break many other existing APIs. So taking care about only the Extmark API doesn't make much sense.",
            "created_at": "2022-10-13T12:35:07Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277540362",
            "id": 1277540362,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJbgK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277540362/reactions"
            },
            "updated_at": "2022-10-13T12:35:07Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277540362",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
                "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rhysd/followers",
                "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rhysd",
                "id": 823277,
                "login": "rhysd",
                "node_id": "MDQ6VXNlcjgyMzI3Nw==",
                "organizations_url": "https://api.github.com/users/rhysd/orgs",
                "received_events_url": "https://api.github.com/users/rhysd/received_events",
                "repos_url": "https://api.github.com/users/rhysd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rhysd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Because the auto generated sources will break many other existing APIs.\r\n\r\nwhy? we already were generating stuff in the past: https://github.com/neovim/node-client/blob/master/packages/neovim/bin/generate-typescript-interfaces.js",
            "created_at": "2022-10-13T12:42:39Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277549941",
            "id": 1277549941,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJd11",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277549941/reactions"
            },
            "updated_at": "2022-10-13T12:42:39Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277549941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> why? we already were generating stuff in the past:\r\n\r\nIf my understanding is correct, this script is no longer used. The script was used before large changes by @billyvg.\r\n\r\nActually, as far as I ran the script on my local machine now, it only outputs 24 lines:\r\n\r\n```console\r\n$ node ./bin/generate-typescript-interfaces.js                                                                                                                                                                                                                                               [Husky.local][10/13 21:56]\r\ninterface AttachOptions {\r\n  writer?: NodeJS.WritableStream,\r\n  reader?: NodeJS.ReadableStream,\r\n  proc?: NodeJS.ChildProcess,\r\n  socket?: String,\r\n}\r\nexport default function attach(options: AttachOptions): Neovim;\r\n\r\nexport interface Neovim extends NodeJS.EventEmitter {\r\n  quit(): void;\r\n  isApiReady(): Boolean;\r\n  requestApi(): Promise<[integer, any]>;\r\n  equals(rhs: Neovim): boolean;\r\n}\r\nexport interface Buffer {\r\n  equals(rhs: Buffer): boolean;\r\n}\r\nexport interface Window {\r\n  equals(rhs: Window): boolean;\r\n}\r\nexport interface Tabpage {\r\n  equals(rhs: Tabpage): boolean;\r\n}\r\n```\r\n\r\n",
            "created_at": "2022-10-13T12:57:26Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277567576",
            "id": 1277567576,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJiJY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277567576/reactions"
            },
            "updated_at": "2022-10-13T12:57:26Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277567576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
                "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rhysd/followers",
                "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rhysd",
                "id": 823277,
                "login": "rhysd",
                "node_id": "MDQ6VXNlcjgyMzI3Nw==",
                "organizations_url": "https://api.github.com/users/rhysd/orgs",
                "received_events_url": "https://api.github.com/users/rhysd/received_events",
                "repos_url": "https://api.github.com/users/rhysd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rhysd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For example, this type has information more than the output from `nvim_api_info`. So it must be hand-written.\r\n\r\nhttps://github.com/neovim/node-client/blob/635b642309e7be5391d8f546f22099950f58fb24/packages/neovim/src/api/Neovim.ts#L72-L125",
            "created_at": "2022-10-13T13:02:12Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1277573636",
            "id": 1277573636,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85MJjoE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277573636/reactions"
            },
            "updated_at": "2022-10-13T13:02:12Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1277573636",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
                "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rhysd/followers",
                "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rhysd",
                "id": 823277,
                "login": "rhysd",
                "node_id": "MDQ6VXNlcjgyMzI3Nw==",
                "organizations_url": "https://api.github.com/users/rhysd/orgs",
                "received_events_url": "https://api.github.com/users/rhysd/received_events",
                "repos_url": "https://api.github.com/users/rhysd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rhysd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yeah I don't think we can 100% rely on autogeneration, but it'd be good to do so in order to keep up with neovim.\r\n\r\n@rhysd did your code comments on the PR come from neovim or were they written by you?\r\n\r\nre: camelcase vs snake, imo we should follow node/ts conventions which is generally camelCase.",
            "created_at": "2022-10-18T15:02:45Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1282538911",
            "id": 1282538911,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85Mcf2f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1282538911/reactions"
            },
            "updated_at": "2022-10-18T15:02:45Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1282538911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/79684?v=4",
                "events_url": "https://api.github.com/users/billyvg/events{/privacy}",
                "followers_url": "https://api.github.com/users/billyvg/followers",
                "following_url": "https://api.github.com/users/billyvg/following{/other_user}",
                "gists_url": "https://api.github.com/users/billyvg/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/billyvg",
                "id": 79684,
                "login": "billyvg",
                "node_id": "MDQ6VXNlcjc5Njg0",
                "organizations_url": "https://api.github.com/users/billyvg/orgs",
                "received_events_url": "https://api.github.com/users/billyvg/received_events",
                "repos_url": "https://api.github.com/users/billyvg/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/billyvg/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/billyvg/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/billyvg"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's still not clear why this is needed. https://github.com/neovim/node-client/issues/170 isn't blocked because nodejs clients can do `request('nvim_...\", ...)`. \r\n\r\nSo why rush a hand-crafted API which we won't be able to revert later (breaking change)? Why not work on generating an API instead? What is blocking that? We generate all kinds of APIs in Nvim, is there a technical issue with doing that for nodejs client?",
            "created_at": "2022-10-19T23:25:51Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1284696762",
            "id": 1284696762,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85Mkuq6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1284696762/reactions"
            },
            "updated_at": "2022-10-19T23:25:51Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1284696762",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This repo has lacked maintainer activity for 6+ months, which supports the point I made above about wanting to aggressively minimize the maintenance needed for this project.\r\n\r\n`node-client` is important (used by projects like [vscode-neovim](https://github.com/vscode-neovim/vscode-neovim)). I want to keep `node-client` stable and useful, but I also want to aggressively avoid unnecessary potential for bugs and feature requests.",
            "created_at": "2023-07-10T11:54:33Z",
            "html_url": "https://github.com/neovim/node-client/pull/199#issuecomment-1628814410",
            "id": 1628814410,
            "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
            "node_id": "IC_kwDOAdOzk85hFbxK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1628814410/reactions"
            },
            "updated_at": "2023-07-10T11:54:33Z",
            "url": "https://api.github.com/repos/neovim/node-client/issues/comments/1628814410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/node-client/issues/199/comments",
    "commits_url": "https://api.github.com/repos/neovim/node-client/pulls/199/commits",
    "created_at": "2022-10-12T10:53:14Z",
    "diff_url": "https://github.com/neovim/node-client/pull/199.diff",
    "draft": false,
    "head": {
        "label": "neovim:extmark",
        "ref": "extmark",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/node-client/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/node-client/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/node-client/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/node-client/branches{/branch}",
            "clone_url": "https://github.com/neovim/node-client.git",
            "collaborators_url": "https://api.github.com/repos/neovim/node-client/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/node-client/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/node-client/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/node-client/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/node-client/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/node-client/contributors",
            "created_at": "2015-02-11T14:23:57Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/node-client/deployments",
            "description": "Nvim Node.js client and plugin host",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/node-client/downloads",
            "events_url": "https://api.github.com/repos/neovim/node-client/events",
            "fork": false,
            "forks": 44,
            "forks_count": 44,
            "forks_url": "https://api.github.com/repos/neovim/node-client/forks",
            "full_name": "neovim/node-client",
            "git_commits_url": "https://api.github.com/repos/neovim/node-client/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/node-client/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/node-client/git/tags{/sha}",
            "git_url": "git://github.com/neovim/node-client.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": true,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "https://neovim.io/node-client/",
            "hooks_url": "https://api.github.com/repos/neovim/node-client/hooks",
            "html_url": "https://github.com/neovim/node-client",
            "id": 30651283,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/node-client/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/node-client/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/node-client/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/node-client/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/node-client/labels{/name}",
            "language": "TypeScript",
            "languages_url": "https://api.github.com/repos/neovim/node-client/languages",
            "license": {
                "key": "mit",
                "name": "MIT License",
                "node_id": "MDc6TGljZW5zZTEz",
                "spdx_id": "MIT",
                "url": "https://api.github.com/licenses/mit"
            },
            "merges_url": "https://api.github.com/repos/neovim/node-client/merges",
            "milestones_url": "https://api.github.com/repos/neovim/node-client/milestones{/number}",
            "mirror_url": null,
            "name": "node-client",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDY1MTI4Mw==",
            "notifications_url": "https://api.github.com/repos/neovim/node-client/notifications{?since,all,participating}",
            "open_issues": 12,
            "open_issues_count": 12,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/node-client/pulls{/number}",
            "pushed_at": "2023-07-13T14:29:51Z",
            "releases_url": "https://api.github.com/repos/neovim/node-client/releases{/id}",
            "size": 2792,
            "ssh_url": "git@github.com:neovim/node-client.git",
            "stargazers_count": 414,
            "stargazers_url": "https://api.github.com/repos/neovim/node-client/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/node-client/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/node-client/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/node-client/subscription",
            "svn_url": "https://github.com/neovim/node-client",
            "tags_url": "https://api.github.com/repos/neovim/node-client/tags",
            "teams_url": "https://api.github.com/repos/neovim/node-client/teams",
            "topics": [
                "neovim",
                "nodejs",
                "nvim",
                "rpc",
                "typescript",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/node-client/git/trees{/sha}",
            "updated_at": "2023-07-15T03:45:38Z",
            "url": "https://api.github.com/repos/neovim/node-client",
            "visibility": "public",
            "watchers": 414,
            "watchers_count": 414,
            "web_commit_signoff_required": false
        },
        "sha": "dc503f450d47148fce245bd595ab128d9e452be8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "html_url": "https://github.com/neovim/node-client/pull/199",
    "id": 1084500477,
    "issue_url": "https://api.github.com/repos/neovim/node-client/issues/199",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "a524f04da48f3b1f4bd0b473ce54d41220bbdc3a",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAdOzk85ApCn9",
    "number": 199,
    "patch_url": "https://github.com/neovim/node-client/pull/199.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/node-client/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/node-client/pulls/199/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/node-client/statuses/dc503f450d47148fce245bd595ab128d9e452be8",
    "title": "feat(api): Implement Extmark API",
    "updated_at": "2023-07-10T11:54:38Z",
    "url": "https://api.github.com/repos/neovim/node-client/pulls/199",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/823277?v=4",
        "events_url": "https://api.github.com/users/rhysd/events{/privacy}",
        "followers_url": "https://api.github.com/users/rhysd/followers",
        "following_url": "https://api.github.com/users/rhysd/following{/other_user}",
        "gists_url": "https://api.github.com/users/rhysd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rhysd",
        "id": 823277,
        "login": "rhysd",
        "node_id": "MDQ6VXNlcjgyMzI3Nw==",
        "organizations_url": "https://api.github.com/users/rhysd/orgs",
        "received_events_url": "https://api.github.com/users/rhysd/received_events",
        "repos_url": "https://api.github.com/users/rhysd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rhysd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rhysd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rhysd"
    }
}