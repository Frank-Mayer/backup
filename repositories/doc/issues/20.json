{
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "body": "## PR bot: goals\r\n\r\n1.  Get the build status of the last 20(?) recently-active PRs.\r\n2. Gather/parse/summarize the build logs.\r\n3. Leave a comment on the PR or _update existing comment_.\r\n    - [Example](https://github.com/neovim/neovim/pull/4814#issuecomment-224196151)\r\n    - Summarize the current build results.\r\n        - Provide direct links to the \"raw\" logs for appveyor/travis/etc\r\n    - **Never** adds more than 1 comment on a PR (update existing comment with new info).\r\n\r\n\r\n## Other ideas\r\n\r\n- Generate a page  showing the number of tests executed on the most recent build of neovim/neovim master.  bot-ci could use GitHub/Travis APIs to pull the build logs of the latest build of neovim master, then update a simple txt or html file in the docs repo which shows the total number of unit tests and functional tests.\r\n  - Example:\r\n   ```\r\n   unit tests: 200 successes / 0 failures / 0 errors / 0 pending : 0.0 seconds\r\n   functional tests: 233 successes / 0 failures / 0 errors / 2 pending : 0.0 seconds\r\n   ```\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "author_association": "MEMBER",
            "body": "We could also create a graph that shows the respective number of successful/failed/.. tests over time, so we can immediately see if the numbers go down.\n",
            "created_at": "2015-03-15T19:51:56Z",
            "html_url": "https://github.com/neovim/doc/issues/20#issuecomment-81215719",
            "id": 81215719,
            "issue_url": "https://api.github.com/repos/neovim/doc/issues/20",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjE1NzE5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/doc/issues/comments/81215719/reactions"
            },
            "updated_at": "2015-03-15T19:51:56Z",
            "url": "https://api.github.com/repos/neovim/doc/issues/comments/81215719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "All tests should pass on every build, so... numbers can't go down...\n",
            "created_at": "2015-03-15T20:01:10Z",
            "html_url": "https://github.com/neovim/doc/issues/20#issuecomment-81217956",
            "id": 81217956,
            "issue_url": "https://api.github.com/repos/neovim/doc/issues/20",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjE3OTU2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/doc/issues/comments/81217956/reactions"
            },
            "updated_at": "2019-08-10T18:53:09Z",
            "url": "https://api.github.com/repos/neovim/doc/issues/comments/81217956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/135757?v=4",
                "events_url": "https://api.github.com/users/elmart/events{/privacy}",
                "followers_url": "https://api.github.com/users/elmart/followers",
                "following_url": "https://api.github.com/users/elmart/following{/other_user}",
                "gists_url": "https://api.github.com/users/elmart/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elmart",
                "id": 135757,
                "login": "elmart",
                "node_id": "MDQ6VXNlcjEzNTc1Nw==",
                "organizations_url": "https://api.github.com/users/elmart/orgs",
                "received_events_url": "https://api.github.com/users/elmart/received_events",
                "repos_url": "https://api.github.com/users/elmart/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elmart/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elmart/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elmart"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@elmart But if tests are erroneously marked as `pending()` because of possibly faulty logic, or if a `describe()` or `it()` block is accidentally out of place, it could cause a test to fall off the radar and we might not notice for a long time (coverity might show a .1% decrease, which we have been trained to essentially ignore)\n",
            "created_at": "2015-03-15T20:10:01Z",
            "html_url": "https://github.com/neovim/doc/issues/20#issuecomment-81220795",
            "id": 81220795,
            "issue_url": "https://api.github.com/repos/neovim/doc/issues/20",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxMjIwNzk1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/doc/issues/comments/81220795/reactions"
            },
            "updated_at": "2019-08-10T18:53:13Z",
            "url": "https://api.github.com/repos/neovim/doc/issues/comments/81220795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@jszakmeister's QuickBuild setup provides some nice charts. For example, on http://neovim-qb.szakmeister.net/statistics/10/junit_report/tests, clicking \"Tests\" just above the diagram, you can select \"compare other metrics\" to add \"failures\" and \"errors\". You need to switch the target (far right in gray bar above \"Tests\" caption) to e.g. \"functionaltests\" and change \"group by\" to \"by version\".\n",
            "created_at": "2015-03-16T15:11:50Z",
            "html_url": "https://github.com/neovim/doc/issues/20#issuecomment-81725930",
            "id": 81725930,
            "issue_url": "https://api.github.com/repos/neovim/doc/issues/20",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzI1OTMw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/doc/issues/comments/81725930/reactions"
            },
            "updated_at": "2019-08-10T18:53:22Z",
            "url": "https://api.github.com/repos/neovim/doc/issues/comments/81725930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/339435?v=4",
                "events_url": "https://api.github.com/users/fwalch/events{/privacy}",
                "followers_url": "https://api.github.com/users/fwalch/followers",
                "following_url": "https://api.github.com/users/fwalch/following{/other_user}",
                "gists_url": "https://api.github.com/users/fwalch/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fwalch",
                "id": 339435,
                "login": "fwalch",
                "node_id": "MDQ6VXNlcjMzOTQzNQ==",
                "organizations_url": "https://api.github.com/users/fwalch/orgs",
                "received_events_url": "https://api.github.com/users/fwalch/received_events",
                "repos_url": "https://api.github.com/users/fwalch/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fwalch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fwalch/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fwalch"
            }
        },
        {
            "author_association": "NONE",
            "body": "@justinmk, @blueyed  the steps that bot should take are clear, but it is not right to call them \"goals\". It feels more like a set of steps to solve a problem. Can you elaborate a bit more on \"question behind the question\" thing?:\r\n- Why such kind of functionality is needed? What problem is solves?\r\n- Is it aimed to improve some existing, but imperfect workflow or solve a new problem that was not yet solved before?\r\n- It feels like a duplication of existing functionality.. Are there problems with current than existing interface that Travis (and other CI systems) provide?\r\n- Who is going to be a primary user for this feature? (you, as nvim org owners, or other contributors)\r\n- Why 20? What is this number related to? Should it be static/hardcoded or configured somehow?\r\n- What is a trigger for \"activity\"? Comments? Commits? Code review actions? \r\n- Should it also notify gitter (or other chat)?  \r\n\r\n\r\nI have my own guesses and assumptions, but I learned to not relay solely on them as they are often a source of confusion. Anyway, here is my best guess:\r\n\r\nThe problem: \r\nIt takes a lot of mouse clicks to look through build logs, especially if more than one build failed.\r\nA lot of time is wasted to get look through all build logs because of the UIs that travis/appveyor/etc provies.\r\n\r\nSolution:\r\nIn order to make  code reviewers more productive at reviewing PRs (primarily) and as a convenience for contributors (secondarily) an automatic build report should appear in PR conversation section, with build name, status and direct link to raw logs. And it must be updated whenever actual build statuses are updated. (Alternatively only at the end of all CI runs, when status is set to \"Checks failed\" or \"Checks succeeded\")\r\n\r\nFor that to happen the bot must continuously scan PRs for CI  activity and add/update comment.\r\n\r\nLet me know if my guesses have landed correctly.\r\n\r\n\r\n",
            "created_at": "2019-08-10T23:22:56Z",
            "html_url": "https://github.com/neovim/doc/issues/20#issuecomment-520187097",
            "id": 520187097,
            "issue_url": "https://api.github.com/repos/neovim/doc/issues/20",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDE4NzA5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/doc/issues/comments/520187097/reactions"
            },
            "updated_at": "2019-08-10T23:22:56Z",
            "url": "https://api.github.com/repos/neovim/doc/issues/comments/520187097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18271144?v=4",
                "events_url": "https://api.github.com/users/ngortheone/events{/privacy}",
                "followers_url": "https://api.github.com/users/ngortheone/followers",
                "following_url": "https://api.github.com/users/ngortheone/following{/other_user}",
                "gists_url": "https://api.github.com/users/ngortheone/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ngortheone",
                "id": 18271144,
                "login": "ngortheone",
                "node_id": "MDQ6VXNlcjE4MjcxMTQ0",
                "organizations_url": "https://api.github.com/users/ngortheone/orgs",
                "received_events_url": "https://api.github.com/users/ngortheone/received_events",
                "repos_url": "https://api.github.com/users/ngortheone/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ngortheone/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ngortheone/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ngortheone"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> * Why such kind of functionality is needed? What problem is solves?\r\n\r\nViewing build logs is painful, because (1) the CI web UIs are slow, (2) the build logs are big. Goal is to make it less painful. Saving 30-60 seconds, thousands of times, is valuable.\r\n\r\n> * It feels like a duplication of existing functionality.. Are there problems with current than existing interface that Travis (and other CI systems) provide?\r\n\r\nMain functionality is\r\n\r\n1.  script that creates/updates an automated comment. We don't have that functionality and it is generally useful, regardless of what we put in the automated comment. I don't know of any existing solution. There are various \"PR bot\" projects but they are complicated and hard to customize.\r\n2. gather build logs. This, again, is generally useful. It's not really important to decide what we'll do with the build logs yet. \r\n\r\n> * Why 20? What is this number related to? Should it be static/hardcoded or configured somehow?\r\n\r\nHardcoded. It's just an estimate, to avoid spamming GitHub API.\r\n\r\n> * What is a trigger for \"activity\"? Comments? Commits? Code review actions?\r\n> * Should it also notify gitter (or other chat)?\r\n\r\nThe script/bot will run e.g. every 30 minutes. I was thinking it could use the GitHub API to sort by \"most-recently updated\", where \"updated\" is decided by GitHub.\r\n\r\n> And it must be updated whenever actual build statuses are updated. (Alternatively only at the end of all CI runs, when status is set to \"Checks failed\" or \"Checks succeeded\")\r\n\r\nHow it's triggered isn't important IMO. We just need a script that uses the GitHub API to gather N most-recently-updated PRs (and their build logs).\r\n",
            "created_at": "2019-08-12T10:21:46Z",
            "html_url": "https://github.com/neovim/doc/issues/20#issuecomment-520370546",
            "id": 520370546,
            "issue_url": "https://api.github.com/repos/neovim/doc/issues/20",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMDM3MDU0Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/doc/issues/comments/520370546/reactions"
            },
            "updated_at": "2019-08-12T10:21:46Z",
            "url": "https://api.github.com/repos/neovim/doc/issues/comments/520370546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments": 6,
    "comments_url": "https://api.github.com/repos/neovim/doc/issues/20/comments",
    "created_at": "2015-03-15T19:49:07Z",
    "events_url": "https://api.github.com/repos/neovim/doc/issues/20/events",
    "html_url": "https://github.com/neovim/doc/issues/20",
    "id": 1000196762,
    "labels": [],
    "labels_url": "https://api.github.com/repos/neovim/doc/issues/20/labels{/name}",
    "locked": false,
    "milestone": null,
    "node_id": "MDU6SXNzdWUxMDAwMTk2NzYy",
    "number": 20,
    "performed_via_github_app": null,
    "reactions": {
        "+1": 0,
        "-1": 0,
        "confused": 0,
        "eyes": 0,
        "heart": 0,
        "hooray": 0,
        "laugh": 0,
        "rocket": 0,
        "total_count": 0,
        "url": "https://api.github.com/repos/neovim/doc/issues/20/reactions"
    },
    "repository_url": "https://api.github.com/repos/neovim/doc",
    "state": "open",
    "state_reason": null,
    "timeline_url": "https://api.github.com/repos/neovim/doc/issues/20/timeline",
    "title": "PR bot: scrape, summarize build logs",
    "updated_at": "2021-09-19T03:35:40Z",
    "url": "https://api.github.com/repos/neovim/doc/issues/20",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}