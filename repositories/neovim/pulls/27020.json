{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27020/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27020/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27020"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27020"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27020/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27020"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/4bfb0353b39fcbeccd2f21cf33814697059f2f1b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5156,
            "forks_count": 5156,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1738,
            "open_issues_count": 1738,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-23T01:27:16Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 251208,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72998,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-23T01:05:36Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72998,
            "watchers_count": 72998,
            "web_commit_signoff_required": false
        },
        "sha": "fd2ed024c1b0021161bd87af6f7f55e1f6bf4d82",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem:  Modula2 filetype support lacking\r\nSolution: Improve the Modula-2 runtime support, add additional modula2\r\n          dialects, add compiler plugin, update syntax highlighting,\r\n          include syntax tests, update Makefiles (Doug Kearns)\r\n\r\nhttps://github.com/vim/vim/commit/68a89470693c7687d4e736ca056c05de632e3ac7\r\n\r\n- Luaify the detection script: (feel free to roast as I'm still not super familiar with filetype.lua :innocent:)\r\n\r\n  - Split the `(*!m2foo*)` and `(*!m2foo+bar*)` detection into two Lua patterns,\r\n    as Lua capture groups cannot be used with `?` and friends (as they only work\r\n    on character classes).\r\n\r\n  - Use `vim.api.nvim_buf_call()` (ew) to call `modula2#SetDialect()` to ensure\r\n    `b:modula2` is set for the given bufnr.\r\n\r\n- Skip the syntax screendump tests. (A shame as they test some of the detection\r\n  from `(*!m2foo+bar*)` tags, but I tested this locally and it seems to work)\r\n\r\n- Port the synmenu.vim changes from Vim9 script. (Also tested this locally)\r\n\r\n- (And also add the missing comma for `b:browsefilter` from earlier.)",
    "closed_at": "2024-01-16T17:45:57Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27020#discussion_r1452468558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27020"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452468558"
                }
            },
            "author_association": "MEMBER",
            "body": "could just inline this check?",
            "commit_id": "4bfb0353b39fcbeccd2f21cf33814697059f2f1b",
            "created_at": "2024-01-15T14:49:22Z",
            "diff_hunk": "@@ -419,6 +419,55 @@ function M.dtrace(_, bufnr)\n   return 'd'\n end\n \n+--- @param bufnr integer\n+--- @return string, fun(b: integer)\n+local function modula2(bufnr)\n+  local dialect = vim.g.modula2_default_dialect or 'pim'\n+  local extension = vim.g.modula2_default_extension or ''\n+\n+  -- ignore unknown dialects or badly formatted tags\n+  for _, line in ipairs(getlines(bufnr, 1, 200)) do\n+    local matched_dialect, matched_extension = line:match('%(%*!m2(%w+)%+(%w+)%*%)')\n+    if not matched_dialect then\n+      matched_dialect = line:match('%(%*!m2(%w+)%*%)')\n+    end\n+    if matched_dialect then\n+      if vim.tbl_contains({ 'iso', 'pim', 'r10' }, matched_dialect) then\n+        dialect = matched_dialect\n+      end\n+      if vim.tbl_contains({ 'gm2' }, matched_extension) then\n+        extension = matched_extension\n+      end\n+      break\n+    end\n+  end\n+\n+  return 'modula2',\n+    function(b)\n+      vim.api.nvim_buf_call(b, function()\n+        fn['modula2#SetDialect'](dialect, extension)\n+      end)\n+    end\n+end\n+\n+--- @param bufnr integer\n+--- @return boolean\n+local function is_modula2(bufnr)\n+  return matchregex(nextnonblank(bufnr, 1), [[\\<MODULE\\s\\+\\w\\+\\s*;\\|^\\s*(\\*]])\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/27020#discussion_r1452468558",
            "id": 1452468558,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WkulO",
            "original_commit_id": "8bfcbfd7ab6e6490ab7f62e09af30db48ab097a3",
            "original_line": 457,
            "original_position": 39,
            "original_start_line": 455,
            "path": "runtime/lua/vim/filetype/detect.lua",
            "position": null,
            "pull_request_review_id": 1821833676,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27020",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452468558/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-15T14:49:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452468558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27020#discussion_r1452470772"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27020"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452470772"
                }
            },
            "author_association": "MEMBER",
            "body": "I thought about it, but it's used by both `M.mod` and `M.def`",
            "commit_id": "4bfb0353b39fcbeccd2f21cf33814697059f2f1b",
            "created_at": "2024-01-15T14:51:10Z",
            "diff_hunk": "@@ -419,6 +419,55 @@ function M.dtrace(_, bufnr)\n   return 'd'\n end\n \n+--- @param bufnr integer\n+--- @return string, fun(b: integer)\n+local function modula2(bufnr)\n+  local dialect = vim.g.modula2_default_dialect or 'pim'\n+  local extension = vim.g.modula2_default_extension or ''\n+\n+  -- ignore unknown dialects or badly formatted tags\n+  for _, line in ipairs(getlines(bufnr, 1, 200)) do\n+    local matched_dialect, matched_extension = line:match('%(%*!m2(%w+)%+(%w+)%*%)')\n+    if not matched_dialect then\n+      matched_dialect = line:match('%(%*!m2(%w+)%*%)')\n+    end\n+    if matched_dialect then\n+      if vim.tbl_contains({ 'iso', 'pim', 'r10' }, matched_dialect) then\n+        dialect = matched_dialect\n+      end\n+      if vim.tbl_contains({ 'gm2' }, matched_extension) then\n+        extension = matched_extension\n+      end\n+      break\n+    end\n+  end\n+\n+  return 'modula2',\n+    function(b)\n+      vim.api.nvim_buf_call(b, function()\n+        fn['modula2#SetDialect'](dialect, extension)\n+      end)\n+    end\n+end\n+\n+--- @param bufnr integer\n+--- @return boolean\n+local function is_modula2(bufnr)\n+  return matchregex(nextnonblank(bufnr, 1), [[\\<MODULE\\s\\+\\w\\+\\s*;\\|^\\s*(\\*]])\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/27020#discussion_r1452470772",
            "id": 1452470772,
            "in_reply_to_id": 1452468558,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WkvH0",
            "original_commit_id": "8bfcbfd7ab6e6490ab7f62e09af30db48ab097a3",
            "original_line": 457,
            "original_position": 39,
            "original_start_line": 455,
            "path": "runtime/lua/vim/filetype/detect.lua",
            "position": null,
            "pull_request_review_id": 1821837184,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27020",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452470772/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-15T14:51:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452470772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27020#discussion_r1452472861"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27020"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452472861"
                }
            },
            "author_association": "MEMBER",
            "body": "Perfect reason for having it as a local function.",
            "commit_id": "4bfb0353b39fcbeccd2f21cf33814697059f2f1b",
            "created_at": "2024-01-15T14:52:58Z",
            "diff_hunk": "@@ -419,6 +419,55 @@ function M.dtrace(_, bufnr)\n   return 'd'\n end\n \n+--- @param bufnr integer\n+--- @return string, fun(b: integer)\n+local function modula2(bufnr)\n+  local dialect = vim.g.modula2_default_dialect or 'pim'\n+  local extension = vim.g.modula2_default_extension or ''\n+\n+  -- ignore unknown dialects or badly formatted tags\n+  for _, line in ipairs(getlines(bufnr, 1, 200)) do\n+    local matched_dialect, matched_extension = line:match('%(%*!m2(%w+)%+(%w+)%*%)')\n+    if not matched_dialect then\n+      matched_dialect = line:match('%(%*!m2(%w+)%*%)')\n+    end\n+    if matched_dialect then\n+      if vim.tbl_contains({ 'iso', 'pim', 'r10' }, matched_dialect) then\n+        dialect = matched_dialect\n+      end\n+      if vim.tbl_contains({ 'gm2' }, matched_extension) then\n+        extension = matched_extension\n+      end\n+      break\n+    end\n+  end\n+\n+  return 'modula2',\n+    function(b)\n+      vim.api.nvim_buf_call(b, function()\n+        fn['modula2#SetDialect'](dialect, extension)\n+      end)\n+    end\n+end\n+\n+--- @param bufnr integer\n+--- @return boolean\n+local function is_modula2(bufnr)\n+  return matchregex(nextnonblank(bufnr, 1), [[\\<MODULE\\s\\+\\w\\+\\s*;\\|^\\s*(\\*]])\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/27020#discussion_r1452472861",
            "id": 1452472861,
            "in_reply_to_id": 1452468558,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Wkvod",
            "original_commit_id": "8bfcbfd7ab6e6490ab7f62e09af30db48ab097a3",
            "original_line": 457,
            "original_position": 39,
            "original_start_line": 455,
            "path": "runtime/lua/vim/filetype/detect.lua",
            "position": null,
            "pull_request_review_id": 1821840476,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27020",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452472861/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-15T14:52:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452472861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27020#discussion_r1452826871"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27020"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452826871"
                }
            },
            "author_association": "MEMBER",
            "body": "It may be better to put this before `modula2()` to match the order in `ft.vim`.",
            "commit_id": "4bfb0353b39fcbeccd2f21cf33814697059f2f1b",
            "created_at": "2024-01-16T00:51:06Z",
            "diff_hunk": "@@ -419,6 +419,55 @@ function M.dtrace(_, bufnr)\n   return 'd'\n end\n \n+--- @param bufnr integer\n+--- @return string, fun(b: integer)\n+local function modula2(bufnr)\n+  local dialect = vim.g.modula2_default_dialect or 'pim'\n+  local extension = vim.g.modula2_default_extension or ''\n+\n+  -- ignore unknown dialects or badly formatted tags\n+  for _, line in ipairs(getlines(bufnr, 1, 200)) do\n+    local matched_dialect, matched_extension = line:match('%(%*!m2(%w+)%+(%w+)%*%)')\n+    if not matched_dialect then\n+      matched_dialect = line:match('%(%*!m2(%w+)%*%)')\n+    end\n+    if matched_dialect then\n+      if vim.tbl_contains({ 'iso', 'pim', 'r10' }, matched_dialect) then\n+        dialect = matched_dialect\n+      end\n+      if vim.tbl_contains({ 'gm2' }, matched_extension) then\n+        extension = matched_extension\n+      end\n+      break\n+    end\n+  end\n+\n+  return 'modula2',\n+    function(b)\n+      vim.api.nvim_buf_call(b, function()\n+        fn['modula2#SetDialect'](dialect, extension)\n+      end)\n+    end\n+end\n+\n+--- @param bufnr integer\n+--- @return boolean\n+local function is_modula2(bufnr)\n+  return matchregex(nextnonblank(bufnr, 1), [[\\<MODULE\\s\\+\\w\\+\\s*;\\|^\\s*(\\*]])\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/27020#discussion_r1452826871",
            "id": 1452826871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WmGD3",
            "original_commit_id": "8bfcbfd7ab6e6490ab7f62e09af30db48ab097a3",
            "original_line": 457,
            "original_position": 39,
            "original_start_line": 453,
            "path": "runtime/lua/vim/filetype/detect.lua",
            "position": null,
            "pull_request_review_id": 1822382133,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27020",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452826871/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-16T00:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452826871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I think it would be good to put an appropriate comment at the top of any files that were manually backtranslated?\r\n\r\n(I don't think there's any; we have only backported changes to the previous \"frozen\" legacy version, which feels different.)",
            "created_at": "2024-01-15T15:09:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/27020#issuecomment-1892350829",
            "id": 1892350829,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27020",
            "node_id": "IC_kwDOAPphoM5wyvtt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1892350829/reactions"
            },
            "updated_at": "2024-01-15T15:09:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1892350829",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27020/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27020/commits",
    "created_at": "2024-01-15T13:52:25Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27020.diff",
    "draft": false,
    "head": {
        "label": "seandewar:vim-9.1.0013",
        "ref": "vim-9.1.0013",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/seandewar/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/seandewar/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/seandewar/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/seandewar/neovim/branches{/branch}",
            "clone_url": "https://github.com/seandewar/neovim.git",
            "collaborators_url": "https://api.github.com/repos/seandewar/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/seandewar/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/seandewar/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/seandewar/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/seandewar/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/seandewar/neovim/contributors",
            "created_at": "2020-10-20T16:45:01Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/seandewar/neovim/deployments",
            "description": "[Contribution Fork] Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/seandewar/neovim/downloads",
            "events_url": "https://api.github.com/repos/seandewar/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/seandewar/neovim/forks",
            "full_name": "seandewar/neovim",
            "git_commits_url": "https://api.github.com/repos/seandewar/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/seandewar/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/seandewar/neovim/git/tags{/sha}",
            "git_url": "git://github.com/seandewar/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/seandewar/neovim/hooks",
            "html_url": "https://github.com/seandewar/neovim",
            "id": 305773353,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/seandewar/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/seandewar/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/seandewar/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/seandewar/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/seandewar/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/seandewar/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/seandewar/neovim/merges",
            "milestones_url": "https://api.github.com/repos/seandewar/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDU3NzMzNTM=",
            "notifications_url": "https://api.github.com/repos/seandewar/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/seandewar/neovim/pulls{/number}",
            "pushed_at": "2024-01-17T14:47:44Z",
            "releases_url": "https://api.github.com/repos/seandewar/neovim/releases{/id}",
            "size": 236930,
            "ssh_url": "git@github.com:seandewar/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/seandewar/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/seandewar/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/seandewar/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/seandewar/neovim/subscription",
            "svn_url": "https://github.com/seandewar/neovim",
            "tags_url": "https://api.github.com/repos/seandewar/neovim/tags",
            "teams_url": "https://api.github.com/repos/seandewar/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/seandewar/neovim/git/trees{/sha}",
            "updated_at": "2023-01-12T23:27:58Z",
            "url": "https://api.github.com/repos/seandewar/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "4bfb0353b39fcbeccd2f21cf33814697059f2f1b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
            "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
            "followers_url": "https://api.github.com/users/seandewar/followers",
            "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seandewar",
            "id": 6256228,
            "login": "seandewar",
            "node_id": "MDQ6VXNlcjYyNTYyMjg=",
            "organizations_url": "https://api.github.com/users/seandewar/orgs",
            "received_events_url": "https://api.github.com/users/seandewar/received_events",
            "repos_url": "https://api.github.com/users/seandewar/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seandewar"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27020",
    "id": 1679299149,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27020",
    "labels": [
        {
            "color": "e6e6e6",
            "default": false,
            "description": "See https://github.com/neovim/neovim/wiki/Merging-patches-from-upstream-Vim",
            "id": 843184430,
            "name": "vim-patch",
            "node_id": "MDU6TGFiZWw4NDMxODQ0MzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vim-patch"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filetype detection, filetype.lua",
            "id": 3708202139,
            "name": "filetype",
            "node_id": "LA_kwDOAPphoM7dBqyb",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filetype"
        }
    ],
    "locked": false,
    "merge_commit_sha": "91dc04a5e12a3d0c5be56768ded5971bc80e6f8e",
    "merged_at": "2024-01-16T17:45:57Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5kGBJN",
    "number": 27020,
    "patch_url": "https://github.com/neovim/neovim/pull/27020.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27020/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/4bfb0353b39fcbeccd2f21cf33814697059f2f1b",
    "title": "vim-patch:9.1.0013: Modula2 filetype support lacking",
    "updated_at": "2024-01-16T17:46:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27020",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
        "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandewar/followers",
        "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandewar",
        "id": 6256228,
        "login": "seandewar",
        "node_id": "MDQ6VXNlcjYyNTYyMjg=",
        "organizations_url": "https://api.github.com/users/seandewar/orgs",
        "received_events_url": "https://api.github.com/users/seandewar/received_events",
        "repos_url": "https://api.github.com/users/seandewar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandewar"
    }
}