{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23681/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23681/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/23681"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23681"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23681/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5142,
            "forks_count": 5142,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1740,
            "open_issues_count": 1740,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T01:33:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247954,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72793,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-16T01:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72793,
            "watchers_count": 72793,
            "web_commit_signoff_required": false
        },
        "sha": "aa9d46b6724cf3454aca602e64350856827c3ab8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Added initial support for [dynamic registration of capabilities](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#client_registerCapability)\r\n\r\n- `client.dynamic_capabilities` is an object that tracks client register/unregister\r\n- `client.supports_method` will additionally check if a dynamic capability supports the method, taking document filters into account. But **only** if the client enabled `dynamicRegistration` for the capability\r\n- updated the default client capabilities to include dynamicRegistration for:\r\n  - `formatting`\r\n  - `rangeFormatting`\r\n  - `hover`\r\n  - `codeAction`\r\n  - `hover`\r\n  - `rename`\r\n\r\n## Notes\r\n\r\n- `client.server_capabilities` only contains the capabilities set during server initialization.\r\n- Client code that wants to fully support dynamic capabilities should additionally check `client.dynamic_capabities:get(method, {bufnr=...})`\r\n- Maybe I should add a `client.get_server_capability(method, {bufnr=...})` that combines both like with `client.supports_method`?\r\n- I didnt enable `dynamicRegistration` by default for `completion` since that ***possibly*** requires extra processing of `registrationOptions` (see the point above)\r\n\r\n## Examples\r\n\r\nThis opens up a lot of new functionality for existing lsp servers. Some examples:\r\n\r\n- formatting now works with rome lsp, since they only advertise formatting with dynamic registration\r\n- eslintls also has a formatter, which does the same as EslintFixAll, so that special handling in lspconfig would no longer be needed\r\n- some lsps advertise additional code actions\r\n\r\nWould be great to get some feedback if this is something we would like to have in core.",
    "closed_at": "2023-05-28T05:51:29Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199030405"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199030405"
                }
            },
            "author_association": "MEMBER",
            "body": "Can you move these to the `types.lua` ?",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T14:28:47Z",
            "diff_hunk": "@@ -0,0 +1,115 @@\n+local wf = require('vim.lsp._watchfiles')\n+\n+--- @class lsp.DocumentFilter\n+--- @field language? string\n+--- @field scheme? string\n+--- @field pattern? string\n+\n+--- @alias lsp.DocumentSelector lsp.DocumentFilter[]\n+\n+--- @class lsp.Registration\n+--- @field id string\n+--- @field method string\n+--- @field registerOptions? any | lsp.StaticRegistrationOptions | lsp.TextDocumentRegistrationOptions\n+\n+--- @alias lsp.RegistrationParams {registrations: lsp.Registration[]}\n+\n+--- @class lsp.StaticRegistrationOptions\n+--- @field id? string\n+\n+--- @class lsp.TextDocumentRegistrationOptions\n+--- @field documentSelector? lsp.DocumentSelector\n+\n+--- @class lsp.Unregistration\n+--- @field id string\n+--- @field method string\n+\n+--- @alias lsp.UnregistrationParams {unregisterations: lsp.Unregistration[]}",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199030405",
            "id": 1199030405,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hd8CF",
            "original_commit_id": "fbf647f14ef83e01e06d3a06d98e891331e24d60",
            "original_line": 27,
            "original_position": 27,
            "original_start_line": 3,
            "path": "runtime/lua/vim/lsp/dynamic.lua",
            "position": null,
            "pull_request_review_id": 1434540446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199030405/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-19T14:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199030405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199031701"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199031701"
                }
            },
            "author_association": "MEMBER",
            "body": "Would using `vim.defaulttable` fit for `self.capabilities`?",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T14:30:00Z",
            "diff_hunk": "@@ -0,0 +1,115 @@\n+local wf = require('vim.lsp._watchfiles')\n+\n+--- @class lsp.DocumentFilter\n+--- @field language? string\n+--- @field scheme? string\n+--- @field pattern? string\n+\n+--- @alias lsp.DocumentSelector lsp.DocumentFilter[]\n+\n+--- @class lsp.Registration\n+--- @field id string\n+--- @field method string\n+--- @field registerOptions? any | lsp.StaticRegistrationOptions | lsp.TextDocumentRegistrationOptions\n+\n+--- @alias lsp.RegistrationParams {registrations: lsp.Registration[]}\n+\n+--- @class lsp.StaticRegistrationOptions\n+--- @field id? string\n+\n+--- @class lsp.TextDocumentRegistrationOptions\n+--- @field documentSelector? lsp.DocumentSelector\n+\n+--- @class lsp.Unregistration\n+--- @field id string\n+--- @field method string\n+\n+--- @alias lsp.UnregistrationParams {unregisterations: lsp.Unregistration[]}\n+\n+--- @class lsp.DynamicCapabilities\n+--- @field capabilities table<string, lsp.Registration[]>\n+local M = {}\n+\n+function M.new()\n+  return setmetatable({ capabilities = {} }, { __index = M })\n+end\n+\n+--- @param registrations lsp.Registration[]\n+function M:register(registrations)\n+  -- remove duplicates\n+  self:unregister(registrations)\n+  for _, reg in ipairs(registrations) do\n+    local method = reg.method\n+    if not self.capabilities[method] then\n+      self.capabilities[method] = {}\n+    end\n+    table.insert(self.capabilities[method], reg)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199031701",
            "id": 1199031701,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hd8WV",
            "original_commit_id": "fbf647f14ef83e01e06d3a06d98e891331e24d60",
            "original_line": 46,
            "original_position": 46,
            "original_start_line": 43,
            "path": "runtime/lua/vim/lsp/dynamic.lua",
            "position": null,
            "pull_request_review_id": 1434540446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199031701/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-19T14:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199031701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199032192"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199032192"
                }
            },
            "author_association": "MEMBER",
            "body": "Can you add `@return` too?",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T14:30:31Z",
            "diff_hunk": "@@ -0,0 +1,115 @@\n+local wf = require('vim.lsp._watchfiles')\n+\n+--- @class lsp.DocumentFilter\n+--- @field language? string\n+--- @field scheme? string\n+--- @field pattern? string\n+\n+--- @alias lsp.DocumentSelector lsp.DocumentFilter[]\n+\n+--- @class lsp.Registration\n+--- @field id string\n+--- @field method string\n+--- @field registerOptions? any | lsp.StaticRegistrationOptions | lsp.TextDocumentRegistrationOptions\n+\n+--- @alias lsp.RegistrationParams {registrations: lsp.Registration[]}\n+\n+--- @class lsp.StaticRegistrationOptions\n+--- @field id? string\n+\n+--- @class lsp.TextDocumentRegistrationOptions\n+--- @field documentSelector? lsp.DocumentSelector\n+\n+--- @class lsp.Unregistration\n+--- @field id string\n+--- @field method string\n+\n+--- @alias lsp.UnregistrationParams {unregisterations: lsp.Unregistration[]}\n+\n+--- @class lsp.DynamicCapabilities\n+--- @field capabilities table<string, lsp.Registration[]>\n+local M = {}\n+\n+function M.new()\n+  return setmetatable({ capabilities = {} }, { __index = M })\n+end\n+\n+--- @param registrations lsp.Registration[]\n+function M:register(registrations)\n+  -- remove duplicates\n+  self:unregister(registrations)\n+  for _, reg in ipairs(registrations) do\n+    local method = reg.method\n+    if not self.capabilities[method] then\n+      self.capabilities[method] = {}\n+    end\n+    table.insert(self.capabilities[method], reg)\n+  end\n+end\n+\n+--- @param unregisterations lsp.Unregistration[]\n+function M:unregister(unregisterations)\n+  for _, unreg in ipairs(unregisterations) do\n+    local method = unreg.method\n+    if not self.capabilities[method] then\n+      return\n+    end\n+    local id = unreg.id\n+    for i, reg in ipairs(self.capabilities[method]) do\n+      if reg.id == id then\n+        table.remove(self.capabilities[method], i)\n+        break\n+      end\n+    end\n+  end\n+end\n+\n+--- @param method string\n+--- @param opts? {bufnr?: number}\n+function M:get(method, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199032192",
            "id": 1199032192,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hd8eA",
            "original_commit_id": "fbf647f14ef83e01e06d3a06d98e891331e24d60",
            "original_line": 69,
            "original_position": 69,
            "original_start_line": 68,
            "path": "runtime/lua/vim/lsp/dynamic.lua",
            "position": null,
            "pull_request_review_id": 1434540446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199032192/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-19T14:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199032192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199033299"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199033299"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  local ft = vim.bo[bufnr].filetype\r\n```\r\n\r\n`nvim_buf_get_option` is about to be deprecated: https://github.com/neovim/neovim/pull/23670",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T14:31:34Z",
            "diff_hunk": "@@ -0,0 +1,115 @@\n+local wf = require('vim.lsp._watchfiles')\n+\n+--- @class lsp.DocumentFilter\n+--- @field language? string\n+--- @field scheme? string\n+--- @field pattern? string\n+\n+--- @alias lsp.DocumentSelector lsp.DocumentFilter[]\n+\n+--- @class lsp.Registration\n+--- @field id string\n+--- @field method string\n+--- @field registerOptions? any | lsp.StaticRegistrationOptions | lsp.TextDocumentRegistrationOptions\n+\n+--- @alias lsp.RegistrationParams {registrations: lsp.Registration[]}\n+\n+--- @class lsp.StaticRegistrationOptions\n+--- @field id? string\n+\n+--- @class lsp.TextDocumentRegistrationOptions\n+--- @field documentSelector? lsp.DocumentSelector\n+\n+--- @class lsp.Unregistration\n+--- @field id string\n+--- @field method string\n+\n+--- @alias lsp.UnregistrationParams {unregisterations: lsp.Unregistration[]}\n+\n+--- @class lsp.DynamicCapabilities\n+--- @field capabilities table<string, lsp.Registration[]>\n+local M = {}\n+\n+function M.new()\n+  return setmetatable({ capabilities = {} }, { __index = M })\n+end\n+\n+--- @param registrations lsp.Registration[]\n+function M:register(registrations)\n+  -- remove duplicates\n+  self:unregister(registrations)\n+  for _, reg in ipairs(registrations) do\n+    local method = reg.method\n+    if not self.capabilities[method] then\n+      self.capabilities[method] = {}\n+    end\n+    table.insert(self.capabilities[method], reg)\n+  end\n+end\n+\n+--- @param unregisterations lsp.Unregistration[]\n+function M:unregister(unregisterations)\n+  for _, unreg in ipairs(unregisterations) do\n+    local method = unreg.method\n+    if not self.capabilities[method] then\n+      return\n+    end\n+    local id = unreg.id\n+    for i, reg in ipairs(self.capabilities[method]) do\n+      if reg.id == id then\n+        table.remove(self.capabilities[method], i)\n+        break\n+      end\n+    end\n+  end\n+end\n+\n+--- @param method string\n+--- @param opts? {bufnr?: number}\n+function M:get(method, opts)\n+  opts = opts or {}\n+  opts.bufnr = opts.bufnr or vim.api.nvim_get_current_buf()\n+  for _, reg in ipairs(self.capabilities[method] or {}) do\n+    if not reg.registerOptions then\n+      return {}\n+    end\n+    local documentSelector = reg.registerOptions.documentSelector\n+    if not documentSelector then\n+      return reg.registerOptions\n+    end\n+    if M.match(opts.bufnr, documentSelector) then\n+      return reg.registerOptions\n+    end\n+  end\n+end\n+\n+--- @param method string\n+--- @param opts? {bufnr?: number}\n+function M:supports(method, opts)\n+  return self:get(method, opts) ~= nil\n+end\n+\n+--- @param bufnr number\n+--- @param documentSelector lsp.DocumentSelector\n+function M.match(bufnr, documentSelector)\n+  local ft = vim.api.nvim_buf_get_option(bufnr, 'filetype')",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199033299",
            "id": 1199033299,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hd8vT",
            "original_commit_id": "fbf647f14ef83e01e06d3a06d98e891331e24d60",
            "original_line": 95,
            "original_position": 95,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/dynamic.lua",
            "position": null,
            "pull_request_review_id": 1434540446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199033299/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-19T14:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199033299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199034937"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199034937"
                }
            },
            "author_association": "MEMBER",
            "body": "I assume we want people to go through client.dynamic_capabilities, and not access vim.lsp.dynamic directly, so could you rename `dynamic.lua` to `_dynamic` and move the require call down to where it's used ( `dynamic_capabilities = require(\"vim.lsp._dynamic\").new()` ) to make it lazy?\r\n\r\n",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T14:33:11Z",
            "diff_hunk": "@@ -6,6 +6,7 @@ local protocol = require('vim.lsp.protocol')\n local util = require('vim.lsp.util')\n local sync = require('vim.lsp.sync')\n local semantic_tokens = require('vim.lsp.semantic_tokens')\n+local dynamic = require('vim.lsp.dynamic')",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199034937",
            "id": 1199034937,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hd9I5",
            "original_commit_id": "fbf647f14ef83e01e06d3a06d98e891331e24d60",
            "original_line": 9,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1434540446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199034937/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-19T14:38:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199034937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199057188"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199057188"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure about this one. Sounds a bit too magical to me for this use-case :)\r\nWe also do checks on the table if a capability was registered and I assume `vim.defaulttable` would then make an entry in that table?",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T14:52:16Z",
            "diff_hunk": "@@ -0,0 +1,115 @@\n+local wf = require('vim.lsp._watchfiles')\n+\n+--- @class lsp.DocumentFilter\n+--- @field language? string\n+--- @field scheme? string\n+--- @field pattern? string\n+\n+--- @alias lsp.DocumentSelector lsp.DocumentFilter[]\n+\n+--- @class lsp.Registration\n+--- @field id string\n+--- @field method string\n+--- @field registerOptions? any | lsp.StaticRegistrationOptions | lsp.TextDocumentRegistrationOptions\n+\n+--- @alias lsp.RegistrationParams {registrations: lsp.Registration[]}\n+\n+--- @class lsp.StaticRegistrationOptions\n+--- @field id? string\n+\n+--- @class lsp.TextDocumentRegistrationOptions\n+--- @field documentSelector? lsp.DocumentSelector\n+\n+--- @class lsp.Unregistration\n+--- @field id string\n+--- @field method string\n+\n+--- @alias lsp.UnregistrationParams {unregisterations: lsp.Unregistration[]}\n+\n+--- @class lsp.DynamicCapabilities\n+--- @field capabilities table<string, lsp.Registration[]>\n+local M = {}\n+\n+function M.new()\n+  return setmetatable({ capabilities = {} }, { __index = M })\n+end\n+\n+--- @param registrations lsp.Registration[]\n+function M:register(registrations)\n+  -- remove duplicates\n+  self:unregister(registrations)\n+  for _, reg in ipairs(registrations) do\n+    local method = reg.method\n+    if not self.capabilities[method] then\n+      self.capabilities[method] = {}\n+    end\n+    table.insert(self.capabilities[method], reg)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199057188",
            "id": 1199057188,
            "in_reply_to_id": 1199031701,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5HeCkk",
            "original_commit_id": "fbf647f14ef83e01e06d3a06d98e891331e24d60",
            "original_line": 46,
            "original_position": 46,
            "original_start_line": 43,
            "path": "runtime/lua/vim/lsp/dynamic.lua",
            "position": null,
            "pull_request_review_id": 1434582092,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199057188/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-19T14:52:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199057188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199076182"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199076182"
                }
            },
            "author_association": "MEMBER",
            "body": "Added this function so we can check if the client supports dynamic registration for a certain method.\r\n\r\nI've also updated the register/unregister handlers to only log when an unsupported registration happens. The unsupported methods are also added to the log",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T15:09:37Z",
            "diff_hunk": "@@ -1299,7 +1300,12 @@ function lsp.start_client(config)\n       -- The initial trace setting. If omitted trace is disabled (\"off\").\n       -- trace = \"off\" | \"messages\" | \"verbose\";\n       trace = valid_traces[config.trace] or 'off',\n+      ---@param method string\n     }\n+    client.supports_dynamic_registration = function(method)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199076182",
            "id": 1199076182,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5HeHNW",
            "original_commit_id": "219cc071e0cbae00c1311e2e6d53257b52be2734",
            "original_line": 1305,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1434612416,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199076182/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-19T15:09:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199076182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199078912"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199078912"
                }
            },
            "author_association": "MEMBER",
            "body": "Since the initial client capabilities added when starting the client are not exposed anywhere, it's currently not possible to enable dynamicRegistration after the facts.\r\n\r\nThe registrations will be tracked, but `client.supports_method` will only check those that were enabled during start.\r\n\r\nWe could expose `client.client_capabilities`, but I would leave it as is for now",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-19T15:12:26Z",
            "diff_hunk": "@@ -1299,7 +1300,12 @@ function lsp.start_client(config)\n       -- The initial trace setting. If omitted trace is disabled (\"off\").\n       -- trace = \"off\" | \"messages\" | \"verbose\";\n       trace = valid_traces[config.trace] or 'off',\n+      ---@param method string\n     }\n+    client.supports_dynamic_registration = function(method)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199078912",
            "id": 1199078912,
            "in_reply_to_id": 1199076182,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5HeH4A",
            "original_commit_id": "219cc071e0cbae00c1311e2e6d53257b52be2734",
            "original_line": 1305,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1434616788,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199078912/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-19T15:12:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199078912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199563542"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199563542"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd prefer inlining this into `supports_method` instead of exposing an additional method. Users could access `client.config.capabilities` if they need the information.\r\n\r\n\r\n",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-20T05:52:01Z",
            "diff_hunk": "@@ -1299,7 +1300,12 @@ function lsp.start_client(config)\n       -- The initial trace setting. If omitted trace is disabled (\"off\").\n       -- trace = \"off\" | \"messages\" | \"verbose\";\n       trace = valid_traces[config.trace] or 'off',\n+      ---@param method string\n     }\n+    client.supports_dynamic_registration = function(method)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199563542",
            "id": 1199563542,
            "in_reply_to_id": 1199076182,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hf-MW",
            "original_commit_id": "219cc071e0cbae00c1311e2e6d53257b52be2734",
            "original_line": 1305,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1435365426,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199563542/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-20T05:52:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199563542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1199564585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199564585"
                }
            },
            "author_association": "MEMBER",
            "body": "done, added the function on `_dynamic` instead. Indeed not need to expose on client.",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-20T06:02:57Z",
            "diff_hunk": "@@ -1299,7 +1300,12 @@ function lsp.start_client(config)\n       -- The initial trace setting. If omitted trace is disabled (\"off\").\n       -- trace = \"off\" | \"messages\" | \"verbose\";\n       trace = valid_traces[config.trace] or 'off',\n+      ---@param method string\n     }\n+    client.supports_dynamic_registration = function(method)",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1199564585",
            "id": 1199564585,
            "in_reply_to_id": 1199076182,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Hf-cp",
            "original_commit_id": "219cc071e0cbae00c1311e2e6d53257b52be2734",
            "original_line": 1305,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1435366400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199564585/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-20T06:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1199564585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1207705760"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1207705760"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• Dynamic registration of LSP capabilities. An implication of this change is that checking a client's `server_capabilities` is no longer a sufficient indicator to see if a server supports a feature. Instead use `client.supports_method(<method>)`. It considers both the dynamic capabilities and static `server_capabilities`.\r\n```\r\n",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-27T06:02:09Z",
            "diff_hunk": "@@ -36,6 +36,8 @@ ADDED FEATURES                                                     *news-added*\n \n The following new APIs or features were added.\n \n+• Dynamic registration of LSP capabilities\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1207705760",
            "id": 1207705760,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5H_CCg",
            "original_commit_id": "070551a9384fbd0e9531838cccc109b4d73d7dc5",
            "original_line": 40,
            "original_position": 5,
            "original_start_line": 39,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1447170636,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1207705760/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-27T06:03:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1207705760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1210027369"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1210027369"
                }
            },
            "author_association": "MEMBER",
            "body": "Turns out this change doesn't work.\r\n`client.supports_method('codeAction/resolve')` returns `false` if it's supported via dynamic capabilities because there won't be an entry for `codeAction/resolve`, but instead it looks like this:\r\n\r\n```\r\n        [\"textDocument/codeAction\"] = { {\r\n            id = \"3b2131ee-bf17-4a3d-a528-ad698f162956\",\r\n            method = \"textDocument/codeAction\",\r\n            registerOptions = {\r\n              codeActionKinds = { \"quickfix\", \"refactor\", \"refactor.extract\", \"refactor.inline\", \"refactor\r\n.rewrite\", \"source\", \"source.organizeImports\" },\r\n              resolveProvider = true\r\n            }\r\n          } },\r\n```\r\n\r\nUsing code actions which require resolving the command is currently broken on master because of this.\r\n",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-30T09:50:13Z",
            "diff_hunk": "@@ -683,11 +683,7 @@ local function on_code_action_results(results, ctx, options)\n     --\n     local client = vim.lsp.get_client_by_id(action_tuple[1])\n     local action = action_tuple[2]\n-    if\n-      not action.edit\n-      and client\n-      and vim.tbl_get(client.server_capabilities, 'codeActionProvider', 'resolveProvider')\n-    then\n+    if not action.edit and client and client.supports_method('codeAction/resolve') then",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1210027369",
            "id": 1210027369,
            "line": 686,
            "node_id": "PRRC_kwDOAPphoM5IH41p",
            "original_commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "original_line": 686,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 9,
            "pull_request_review_id": 1450553216,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1210027369/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-30T09:50:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1210027369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1210050720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1210050720"
                }
            },
            "author_association": "MEMBER",
            "body": "See https://github.com/neovim/neovim/pull/23826",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-30T10:09:55Z",
            "diff_hunk": "@@ -683,11 +683,7 @@ local function on_code_action_results(results, ctx, options)\n     --\n     local client = vim.lsp.get_client_by_id(action_tuple[1])\n     local action = action_tuple[2]\n-    if\n-      not action.edit\n-      and client\n-      and vim.tbl_get(client.server_capabilities, 'codeActionProvider', 'resolveProvider')\n-    then\n+    if not action.edit and client and client.supports_method('codeAction/resolve') then",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1210050720",
            "id": 1210050720,
            "in_reply_to_id": 1210027369,
            "line": 686,
            "node_id": "PRRC_kwDOAPphoM5IH-ig",
            "original_commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "original_line": 686,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 9,
            "pull_request_review_id": 1450589158,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1210050720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-30T10:09:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1210050720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23681#discussion_r1211130169"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23681"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1211130169"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thank you very much for working on this, it's really exciting! It would be good to have a good alternative to dynamically react to server capabilities though.\r\n\r\nFor example, in order to conditionally add a mapping for `textDocument/hover`, I used to check server_capabilities in the `LspAttach` callback, and now I have to override the handler for `client/registerCapability`, and we actually need to do both to account for servers that don't support dynamic registration. Basically, this will lead to some duplication between LspAttach and the handler for `client/registerCapability`, similar to what you had to do for `lsp._set_defaults`.\r\n\r\nPersonally, I think the duplication isn't too bad (can just create a shared function and call from both places), what's annoying is having to override the handler. It works, but I wonder if you have any plans/ideas on how to improve it?\r\n\r\nThank you again!",
            "commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "created_at": "2023-05-31T06:07:20Z",
            "diff_hunk": "@@ -36,6 +36,7 @@ ADDED FEATURES                                                     *news-added*\n \n The following new APIs or features were added.\n \n+• Dynamic registration of LSP capabilities. An implication of this change is that checking a client's `server_capabilities` is no longer a sufficient indicator to see if a server supports a feature. Instead use `client.supports_method(<method>)`. It considers both the dynamic capabilities and static `server_capabilities`.",
            "html_url": "https://github.com/neovim/neovim/pull/23681#discussion_r1211130169",
            "id": 1211130169,
            "line": 39,
            "node_id": "PRRC_kwDOAPphoM5IMGE5",
            "original_commit_id": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
            "original_line": 39,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 1452269655,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1211130169/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-31T06:07:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1211130169",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/108725?v=4",
                "events_url": "https://api.github.com/users/fsouza/events{/privacy}",
                "followers_url": "https://api.github.com/users/fsouza/followers",
                "following_url": "https://api.github.com/users/fsouza/following{/other_user}",
                "gists_url": "https://api.github.com/users/fsouza/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fsouza",
                "id": 108725,
                "login": "fsouza",
                "node_id": "MDQ6VXNlcjEwODcyNQ==",
                "organizations_url": "https://api.github.com/users/fsouza/orgs",
                "received_events_url": "https://api.github.com/users/fsouza/received_events",
                "repos_url": "https://api.github.com/users/fsouza/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fsouza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fsouza/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fsouza"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "What should we do with `completion`? We can enable dynamic registration for this as well, but some lsp servers I tested with provide additional options.\r\n\r\nThe current deafult omnifunc implementation also doesn't take dynamic registration of completion into account.\r\n\r\nJust leave it as is for now? Can be changed in another PR if it would be useful. ",
            "created_at": "2023-05-19T14:57:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1554716190",
            "id": 1554716190,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5cqxYe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554716190/reactions"
            },
            "updated_at": "2023-05-19T14:57:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554716190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Just leave it as is for now? Can be changed in another PR if it would be useful.\r\n\r\nYes let's leave it out for now",
            "created_at": "2023-05-19T14:59:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1554719057",
            "id": 1554719057,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5cqyFR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554719057/reactions"
            },
            "updated_at": "2023-05-19T14:59:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554719057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also worth mentioning that some LSP servers like eslint, where people typically have `EslintFixALL` in a `FileWritePost`, will now also do the same thing as part of format.\r\n\r\nOr people that are using rome lsp, together with the null-ls rome formatter (which is no longer needed with this PR)\r\n\r\nNot a big deal, and easy to fix in their configs, but something to be aware of.\r\n\r\n@glepnir see above :)",
            "created_at": "2023-05-19T15:14:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1554739445",
            "id": 1554739445,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5cq3D1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554739445/reactions"
            },
            "updated_at": "2023-05-19T15:19:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1554739445",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mfussenegger I was just doing that actually. Totally forgot we have capabilities exposed on client.config",
            "created_at": "2023-05-20T05:53:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1555639521",
            "id": 1555639521,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5cuSzh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555639521/reactions"
            },
            "updated_at": "2023-05-20T05:53:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555639521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mfussenegger added some tests",
            "created_at": "2023-05-20T07:05:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1555752950",
            "id": 1555752950,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5cuuf2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555752950/reactions"
            },
            "updated_at": "2023-05-20T07:05:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1555752950",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Are there any other changes needed before merging?",
            "created_at": "2023-05-24T21:24:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1561945501",
            "id": 1561945501,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dGWWd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1561945501/reactions"
            },
            "updated_at": "2023-05-24T21:24:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1561945501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "On a quick test with eclipse.jdt.ls the codeActionProvider also disappears which means https://github.com/folke/neovim/blob/23ce849969c88c9ddde5ec01ff2f30a3593e769e/runtime/lua/vim/lsp/buf.lua#L686-L689 needs an update as well.\r\n\r\nI think the other places where we use the server_capabilities directly should be okay.",
            "created_at": "2023-05-25T08:27:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1562495659",
            "id": 1562495659,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dIcqr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562495659/reactions"
            },
            "updated_at": "2023-05-25T08:27:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562495659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's indeed the same as what I mentioned with completion. I can make some changes so that formatting also supports dynamic registration. By using supports_method and by adding a dynamic formatting handler possibly. Need to double check the code to see that we'd only be overriding defaults and not custom formatter that may have been set by the user in the meantime. ",
            "created_at": "2023-05-25T08:30:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1562500662",
            "id": 1562500662,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dId42",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562500662/reactions"
            },
            "updated_at": "2023-05-25T08:30:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562500662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "* Enabled dynamic registration for `textDocument/definition`\r\n* moved `set_defaults` and `is_empty_or_default` out of `client.start`\r\n* move defnition of `client.supports_method` out of after initialize\r\n* expose `vim.lsp._set_defaults`\r\n* when an lsp does a dynamic registration, we set defaults again for attached buffers (will only change anything if it's still the default)\r\n* Fixed dynamic registration for `textDocument/resolve` (code actions)\r\n\r\nNote: with the lsp's I tested, most dynamic registration happens during lsp inititalize, so that's why I had to move out some methods and define them earlier in the startup process.\r\n\r\n",
            "created_at": "2023-05-25T11:58:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1562777929",
            "id": 1562777929,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dJhlJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562777929/reactions"
            },
            "updated_at": "2023-05-25T11:58:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1562777929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I hadn't seen that the tests were failing. I forgot to add an entry for code action resolve to that mapping table.\n\nAll good now!",
            "created_at": "2023-05-26T16:22:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1564633055",
            "id": 1564633055,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dQmff",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1564633055/reactions"
            },
            "updated_at": "2023-05-26T16:22:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1564633055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Updated the docs. Do you want me to put everything in one commit? Or will you just squash/merge it?",
            "created_at": "2023-05-27T06:51:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1565238016",
            "id": 1565238016,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dS6MA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565238016/reactions"
            },
            "updated_at": "2023-05-27T06:51:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565238016",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do you want me to put everything in one commit? Or will you just squash/merge it?\r\n\r\nI'll just squash unless you want me to keep the commits?",
            "created_at": "2023-05-27T16:38:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1565586749",
            "id": 1565586749,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dUPU9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565586749/reactions"
            },
            "updated_at": "2023-05-27T16:38:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565586749",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "While I love the dynamic registration support, using `client.supports_method(\"text\")` no longer allows for completion of the valid fields, and instead introduces arbitrary text, for which typos/invalid LSP functionality is not easily caught.",
            "created_at": "2023-05-27T16:44:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1565590110",
            "id": 1565590110,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dUQJe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565590110/reactions"
            },
            "updated_at": "2023-05-27T16:44:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565590110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22371?v=4",
                "events_url": "https://api.github.com/users/dsully/events{/privacy}",
                "followers_url": "https://api.github.com/users/dsully/followers",
                "following_url": "https://api.github.com/users/dsully/following{/other_user}",
                "gists_url": "https://api.github.com/users/dsully/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dsully",
                "id": 22371,
                "login": "dsully",
                "node_id": "MDQ6VXNlcjIyMzcx",
                "organizations_url": "https://api.github.com/users/dsully/orgs",
                "received_events_url": "https://api.github.com/users/dsully/received_events",
                "repos_url": "https://api.github.com/users/dsully/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dsully/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dsully/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dsully"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@dsully we can fix that in another PR. There's currently a lot of places in the Neovim code where code isn't typed correctly. Shouldn't be a blocker for this.",
            "created_at": "2023-05-27T18:04:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1565625552",
            "id": 1565625552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dUYzQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565625552/reactions"
            },
            "updated_at": "2023-05-27T18:04:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565625552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Do you want me to put everything in one commit? Or will you just squash/merge it?\r\n> \r\n> I'll just squash unless you want me to keep the commits?\r\n\r\nnope, squashing is fine. Thanks!",
            "created_at": "2023-05-27T18:04:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1565625649",
            "id": 1565625649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dUY0x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565625649/reactions"
            },
            "updated_at": "2023-05-27T18:04:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565625649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thank you!",
            "created_at": "2023-05-27T18:12:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/23681#issuecomment-1565628927",
            "id": 1565628927,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
            "node_id": "IC_kwDOAPphoM5dUZn_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565628927/reactions"
            },
            "updated_at": "2023-05-27T18:12:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1565628927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/22371?v=4",
                "events_url": "https://api.github.com/users/dsully/events{/privacy}",
                "followers_url": "https://api.github.com/users/dsully/followers",
                "following_url": "https://api.github.com/users/dsully/following{/other_user}",
                "gists_url": "https://api.github.com/users/dsully/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dsully",
                "id": 22371,
                "login": "dsully",
                "node_id": "MDQ6VXNlcjIyMzcx",
                "organizations_url": "https://api.github.com/users/dsully/orgs",
                "received_events_url": "https://api.github.com/users/dsully/received_events",
                "repos_url": "https://api.github.com/users/dsully/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dsully/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dsully/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dsully"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23681/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/23681/commits",
    "created_at": "2023-05-19T07:25:54Z",
    "diff_url": "https://github.com/neovim/neovim/pull/23681.diff",
    "draft": false,
    "head": {
        "label": "folke:dynamic_capabilities",
        "ref": "dynamic_capabilities",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/folke/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/folke/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/folke/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/folke/neovim/branches{/branch}",
            "clone_url": "https://github.com/folke/neovim.git",
            "collaborators_url": "https://api.github.com/repos/folke/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/folke/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/folke/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/folke/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/folke/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/folke/neovim/contributors",
            "created_at": "2021-05-20T08:16:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/folke/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/folke/neovim/downloads",
            "events_url": "https://api.github.com/repos/folke/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/folke/neovim/forks",
            "full_name": "folke/neovim",
            "git_commits_url": "https://api.github.com/repos/folke/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/folke/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/folke/neovim/git/tags{/sha}",
            "git_url": "git://github.com/folke/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/folke/neovim/hooks",
            "html_url": "https://github.com/folke/neovim",
            "id": 369133134,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/folke/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/folke/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/folke/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/folke/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/folke/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/folke/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/folke/neovim/merges",
            "milestones_url": "https://api.github.com/repos/folke/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNjkxMzMxMzQ=",
            "notifications_url": "https://api.github.com/repos/folke/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/folke/neovim/pulls{/number}",
            "pushed_at": "2023-12-15T05:17:38Z",
            "releases_url": "https://api.github.com/repos/folke/neovim/releases{/id}",
            "size": 230521,
            "ssh_url": "git@github.com:folke/neovim.git",
            "stargazers_count": 9,
            "stargazers_url": "https://api.github.com/repos/folke/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/folke/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/folke/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/folke/neovim/subscription",
            "svn_url": "https://github.com/folke/neovim",
            "tags_url": "https://api.github.com/repos/folke/neovim/tags",
            "teams_url": "https://api.github.com/repos/folke/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/folke/neovim/git/trees{/sha}",
            "updated_at": "2023-12-09T19:25:34Z",
            "url": "https://api.github.com/repos/folke/neovim",
            "visibility": "public",
            "watchers": 9,
            "watchers_count": 9,
            "web_commit_signoff_required": false
        },
        "sha": "9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/23681",
    "id": 1356728659,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23681",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ddd92a70d2aab5247895e89abaaa79c62ba7dbb4",
    "merged_at": "2023-05-28T05:51:29Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 235,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 141,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-15T23:44:03Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5Q3glT",
    "number": 23681,
    "patch_url": "https://github.com/neovim/neovim/pull/23681.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/23681/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/9ebea6e2c24e42dcf3ff94ec6d8f2ee2a898a26c",
    "title": "feat(lsp): initial support for dynamic capabilities",
    "updated_at": "2024-01-09T15:21:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/23681",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
        "events_url": "https://api.github.com/users/folke/events{/privacy}",
        "followers_url": "https://api.github.com/users/folke/followers",
        "following_url": "https://api.github.com/users/folke/following{/other_user}",
        "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/folke",
        "id": 292349,
        "login": "folke",
        "node_id": "MDQ6VXNlcjI5MjM0OQ==",
        "organizations_url": "https://api.github.com/users/folke/orgs",
        "received_events_url": "https://api.github.com/users/folke/received_events",
        "repos_url": "https://api.github.com/users/folke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/folke"
    }
}