{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26500/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26500/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26500"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26500"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26500/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26500"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6c54993d29629c6affbb3b892571ff32216e507b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5066,
            "forks_count": 5066,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1721,
            "open_issues_count": 1721,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-19T00:15:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 246400,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71892,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-19T01:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71892,
            "watchers_count": 71892,
            "web_commit_signoff_required": false
        },
        "sha": "d956bc63795ff7a6ff54ad942a7483a5ef76e650",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Resolves https://github.com/neovim/neovim/issues/23026 and addresses servers not implementing `textDocument/semanticTokens/full` (i.e. https://github.com/dotnet/roslyn/issues/70536)\r\n\r\nMy intentions were both to provide a basic implementation of range according to the suggestions in the lsp spec (listed the paragraph above [here](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#semanticTokens_rangeRequest)) for improving response times when a user opens a file and on edits, and to allow for servers not implementing full or full/delta to just have the entire document requested through range.\r\n\r\nRequesting the entire document through range may be a bad idea on some servers, but I was unsure whether I should disable semantic token full (or range spanning the whole document, same idea) requests entirely for slower servers and only update on scroll, or if I should just leave it as is, because of the behavior not being already present.\r\n\r\nAs for testing, I am unsure if the existing tests for semantic tokens are adequate or if I should add more, given my lack of familiarity with testing. Feedback would be appreciated.\r\n\r\nEdit: Those failing tests don't look right (I could swear I ran testing earlier on my system, not sure what happened there), I'll look into those soon",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26500#discussion_r1421791720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421791720"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      if vim.tbl_get(client.server_capabilities, 'semanticTokensProvider', 'full') or vim.tbl_get(client.server_capabilities, 'semanticTokensProvider', 'range') then\r\n```\r\n\r\nWe want to check not only that the capability is defined, but also that it isn't set to `false`.",
            "commit_id": "6c54993d29629c6affbb3b892571ff32216e507b",
            "created_at": "2023-12-10T17:56:55Z",
            "diff_hunk": "@@ -1736,7 +1736,7 @@ function lsp.start_client(config)\n     -- on_attach and LspAttach callbacks the ability to schedule wrap the\n     -- opt-out (deleting the semanticTokensProvider from capabilities)\n     vim.schedule(function()\n-      if vim.tbl_get(client.server_capabilities, 'semanticTokensProvider', 'full') then\n+      if vim.tbl_get(client.server_capabilities, 'semanticTokensProvider') then",
            "html_url": "https://github.com/neovim/neovim/pull/26500#discussion_r1421791720",
            "id": 1421791720,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5UvtHo",
            "original_commit_id": "d12ca25454ae2da44bdee3590efaac3ec6303f51",
            "original_line": 1739,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1774073007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421791720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-10T18:07:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421791720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26500#discussion_r1421792306"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421792306"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local hasRangeProvider = client and vim.tbl_get(client.server_capabilities, 'semanticTokensProvider', 'range')\r\n```",
            "commit_id": "6c54993d29629c6affbb3b892571ff32216e507b",
            "created_at": "2023-12-10T18:01:43Z",
            "diff_hunk": "@@ -279,9 +294,18 @@ function STHighlighter:send_request()\n     local current_result = state.current_result\n     local active_request = state.active_request\n \n+    -- Prevent requests with an explicit range being sent to servers that do not support range. All\n+    -- range requests should be covered by later full requests anyway, and only serve to provide\n+    -- faster responses for certain portions of the buffer\n+    local hasRangeProvider = client and client.server_capabilities.semanticTokensProvider.range",
            "html_url": "https://github.com/neovim/neovim/pull/26500#discussion_r1421792306",
            "id": 1421792306,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5UvtQy",
            "original_commit_id": "d12ca25454ae2da44bdee3590efaac3ec6303f51",
            "original_line": 300,
            "original_position": 52,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 1774073007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421792306/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-10T18:07:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421792306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26500#discussion_r1421792831"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421792831"
                }
            },
            "author_association": "MEMBER",
            "body": "What if the same buffer is being displayed in 2 different windows?",
            "commit_id": "6c54993d29629c6affbb3b892571ff32216e507b",
            "created_at": "2023-12-10T18:05:11Z",
            "diff_hunk": "@@ -606,6 +641,16 @@ function M.start(bufnr, client_id, opts)\n   end\n \n   highlighter:attach(client_id)\n+  local wininfo = vim.fn.getwininfo(api.nvim_get_current_win())[1]\n+  -- Process tokens for only the visible portion of the window the buffer is being displayed in",
            "html_url": "https://github.com/neovim/neovim/pull/26500#discussion_r1421792831",
            "id": 1421792831,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5UvtY_",
            "original_commit_id": "d12ca25454ae2da44bdee3590efaac3ec6303f51",
            "original_line": 645,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 1774073007,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26500",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421792831/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-10T18:07:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421792831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26500#discussion_r1421835616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26500"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421835616"
                }
            },
            "author_association": "NONE",
            "body": "https://github.com/neovim/neovim/pull/26500/commits/adf9843660dfadcec3e14459572ee8c734816afa#diff-f11809d8946cebd21b6bec568546afe4589930ac9c6e89f49e7f398adc574c90R666",
            "commit_id": "6c54993d29629c6affbb3b892571ff32216e507b",
            "created_at": "2023-12-10T23:13:57Z",
            "diff_hunk": "@@ -606,6 +641,16 @@ function M.start(bufnr, client_id, opts)\n   end\n \n   highlighter:attach(client_id)\n+  local wininfo = vim.fn.getwininfo(api.nvim_get_current_win())[1]\n+  -- Process tokens for only the visible portion of the window the buffer is being displayed in",
            "html_url": "https://github.com/neovim/neovim/pull/26500#discussion_r1421835616",
            "id": 1421835616,
            "in_reply_to_id": 1421792831,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Uv31g",
            "original_commit_id": "d12ca25454ae2da44bdee3590efaac3ec6303f51",
            "original_line": 645,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/semantic_tokens.lua",
            "position": null,
            "pull_request_review_id": 1774117748,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26500",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421835616/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-10T23:13:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1421835616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
                "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
                "followers_url": "https://api.github.com/users/ppebb/followers",
                "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ppebb",
                "id": 36719558,
                "login": "ppebb",
                "node_id": "MDQ6VXNlcjM2NzE5NTU4",
                "organizations_url": "https://api.github.com/users/ppebb/orgs",
                "received_events_url": "https://api.github.com/users/ppebb/received_events",
                "repos_url": "https://api.github.com/users/ppebb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ppebb"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "Apparently, removing the autocmd to re-request tokens on InsertLeave was causing tests to fail. Unless I am missing something, there shouldn't be a reason to re-request tokens just from leaving insert mode. Tokens should only be requested when text is changed, which should be handled by the nvim_buf_attach on_change callback.",
            "created_at": "2023-12-10T15:27:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1848996168",
            "id": 1848996168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5uNXFI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848996168/reactions"
            },
            "updated_at": "2023-12-10T15:27:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1848996168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
                "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
                "followers_url": "https://api.github.com/users/ppebb/followers",
                "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ppebb",
                "id": 36719558,
                "login": "ppebb",
                "node_id": "MDQ6VXNlcjM2NzE5NTU4",
                "organizations_url": "https://api.github.com/users/ppebb/orgs",
                "received_events_url": "https://api.github.com/users/ppebb/received_events",
                "repos_url": "https://api.github.com/users/ppebb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ppebb"
            }
        },
        {
            "author_association": "NONE",
            "body": "Once peculiarity I've noticed is that the handler for `workspace/semanticTokens/refresh` seemingly gets called right after the request is sent on attach for the ranges and then the full highlight. Not sure what's causing it to run.\r\nEdit: Seems to be some poor implementation on the side of the plugin I'm using for the roslyn language server. Oh well.\r\n\r\nAlso, I've just realized that when two range requests are sent for the same buffer, it overwrites every token instead of updating, will fix soon.",
            "created_at": "2023-12-10T23:09:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1849118775",
            "id": 1849118775,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5uN1A3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1849118775/reactions"
            },
            "updated_at": "2023-12-11T02:55:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1849118775",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
                "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
                "followers_url": "https://api.github.com/users/ppebb/followers",
                "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ppebb",
                "id": 36719558,
                "login": "ppebb",
                "node_id": "MDQ6VXNlcjM2NzE5NTU4",
                "organizations_url": "https://api.github.com/users/ppebb/orgs",
                "received_events_url": "https://api.github.com/users/ppebb/received_events",
                "repos_url": "https://api.github.com/users/ppebb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ppebb"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> As for testing, I am unsure if the existing tests for semantic tokens are adequate or if I should add more, given my lack of familiarity with testing. Feedback would be appreciated.\r\n\r\nWe'll need additional tests that simulate servers which support range.\r\nSee test/functional/plugin/lsp/semantic_tokens_spec.lua for the existing tests.\r\nE.g. the following snippet is emulating the server response:\r\n\r\nhttps://github.com/neovim/neovim/blob/529498685bbcd4783bc0e816d6247118c9ffb9a7/test/functional/plugin/lsp/semantic_tokens_spec.lua#L1293-L1300\r\n\r\nWe need to make sure that all 3 combinations work: full only, range only, both full and range support. ",
            "created_at": "2023-12-11T16:45:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1850461778",
            "id": 1850461778,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5uS85S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850461778/reactions"
            },
            "updated_at": "2023-12-11T16:45:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850461778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Nice work, I had this on my list to implement when I found any semblance of free time 🤣\n\nSorry this is long, dumping my thoughts in one comment as they are more general. 😄\n\nFirst off, this won't quite work with two in flight requests simultaneously. The way this is now, the full request you send after the range request will never fire since the range request will update the active request's version and the full request following will be a no op. There will probably need to be a separate \"range\" pipeline _per window_ (map of window id to the request/result pair?) all the way down (active request and results). You'll probably also need a way to automatically fire new range requests if the window view changes, such as someone just scrolling around. This is a requirement for servers that only support range and not full/delta. \n\nOnce you have the requests firing right, the next hardest part is figuring out the dance of how you'll manage/merge/finalize the list of highlightable tokens for the buffer when you now have multiple in flight requests, some of which won't return a full list of tokens for the buffer.\n\nWe could possibly do this if we kept separate results per window for range results and cleared and reapplied those tokens on every range result for each window. The actual decorator would then look up tokens in the list for its window or the full token result, prioritizing the range list for its window if it isn't empty. Once the full result comes in, clear the entire table of window/range lists so the decorator always uses the full list (like it does now).\n\n> Apparently, removing the autocmd to re-request tokens on InsertLeave was causing tests to fail. Unless I am missing something, there shouldn't be a reason to re-request tokens just from leaving insert mode. Tokens should only be requested when text is changed, which should be handled by the nvim_buf_attach on_change callback.\n\nThis is a QOL improvement that slightly improves resolution time of new tokens. I chose to add this autocmd so that a token request is immediately fired once insert mode is left instead of waiting for the debounce timer. If there wasn't a change to the buffer, `send_request()` just doesn't do anything.\n\nTests might fail due to timing? If the buffer needs highlighting, you either have to wait for the timer or rely on the instant request from leaving insert mode. \n\n\nFinally, a couple implementation things that I would probably like to see (could be future tweak PRs though):\n\n- If a server supports range, full, and delta, it should only use range until it has a fully processed full response and should switch to only using delta requests for that buffer until a refresh notification comes in or the active result is otherwise invalidated. Deltas are faster than a range/delta pair once tokens are available for the entire buffer so there's no reason to bog the server down with useless range requests.\n- When requesting range, it would be good to use a heuristic and actually request a larger portion of the window than what's exactly visible, anticipating smaller scrolls in either direction before the first full response comes back (or if the server only supports range)\n\nLooking forward to finally getting range in! (Don't forget to update the default capabilities to include range now!)",
            "created_at": "2023-12-18T03:44:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1859504312",
            "id": 1859504312,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5u1ci4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859504312/reactions"
            },
            "updated_at": "2023-12-18T04:40:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859504312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard"
            }
        },
        {
            "author_association": "NONE",
            "body": "So I think I already addressed a couple of the things you mentioned, but it's all uncommitted as I was waiting until I finished writing tests (which has not happened because I am in the middle of final exams right now). I'll go ahead and commit what I have (although there's one bug I'm still trying to squash where the initial full request on start isn't firing for some reason but subsequent full requests do). \r\n\r\nI believe I properly handled allowing multiple requests at once. Not sure if the implementation I came up with for handling multiple in flight requests is the best, so I'll take any suggestions. I just decided that range requests would just fill in the current request until a full request comes in and just overwrites them (that seemed to be the correct approach given how range requests were described in the lsp documentation)",
            "created_at": "2023-12-18T04:00:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1859513904",
            "id": 1859513904,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5u1e4w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859513904/reactions"
            },
            "updated_at": "2023-12-18T04:05:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859513904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
                "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
                "followers_url": "https://api.github.com/users/ppebb/followers",
                "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ppebb",
                "id": 36719558,
                "login": "ppebb",
                "node_id": "MDQ6VXNlcjM2NzE5NTU4",
                "organizations_url": "https://api.github.com/users/ppebb/orgs",
                "received_events_url": "https://api.github.com/users/ppebb/received_events",
                "repos_url": "https://api.github.com/users/ppebb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ppebb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I edited my comment slightly (not sure which version you saw). The other main thing is you'll probably need a range request/result pair per window and a way to automatically fire new range requests when the window view changes for any window displaying a buffer with a highlighter that is visible. This would be especially important for servers that only support range requests. ",
            "created_at": "2023-12-18T04:18:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1859525469",
            "id": 1859525469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5u1htd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859525469/reactions"
            },
            "updated_at": "2023-12-18T04:18:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859525469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard"
            }
        },
        {
            "author_association": "NONE",
            "body": "For servers that only support range requests, the stopgap measure I came up with was just calling a range request over the entire document, but you're probably correct that handling scrolling would be a better idea.",
            "created_at": "2023-12-18T04:20:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1859526325",
            "id": 1859526325,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5u1h61",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859526325/reactions"
            },
            "updated_at": "2023-12-18T04:20:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859526325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
                "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
                "followers_url": "https://api.github.com/users/ppebb/followers",
                "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ppebb",
                "id": 36719558,
                "login": "ppebb",
                "node_id": "MDQ6VXNlcjM2NzE5NTU4",
                "organizations_url": "https://api.github.com/users/ppebb/orgs",
                "received_events_url": "https://api.github.com/users/ppebb/received_events",
                "repos_url": "https://api.github.com/users/ppebb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ppebb"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Concatenating range results as they come in doesn't work, unfortunately 😔 \n\nThe decorator requires that the token list used to look up which extmarks to add be in order and unique for the buffer. It does a binary search in the list for each visible line's line number in the window to find visible tokens.\n\nIf each window had its own range request/result, plus one full one for the buffer, this decorator becomes trivial. Use the range result if it's there and the full result otherwise. The full response handler clears the range results for all windows so they each use the full result once it's parsed.",
            "created_at": "2023-12-18T05:18:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/26500#issuecomment-1859575071",
            "id": 1859575071,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
            "node_id": "IC_kwDOAPphoM5u1t0f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859575071/reactions"
            },
            "updated_at": "2023-12-18T05:18:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1859575071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/394891?v=4",
                "events_url": "https://api.github.com/users/jdrouhard/events{/privacy}",
                "followers_url": "https://api.github.com/users/jdrouhard/followers",
                "following_url": "https://api.github.com/users/jdrouhard/following{/other_user}",
                "gists_url": "https://api.github.com/users/jdrouhard/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jdrouhard",
                "id": 394891,
                "login": "jdrouhard",
                "node_id": "MDQ6VXNlcjM5NDg5MQ==",
                "organizations_url": "https://api.github.com/users/jdrouhard/orgs",
                "received_events_url": "https://api.github.com/users/jdrouhard/received_events",
                "repos_url": "https://api.github.com/users/jdrouhard/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jdrouhard/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jdrouhard/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jdrouhard"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26500/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26500/commits",
    "created_at": "2023-12-10T07:17:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26500.diff",
    "draft": false,
    "head": {
        "label": "ppebb:lsp_range",
        "ref": "lsp_range",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ppebb/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ppebb/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ppebb/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ppebb/neovim/branches{/branch}",
            "clone_url": "https://github.com/ppebb/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ppebb/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ppebb/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ppebb/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ppebb/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ppebb/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ppebb/neovim/contributors",
            "created_at": "2023-12-10T06:33:14Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ppebb/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ppebb/neovim/downloads",
            "events_url": "https://api.github.com/repos/ppebb/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ppebb/neovim/forks",
            "full_name": "ppebb/neovim",
            "git_commits_url": "https://api.github.com/repos/ppebb/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ppebb/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ppebb/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ppebb/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ppebb/neovim/hooks",
            "html_url": "https://github.com/ppebb/neovim",
            "id": 729726333,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ppebb/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ppebb/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ppebb/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ppebb/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ppebb/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/ppebb/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ppebb/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ppebb/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK369fQ",
            "notifications_url": "https://api.github.com/repos/ppebb/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
                "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
                "followers_url": "https://api.github.com/users/ppebb/followers",
                "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
                "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ppebb",
                "id": 36719558,
                "login": "ppebb",
                "node_id": "MDQ6VXNlcjM2NzE5NTU4",
                "organizations_url": "https://api.github.com/users/ppebb/orgs",
                "received_events_url": "https://api.github.com/users/ppebb/received_events",
                "repos_url": "https://api.github.com/users/ppebb/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ppebb"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ppebb/neovim/pulls{/number}",
            "pushed_at": "2023-12-18T04:01:19Z",
            "releases_url": "https://api.github.com/repos/ppebb/neovim/releases{/id}",
            "size": 238069,
            "ssh_url": "git@github.com:ppebb/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ppebb/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ppebb/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ppebb/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ppebb/neovim/subscription",
            "svn_url": "https://github.com/ppebb/neovim",
            "tags_url": "https://api.github.com/repos/ppebb/neovim/tags",
            "teams_url": "https://api.github.com/repos/ppebb/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ppebb/neovim/git/trees{/sha}",
            "updated_at": "2023-12-10T06:33:14Z",
            "url": "https://api.github.com/repos/ppebb/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6c54993d29629c6affbb3b892571ff32216e507b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
            "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
            "followers_url": "https://api.github.com/users/ppebb/followers",
            "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
            "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ppebb",
            "id": 36719558,
            "login": "ppebb",
            "node_id": "MDQ6VXNlcjM2NzE5NTU4",
            "organizations_url": "https://api.github.com/users/ppebb/orgs",
            "received_events_url": "https://api.github.com/users/ppebb/received_events",
            "repos_url": "https://api.github.com/users/ppebb/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ppebb"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26500",
    "id": 1637579050,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26500",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8dcda014872d548ea82376c8957b6c2cfcbd023b",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5hm3kq",
    "number": 26500,
    "patch_url": "https://github.com/neovim/neovim/pull/26500.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26500/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6c54993d29629c6affbb3b892571ff32216e507b",
    "title": "feat(lsp): support textDocument/semanticTokens/range",
    "updated_at": "2023-12-18T05:18:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26500",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/36719558?v=4",
        "events_url": "https://api.github.com/users/ppebb/events{/privacy}",
        "followers_url": "https://api.github.com/users/ppebb/followers",
        "following_url": "https://api.github.com/users/ppebb/following{/other_user}",
        "gists_url": "https://api.github.com/users/ppebb/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ppebb",
        "id": 36719558,
        "login": "ppebb",
        "node_id": "MDQ6VXNlcjM2NzE5NTU4",
        "organizations_url": "https://api.github.com/users/ppebb/orgs",
        "received_events_url": "https://api.github.com/users/ppebb/received_events",
        "repos_url": "https://api.github.com/users/ppebb/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ppebb/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ppebb/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ppebb"
    }
}