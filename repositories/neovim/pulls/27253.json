{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27253/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27253/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27253"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27253"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27253/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/0fe86f7e240368c00ffa06516cd34850b92e00d3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5201,
            "forks_count": 5201,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1728,
            "open_issues_count": 1728,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-12T23:38:13Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 252813,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73720,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-13T01:34:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73720,
            "watchers_count": 73720,
            "web_commit_signoff_required": false
        },
        "sha": "32b49448b227588c2fbc93f89743104fd445e0a6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Closes #26995. As mentioned in the issue, I think this is a reasonable request given that the protocol documents [workspace/codeLens/refresh](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeLens_refresh) as \"refreshing the code lenses currently shown in editors\" (which IMO should correspond to all open buffers).\r\n\r\nThis is a breaking (?) change though, since the default behaviour changes (no arguments will be interpreted as refreshing all buffers).",
    "closed_at": "2024-02-10T20:48:45Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1471800098"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471800098"
                }
            },
            "author_association": "MEMBER",
            "body": "Ehh not sure why this type wasn't documented?",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-01-30T19:02:29Z",
            "diff_hunk": "@@ -1454,15 +1455,18 @@ on_codelens({err}, {result}, {ctx}, {_})\n     Parameters: ~\n       • {ctx}  (`lsp.HandlerContext`)\n \n-refresh()                                         *vim.lsp.codelens.refresh()*\n-    Refresh the codelens for the current buffer\n+refresh({opts})                                   *vim.lsp.codelens.refresh()*\n+    Refresh the lenses.\n \n     It is recommended to trigger this using an autocmd or via keymap.\n \n     Example: >vim\n-        autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+        autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh(0)\n <\n \n+    Parameters: ~\n+      • {opts}  (`vim.lsp.codelens.RefreshOptions?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1471800098",
            "id": 1471800098,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XueMi",
            "original_commit_id": "5197829982962bc49cad45cebc14d4d95ca54c37",
            "original_line": 1468,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1852130881,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471800098/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-30T19:02:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471800098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1471802352"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471802352"
                }
            },
            "author_association": "MEMBER",
            "body": "I decided to use a different type here instead of the existing `lsp.util.RefreshOptions` since I'm not exactly sure we want to support all options here as well.",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-01-30T19:04:20Z",
            "diff_hunk": "@@ -279,25 +280,35 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh(0)\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1471802352",
            "id": 1471802352,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Xuevw",
            "original_commit_id": "5197829982962bc49cad45cebc14d4d95ca54c37",
            "original_line": 296,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": null,
            "pull_request_review_id": 1852133798,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471802352/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-30T19:04:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471802352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1471804493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471804493"
                }
            },
            "author_association": "MEMBER",
            "body": "Our vimdoc generator currently does not expand this automatically, so the docs for parameter has to be manually written in the docstring. Improving vimdoc to support that is one of TODO..",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-01-30T19:05:43Z",
            "diff_hunk": "@@ -1454,15 +1455,18 @@ on_codelens({err}, {result}, {ctx}, {_})\n     Parameters: ~\n       • {ctx}  (`lsp.HandlerContext`)\n \n-refresh()                                         *vim.lsp.codelens.refresh()*\n-    Refresh the codelens for the current buffer\n+refresh({opts})                                   *vim.lsp.codelens.refresh()*\n+    Refresh the lenses.\n \n     It is recommended to trigger this using an autocmd or via keymap.\n \n     Example: >vim\n-        autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+        autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh(0)\n <\n \n+    Parameters: ~\n+      • {opts}  (`vim.lsp.codelens.RefreshOptions?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1471804493",
            "id": 1471804493,
            "in_reply_to_id": 1471800098,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XufRN",
            "original_commit_id": "5197829982962bc49cad45cebc14d4d95ca54c37",
            "original_line": 1468,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1852136538,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471804493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-30T19:12:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471804493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1471807491"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471807491"
                }
            },
            "author_association": "MEMBER",
            "body": "In every PR I swear I find something new that we should change in the doc generator lol",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-01-30T19:08:18Z",
            "diff_hunk": "@@ -1454,15 +1455,18 @@ on_codelens({err}, {result}, {ctx}, {_})\n     Parameters: ~\n       • {ctx}  (`lsp.HandlerContext`)\n \n-refresh()                                         *vim.lsp.codelens.refresh()*\n-    Refresh the codelens for the current buffer\n+refresh({opts})                                   *vim.lsp.codelens.refresh()*\n+    Refresh the lenses.\n \n     It is recommended to trigger this using an autocmd or via keymap.\n \n     Example: >vim\n-        autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+        autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh(0)\n <\n \n+    Parameters: ~\n+      • {opts}  (`vim.lsp.codelens.RefreshOptions?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1471807491",
            "id": 1471807491,
            "in_reply_to_id": 1471800098,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XugAD",
            "original_commit_id": "5197829982962bc49cad45cebc14d4d95ca54c37",
            "original_line": 1468,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1852140610,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471807491/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-30T19:08:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1471807491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1472162678"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472162678"
                }
            },
            "author_association": "MEMBER",
            "body": "Does the `util._refresh()` function save any code here? https://github.com/neovim/neovim/blob/5e5b004da44c7075ed1e20ae9d05ab09c6f2ac58/runtime/lua/vim/lsp/inlay_hint.lua#L251",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-01-31T00:34:30Z",
            "diff_hunk": "@@ -279,25 +280,36 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh({ bufnr = 0 })\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions Table with the following fields:\n+---  - `bufnr` (integer|nil): filter by buffer. All buffers if nil, 0 for current buffer\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = opts.bufnr and resolve_bufnr(opts.bufnr)\n+  local buffers = bufnr and { bufnr }\n+    or vim.tbl_filter(api.nvim_buf_is_loaded, api.nvim_list_bufs())\n   local params = {\n     textDocument = util.make_text_document_params(),\n   }\n-  local bufnr = api.nvim_get_current_buf()\n-  if active_refreshes[bufnr] then\n-    return\n+\n+  for _, buf in ipairs(buffers) do\n+    if not active_refreshes[buf] then\n+      active_refreshes[buf] = true\n+      vim.lsp.buf_request(buf, ms.textDocument_codeLens, params, M.on_codelens)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1472162678",
            "id": 1472162678,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5Xv2t2",
            "original_commit_id": "bed098037fea87d93a398fe0a8917ec454599f2e",
            "original_line": 308,
            "original_position": 54,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": 54,
            "pull_request_review_id": 1852679973,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472162678/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T00:34:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472162678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1472225814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472225814"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think so, since `_refresh` treats `opts.bufnr` differently (here it is interpreted as all buffers, while `_refresh` treats it as 0) and it also includes `range` information in the parameters which we don't need here.\r\n\r\nOf course we could modify it to be a common utility for inlay hints and codelens, but we want to burn `vim.lsp.util` anyway and I think keeping both implementations separate for now feels safer.",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-01-31T02:17:09Z",
            "diff_hunk": "@@ -279,25 +280,36 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh({ bufnr = 0 })\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions Table with the following fields:\n+---  - `bufnr` (integer|nil): filter by buffer. All buffers if nil, 0 for current buffer\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = opts.bufnr and resolve_bufnr(opts.bufnr)\n+  local buffers = bufnr and { bufnr }\n+    or vim.tbl_filter(api.nvim_buf_is_loaded, api.nvim_list_bufs())\n   local params = {\n     textDocument = util.make_text_document_params(),\n   }\n-  local bufnr = api.nvim_get_current_buf()\n-  if active_refreshes[bufnr] then\n-    return\n+\n+  for _, buf in ipairs(buffers) do\n+    if not active_refreshes[buf] then\n+      active_refreshes[buf] = true\n+      vim.lsp.buf_request(buf, ms.textDocument_codeLens, params, M.on_codelens)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1472225814",
            "id": 1472225814,
            "in_reply_to_id": 1472162678,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5XwGIW",
            "original_commit_id": "bed098037fea87d93a398fe0a8917ec454599f2e",
            "original_line": 308,
            "original_position": 54,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": 54,
            "pull_request_review_id": 1852777928,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472225814/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-31T02:17:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1472225814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1481625549"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1481625549"
                }
            },
            "author_association": "MEMBER",
            "body": "> but we want to burn `vim.lsp.util` anyway\r\n\r\nWell, that's not really relevant. It just happens to be where this common function lives, currently. But if a common function can be used, that would be ideal.",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-02-07T15:10:43Z",
            "diff_hunk": "@@ -279,25 +280,36 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh({ bufnr = 0 })\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions Table with the following fields:\n+---  - `bufnr` (integer|nil): filter by buffer. All buffers if nil, 0 for current buffer\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = opts.bufnr and resolve_bufnr(opts.bufnr)\n+  local buffers = bufnr and { bufnr }\n+    or vim.tbl_filter(api.nvim_buf_is_loaded, api.nvim_list_bufs())\n   local params = {\n     textDocument = util.make_text_document_params(),\n   }\n-  local bufnr = api.nvim_get_current_buf()\n-  if active_refreshes[bufnr] then\n-    return\n+\n+  for _, buf in ipairs(buffers) do\n+    if not active_refreshes[buf] then\n+      active_refreshes[buf] = true\n+      vim.lsp.buf_request(buf, ms.textDocument_codeLens, params, M.on_codelens)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1481625549",
            "id": 1481625549,
            "in_reply_to_id": 1472162678,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5YT8_N",
            "original_commit_id": "bed098037fea87d93a398fe0a8917ec454599f2e",
            "original_line": 308,
            "original_position": 54,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": 54,
            "pull_request_review_id": 1868057175,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1481625549/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-07T15:10:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1481625549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1483849745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483849745"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair enough. Still, since the parameters have different interpretations, I think that the gain of a common function would be lost while handling the different routes. I believe that keeping the code separate is okay for now.",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-02-09T04:34:05Z",
            "diff_hunk": "@@ -279,25 +280,36 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh({ bufnr = 0 })\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions Table with the following fields:\n+---  - `bufnr` (integer|nil): filter by buffer. All buffers if nil, 0 for current buffer\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = opts.bufnr and resolve_bufnr(opts.bufnr)\n+  local buffers = bufnr and { bufnr }\n+    or vim.tbl_filter(api.nvim_buf_is_loaded, api.nvim_list_bufs())\n   local params = {\n     textDocument = util.make_text_document_params(),\n   }\n-  local bufnr = api.nvim_get_current_buf()\n-  if active_refreshes[bufnr] then\n-    return\n+\n+  for _, buf in ipairs(buffers) do\n+    if not active_refreshes[buf] then\n+      active_refreshes[buf] = true\n+      vim.lsp.buf_request(buf, ms.textDocument_codeLens, params, M.on_codelens)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1483849745",
            "id": 1483849745,
            "in_reply_to_id": 1472162678,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5YccAR",
            "original_commit_id": "bed098037fea87d93a398fe0a8917ec454599f2e",
            "original_line": 308,
            "original_position": 54,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": 54,
            "pull_request_review_id": 1871639955,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483849745/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:34:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483849745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1483856273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483856273"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm happy to refactor/move stuff around to reduce common code though :)",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-02-09T04:49:46Z",
            "diff_hunk": "@@ -279,25 +280,36 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh({ bufnr = 0 })\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions Table with the following fields:\n+---  - `bufnr` (integer|nil): filter by buffer. All buffers if nil, 0 for current buffer\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = opts.bufnr and resolve_bufnr(opts.bufnr)\n+  local buffers = bufnr and { bufnr }\n+    or vim.tbl_filter(api.nvim_buf_is_loaded, api.nvim_list_bufs())\n   local params = {\n     textDocument = util.make_text_document_params(),\n   }\n-  local bufnr = api.nvim_get_current_buf()\n-  if active_refreshes[bufnr] then\n-    return\n+\n+  for _, buf in ipairs(buffers) do\n+    if not active_refreshes[buf] then\n+      active_refreshes[buf] = true\n+      vim.lsp.buf_request(buf, ms.textDocument_codeLens, params, M.on_codelens)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1483856273",
            "id": 1483856273,
            "in_reply_to_id": 1472162678,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5YcdmR",
            "original_commit_id": "bed098037fea87d93a398fe0a8917ec454599f2e",
            "original_line": 308,
            "original_position": 54,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": 54,
            "pull_request_review_id": 1871649120,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483856273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T04:49:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1483856273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27253#discussion_r1485267841"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27253"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485267841"
                }
            },
            "author_association": "MEMBER",
            "body": "Resolving this for now. The differences in the `refresh` functions are significant enough for a common utility not being worth it.",
            "commit_id": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
            "created_at": "2024-02-10T20:44:44Z",
            "diff_hunk": "@@ -279,25 +280,36 @@ function M.on_codelens(err, result, ctx, _)\n   end)\n end\n \n---- Refresh the codelens for the current buffer\n+--- @class vim.lsp.codelens.RefreshOptions\n+--- @field bufnr integer? filter by buffer. All buffers if nil, 0 for current buffer\n+\n+--- Refresh the lenses.\n ---\n --- It is recommended to trigger this using an autocmd or via keymap.\n ---\n --- Example:\n ---\n --- ```vim\n---- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh()\n+--- autocmd BufEnter,CursorHold,InsertLeave <buffer> lua vim.lsp.codelens.refresh({ bufnr = 0 })\n --- ```\n-function M.refresh()\n+---\n+--- @param opts? vim.lsp.codelens.RefreshOptions Table with the following fields:\n+---  - `bufnr` (integer|nil): filter by buffer. All buffers if nil, 0 for current buffer\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = opts.bufnr and resolve_bufnr(opts.bufnr)\n+  local buffers = bufnr and { bufnr }\n+    or vim.tbl_filter(api.nvim_buf_is_loaded, api.nvim_list_bufs())\n   local params = {\n     textDocument = util.make_text_document_params(),\n   }\n-  local bufnr = api.nvim_get_current_buf()\n-  if active_refreshes[bufnr] then\n-    return\n+\n+  for _, buf in ipairs(buffers) do\n+    if not active_refreshes[buf] then\n+      active_refreshes[buf] = true\n+      vim.lsp.buf_request(buf, ms.textDocument_codeLens, params, M.on_codelens)",
            "html_url": "https://github.com/neovim/neovim/pull/27253#discussion_r1485267841",
            "id": 1485267841,
            "in_reply_to_id": 1472162678,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5Yh2OB",
            "original_commit_id": "bed098037fea87d93a398fe0a8917ec454599f2e",
            "original_line": 308,
            "original_position": 54,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/codelens.lua",
            "position": 54,
            "pull_request_review_id": 1874215571,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485267841/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-10T20:44:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485267841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "One thing to consider: `refresh(0)` or `refresh({ buf = 0 })`?  (I'm not suggesting, just asking to see if which one is better than the other)\r\n\r\nWould we want want extend it to support `client_id` (e.g. refresh all the buffers a specific LSP is attached to)?  Or just several `refresh(buf)` calls with `get_buffers_by_client_id()` should be enough?\r\n\r\nThere is a (private) class `RefreshOption` (although it belongs to `vim.lsp.util` ...) which is used for inlay hints:\r\n```lua\r\n---@class lsp.util.RefreshOptions\r\n---@field bufnr integer? Buffer to refresh (default: 0)\r\n---@field only_visible? boolean Whether to only refresh for the visible regions of the buffer (default: false)\r\n---@field client_id? integer Client ID to refresh (default: all clients)\r\n```\r\n",
            "created_at": "2024-01-29T06:43:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1914058341",
            "id": 1914058341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5yFjZl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914058341/reactions"
            },
            "updated_at": "2024-01-29T06:43:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914058341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> One thing to consider: `refresh(0)` or `refresh({ buf = 0 })`? (I'm not suggesting, just asking to see if which one is better than the other)\r\n\r\nI think this is great. We've been using the `opts` table pattern for better extensibility in the future.\r\n\r\n> Would we want want extend it to support `client_id` (e.g. refresh all the buffers a specific LSP is attached to)? Or just several `refresh(buf)` calls with `get_buffers_by_client_id()` should be enough?\r\n> \r\n> There is a (private) class `RefreshOption` (although it belongs to `vim.lsp.util` ...) which is used for inlay hints:\r\n> \r\n> ```lua\r\n> ---@class lsp.util.RefreshOptions\r\n> ---@field bufnr integer? Buffer to refresh (default: 0)\r\n> ---@field only_visible? boolean Whether to only refresh for the visible regions of the buffer (default: false)\r\n> ---@field client_id? integer Client ID to refresh (default: all clients)\r\n> ```\r\n\r\nI don't see why not moving this out of `util` and also use it here. That being said, I'm not exactly sure of how I would implement `only_visible`.\r\n",
            "created_at": "2024-01-29T06:47:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1914062808",
            "id": 1914062808,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5yFkfY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914062808/reactions"
            },
            "updated_at": "2024-01-29T06:47:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1914062808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think a news entry mentioning the change would be good. Otherwise looks good to me\r\n\r\nDone :)\r\n",
            "created_at": "2024-02-01T21:30:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1922280511",
            "id": 1922280511,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5yk6w_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1922280511/reactions"
            },
            "updated_at": "2024-02-01T21:30:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1922280511",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the test failures could be related?\r\n> \r\n> > command line..script /home/runner/work/neovim/neovim/test/old/testdir/runtest.vim[543]..function RunTheTest[55]..Test_help_files[40]..4_ReportError line 2: testdir../../../runtime/doc/news.txt line 119: trailing white space\r\n\r\n@mfussenegger Should be fixed now :)",
            "created_at": "2024-02-09T03:43:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1935290693",
            "id": 1935290693,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5zWjFF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935290693/reactions"
            },
            "updated_at": "2024-02-09T03:44:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935290693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This seems to need a rebase",
            "created_at": "2024-02-09T04:09:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1935305469",
            "id": 1935305469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5zWmr9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935305469/reactions"
            },
            "updated_at": "2024-02-09T04:09:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935305469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This seems to need a rebase\r\n\r\nFor my own learning, why do you say so?",
            "created_at": "2024-02-09T04:26:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1935315324",
            "id": 1935315324,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5zWpF8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935315324/reactions"
            },
            "updated_at": "2024-02-09T04:26:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935315324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Because CI was failing due to a bug in the previous commit :(",
            "created_at": "2024-02-09T04:33:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/27253#issuecomment-1935320385",
            "id": 1935320385,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
            "node_id": "IC_kwDOAPphoM5zWqVB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935320385/reactions"
            },
            "updated_at": "2024-02-09T04:51:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1935320385",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27253/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27253/commits",
    "created_at": "2024-01-29T06:25:31Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27253.diff",
    "draft": false,
    "head": {
        "label": "MariaSolOs:codelens-refresh",
        "ref": "codelens-refresh",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MariaSolOs/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MariaSolOs/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MariaSolOs/neovim/branches{/branch}",
            "clone_url": "https://github.com/MariaSolOs/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MariaSolOs/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MariaSolOs/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MariaSolOs/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MariaSolOs/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MariaSolOs/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MariaSolOs/neovim/contributors",
            "created_at": "2023-08-05T17:10:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MariaSolOs/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MariaSolOs/neovim/downloads",
            "events_url": "https://api.github.com/repos/MariaSolOs/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MariaSolOs/neovim/forks",
            "full_name": "MariaSolOs/neovim",
            "git_commits_url": "https://api.github.com/repos/MariaSolOs/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MariaSolOs/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MariaSolOs/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MariaSolOs/neovim/hooks",
            "html_url": "https://github.com/MariaSolOs/neovim",
            "id": 675070403,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MariaSolOs/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MariaSolOs/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MariaSolOs/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/MariaSolOs/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MariaSolOs/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MariaSolOs/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKDzBww",
            "notifications_url": "https://api.github.com/repos/MariaSolOs/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MariaSolOs/neovim/pulls{/number}",
            "pushed_at": "2024-02-11T17:50:57Z",
            "releases_url": "https://api.github.com/repos/MariaSolOs/neovim/releases{/id}",
            "size": 246823,
            "ssh_url": "git@github.com:MariaSolOs/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MariaSolOs/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MariaSolOs/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MariaSolOs/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MariaSolOs/neovim/subscription",
            "svn_url": "https://github.com/MariaSolOs/neovim",
            "tags_url": "https://api.github.com/repos/MariaSolOs/neovim/tags",
            "teams_url": "https://api.github.com/repos/MariaSolOs/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MariaSolOs/neovim/git/trees{/sha}",
            "updated_at": "2023-08-09T04:34:06Z",
            "url": "https://api.github.com/repos/MariaSolOs/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "0fe86f7e240368c00ffa06516cd34850b92e00d3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27253",
    "id": 1699292356,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27253",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "320eec496c5fc502c542346ffd46800493cbd629",
    "merged_at": "2024-02-10T20:48:45Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 288,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 135,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-02-12T23:38:13Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5lSSTE",
    "number": 27253,
    "patch_url": "https://github.com/neovim/neovim/pull/27253.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27253/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/0fe86f7e240368c00ffa06516cd34850b92e00d3",
    "title": "feat(lsp): add opts to vim.lsp.codelens.refresh",
    "updated_at": "2024-02-11T04:24:38Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27253",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs"
    }
}