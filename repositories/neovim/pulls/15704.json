{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15704/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15704/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15704"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15704"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15704/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b4418f1ef839c190103a24326da751e0c9d71d4c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5531,
            "forks_count": 5531,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1778,
            "open_issues_count": 1778,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-08-20T01:30:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 282327,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80980,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-08-20T00:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80980,
            "watchers_count": 80980,
            "web_commit_signoff_required": false
        },
        "sha": "2afbce7651f79b0626ebeae3688274ce18ac2920",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "- Add `vim.diagnostic.match()`\r\n    * Parse a diagnostic from a string (similar usage to `string.match`)\r\n- Add `vim.diagnostic.tolist()` and `vim.diagnostic.fromlist()`\r\n    * Conversion functions between the list items expected by `setqflist()` and `setloclist()`\r\n    * `vim.diagnostic.tolist()` replaces the `vim.lsp.util.diagnostics_to_items()`\r\n\r\nCredit to @mfussenegger for the inspiration for `vim.diagnostic.match()` (adapted from nvim-lint, with permission).",
    "closed_at": "2021-09-19T22:13:23Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711575154"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575154"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  diagnostic.severity = diagnostic.severity or defaults.severity or M.severity.ERROR\r\n```",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T11:03:45Z",
            "diff_hunk": "@@ -1165,7 +1142,137 @@ function M.enable(bufnr, namespace)\n   end\n end\n \n--- }}}\n+--- Parse diagnostics from a string.\n+---\n+--- For example, consider a line of output from a linter:\n+--- <pre>\n+--- WARNING filename:27:3: Variable 'foo' does not exist\n+--- </pre>\n+--- This can be parsed into a diagnostic |diagnostic-structure|\n+--- with:\n+--- <pre>\n+--- local s = \"WARNING filename:27:3: Variable 'foo' does not exist\"\n+--- local pattern = \"^(%w+) %w+:(%d+):(%d+): (.+)$\"\n+--- local groups = {\"severity\", \"lnum\", \"col\", \"message\"}\n+--- vim.diagnostic.match(s, pattern, groups, {WARNING = vim.diagnostic.WARN})\n+--- </pre>\n+---\n+---@param str string String to parse diagnostics from.\n+---@param pat string Lua pattern with capture groups.\n+---@param groups table List of fields in a |diagnostic-structure| to\n+---                    associate with captures from {pat}.\n+---@param severity_map table A table mapping the severity field from {groups}\n+---                          with an item from |vim.diagnostic.severity|.\n+---@param defaults table|nil Table of default values for any fields not listed in {groups}.\n+---                          When omitted, numeric values default to 0 and \"severity\" defaults to\n+---                          ERROR.\n+---@return diagnostic |diagnostic-structure|\n+function M.match(str, pat, groups, severity_map, defaults)\n+  vim.validate {\n+    str = { str, 's' },\n+    pat = { pat, 's' },\n+    groups = { groups, 't' },\n+    severity_map = { severity_map, 't', true },\n+    defaults = { defaults, 't', true },\n+  }\n+\n+  defaults = defaults or {}\n+  severity_map = severity_map or M.severity\n+\n+  local diagnostic = {}\n+  for i, match in ipairs({string.match(str, pat)}) do\n+    local field = groups[i]\n+    if field == \"severity\" then\n+      match = severity_map[match]\n+    elseif field == \"lnum\" or field == \"end_lnum\" or field == \"col\" or field == \"end_col\" then\n+      match = assert(tonumber(match)) - 1\n+    end\n+    diagnostic[field] = match\n+  end\n+  diagnostic.severity = diagnostic.severity or defaults.severity or vim.severity.ERROR",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711575154",
            "id": 711575154,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qacZy",
            "original_commit_id": "98a84cf1f80e929979381c748a53db88fab5aa27",
            "original_line": 1192,
            "original_position": 110,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 758053269,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575154/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-18T11:08:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711575192"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575192"
                }
            },
            "author_association": "MEMBER",
            "body": "Could you also add a test for a case where the pattern doesn't match a string? (Returning an empty list?)",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T11:04:13Z",
            "diff_hunk": "@@ -869,4 +869,80 @@ describe('vim.diagnostic', function()\n       assert(loc_list[1].lnum < loc_list[2].lnum)\n     end)\n   end)\n+\n+  describe('match()', function()\n+    it('matches a string', function()",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711575192",
            "id": 711575192,
            "line": 885,
            "node_id": "PRRC_kwDOAPphoM4qacaY",
            "original_commit_id": "98a84cf1f80e929979381c748a53db88fab5aa27",
            "original_line": 885,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": 13,
            "pull_request_review_id": 758053269,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575192/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-18T11:08:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711575537"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575537"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure if it is worth to expose this given that it only takes two lines to implement, but no strong opinion on it.",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T11:07:46Z",
            "diff_hunk": "@@ -1165,7 +1142,137 @@ function M.enable(bufnr, namespace)\n   end\n end\n \n--- }}}\n+--- Parse diagnostics from a string.\n+---\n+--- For example, consider a line of output from a linter:\n+--- <pre>\n+--- WARNING filename:27:3: Variable 'foo' does not exist\n+--- </pre>\n+--- This can be parsed into a diagnostic |diagnostic-structure|\n+--- with:\n+--- <pre>\n+--- local s = \"WARNING filename:27:3: Variable 'foo' does not exist\"\n+--- local pattern = \"^(%w+) %w+:(%d+):(%d+): (.+)$\"\n+--- local groups = {\"severity\", \"lnum\", \"col\", \"message\"}\n+--- vim.diagnostic.match(s, pattern, groups, {WARNING = vim.diagnostic.WARN})\n+--- </pre>\n+---\n+---@param str string String to parse diagnostics from.\n+---@param pat string Lua pattern with capture groups.\n+---@param groups table List of fields in a |diagnostic-structure| to\n+---                    associate with captures from {pat}.\n+---@param severity_map table A table mapping the severity field from {groups}\n+---                          with an item from |vim.diagnostic.severity|.\n+---@param defaults table|nil Table of default values for any fields not listed in {groups}.\n+---                          When omitted, numeric values default to 0 and \"severity\" defaults to\n+---                          ERROR.\n+---@return diagnostic |diagnostic-structure|\n+function M.match(str, pat, groups, severity_map, defaults)\n+  vim.validate {\n+    str = { str, 's' },\n+    pat = { pat, 's' },\n+    groups = { groups, 't' },\n+    severity_map = { severity_map, 't', true },\n+    defaults = { defaults, 't', true },\n+  }\n+\n+  defaults = defaults or {}\n+  severity_map = severity_map or M.severity\n+\n+  local diagnostic = {}\n+  for i, match in ipairs({string.match(str, pat)}) do\n+    local field = groups[i]\n+    if field == \"severity\" then\n+      match = severity_map[match]\n+    elseif field == \"lnum\" or field == \"end_lnum\" or field == \"col\" or field == \"end_col\" then\n+      match = assert(tonumber(match)) - 1\n+    end\n+    diagnostic[field] = match\n+  end\n+  diagnostic.severity = diagnostic.severity or defaults.severity or vim.severity.ERROR\n+  diagnostic.col = diagnostic.col or 0\n+  diagnostic.end_lnum = diagnostic.end_lnum or diagnostic.lnum\n+  diagnostic.end_col = diagnostic.end_col or diagnostic.col\n+  return diagnostic\n+end\n+\n+--- Parse diagnostics from an error format.\n+---\n+---@param efm string Error format |errorformat|.\n+---@param lines table List of lines to parse\n+---@return array of diagnostics |diagnostic-structure|\n+function M.from_errorformat(efm, lines)\n+  local qflist = vim.fn.getqflist({efm = efm, lines = lines})\n+  return M.fromlist(qflist.items)\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711575537",
            "id": 711575537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qacfx",
            "original_commit_id": "98a84cf1f80e929979381c748a53db88fab5aa27",
            "original_line": 1207,
            "original_position": 125,
            "original_start_line": 1204,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 758053269,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575537/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-09-18T11:08:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711575537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711594465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711594465"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair point, this would also save me from writing tests for it 😄 ",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T14:02:33Z",
            "diff_hunk": "@@ -1165,7 +1142,137 @@ function M.enable(bufnr, namespace)\n   end\n end\n \n--- }}}\n+--- Parse diagnostics from a string.\n+---\n+--- For example, consider a line of output from a linter:\n+--- <pre>\n+--- WARNING filename:27:3: Variable 'foo' does not exist\n+--- </pre>\n+--- This can be parsed into a diagnostic |diagnostic-structure|\n+--- with:\n+--- <pre>\n+--- local s = \"WARNING filename:27:3: Variable 'foo' does not exist\"\n+--- local pattern = \"^(%w+) %w+:(%d+):(%d+): (.+)$\"\n+--- local groups = {\"severity\", \"lnum\", \"col\", \"message\"}\n+--- vim.diagnostic.match(s, pattern, groups, {WARNING = vim.diagnostic.WARN})\n+--- </pre>\n+---\n+---@param str string String to parse diagnostics from.\n+---@param pat string Lua pattern with capture groups.\n+---@param groups table List of fields in a |diagnostic-structure| to\n+---                    associate with captures from {pat}.\n+---@param severity_map table A table mapping the severity field from {groups}\n+---                          with an item from |vim.diagnostic.severity|.\n+---@param defaults table|nil Table of default values for any fields not listed in {groups}.\n+---                          When omitted, numeric values default to 0 and \"severity\" defaults to\n+---                          ERROR.\n+---@return diagnostic |diagnostic-structure|\n+function M.match(str, pat, groups, severity_map, defaults)\n+  vim.validate {\n+    str = { str, 's' },\n+    pat = { pat, 's' },\n+    groups = { groups, 't' },\n+    severity_map = { severity_map, 't', true },\n+    defaults = { defaults, 't', true },\n+  }\n+\n+  defaults = defaults or {}\n+  severity_map = severity_map or M.severity\n+\n+  local diagnostic = {}\n+  for i, match in ipairs({string.match(str, pat)}) do\n+    local field = groups[i]\n+    if field == \"severity\" then\n+      match = severity_map[match]\n+    elseif field == \"lnum\" or field == \"end_lnum\" or field == \"col\" or field == \"end_col\" then\n+      match = assert(tonumber(match)) - 1\n+    end\n+    diagnostic[field] = match\n+  end\n+  diagnostic.severity = diagnostic.severity or defaults.severity or vim.severity.ERROR\n+  diagnostic.col = diagnostic.col or 0\n+  diagnostic.end_lnum = diagnostic.end_lnum or diagnostic.lnum\n+  diagnostic.end_col = diagnostic.end_col or diagnostic.col\n+  return diagnostic\n+end\n+\n+--- Parse diagnostics from an error format.\n+---\n+---@param efm string Error format |errorformat|.\n+---@param lines table List of lines to parse\n+---@return array of diagnostics |diagnostic-structure|\n+function M.from_errorformat(efm, lines)\n+  local qflist = vim.fn.getqflist({efm = efm, lines = lines})\n+  return M.fromlist(qflist.items)\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711594465",
            "id": 711594465,
            "in_reply_to_id": 711575537,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qahHh",
            "original_commit_id": "98a84cf1f80e929979381c748a53db88fab5aa27",
            "original_line": 1207,
            "original_position": 125,
            "original_start_line": 1204,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 758064683,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711594465/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-09-18T14:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711594465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711612399"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711612399"
                }
            },
            "author_association": "MEMBER",
            "body": "- is there a reason we would not stick with the \"qflist\" convention? That clearly communicates what kind of list this is. Especially given that this also returns... a list.\r\n- same for `tolist()` => `toqflist()`\r\n- if this is too garbled, could name it `from_qflist`, `to_qflist`\r\n\r\n```suggestion\r\nfromqflist({list})                                   *vim.diagnostic.fromlist()*\r\n```",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T16:39:53Z",
            "diff_hunk": "@@ -265,6 +265,16 @@ enable({bufnr}, {namespace})                         *vim.diagnostic.enable()*\n                     {namespace}  number|nil Only enable diagnostics for the\n                                  given namespace.\n \n+fromlist({list})                                   *vim.diagnostic.fromlist()*",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711612399",
            "id": 711612399,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qalfv",
            "original_commit_id": "dfcde8256ebbdc5e77fda2d5008a954e5f84a210",
            "original_line": 268,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 758075821,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711612399/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-18T16:40:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711612399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711612650"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711612650"
                }
            },
            "author_association": "MEMBER",
            "body": "I am fine with this, hopefully it's clear that this can be use for the loclist as well though.\r\n\r\nI prefer no `_` personally (e.g. `fromqflist` instead of `from_qflist`).",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T16:41:52Z",
            "diff_hunk": "@@ -265,6 +265,16 @@ enable({bufnr}, {namespace})                         *vim.diagnostic.enable()*\n                     {namespace}  number|nil Only enable diagnostics for the\n                                  given namespace.\n \n+fromlist({list})                                   *vim.diagnostic.fromlist()*",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711612650",
            "id": 711612650,
            "in_reply_to_id": 711612399,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qaljq",
            "original_commit_id": "dfcde8256ebbdc5e77fda2d5008a954e5f84a210",
            "original_line": 268,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 758075949,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711612650/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-18T16:41:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711612650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711614152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711614152"
                }
            },
            "author_association": "MEMBER",
            "body": "> I am fine with this, hopefully it's clear that this can be use for the loclist as well though.\r\n\r\nyeah, it's understood that loclists have qflist format/structure. Or we need to establish that understanding, because having \"loclist\" variants everywhere or just calling them \"lists\" is strictly worse.\r\n\r\nEven `:help setloclist()` says _refer to |setqflist-what|_.\r\n\r\n\r\n\r\n\r\n> I prefer no `_` personally (e.g. `fromqflist` instead of `from_qflist`).\r\n\r\nfine with me :)",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T16:55:40Z",
            "diff_hunk": "@@ -265,6 +265,16 @@ enable({bufnr}, {namespace})                         *vim.diagnostic.enable()*\n                     {namespace}  number|nil Only enable diagnostics for the\n                                  given namespace.\n \n+fromlist({list})                                   *vim.diagnostic.fromlist()*",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711614152",
            "id": 711614152,
            "in_reply_to_id": 711612399,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qal7I",
            "original_commit_id": "dfcde8256ebbdc5e77fda2d5008a954e5f84a210",
            "original_line": 268,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 758076894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711614152/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-18T16:59:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711614152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711614380"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711614380"
                }
            },
            "author_association": "MEMBER",
            "body": "this is perfect, i would even jam it into the first line:\r\n```suggestion\r\n--- Convert a list of diagnostics to a list of quickfix items, which can be passed to |setqflist()| or |setloclist()|.\r\n```",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-18T16:57:24Z",
            "diff_hunk": "@@ -1167,7 +1144,135 @@ function M.enable(bufnr, namespace)\n   end\n end\n \n--- }}}\n+--- Parse a diagnostic from a string.\n+---\n+--- For example, consider a line of output from a linter:\n+--- <pre>\n+--- WARNING filename:27:3: Variable 'foo' does not exist\n+--- </pre>\n+--- This can be parsed into a diagnostic |diagnostic-structure|\n+--- with:\n+--- <pre>\n+--- local s = \"WARNING filename:27:3: Variable 'foo' does not exist\"\n+--- local pattern = \"^(%w+) %w+:(%d+):(%d+): (.+)$\"\n+--- local groups = {\"severity\", \"lnum\", \"col\", \"message\"}\n+--- vim.diagnostic.match(s, pattern, groups, {WARNING = vim.diagnostic.WARN})\n+--- </pre>\n+---\n+---@param str string String to parse diagnostics from.\n+---@param pat string Lua pattern with capture groups.\n+---@param groups table List of fields in a |diagnostic-structure| to\n+---                    associate with captures from {pat}.\n+---@param severity_map table A table mapping the severity field from {groups}\n+---                          with an item from |vim.diagnostic.severity|.\n+---@param defaults table|nil Table of default values for any fields not listed in {groups}.\n+---                          When omitted, numeric values default to 0 and \"severity\" defaults to\n+---                          ERROR.\n+---@return diagnostic |diagnostic-structure| or `nil` if {pat} fails to match {str}.\n+function M.match(str, pat, groups, severity_map, defaults)\n+  vim.validate {\n+    str = { str, 's' },\n+    pat = { pat, 's' },\n+    groups = { groups, 't' },\n+    severity_map = { severity_map, 't', true },\n+    defaults = { defaults, 't', true },\n+  }\n+\n+  severity_map = severity_map or M.severity\n+\n+  local diagnostic = {}\n+  local matches = {string.match(str, pat)}\n+  if vim.tbl_isempty(matches) then\n+    return\n+  end\n+\n+  for i, match in ipairs(matches) do\n+    local field = groups[i]\n+    if field == \"severity\" then\n+      match = severity_map[match]\n+    elseif field == \"lnum\" or field == \"end_lnum\" or field == \"col\" or field == \"end_col\" then\n+      match = assert(tonumber(match)) - 1\n+    end\n+    diagnostic[field] = match\n+  end\n \n+  diagnostic = vim.tbl_extend(\"keep\", diagnostic, defaults or {})\n+  diagnostic.severity = diagnostic.severity or M.severity.ERROR\n+  diagnostic.col = diagnostic.col or 0\n+  diagnostic.end_lnum = diagnostic.end_lnum or diagnostic.lnum\n+  diagnostic.end_col = diagnostic.end_col or diagnostic.col\n+  return diagnostic\n+end\n+\n+local errlist_type_map = {\n+  [M.severity.ERROR] = 'E',\n+  [M.severity.WARN] = 'W',\n+  [M.severity.INFO] = 'I',\n+  [M.severity.HINT] = 'N',\n+}\n+\n+--- Convert a list of diagnostics to a list of quickfix items.\n+---\n+--- The result can be passed to |setqflist()| or |setloclist()|.",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711614380",
            "id": 711614380,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qal-s",
            "original_commit_id": "18c3d136dd027f6ce74e9501870b57d8c49ce925",
            "original_line": 1216,
            "original_position": 132,
            "original_start_line": 1214,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 758077021,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711614380/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-09-18T16:57:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711614380",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711805194"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711805194"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n*vim.lsp.util.diagnostics_to_items()*\tUse |vim.diagnostic.toqflist()| instead.\r\n```",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-19T21:24:46Z",
            "diff_hunk": "@@ -96,6 +96,7 @@ internally and are no longer exposed as part of the API. Instead, use\n \n LSP Utility Functions ~\n \n+*vim.lsp.util.diagnostics_to_items()*\tUse |vim.diagnostic.tolist()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711805194",
            "id": 711805194,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qbUkK",
            "original_commit_id": "ee1c5f694aea9fa2b5142d6e71956f0516f0278c",
            "original_line": 99,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 758187240,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711805194/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-19T21:24:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711805194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15704#discussion_r711805837"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15704"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/711805837"
                }
            },
            "author_association": "MEMBER",
            "body": "Whoops, thanks!",
            "commit_id": "b4418f1ef839c190103a24326da751e0c9d71d4c",
            "created_at": "2021-09-19T21:30:14Z",
            "diff_hunk": "@@ -96,6 +96,7 @@ internally and are no longer exposed as part of the API. Instead, use\n \n LSP Utility Functions ~\n \n+*vim.lsp.util.diagnostics_to_items()*\tUse |vim.diagnostic.tolist()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/15704#discussion_r711805837",
            "id": 711805837,
            "in_reply_to_id": 711805194,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qbUuN",
            "original_commit_id": "ee1c5f694aea9fa2b5142d6e71956f0516f0278c",
            "original_line": 99,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 758187638,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711805837/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-19T21:30:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/711805837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Just need to write a test for `from_errorformat()`.",
            "created_at": "2021-09-18T03:50:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/15704#issuecomment-922173641",
            "id": 922173641,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15704",
            "node_id": "IC_kwDOAPphoM4290DJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/922173641/reactions"
            },
            "updated_at": "2021-09-18T16:42:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/922173641",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "btw, while you're at it, would you mind changing `DiagnosticSignWarning` to `DiagnosticSignWarn`? The correct one is the latter, I got confused why my config wasn't working even though I copied from the docs.\r\nI was going to make a PR but it's just removing 3 letters so I don't think it's worth it lol\r\n\r\nhttps://github.com/neovim/neovim/blob/98a84cf1f80e929979381c748a53db88fab5aa27/runtime/doc/diagnostic.txt#L185",
            "created_at": "2021-09-18T06:37:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/15704#issuecomment-922222384",
            "id": 922222384,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15704",
            "node_id": "IC_kwDOAPphoM429_8w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/922222384/reactions"
            },
            "updated_at": "2021-09-18T06:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/922222384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/51877647?v=4",
                "events_url": "https://api.github.com/users/elianiva/events{/privacy}",
                "followers_url": "https://api.github.com/users/elianiva/followers",
                "following_url": "https://api.github.com/users/elianiva/following{/other_user}",
                "gists_url": "https://api.github.com/users/elianiva/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/elianiva",
                "id": 51877647,
                "login": "elianiva",
                "node_id": "MDQ6VXNlcjUxODc3NjQ3",
                "organizations_url": "https://api.github.com/users/elianiva/orgs",
                "received_events_url": "https://api.github.com/users/elianiva/received_events",
                "repos_url": "https://api.github.com/users/elianiva/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/elianiva/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/elianiva/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/elianiva"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> btw, while you're at it, would you mind changing `DiagnosticSignWarning` to `DiagnosticSignWarn`? The correct one is the latter, I got confused why my config wasn't working even though I copied from the docs.\r\n> I was going to make a PR but it's just removing 3 letters so I don't think it's worth it lol\r\n\r\nGood catch, sorry about that. This one slipped through the cracks.",
            "created_at": "2021-09-18T13:51:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/15704#issuecomment-922279431",
            "id": 922279431,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15704",
            "node_id": "IC_kwDOAPphoM42-N4H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/922279431/reactions"
            },
            "updated_at": "2021-09-18T13:51:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/922279431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15704/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15704/commits",
    "created_at": "2021-09-18T03:50:07Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15704.diff",
    "draft": false,
    "head": {
        "label": "gpanders:diagnostic-additions",
        "ref": "diagnostic-additions",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-08-19T11:43:09Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 276474,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b4418f1ef839c190103a24326da751e0c9d71d4c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15704",
    "id": 736817293,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15704",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e61ea7772e5eab2d0460dae858698f16b0ee8f27",
    "merged_at": "2021-09-19T22:13:23Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM4r6vCN",
    "number": 15704,
    "patch_url": "https://github.com/neovim/neovim/pull/15704.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15704/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b4418f1ef839c190103a24326da751e0c9d71d4c",
    "title": "Diagnostic additions",
    "updated_at": "2024-08-18T02:20:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15704",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}