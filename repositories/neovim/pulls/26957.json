{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26957/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26957/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26957"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26957"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26957/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6f948be19585dada4619d13e119c10c99207160b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5451,
            "forks_count": 5451,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1738,
            "open_issues_count": 1738,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-06-11T01:59:06Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 272256,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 79008,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-06-11T00:39:49Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 79008,
            "watchers_count": 79008,
            "web_commit_signoff_required": false
        },
        "sha": "786089013d33666a2acb5ba86fb34c716a9cab26",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Some LSP backends (`ruby-lsp` in particular here) can return a `nil` response to the `textDocument/diagnostic` method. This is contrary to the LSP spec, but unfortunately it means that neovim doesn't clear previous diagnostics when the `nil` response is received.\r\n\r\nThis PR changes the handling of the diagnostic response to treat a `nil` response the same as an empty `[]` response.\r\n\r\nFixes https://github.com/neovim/neovim/issues/26640",
    "closed_at": "2024-06-07T01:50:55Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1447842247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447842247"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit but I find the `response` redundant.\r\n```suggestion\r\n        \"LSP: client '%s' (id %s) returned nil to textDocument/diagnostic.\\nThis is a bug in the LSP backend, and should be fixed within '%s'.\",\r\n```",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T19:18:34Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then\n+    if result.kind == 'unchanged' then\n+      return\n+    end\n+    diagnostics = result.items\n+  else\n+    local client_name = vim.lsp.get_client_by_id(client_id).name\n+    vim.notify_once(\n+      string.format(\n+        \"LSP: client '%s' (id %s) returned nil response to textDocument/diagnostic.\\nThis is a bug in the LSP backend, and should be fixed within '%s'.\",",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1447842247",
            "id": 1447842247,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WTFHH",
            "original_commit_id": "823cff23af36416a04870dc44b56bcede09501c1",
            "original_line": 311,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1813964918,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447842247/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T19:18:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447842247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1447900246"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447900246"
                }
            },
            "author_association": "MEMBER",
            "body": "Question: So this PR doesn't change any behaviors other than making a warning, right? In the description you say \"this PR *changes* the handling of the diagnostic response to treat a nil response the same as an empty [] response\", but it does not look like the response is like \"no diagnostics\" (i.e. clear the diagnostics).\r\n\r\nWhen `result` is nil, in both before & after this PR the function handler will return immediately without clearing the diagnostics (`vim.diagnostic.set()`); the behavior is just like \"unchanged\" (`UnchangedDocumentDiagnosticReport`).",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T19:57:36Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1447900246",
            "id": 1447900246,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WTTRW",
            "original_commit_id": "8b11e7552085cfa7698a3a742613d7e3f18501d8",
            "original_line": 302,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1814058427,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447900246/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T20:30:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447900246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1447932314"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447932314"
                }
            },
            "author_association": "MEMBER",
            "body": "While adding this ad-hoc warning message is fine in this PR, it should be noted that other handlers might throw errors (e.g. `workspace/applyEdit`) or silently ignore the invalid responses (e.g. `textDocument/definition`). (I'm not asking this should be fixed now) As we do further refactoring, this could be better handled in the common \"boilerplate error validation and logging\" wrapper for the handlers.",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T20:28:31Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then\n+    if result.kind == 'unchanged' then\n+      return\n+    end\n+    diagnostics = result.items\n+  else\n+    local client_name = vim.lsp.get_client_by_id(client_id).name\n+    vim.notify_once(\n+      string.format(\n+        \"LSP: client '%s' (id %s) returned nil to textDocument/diagnostic.\\nThis is a bug in the LSP backend, and should be fixed within '%s'.\",\n+        client_name,\n+        client_id,\n+        client_name\n+      ),\n+      vim.log.levels.WARN\n+    )",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1447932314",
            "id": 1447932314,
            "line": 311,
            "node_id": "PRRC_kwDOAPphoM5WTbGa",
            "original_commit_id": "8b11e7552085cfa7698a3a742613d7e3f18501d8",
            "original_line": 311,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 13,
            "pull_request_review_id": 1814058427,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447932314/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T20:30:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447932314",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1447958606"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447958606"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This PR does change the behaviour.\r\n\r\nWhen result is nil, `diagnostics` (on line 301) will now be an empty table.\r\n\r\nOn line 320 we only exit early if there is no buffer attached for the file.\r\n\r\nOtherwise we will continue down to the end of this function where on line 346 we call `vim.diagnostic.set` with an empty table, which clears the diagnostics.\r\n\r\nI'll add a test for this.",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T20:56:06Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1447958606",
            "id": 1447958606,
            "in_reply_to_id": 1447900246,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WThhO",
            "original_commit_id": "8b11e7552085cfa7698a3a742613d7e3f18501d8",
            "original_line": 302,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1814158947,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447958606/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T20:56:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447958606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1447979880"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447979880"
                }
            },
            "author_association": "MEMBER",
            "body": "I see, thanks for detailed explanation. `#diagnostics == 0` **and** `vim.fn.bufexists(fname) == 0`.\r\n\r\nActually I am not convinced that the handler should behave so (i.e. treat `nil` as if it were an empty diagnostic list), when LSP responds an invalid response `nil`. To me, it feels like an over-correction specific to the behavior of the ruby LSP. Would this be a *common* error or mistake across many LSPs? What if it were meant to be like a \"unchanged\" response by other (buggy) LSP servers? \r\n\r\nAs a *workaround*, an user may override the handler to change the semantics of and behaviors on `nil` to \"empty diagnostics\", in case the LSP server is yet to be fixed and behaves buggy. But I'm not sure this is something the default LSP handler should change for.",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T21:16:04Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1447979880",
            "id": 1447979880,
            "in_reply_to_id": 1447900246,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WTmto",
            "original_commit_id": "8b11e7552085cfa7698a3a742613d7e3f18501d8",
            "original_line": 302,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1814193347,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447979880/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T21:27:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447979880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1447987238"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447987238"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That's an excellent point. It's definitely possible that another possible interpretation of `nil` would be \"unchanged\".\r\n\r\nWhat would it look like for the user to override the handler for a specific lsp to change the semantics for `nil`?",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T21:23:59Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1447987238",
            "id": 1447987238,
            "in_reply_to_id": 1447900246,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WTogm",
            "original_commit_id": "8b11e7552085cfa7698a3a742613d7e3f18501d8",
            "original_line": 302,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1814204907,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447987238/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T21:24:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447987238",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1448006410"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1448006410"
                }
            },
            "author_association": "MEMBER",
            "body": "I've left comment for one example outside this thread.",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-10T21:37:47Z",
            "diff_hunk": "@@ -298,15 +298,25 @@ function M.on_diagnostic(_, result, ctx, config)\n   local uri = ctx.params.textDocument.uri\n   local fname = vim.uri_to_fname(uri)\n \n-  if result == nil then\n-    return\n-  end\n-\n-  if result.kind == 'unchanged' then\n-    return\n+  local diagnostics = {}\n+  if result ~= nil then",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1448006410",
            "id": 1448006410,
            "in_reply_to_id": 1447900246,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WTtMK",
            "original_commit_id": "8b11e7552085cfa7698a3a742613d7e3f18501d8",
            "original_line": 302,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1814229300,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1448006410/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T21:37:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1448006410",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1449607761"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1449607761"
                }
            },
            "author_association": "MEMBER",
            "body": "I would use \"server\" instead of \"backend\", as that's a more common term in LSP lingo. \r\n```suggestion\r\n        \"LSP: client '%s' (id %s) returned nil to textDocument/diagnostic.\\nThis is a bug in the LSP server, and should be fixed within '%s'.\",\r\n```",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-01-12T00:55:11Z",
            "diff_hunk": "@@ -299,6 +299,16 @@ function M.on_diagnostic(_, result, ctx, config)\n   local fname = vim.uri_to_fname(uri)\n \n   if result == nil then\n+    local client_name = vim.lsp.get_client_by_id(client_id).name\n+    vim.notify_once(\n+      string.format(\n+        \"LSP: client '%s' (id %s) returned nil to textDocument/diagnostic.\\nThis is a bug in the LSP backend, and should be fixed within '%s'.\",",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1449607761",
            "id": 1449607761,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WZ0JR",
            "original_commit_id": "274ab66bf2f11181f231d7d7807106c5578593c4",
            "original_line": 305,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1817086114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1449607761/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T00:55:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1449607761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26957#discussion_r1592426689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26957"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1592426689"
                }
            },
            "author_association": "MEMBER",
            "body": "repeating the client name doesn't seem necessary\r\n\r\n```suggestion\r\n        \"LSP: client '%s' (id %s) returned nil to textDocument/diagnostic.\\nThis is a bug in the LSP server.\",\r\n        client_name,\r\n        client_id\r\n```",
            "commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "created_at": "2024-05-07T12:49:05Z",
            "diff_hunk": "@@ -299,6 +299,16 @@ function M.on_diagnostic(_, result, ctx, config)\n   local fname = vim.uri_to_fname(uri)\n \n   if result == nil then\n+    local client_name = vim.lsp.get_client_by_id(client_id).name\n+    vim.notify_once(\n+      string.format(\n+        \"LSP: client '%s' (id %s) returned nil to textDocument/diagnostic.\\nThis is a bug in the LSP server, and should be fixed within '%s'.\",\n+        client_name,\n+        client_id,\n+        client_name",
            "html_url": "https://github.com/neovim/neovim/pull/26957#discussion_r1592426689",
            "id": 1592426689,
            "line": 308,
            "node_id": "PRRC_kwDOAPphoM5e6oDB",
            "original_commit_id": "6f948be19585dada4619d13e119c10c99207160b",
            "original_line": 308,
            "original_position": 10,
            "original_start_line": 305,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 10,
            "pull_request_review_id": 2043092641,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1592426689/reactions"
            },
            "side": "RIGHT",
            "start_line": 305,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-07T12:49:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1592426689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "According to the LSP specification https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_diagnostic, `result` should never be `nil`, but always be a valid `DocumentDiagnosticReport`.\r\n\r\nThe `lsp.on_diagnostic` handler implementation (since its first writing #24128) simply ignores the invalid response by checking if `result` is `nil`, just in case the LSP might respond with an invalid response -- rather than aggressively throwing an error. In my view, we should avoid using such workarounds in general, because it may hide or mask bugs, and makes it harder to figure out the root cause of the problem (i.e. invalid responses that violate the LSP protocol). Instead, we can consider adding some one-time (like `vim.notify_once`) warning messages or even assertions to notify users that this is a fault of LSP server implementation, rather than *silently* accepting invalid responses.",
            "created_at": "2024-01-09T03:19:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1882316504",
            "id": 1882316504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wMd7Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1882316504/reactions"
            },
            "updated_at": "2024-01-09T03:40:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1882316504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just tested this PR out and can confirm that it **fixes** https://github.com/neovim/neovim/issues/26640. But I agree with @wookayin...seems like this is an issue with Ruby LSP.",
            "created_at": "2024-01-09T09:15:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1882678268",
            "id": 1882678268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wN2P8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1882678268/reactions"
            },
            "updated_at": "2024-01-09T09:40:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1882678268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9512444?v=4",
                "events_url": "https://api.github.com/users/olimorris/events{/privacy}",
                "followers_url": "https://api.github.com/users/olimorris/followers",
                "following_url": "https://api.github.com/users/olimorris/following{/other_user}",
                "gists_url": "https://api.github.com/users/olimorris/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/olimorris",
                "id": 9512444,
                "login": "olimorris",
                "node_id": "MDQ6VXNlcjk1MTI0NDQ=",
                "organizations_url": "https://api.github.com/users/olimorris/orgs",
                "received_events_url": "https://api.github.com/users/olimorris/received_events",
                "repos_url": "https://api.github.com/users/olimorris/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/olimorris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/olimorris/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/olimorris"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@wookayin are you suggesting that we still treat a nil response the same as a response with no items, with the addition of a warning to the user that their LSP backend is misbehaving?",
            "created_at": "2024-01-09T14:57:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1883205189",
            "id": 1883205189,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wP25F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883205189/reactions"
            },
            "updated_at": "2024-01-09T14:57:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883205189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I created https://github.com/Shopify/ruby-lsp/pull/1290 to get this fixed in `ruby-lsp`",
            "created_at": "2024-01-09T16:46:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1883408611",
            "id": 1883408611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wQojj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883408611/reactions"
            },
            "updated_at": "2024-01-09T16:46:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883408611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also please check the lintcommit CI output and update the title of PR and commits accordingly.",
            "created_at": "2024-01-10T20:31:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1885676382",
            "id": 1885676382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wZSNe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885676382/reactions"
            },
            "updated_at": "2024-01-10T20:31:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885676382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I’m not in favor of adding workarounds for misbehaving servers, unless there is a *very* compelling reason. \r\n\r\nAs a project we generally adhere to the position that we implement the specification *as-is*. If a server is non-compliant with the specification, it’s up to the server to fix that, not for Neovim to work around. ",
            "created_at": "2024-01-10T21:35:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1885772054",
            "id": 1885772054,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wZpkW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885772054/reactions"
            },
            "updated_at": "2024-01-10T21:35:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885772054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(Moving the comment out of the review thread for better visibility)\r\n\r\n> As a workaround, an user may override the handler to change the semantics of and behaviors on nil to \"empty diagnostics\", in case the LSP server is yet to be fixed and behaves buggy.\\\r\n\r\n> What would it look like for the user to override the handler for a specific lsp to change the semantics for nil?\r\n\r\nAn example is as follows (NOTE: this would be a hack, so please use it with a good discernment):\r\n\r\n```lua\r\n---@param result lsp.DocumentDiagnosticReport\r\nvim.lsp.handlers[\"textDocument/diagnostic\"] = function(err, result, ctx, config)\r\n  if result == nil -- an invalid response, should never be nil (see #26957)\r\n    -- 1. fail early\r\n    -- error(\"invalid textDocument/diagnostic response, result is nil\")\r\n\r\n    -- 2. treat as if an empty response\r\n    result = { kind = \"full\", items = {} } --[[ @as lsp.FullDocumentDiagnosticReport ]]\r\n\r\n    -- 3. or treat as if were an \"unchanged\" response\r\n    -- result = { kind = \"unchanged\", resultId = \"\" } --[[ @as lsp.UnchangedDocumentDiagnosticReport ]]\r\n  end\r\n  return require('vim.lsp.diagnostic').on_diagnostic(err, result, ctx, config)\r\nend\r\n```\r\n\r\n`ctx: lsp.HandlerContext` may contain some information about the LSP client.",
            "created_at": "2024-01-10T21:37:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1885774765",
            "id": 1885774765,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wZqOt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885774765/reactions"
            },
            "updated_at": "2024-01-10T22:14:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885774765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I’m not in favor of adding workarounds for misbehaving servers, unless there is a _very_ compelling reason.\r\n> \r\n> As a project we generally adhere to the position that we implement the specification _as-is_. If a server is non-compliant with the specification, it’s up to the server to fix that, not for Neovim to work around.\r\n\r\nI don't disagree in principle, but I'm also conscious of the user experience here.\r\n\r\nVSCode handles `nil` responses like [this](https://github.com/microsoft/vscode-languageserver-node/blob/main/client/src/common/diagnostic.ts#L604):\r\n\r\n```typescript\r\nif (result === undefined || result === null || this.isDisposed || token.isCancellationRequested) {\r\n  return { kind: vsdiag.DocumentDiagnosticReportKind.full, items: [] };\r\n}\r\n```\r\n\r\nI'm assuming that the majority of LSP backend devs and the majority of devs using the LSP backends are using VSCode. As far as they're concerned, there's no bug here, everything is working fine.",
            "created_at": "2024-01-10T22:02:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1885809792",
            "id": 1885809792,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wZyyA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885809792/reactions"
            },
            "updated_at": "2024-01-10T22:02:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885809792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > I’m not in favor of adding workarounds for misbehaving servers, unless there is a _very_ compelling reason.\r\n> > As a project we generally adhere to the position that we implement the specification _as-is_. If a server is non-compliant with the specification, it’s up to the server to fix that, not for Neovim to work around.\r\n> \r\n> I don't disagree in principle, but I'm also conscious of the user experience here.\r\n> \r\n> VSCode handles `nil` responses like [this](https://github.com/microsoft/vscode-languageserver-node/blob/main/client/src/common/diagnostic.ts#L604):\r\n> \r\n> ```ts\r\n> if (result === undefined || result === null || this.isDisposed || token.isCancellationRequested) {\r\n>   return { kind: vsdiag.DocumentDiagnosticReportKind.full, items: [] };\r\n> }\r\n> ```\r\n> \r\n> I'm assuming that the majority of LSP backend devs and the majority of devs using the LSP backends are using VSCode. As far as they're concerned, there's no bug here, everything is working fine.\r\n\r\nEchoing @gpanders and @wookayin, \"VSCode does X\" isn't a valid reason for us to replicate a hack. We should stick to the protocol as much as possible, and to resolve ambiguities like this we should create an issue in [the specs](https://github.com/microsoft/language-server-protocol) asking for clarification on how the client should behave with invalid responses like this.",
            "created_at": "2024-01-10T22:07:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1885815581",
            "id": 1885815581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wZ0Md",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885815581/reactions"
            },
            "updated_at": "2024-01-10T22:11:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1885815581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As others have already stated, we currently have a policy of no workarounds for servers that violate the spec and I don't see a reason to change that. If we'd relax that, we also make it harder for other editors and at some point the specification becomes less and less useful as each editor and server starts doing what they like and build up workarounds for each others quirks.\r\n\r\nWhat I'd be okay with merging is an assert like `assert(response, \"Server must return error or response, not nil\")`. ",
            "created_at": "2024-01-11T09:55:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1886751866",
            "id": 1886751866,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wdYx6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1886751866/reactions"
            },
            "updated_at": "2024-01-11T09:55:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1886751866",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> As others have already stated, we currently have a policy of no workarounds for servers that violate the spec and I don't see a reason to change that. If we'd relax that, we also make it harder for other editors and at some point the specification becomes less and less useful as each editor and server starts doing what they like and build up workarounds for each others quirks.\r\n\r\nOk, fair enough. I don't agree that this is the best thing for users in the short term, but understand why you want to keep to the spec.\r\n\r\n> What I'd be okay with merging is an assert like `assert(response, \"Server must return error or response, not nil\")`.\r\n\r\nI think the earlier suggestion of `notify_once` is more appropriate here, otherwise the user is spammed with error messages with a traceback every time the backend responds with `nil`.\r\n\r\n",
            "created_at": "2024-01-11T14:34:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1887317301",
            "id": 1887317301,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wfi01",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1887317301/reactions"
            },
            "updated_at": "2024-01-11T14:34:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1887317301",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not blocking for this PR, but I created https://github.com/microsoft/language-server-protocol/issues/1882 to make sure all LSP editors have a consistent behaviour around this. ",
            "created_at": "2024-01-13T03:32:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-1890280432",
            "id": 1890280432,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM5wq2Pw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890280432/reactions"
            },
            "updated_at": "2024-01-13T03:32:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890280432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This has been closed since a request for information has not been answered for 30 days. It can be reopened when the requested information is provided.",
            "created_at": "2024-06-07T01:50:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26957#issuecomment-2153710665",
            "id": 2153710665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
            "node_id": "IC_kwDOAPphoM6AXwRJ",
            "performed_via_github_app": {
                "created_at": "2018-07-30T09:30:17Z",
                "description": "Automate your workflow from idea to production",
                "events": [
                    "branch_protection_rule",
                    "check_run",
                    "check_suite",
                    "create",
                    "delete",
                    "deployment",
                    "deployment_status",
                    "discussion",
                    "discussion_comment",
                    "fork",
                    "gollum",
                    "issues",
                    "issue_comment",
                    "label",
                    "merge_group",
                    "milestone",
                    "page_build",
                    "project",
                    "project_card",
                    "project_column",
                    "public",
                    "pull_request",
                    "pull_request_review",
                    "pull_request_review_comment",
                    "push",
                    "registry_package",
                    "release",
                    "repository",
                    "repository_dispatch",
                    "status",
                    "watch",
                    "workflow_dispatch",
                    "workflow_run"
                ],
                "external_url": "https://help.github.com/en/actions",
                "html_url": "https://github.com/apps/github-actions",
                "id": 15368,
                "name": "GitHub Actions",
                "node_id": "MDM6QXBwMTUzNjg=",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                    "events_url": "https://api.github.com/users/github/events{/privacy}",
                    "followers_url": "https://api.github.com/users/github/followers",
                    "following_url": "https://api.github.com/users/github/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/github",
                    "id": 9919,
                    "login": "github",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                    "organizations_url": "https://api.github.com/users/github/orgs",
                    "received_events_url": "https://api.github.com/users/github/received_events",
                    "repos_url": "https://api.github.com/users/github/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/github"
                },
                "permissions": {
                    "actions": "write",
                    "administration": "read",
                    "attestations": "write",
                    "checks": "write",
                    "contents": "write",
                    "deployments": "write",
                    "discussions": "write",
                    "issues": "write",
                    "merge_queues": "write",
                    "metadata": "read",
                    "packages": "write",
                    "pages": "write",
                    "pull_requests": "write",
                    "repository_hooks": "write",
                    "repository_projects": "write",
                    "security_events": "write",
                    "statuses": "write",
                    "vulnerability_alerts": "read"
                },
                "slug": "github-actions",
                "updated_at": "2024-04-10T20:33:16Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2153710665/reactions"
            },
            "updated_at": "2024-06-07T01:50:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2153710665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/github-actions",
                "id": 41898282,
                "login": "github-actions[bot]",
                "node_id": "MDM6Qm90NDE4OTgyODI=",
                "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/github-actions%5Bbot%5D"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26957/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26957/commits",
    "created_at": "2024-01-09T02:37:36Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26957.diff",
    "draft": false,
    "head": {
        "label": "catlee:catlee/lsp_nil_response",
        "ref": "catlee/lsp_nil_response",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/catlee/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/catlee/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/catlee/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/catlee/neovim/branches{/branch}",
            "clone_url": "https://github.com/catlee/neovim.git",
            "collaborators_url": "https://api.github.com/repos/catlee/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/catlee/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/catlee/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/catlee/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/catlee/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/catlee/neovim/contributors",
            "created_at": "2018-04-24T00:20:13Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/catlee/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/catlee/neovim/downloads",
            "events_url": "https://api.github.com/repos/catlee/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/catlee/neovim/forks",
            "full_name": "catlee/neovim",
            "git_commits_url": "https://api.github.com/repos/catlee/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/catlee/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/catlee/neovim/git/tags{/sha}",
            "git_url": "git://github.com/catlee/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/catlee/neovim/hooks",
            "html_url": "https://github.com/catlee/neovim",
            "id": 130772562,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/catlee/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/catlee/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/catlee/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/catlee/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/catlee/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/catlee/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/catlee/neovim/merges",
            "milestones_url": "https://api.github.com/repos/catlee/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMzA3NzI1NjI=",
            "notifications_url": "https://api.github.com/repos/catlee/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/catlee/neovim/pulls{/number}",
            "pushed_at": "2024-01-13T03:12:17Z",
            "releases_url": "https://api.github.com/repos/catlee/neovim/releases{/id}",
            "size": 244021,
            "ssh_url": "git@github.com:catlee/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/catlee/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/catlee/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/catlee/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/catlee/neovim/subscription",
            "svn_url": "https://github.com/catlee/neovim",
            "tags_url": "https://api.github.com/repos/catlee/neovim/tags",
            "teams_url": "https://api.github.com/repos/catlee/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/catlee/neovim/git/trees{/sha}",
            "updated_at": "2023-06-23T02:21:01Z",
            "url": "https://api.github.com/repos/catlee/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6f948be19585dada4619d13e119c10c99207160b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
            "events_url": "https://api.github.com/users/catlee/events{/privacy}",
            "followers_url": "https://api.github.com/users/catlee/followers",
            "following_url": "https://api.github.com/users/catlee/following{/other_user}",
            "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/catlee",
            "id": 54458,
            "login": "catlee",
            "node_id": "MDQ6VXNlcjU0NDU4",
            "organizations_url": "https://api.github.com/users/catlee/orgs",
            "received_events_url": "https://api.github.com/users/catlee/received_events",
            "repos_url": "https://api.github.com/users/catlee/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/catlee"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26957",
    "id": 1669891594,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26957",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3cc9215a112fec06945e7b374f1c1cb5f2c92ac5",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5jiIYK",
    "number": 26957,
    "patch_url": "https://github.com/neovim/neovim/pull/26957.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26957/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6f948be19585dada4619d13e119c10c99207160b",
    "title": "Handle nil response from backend for diagnostics",
    "updated_at": "2024-06-07T01:50:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26957",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
        "events_url": "https://api.github.com/users/catlee/events{/privacy}",
        "followers_url": "https://api.github.com/users/catlee/followers",
        "following_url": "https://api.github.com/users/catlee/following{/other_user}",
        "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/catlee",
        "id": 54458,
        "login": "catlee",
        "node_id": "MDQ6VXNlcjU0NDU4",
        "organizations_url": "https://api.github.com/users/catlee/orgs",
        "received_events_url": "https://api.github.com/users/catlee/received_events",
        "repos_url": "https://api.github.com/users/catlee/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/catlee"
    }
}