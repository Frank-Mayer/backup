{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/18674/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18674/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/18674"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/18674"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18674/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b94b10d0ce8c07633c74e940b241e602ad07a163"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5766,
            "forks_count": 5766,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1818,
            "open_issues_count": 1818,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-12-23T21:39:36Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 300480,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 84495,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-12-24T02:11:47Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 84495,
            "watchers_count": 84495,
            "web_commit_signoff_required": false
        },
        "sha": "ff1266aaaaba80f86ab9624eea8939d644d7e730",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "## Description\r\n\r\nMake use of [CTest](https://cmake.org/cmake/help/latest/manual/ctest.1.html) to streamline running busted tests\\tasks\r\n\r\n### Features\r\n\r\n- add `busted_discover_tests` which enables running _each_ test in an isolated environment, with a nice short-hand\r\n  ```console\r\n  TEST_FILE=test/functional/api/autocmd_spec.lua TEST_FILTER='removes.an.autocommand' cmake --build build --target functionaltest\r\n  # vs\r\n  ctest --test-dir build -R 'removes.an.autocommand'\r\n  ```\r\n- add the ability to run tests by [labels](https://github.com/kylo252/neovim/blob/978649c15ea3269fa8d60bdfd69b31c77eac8df8/.github/workflows/ci.yml#L268-L280)\r\n\r\n#### Additional improvements\r\n\r\n- use the configuration file [.busted](https://github.com/Olivine-Labs/busted/blob/0fc1f4faedcfee287fb925fec78ef88488a2df3a/spec/.hidden/.busted) to set common flags needed to be passed to `busted` on every run\r\n- create a single `test/preload.lua` that can detect which specific helper to load using based on args passed to `-Xhelper`\r\n\r\n### How to use\r\n\r\n- run all the tests\r\n  ```sh\r\n  ctest --test-dir build --progress\r\n  # or\r\n  cmake --build build --target test\r\n  # or\r\n  ninja -C build test\r\n  ```\r\n- list all available labels\r\n  ```sh\r\n  ctest --test-dir build --print-labels\r\n  ```\r\n- list all available tests\r\n  ```sh\r\n  ctest --test-dir build --list\r\n  ```\r\n- run tests by label `-L or --label-regex`, see all available [flags](https://cmake.org/cmake/help/latest/manual/ctest.1.html#options)\r\n  ```sh\r\n  ctest --test-dir build -L 'api_spec'\r\n  ```\r\n\r\n\r\n",
    "closed_at": "2024-12-17T14:10:22Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r878880448"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/878880448"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Adding another layer isn't a desirable way to do that.\r\n\r\n@justinmk, until we agree on that, what do you think of re-write parts of `RunTest.cmake` to work with this then? ",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-05-22T14:50:56Z",
            "diff_hunk": "@@ -20,12 +20,16 @@ if(NVIM_PRG)\n   set(ENV{NVIM_PRG} \"${NVIM_PRG}\")\n endif()\n \n-if(DEFINED ENV{TEST_FILE})\n+if(TEST_PATH)\n+  set(TEST_PATH \"${TEST_PATH}\")\n+elseif(DEFINED ENV{TEST_FILE})",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r878880448",
            "id": 878880448,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40YqbA",
            "original_commit_id": "26d4fa65bac5f0e3cfdc81f58851ef1e7b22411c",
            "original_line": 25,
            "original_position": 7,
            "original_start_line": 23,
            "path": "cmake/RunTests.cmake",
            "position": null,
            "pull_request_review_id": 980978287,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/878880448/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-05-22T14:50:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/878880448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r878880904"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/878880904"
                }
            },
            "author_association": "MEMBER",
            "body": "if the rewrite leads to something useful then we want that :) If it leads to churn without a purpose then I want to save you time by cautioning against that.\r\n\r\nI'd suggest making small changes that can be reviewed, that actually have a functional purpose. If lots of code is moved and it's hard to review, we won't get anywhere, unless we are really gaining something clearly useful. (p.s. \"Less code\" or clearly better structure, are clearly useful. I haven't seen that in the previous PRs though)",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-05-22T14:53:56Z",
            "diff_hunk": "@@ -20,12 +20,16 @@ if(NVIM_PRG)\n   set(ENV{NVIM_PRG} \"${NVIM_PRG}\")\n endif()\n \n-if(DEFINED ENV{TEST_FILE})\n+if(TEST_PATH)\n+  set(TEST_PATH \"${TEST_PATH}\")\n+elseif(DEFINED ENV{TEST_FILE})",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r878880904",
            "id": 878880904,
            "in_reply_to_id": 878880448,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40YqiI",
            "original_commit_id": "26d4fa65bac5f0e3cfdc81f58851ef1e7b22411c",
            "original_line": 25,
            "original_position": 7,
            "original_start_line": 23,
            "path": "cmake/RunTests.cmake",
            "position": null,
            "pull_request_review_id": 980978659,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/878880904/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-05-22T14:55:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/878880904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r878882229"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/878882229"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "as this is still a very rough draft, and since you don't seem that convinced, I'll leave it open for a while.",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-05-22T15:03:39Z",
            "diff_hunk": "@@ -20,12 +20,16 @@ if(NVIM_PRG)\n   set(ENV{NVIM_PRG} \"${NVIM_PRG}\")\n endif()\n \n-if(DEFINED ENV{TEST_FILE})\n+if(TEST_PATH)\n+  set(TEST_PATH \"${TEST_PATH}\")\n+elseif(DEFINED ENV{TEST_FILE})",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r878882229",
            "id": 878882229,
            "in_reply_to_id": 878880448,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40Yq21",
            "original_commit_id": "26d4fa65bac5f0e3cfdc81f58851ef1e7b22411c",
            "original_line": 25,
            "original_position": 7,
            "original_start_line": 23,
            "path": "cmake/RunTests.cmake",
            "position": null,
            "pull_request_review_id": 980979732,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/878882229/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-05-22T15:03:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/878882229",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r879575061"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/879575061"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Shouldn't you just depend on the `unittest-prereqs` target here? And in that case the three local variables `[UNITTEST|FUNCTIONALTEST|BENCHMARK]_PREREQS` are not actually needed, the lists of prereqs can be inlined in the `add_custom_target` calls.",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-05-23T15:12:41Z",
            "diff_hunk": "@@ -0,0 +1,149 @@\n+add_subdirectory(includes)\n+\n+get_property(\n+  TEST_INCLUDE_DIRS DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n+  PROPERTY INCLUDE_DIRECTORIES\n+)\n+\n+# When running tests from 'ninja' we need to use the\n+# console pool: to do so we need to use the USES_TERMINAL\n+# option, but this is only available in CMake 3.2\n+set(TEST_TARGET_ARGS)\n+list(APPEND TEST_TARGET_ARGS \"USES_TERMINAL\")\n+\n+set(UNITTEST_PREREQS nvim nvim-test unittest-headers)\n+set(FUNCTIONALTEST_PREREQS nvim printenv-test printargs-test shell-test streams-test tty-test ${GENERATED_HELP_TAGS})\n+set(BENCHMARK_PREREQS nvim tty-test)\n+\n+# Useful for automated build systems, if they want to manually run the tests.\n+add_custom_target(\n+  unittest-prereqs\n+  DEPENDS ${UNITTEST_PREREQS}\n+)\n+set_target_properties(unittest-prereqs PROPERTIES FOLDER test)\n+\n+add_custom_target(\n+  functionaltest-prereqs\n+  DEPENDS ${FUNCTIONALTEST_PREREQS}\n+)\n+\n+add_custom_target(\n+  benchmark-prereqs\n+  DEPENDS ${BENCHMARK_PREREQS}\n+)\n+\n+check_lua_module(${LUA_PRG} \"ffi\" LUA_HAS_FFI)\n+if(LUA_HAS_FFI)\n+  add_custom_target(\n+    unittest\n+    COMMAND ${CMAKE_COMMAND}\n+    -DBUSTED_PRG=${BUSTED_PRG}\n+    -DLUA_PRG=${LUA_PRG}\n+    -DWORKING_DIR=${CMAKE_CURRENT_SOURCE_DIR}\n+    -DBUSTED_OUTPUT_TYPE=${BUSTED_OUTPUT_TYPE}\n+    -DTEST_DIR=${CMAKE_CURRENT_SOURCE_DIR}/test\n+    -DBUILD_DIR=${CMAKE_BINARY_DIR}\n+    -DTEST_TYPE=unit\n+    -P ${PROJECT_SOURCE_DIR}/cmake/RunTests.cmake\n+    DEPENDS ${UNITTEST_PREREQS}",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r879575061",
            "id": 879575061,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40bUAV",
            "original_commit_id": "26d4fa65bac5f0e3cfdc81f58851ef1e7b22411c",
            "original_line": 48,
            "original_position": 48,
            "original_start_line": null,
            "path": "test/CMakeLists.txt",
            "position": null,
            "pull_request_review_id": 981943194,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/879575061/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-23T15:13:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/879575061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5308024?v=4",
                "events_url": "https://api.github.com/users/andmis/events{/privacy}",
                "followers_url": "https://api.github.com/users/andmis/followers",
                "following_url": "https://api.github.com/users/andmis/following{/other_user}",
                "gists_url": "https://api.github.com/users/andmis/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/andmis",
                "id": 5308024,
                "login": "andmis",
                "node_id": "MDQ6VXNlcjUzMDgwMjQ=",
                "organizations_url": "https://api.github.com/users/andmis/orgs",
                "received_events_url": "https://api.github.com/users/andmis/received_events",
                "repos_url": "https://api.github.com/users/andmis/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/andmis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/andmis/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/andmis",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r901140432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/901140432"
                }
            },
            "author_association": "MEMBER",
            "body": "we aren't using threads in the test runner",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-19T18:09:29Z",
            "diff_hunk": "@@ -0,0 +1,88 @@\n+-- Modules loaded here will not be cleared and reloaded by Busted.\n+-- See #2082, Olivine-Labs/busted#62 and Olivine-Labs/busted#643\n+\n+local test_type\n+\n+for _, value in pairs(_G.arg) do\n+  if value:match('IS_FUNCTIONAL_TEST') then\n+    test_type = 'functional'\n+  elseif value:match('IS_UNIT_TEST') then\n+    test_type = 'unit'\n+  elseif value:match('IS_BENCHMARK_TEST') then\n+    test_type = 'benchmark'\n+  end\n+end\n+\n+local luv = require('luv')\n+-- NOTE: os_setenv() isn't thread-safe according to luv's docs",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r901140432",
            "id": 901140432,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM41tk_Q",
            "original_commit_id": "4b463ce029a3be5bc1139d542776de6e157b700b",
            "original_line": 17,
            "original_position": 17,
            "original_start_line": null,
            "path": "test/preload.lua",
            "position": null,
            "pull_request_review_id": 1011554349,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/901140432/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-19T18:09:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/901140432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906704988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906704988"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this file required for this PR? ",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-25T17:15:49Z",
            "diff_hunk": "@@ -0,0 +1,37 @@\n+-- vim: ft=lua tw=80 sw=2 ts=2\n+\n+return {\n+  _all = {\n+    helper = 'test/preload.lua',\n+    lpath = 'build/?.lua;runtime/lua/?.lua;./?.lua',\n+    output = 'test.busted.outputHandlers.nvim',\n+    Xhelper = { 'IS_FUNCTIONAL_TEST' },\n+  },\n+  ---\n+  functional = { ROOT = { 'test/functional' } },\n+  ----\n+  api = { ROOT = { 'test/functional/api' } },\n+  autocmd = { ROOT = { 'test/functional/autocmd' } },\n+  core = { ROOT = { 'test/functional/core' } },\n+  editor = { ROOT = { 'test/functional/editor' } },\n+  exCmds = { ROOT = { 'test/functional/ex_cmds' } },\n+  lua = { ROOT = { 'test/functional/lua' } },\n+  options = { ROOT = { 'test/functional/options' } },\n+  plugin = { ROOT = { 'test/functional/plugin' } },\n+  provider = { ROOT = { 'test/functional/provider' } },\n+  shada = { ROOT = { 'test/functional/shada' } },\n+  terminal = { ROOT = { 'test/functional/terminal' } },\n+  treesitter = { ROOT = { 'test/functional/treesitter' } },\n+  ui = { ROOT = { 'test/functional/ui' } },\n+  vimscript = { ROOT = { 'test/functional/vimscript' } },\n+  ---\n+  unit = {\n+    ROOT = { 'test/unit' },\n+    Xhelper = { 'IS_UNIT_TEST' },\n+  },\n+  ---\n+  benchmark = {\n+    ROOT = { 'test/benchmark' },\n+    Xhelper = { 'IS_BENCHMARK_TEST' },\n+  },\n+}",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906704988",
            "id": 906704988,
            "line": 37,
            "node_id": "PRRC_kwDOAPphoM42Czhc",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 37,
            "original_position": 37,
            "original_start_line": null,
            "path": ".busted",
            "position": 37,
            "pull_request_review_id": 1019336222,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906704988/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-25T17:20:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906704988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906705141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705141"
                }
            },
            "author_association": "MEMBER",
            "body": "Why are we fiddling with threads? What evidence is there that the test runner is CPU-bound (not IO-bound)? How much faster is the test run with parallel invocation?",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-25T17:17:07Z",
            "diff_hunk": "@@ -260,6 +260,28 @@ jobs:\n         name: Install nvim\n         run: ./ci/run_tests.sh install_nvim\n \n+      - if: matrix.flavor != 'tsan' && matrix.flavor != 'functionaltest-lua' && !cancelled()\n+        name: Generate test-runners\n+        run: |\n+          cmake --build $GITHUB_WORKSPACE/build --target generate-test-runners\n+\n+\n+      # macOS runners have 3 threads",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906705141",
            "id": 906705141,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM42Czj1",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 266,
            "original_position": 10,
            "original_start_line": null,
            "path": ".github/workflows/ci.yml",
            "position": 10,
            "pull_request_review_id": 1019336222,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-25T17:20:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906705168"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705168"
                }
            },
            "author_association": "MEMBER",
            "body": "should this go in `build/` (maybe `build/test/` or something)?",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-25T17:17:38Z",
            "diff_hunk": "@@ -73,3 +73,6 @@ tags\n \n # vim patches\n /vim-*.patch\n+\n+# ctest artifcats\n+Testing",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906705168",
            "id": 906705168,
            "line": 78,
            "node_id": "PRRC_kwDOAPphoM42CzkQ",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 78,
            "original_position": 6,
            "original_start_line": null,
            "path": ".gitignore",
            "position": 6,
            "pull_request_review_id": 1019336222,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705168/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-25T17:20:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906705351"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705351"
                }
            },
            "author_association": "MEMBER",
            "body": "if this is needed, should be a separate PR",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-25T17:19:18Z",
            "diff_hunk": "@@ -462,6 +462,10 @@ function module.new_argv(...)\n         'NVIM_RPLUGIN_MANIFEST',\n         'GCOV_ERROR_FILE',\n         'XDG_DATA_DIRS',\n+        'XDG_CONFIG_HOME',\n+        'XDG_DATA_HOME',\n+        'XDG_STATE_HOME',\n+        'XDG_CACHE_HOME',",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906705351",
            "id": 906705351,
            "line": 480,
            "node_id": "PRRC_kwDOAPphoM42CznH",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 480,
            "original_position": 7,
            "original_start_line": null,
            "path": "test/functional/helpers.lua",
            "position": 7,
            "pull_request_review_id": 1019336222,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705351/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-25T17:20:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906705351",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906810209"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906810209"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's a bit tricky to say one or another, so I'll try to summarize a list of pros and cons\r\n\r\n### pros\r\n- debugging: since you need very few, or no arguments at all, to run tests `busted path/to/test`\r\n- ergonomics(1): no need create a [custom argparse](https://github.com//neovim/neovim/blob/b7084fef4c850d0352488b14dcff0f36a7e75e1c/cmake/RunTests.cmake#L35-L40) that determines what is safe to override (`--output`) and what isn't (`--lpath`)\r\n- ergonomics(2): no need to [expose environment variables](https://github.com//neovim/neovim/blob/b7084fef4c850d0352488b14dcff0f36a7e75e1c/cmake/RunTests.cmake#L42-L52) either instead of the aforementioned argparse\r\n\r\n### cons\r\n- it may seem that running tests directly with busted works otob, you still need to set some environment variables (this used to be a lot more involved before I've delegated a lot of these responsibilities to [`preload.lua`](https://github.com//kylo252/neovim/blob/cbdd5a9662da6c061755682e58d18416e204c946/test/preload.lua#L136-L166))\r\n- bloat(?): always a consideration when adding yet another file to the repo, although it can actually go under `./test`\r\n",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-26T12:49:25Z",
            "diff_hunk": "@@ -0,0 +1,37 @@\n+-- vim: ft=lua tw=80 sw=2 ts=2\n+\n+return {\n+  _all = {\n+    helper = 'test/preload.lua',\n+    lpath = 'build/?.lua;runtime/lua/?.lua;./?.lua',\n+    output = 'test.busted.outputHandlers.nvim',\n+    Xhelper = { 'IS_FUNCTIONAL_TEST' },\n+  },\n+  ---\n+  functional = { ROOT = { 'test/functional' } },\n+  ----\n+  api = { ROOT = { 'test/functional/api' } },\n+  autocmd = { ROOT = { 'test/functional/autocmd' } },\n+  core = { ROOT = { 'test/functional/core' } },\n+  editor = { ROOT = { 'test/functional/editor' } },\n+  exCmds = { ROOT = { 'test/functional/ex_cmds' } },\n+  lua = { ROOT = { 'test/functional/lua' } },\n+  options = { ROOT = { 'test/functional/options' } },\n+  plugin = { ROOT = { 'test/functional/plugin' } },\n+  provider = { ROOT = { 'test/functional/provider' } },\n+  shada = { ROOT = { 'test/functional/shada' } },\n+  terminal = { ROOT = { 'test/functional/terminal' } },\n+  treesitter = { ROOT = { 'test/functional/treesitter' } },\n+  ui = { ROOT = { 'test/functional/ui' } },\n+  vimscript = { ROOT = { 'test/functional/vimscript' } },\n+  ---\n+  unit = {\n+    ROOT = { 'test/unit' },\n+    Xhelper = { 'IS_UNIT_TEST' },\n+  },\n+  ---\n+  benchmark = {\n+    ROOT = { 'test/benchmark' },\n+    Xhelper = { 'IS_BENCHMARK_TEST' },\n+  },\n+}",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906810209",
            "id": 906810209,
            "in_reply_to_id": 906704988,
            "line": 37,
            "node_id": "PRRC_kwDOAPphoM42DNNh",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 37,
            "original_position": 37,
            "original_start_line": null,
            "path": ".busted",
            "position": 37,
            "pull_request_review_id": 1019420050,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906810209/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-26T12:49:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906810209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906829488"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906829488"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "on the CI, this is a bit harder to gauge, but here are the stats on my machine\r\n\r\n<table>\r\n<tr>\r\n\t<td>cmd\r\n\t<td>time\r\n<tr>\r\n\t<td>TEST_FILE=test/functional/api cmake --build build --target functionaltest\r\n\t<td> 11s\r\n<tr>\r\n\t<td>ctest --test-dir build -L 'spec' --repeat until-pass:3 -j8 --progress\r\n\t<td>8.75s\r\n<tr>\r\n\t<td>ctest --test-dir build -L 'spec' --repeat until-pass:3 -j16 --progress\r\n\t<td>5.85s\r\n</table>",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-26T14:45:14Z",
            "diff_hunk": "@@ -260,6 +260,28 @@ jobs:\n         name: Install nvim\n         run: ./ci/run_tests.sh install_nvim\n \n+      - if: matrix.flavor != 'tsan' && matrix.flavor != 'functionaltest-lua' && !cancelled()\n+        name: Generate test-runners\n+        run: |\n+          cmake --build $GITHUB_WORKSPACE/build --target generate-test-runners\n+\n+\n+      # macOS runners have 3 threads",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906829488",
            "id": 906829488,
            "in_reply_to_id": 906705141,
            "line": 266,
            "node_id": "PRRC_kwDOAPphoM42DR6w",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 266,
            "original_position": 10,
            "original_start_line": null,
            "path": ".github/workflows/ci.yml",
            "position": 10,
            "pull_request_review_id": 1019443397,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906829488/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-26T14:45:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906829488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18674#discussion_r906829680"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18674"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/906829680"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm not sure I can control where this folder is created, but I can look it up to see if there's a way around it.\r\n\r\nprobably related: https://gitlab.kitware.com/cmake/cmake/-/issues/18156",
            "commit_id": "b94b10d0ce8c07633c74e940b241e602ad07a163",
            "created_at": "2022-06-26T14:46:32Z",
            "diff_hunk": "@@ -73,3 +73,6 @@ tags\n \n # vim patches\n /vim-*.patch\n+\n+# ctest artifcats\n+Testing",
            "html_url": "https://github.com/neovim/neovim/pull/18674#discussion_r906829680",
            "id": 906829680,
            "in_reply_to_id": 906705168,
            "line": 78,
            "node_id": "PRRC_kwDOAPphoM42DR9w",
            "original_commit_id": "cbdd5a9662da6c061755682e58d18416e204c946",
            "original_line": 78,
            "original_position": 6,
            "original_start_line": null,
            "path": ".gitignore",
            "position": 6,
            "pull_request_review_id": 1019443567,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906829680/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-06-26T14:46:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/906829680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> Using the configuration file [.busted](../.busted) from #17090 will simplify the process, by reducing the number of arguments needed to be passed to `busted` on every run\r\n\r\nDevelopers don't (shouldn't, usually) run `busted` directly, so that is not relevant. ",
            "created_at": "2022-05-22T13:12:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/18674#issuecomment-1133893882",
            "id": 1133893882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
            "node_id": "IC_kwDOAPphoM5Dldj6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133893882/reactions"
            },
            "updated_at": "2022-05-22T13:12:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133893882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Developers don't (shouldn't, usually) run `busted` directly, so that is not relevant.\r\n\r\nthe main reason I care about this config file is test-suit capability, the way I see it:\r\n- developers should be able to run incremental testing without too much fiddling -> \"run all api tests\"\r\n- it would be nice if the CI can selectively turn off test-fixtures without hard-coding `pending` every where, e.g. https://github.com/neovim/neovim/pull/18515",
            "created_at": "2022-05-22T13:22:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/18674#issuecomment-1133895626",
            "id": 1133895626,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
            "node_id": "IC_kwDOAPphoM5Dld_K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133895626/reactions"
            },
            "updated_at": "2022-05-22T13:22:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133895626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> developers should be able to run incremental testing without too much fiddling -> \"run all api tests\"\r\n\r\nThat is already possible via TEST_FILTER and friends.\r\n\r\n> it would be nice if the CI can selectively turn off test-fixtures without hard-coding pending every where\r\n\r\nAdding another layer isn't a desirable way to do that.",
            "created_at": "2022-05-22T13:27:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/18674#issuecomment-1133896573",
            "id": 1133896573,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
            "node_id": "IC_kwDOAPphoM5DleN9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133896573/reactions"
            },
            "updated_at": "2022-05-22T13:27:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133896573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The idea is to consolidate (or replace) [cmake/RunTests.cmake](https://github.com/neovim/neovim/cmake/RunTests.cmake) with a proper wrapper to streamline running tests.\r\n\r\nWhat is a concrete example of how it would be better streamlined? Would GHA be able to parse the tests automatically (that would be a clear gain)? Does it help set the stage for parallel tests? Does it give us a _net reduction_ in code? Is it better supported by test plugins?",
            "created_at": "2022-05-22T15:51:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/18674#issuecomment-1133924322",
            "id": 1133924322,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
            "node_id": "IC_kwDOAPphoM5Dlk_i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133924322/reactions"
            },
            "updated_at": "2022-05-22T15:52:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133924322",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > The idea is to consolidate (or replace) [cmake/RunTests.cmake](https://github.com/neovim/neovim/cmake/RunTests.cmake) with a proper wrapper to streamline running tests.\r\n> \r\n> What is a concrete example of how it would be better streamlined? \r\n\r\nthere would be a single way to run and evaluate tests, see [PASS_REGULAR_EXPRESSION](https://cmake.org/cmake/help/v3.9/prop_test/PASS_REGULAR_EXPRESSION.html)\r\n\r\nno more \r\nhttps://github.com/neovim/neovim/blob/e7b3fd8ad603ba064ce9457a8866430c436c3737/ci/common/suite.sh#L8-L18\r\n\r\nor\r\n\r\nhttps://github.com/neovim/neovim/blob/e7b3fd8ad603ba064ce9457a8866430c436c3737/ci/build.ps1#L106-L108\r\n\r\n> Would GHA be able to parse the tests automatically (that would be a clear gain)? \r\n\r\nbusted should be able to do this natively, I talked to @dundargoc about this, I'm not sure why it's not configured as such. so we need to configure either of them to use JUnit as output, and then hook them up to one of the many available parsers, e.g. https://github.com/mikepenz/action-junit-report or https://github.com/EnricoMi/publish-unit-test-result-action\r\n\r\nIt also has a `ctest_memcheck()` command, although not sure how useful it is, but apparently it can dump the results in an xml format, ref: https://cmake.org/cmake/help/v3.9/command/ctest_memcheck.html#command:ctest_memcheck\r\n\r\n> Does it help set the stage for parallel tests? \r\n\r\nyup, this is one of the clear benefits of CTest, ref: https://cmake.org/cmake/help/v3.9/manual/ctest.1.html#options\r\n\r\n> Does it give us a _net reduction_ in code? \r\n\r\nthat's a tricky one to answer, it shouldn't be more than a single CMake module/file\r\n\r\n> Is it better supported by test plugins?\r\n\r\nnot sure what you mean by plugins, but they have a big integration with something called [CDash](https://github.com/Kitware/CDash) if you find that useful, some examples I found:\r\n- https://my.cdash.org/index.php?project=libevent\r\n- https://my.cdash.org/index.php?project=libarchive\r\n- https://my.cdash.org/index.php?project=jsoncpp",
            "created_at": "2022-05-22T16:42:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/18674#issuecomment-1133932505",
            "id": 1133932505,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
            "node_id": "IC_kwDOAPphoM5Dlm_Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133932505/reactions"
            },
            "updated_at": "2022-05-22T16:42:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1133932505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "### Status\r\n\r\n- it seems that the current test failures are related to environment isolation,  probably `$XDG_STATE_HOME`, rather than CTest itself, see https://github.com/neovim/neovim/runs/6988757128?check_suite_focus=true#step:17:3982\r\n- running individual tests (collected by `busted_discover_tests`) has a noticeable slowdown when running below `-j4` \r\n\t- only enable this mode for a single job, since the CI doesn't have enough threads\r\n\t- make it clear for devs that they need to either pass `-j` or set `$CTEST_PARALLEL_LEVEL`\r\n\t- add test-suites which runs multiple tests serially but we run the suites themselves in parallel, the speed up is about 200-300%",
            "created_at": "2022-06-22T09:59:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/18674#issuecomment-1162898062",
            "id": 1162898062,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
            "node_id": "IC_kwDOAPphoM5FUGqO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1162898062/reactions"
            },
            "updated_at": "2022-06-22T09:59:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1162898062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/18674/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/18674/commits",
    "created_at": "2022-05-21T12:29:43Z",
    "diff_url": "https://github.com/neovim/neovim/pull/18674.diff",
    "draft": true,
    "head": {
        "label": "kylo252:busted-2",
        "ref": "busted-2",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/kylo252/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/kylo252/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/kylo252/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/kylo252/neovim/branches{/branch}",
            "clone_url": "https://github.com/kylo252/neovim.git",
            "collaborators_url": "https://api.github.com/repos/kylo252/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/kylo252/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/kylo252/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/kylo252/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/kylo252/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/kylo252/neovim/contributors",
            "created_at": "2021-08-11T10:54:53Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/kylo252/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/kylo252/neovim/downloads",
            "events_url": "https://api.github.com/repos/kylo252/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/kylo252/neovim/forks",
            "full_name": "kylo252/neovim",
            "git_commits_url": "https://api.github.com/repos/kylo252/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/kylo252/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/kylo252/neovim/git/tags{/sha}",
            "git_url": "git://github.com/kylo252/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/kylo252/neovim/hooks",
            "html_url": "https://github.com/kylo252/neovim",
            "id": 394956966,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/kylo252/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/kylo252/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/kylo252/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/kylo252/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/kylo252/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/kylo252/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/kylo252/neovim/merges",
            "milestones_url": "https://api.github.com/repos/kylo252/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzOTQ5NTY5NjY=",
            "notifications_url": "https://api.github.com/repos/kylo252/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/kylo252/neovim/pulls{/number}",
            "pushed_at": "2023-07-18T12:59:10Z",
            "releases_url": "https://api.github.com/repos/kylo252/neovim/releases{/id}",
            "size": 242993,
            "ssh_url": "git@github.com:kylo252/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/kylo252/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/kylo252/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/kylo252/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/kylo252/neovim/subscription",
            "svn_url": "https://github.com/kylo252/neovim",
            "tags_url": "https://api.github.com/repos/kylo252/neovim/tags",
            "teams_url": "https://api.github.com/repos/kylo252/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/kylo252/neovim/git/trees{/sha}",
            "updated_at": "2021-08-11T10:54:56Z",
            "url": "https://api.github.com/repos/kylo252/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b94b10d0ce8c07633c74e940b241e602ad07a163",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
            "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
            "followers_url": "https://api.github.com/users/kylo252/followers",
            "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/kylo252",
            "id": 59826753,
            "login": "kylo252",
            "node_id": "MDQ6VXNlcjU5ODI2NzUz",
            "organizations_url": "https://api.github.com/users/kylo252/orgs",
            "received_events_url": "https://api.github.com/users/kylo252/received_events",
            "repos_url": "https://api.github.com/users/kylo252/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/kylo252",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/18674",
    "id": 943426034,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18674",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM44O4ny",
    "number": 18674,
    "patch_url": "https://github.com/neovim/neovim/pull/18674.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/18674/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b94b10d0ce8c07633c74e940b241e602ad07a163",
    "title": "feat(cmake): run busted tests with ctest",
    "updated_at": "2024-12-17T14:10:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/18674",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
        "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
        "followers_url": "https://api.github.com/users/kylo252/followers",
        "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
        "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kylo252",
        "id": 59826753,
        "login": "kylo252",
        "node_id": "MDQ6VXNlcjU5ODI2NzUz",
        "organizations_url": "https://api.github.com/users/kylo252/orgs",
        "received_events_url": "https://api.github.com/users/kylo252/received_events",
        "repos_url": "https://api.github.com/users/kylo252/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kylo252",
        "user_view_type": "public"
    }
}