{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/22887/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/22887/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/22887"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/22887"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/22887/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/22887"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ff8d9e6994e41c1dd7fac02565575fe4015e0389"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5024,
            "forks_count": 5024,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1702,
            "open_issues_count": 1702,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-29T01:47:25Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 241485,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71307,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-29T00:42:27Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71307,
            "watchers_count": 71307,
            "web_commit_signoff_required": false
        },
        "sha": "adb2258345409d08c42809da0212eeb792e70106",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This decouples the playground window from query buffers, which should not be treated the same (i.e. we do not want to run the query linter in the playground window). We also use the indentation settings for the 'playground' filetype to determine the indentation level in the :InspectTree window.\r\n\r\nThis obviously conflicts with https://github.com/neovim/neovim/pull/22848, but should be an easy merge conflict to resolve.\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22887#discussion_r1264684832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22887"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264684832"
                }
            },
            "author_association": "MEMBER",
            "body": "I renamed `vim.treesitter.playground` to `vim.treesitter.dev` in https://github.com/neovim/neovim/commit/c48b1421af28d0317c807bca00c7e2fff97d9ad0 to avoid new jargon. \"dev mode\" or \"dev tools\" is already used and is more generic, so we don't need \"playground\".\r\n\r\nFor filetypes I think we need a `ts.` or `treesitter.` prefix. Using unqualified names like \"query\" and \"playground\" lacks context and risks conflict with other filetypes.\r\n```suggestion\r\n  vim.bo[b].filetype = 'treesitter.inspector'\r\n```",
            "commit_id": "ff8d9e6994e41c1dd7fac02565575fe4015e0389",
            "created_at": "2023-07-16T13:27:02Z",
            "diff_hunk": "@@ -542,7 +542,7 @@ function M.inspect_tree(opts)\n   vim.bo[b].buflisted = false\n   vim.bo[b].buftype = 'nofile'\n   vim.bo[b].bufhidden = 'wipe'\n-  vim.bo[b].filetype = 'query'\n+  vim.bo[b].filetype = 'playground'",
            "html_url": "https://github.com/neovim/neovim/pull/22887#discussion_r1264684832",
            "id": 1264684832,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LYY8g",
            "original_commit_id": "c6ce61d21151723e43ba23898a8097837124496c",
            "original_line": 545,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 1531743736,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22887",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264684832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-16T13:27:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264684832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22887#discussion_r1264685129"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22887"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264685129"
                }
            },
            "author_association": "MEMBER",
            "body": "`query` _is_ the filetype, though, in the standard Vim sense, required for syntax highlighting. (I'm not fully convinced we need a separate filetype to solve the actual issue, which is avoiding attaching the query linter to the tree view.)",
            "commit_id": "ff8d9e6994e41c1dd7fac02565575fe4015e0389",
            "created_at": "2023-07-16T13:28:57Z",
            "diff_hunk": "@@ -542,7 +542,7 @@ function M.inspect_tree(opts)\n   vim.bo[b].buflisted = false\n   vim.bo[b].buftype = 'nofile'\n   vim.bo[b].bufhidden = 'wipe'\n-  vim.bo[b].filetype = 'query'\n+  vim.bo[b].filetype = 'playground'",
            "html_url": "https://github.com/neovim/neovim/pull/22887#discussion_r1264685129",
            "id": 1264685129,
            "in_reply_to_id": 1264684832,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LYZBJ",
            "original_commit_id": "c6ce61d21151723e43ba23898a8097837124496c",
            "original_line": 545,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 1531744047,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22887",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264685129/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-16T13:29:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264685129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22887#discussion_r1407739089"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22887"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407739089"
                }
            },
            "author_association": "NONE",
            "body": "Are there any other filetype names with a `.` in them? From what I can see in https://github.com/neovim/neovim/tree/master/runtime/ftplugin wouldn't it make more sense to name it something like `tsinspector` or `treesitterinspector`? Generally it seems that most filetype names like this are made by just concatenating string. ",
            "commit_id": "ff8d9e6994e41c1dd7fac02565575fe4015e0389",
            "created_at": "2023-11-28T13:14:07Z",
            "diff_hunk": "@@ -542,7 +542,7 @@ function M.inspect_tree(opts)\n   vim.bo[b].buflisted = false\n   vim.bo[b].buftype = 'nofile'\n   vim.bo[b].bufhidden = 'wipe'\n-  vim.bo[b].filetype = 'query'\n+  vim.bo[b].filetype = 'playground'",
            "html_url": "https://github.com/neovim/neovim/pull/22887#discussion_r1407739089",
            "id": 1407739089,
            "in_reply_to_id": 1264684832,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T6GTR",
            "original_commit_id": "c6ce61d21151723e43ba23898a8097837124496c",
            "original_line": 545,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 1752855413,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22887",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407739089/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-28T13:14:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407739089",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22887#discussion_r1407804987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22887"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407804987"
                }
            },
            "author_association": "MEMBER",
            "body": "Indeed, we should not use a `.` as that has a distinct interpretation (multiple filetypes). `tsinspector` sounds fine to me.",
            "commit_id": "ff8d9e6994e41c1dd7fac02565575fe4015e0389",
            "created_at": "2023-11-28T13:56:01Z",
            "diff_hunk": "@@ -542,7 +542,7 @@ function M.inspect_tree(opts)\n   vim.bo[b].buflisted = false\n   vim.bo[b].buftype = 'nofile'\n   vim.bo[b].bufhidden = 'wipe'\n-  vim.bo[b].filetype = 'query'\n+  vim.bo[b].filetype = 'playground'",
            "html_url": "https://github.com/neovim/neovim/pull/22887#discussion_r1407804987",
            "id": 1407804987,
            "in_reply_to_id": 1264684832,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T6WY7",
            "original_commit_id": "c6ce61d21151723e43ba23898a8097837124496c",
            "original_line": 545,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter.lua",
            "position": null,
            "pull_request_review_id": 1752962365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22887",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407804987/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-28T13:56:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407804987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/22887#discussion_r1407831685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/22887"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407831685"
                }
            },
            "author_association": "MEMBER",
            "body": "I went ahead and also renamed `pg` to `treeview` in this PR. The `pg` identifier is a holdover from the original implementation when this was still called the \"playground\". Since we no longer use that terminology the `pg` identifier is just confusing.",
            "commit_id": "ff8d9e6994e41c1dd7fac02565575fe4015e0389",
            "created_at": "2023-11-28T14:15:32Z",
            "diff_hunk": "@@ -304,7 +314,7 @@ function M.inspect_tree(opts)\n \n   local buf = api.nvim_get_current_buf()\n   local win = api.nvim_get_current_win()\n-  local pg = assert(TSTreeView:new(buf, opts.lang))\n+  local treeview = assert(TSTreeView:new(buf, opts.lang))",
            "html_url": "https://github.com/neovim/neovim/pull/22887#discussion_r1407831685",
            "id": 1407831685,
            "line": 317,
            "node_id": "PRRC_kwDOAPphoM5T6c6F",
            "original_commit_id": "f558461701a7e3931de455063d57f6827b078cd0",
            "original_line": 317,
            "original_position": 67,
            "original_start_line": 307,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": 67,
            "pull_request_review_id": 1753004993,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/22887",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407831685/reactions"
            },
            "side": "RIGHT",
            "start_line": 307,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2023-11-28T14:15:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1407831685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Should we make it its own filetype, so you can configure these things with a `ftplugin`?",
            "created_at": "2023-04-04T14:53:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496114120",
            "id": 1496114120,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLOPI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496114120/reactions"
            },
            "updated_at": "2023-04-04T14:53:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496114120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It already uses the `query` filetype, so we could just pick up the indentation from there.\r\n\r\nWe may want to change the default `'shiftwidth'` in the `query` ftplugin if we go that route though.",
            "created_at": "2023-04-04T14:57:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496124418",
            "id": 1496124418,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLQwC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496124418/reactions"
            },
            "updated_at": "2023-04-04T14:59:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496124418",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, I mean using a _different_ filetype, so we can avoid triggering autocommands (like the linter) on the tree.\r\n\r\nIncreasing `sw` for query files makes sense to me, but then I don't lithp.\r\n",
            "created_at": "2023-04-04T15:01:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496131528",
            "id": 1496131528,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLSfI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496131528/reactions"
            },
            "updated_at": "2023-04-04T15:01:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496131528",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">No, I mean using a different filetype, so we can avoid triggering autocommands (like the linter) on the tree.\r\n\r\nNo objection here.",
            "created_at": "2023-04-04T15:02:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496132550",
            "id": 1496132550,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLSvG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496132550/reactions"
            },
            "updated_at": "2023-04-04T15:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496132550",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(could use subtypes, like `query.tree`?)\r\n",
            "created_at": "2023-04-04T15:08:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496142639",
            "id": 1496142639,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLVMv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496142639/reactions"
            },
            "updated_at": "2023-04-04T15:08:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496142639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (could use subtypes, like `query.tree`?)\r\n\r\nI was thinking `playground` (since it sounds like we settled on that terminology in https://github.com/neovim/neovim/pull/22848).\r\n\r\nWouldn't `query.tree` still activate the `query` ftplugin?",
            "created_at": "2023-04-04T15:09:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496143553",
            "id": 1496143553,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLVbB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496143553/reactions"
            },
            "updated_at": "2023-04-04T15:09:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496143553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I was thinking playground (since it sounds like we settled on that terminology in https://github.com/neovim/neovim/pull/22848).\r\n\r\nWe'll hopefully add a query editor as well, which would probably a better use of that name?\r\n\r\n> Wouldn't `query.tree` still activate the query ftplugin?\r\n\r\nTo be honest, I don't know; in that case that won't help, of course.",
            "created_at": "2023-04-04T15:10:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496146263",
            "id": 1496146263,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLWFX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496146263/reactions"
            },
            "updated_at": "2023-04-04T15:10:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496146263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">We'll hopefully add a query editor as well, which would probably a better use of that name?\r\n\r\nWhy would the query editor not use the `query` filetype? Maybe I don't understand what the query editor is, but inferring from the name it sounds like a buffer where one... edits a query, so using the `query` filetype seems natural.",
            "created_at": "2023-04-04T15:14:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496154968",
            "id": 1496154968,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLYNY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496154968/reactions"
            },
            "updated_at": "2023-04-04T15:14:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496154968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Regardless of *which* filetype to use, I think that is a good idea @clason. I've implemented it with `playground` for now but it's easy to change to something else when we can reach a consensus.",
            "created_at": "2023-04-04T15:15:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496163452",
            "id": 1496163452,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLaR8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496163452/reactions"
            },
            "updated_at": "2023-04-04T15:15:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496163452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That is true; just going by the name \"playground\". For me, the tree is _not_ \"the\" playground; it's just part of it, just like the query editor.\r\n\r\nMaybe `filetype` is not the right approach here, and we should use buffer title or `buftype` or somesuch. (And just increase the `sw` in the `query` ftplugin.)",
            "created_at": "2023-04-04T15:15:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496163487",
            "id": 1496163487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLaSf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496163487/reactions"
            },
            "updated_at": "2023-04-04T15:17:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496163487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(And if we do change the filetype, we need to register it for the `query` parser or @lewis6991 will be sad.)",
            "created_at": "2023-04-04T15:19:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1496169248",
            "id": 1496169248,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5ZLbsg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496169248/reactions"
            },
            "updated_at": "2023-04-04T15:19:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1496169248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Repeating my earlier comment for visibility: if we still want treesitter syntax highlighting (which I'm not sure we want? @lewis6991 I think implemented it initially), we need to register the new filetype or -- better -- just call `vim.treesitter.start(bufnr, 'query')` in the new `ftplugin`.",
            "created_at": "2023-11-28T16:07:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830165339",
            "id": 1830165339,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tFhtb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830165339/reactions"
            },
            "updated_at": "2023-11-28T16:07:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830165339",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Repeating my earlier comment for visibility: if we still want treesitter syntax highlighting (which I'm not sure we want? @lewis6991 I think implemented it initially), we need to register the new filetype or -- better -- just call `vim.treesitter.start(bufnr, 'query')` in the new `ftplugin`.\r\n\r\nI don't have an opinion on this either way. I will add, though, that as was pointed out in https://github.com/neovim/neovim/issues/25958 the TS inspector isn't _really_ using the query syntax (for instance, the nodes are not nested within parentheses).\r\n\r\nI guess to be fair it's not _technically_ LISP syntax either. Maybe we just drop the syntax file altogether then? Or just make a very simple one that only highlights the comments?",
            "created_at": "2023-11-28T16:12:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830174392",
            "id": 1830174392,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tFj64",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830174392/reactions"
            },
            "updated_at": "2023-11-28T16:16:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830174392",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Setting highlighting manually will not trigger the linked issue, but that is indeed a fair point.\r\n\r\nAll we use from LISP syntax is the comment highlighting (and possibly the braces? Lithp loveth braceth); maybe we can just cherry-pick those syntax groups from the Lisp syntax file? (Or maybe write a -- tiny -- custom one; possibly as a low priority follow-up PR.)\r\n\r\nEDIT: Exactly (but I don't think we want `@spell` here?)",
            "created_at": "2023-11-28T16:16:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830200947",
            "id": 1830200947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tFqZz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830200947/reactions"
            },
            "updated_at": "2023-11-28T16:16:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830200947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thinking about this some more, I don't think we need the ftplugin file at all. We can still set the filetype so that users can make filetype specific modifications if they wish, but there's nothing we need to set by default (the file is not editable).\r\n\r\nThat just leaves the syntax and indent files, which are both very small.\r\n\r\n",
            "created_at": "2023-11-28T16:26:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830240609",
            "id": 1830240609,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF0Fh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830240609/reactions"
            },
            "updated_at": "2023-11-28T16:26:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830240609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "NONE",
            "body": "> All we use from LISP syntax is the comment highlighting (and possibly the braces? Lithp loveth braceth); maybe we can just cherry-pick those syntax groups from the Lisp syntax file? (Or maybe write a -- tiny -- custom one; possibly as a low priority follow-up PR.)\r\n\r\nIf we write a tiny custom parser, could we try to make it understand the fact that indentation means nesting? In that case, it will probably be easier to write queries giving the highlighting I would want in `rainbow-delimiters` (I wouldn't need to add a custom strategy as I currently do). \r\n\r\nI can try to write the parser, if you want to do it that way.",
            "created_at": "2023-11-28T16:30:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830250330",
            "id": 1830250330,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF2da",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830250330/reactions"
            },
            "updated_at": "2023-11-28T16:30:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830250330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Complete overkill. The tree is static and doesn't require incremental parsing. And every parser requires build system changes and makes the packagers' lives harder.",
            "created_at": "2023-11-28T16:31:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830252212",
            "id": 1830252212,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF260",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830252212/reactions"
            },
            "updated_at": "2023-11-28T16:31:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830252212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > All we use from LISP syntax is the comment highlighting (and possibly the braces? Lithp loveth braceth); maybe we can just cherry-pick those syntax groups from the Lisp syntax file? (Or maybe write a -- tiny -- custom one; possibly as a low priority follow-up PR.)\r\n> \r\n> If we write a tiny custom parser, could we try to make it understand the fact that indentation means nesting? In that case, it will probably be easier to write queries giving the highlighting I would want in `rainbow-delimiters` (I wouldn't need to add a custom strategy as I currently do).\r\n> \r\n> I can try to write the parser, if you want to do it that way.\r\n\r\nRather than write a custom parser I wonder if it would make more sense to just make the inspector output actually use the query syntax",
            "created_at": "2023-11-28T16:31:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830252886",
            "id": 1830252886,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF3FW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830252886/reactions"
            },
            "updated_at": "2023-11-28T16:31:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830252886",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Rather than write a custom parser I wonder if it would make more sense to just make the inspector output actually use the query syntax\r\n\r\nThat would be the better (acceptable) approach, but I worry that this would make the output harder to read.\r\n",
            "created_at": "2023-11-28T16:35:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830259382",
            "id": 1830259382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF4q2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830259382/reactions"
            },
            "updated_at": "2023-11-28T16:35:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830259382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Rather than write a custom parser I wonder if it would make more sense to just make the inspector output actually use the query syntax\r\n\r\nIt works fine with the query parser too (that is my current solution). You just have to do highlighting a bit differently than in other languages then, since the parser doesn't really understand the fact that indentation means nesting, so I have to write a highlighting strategy taking that into account myself (not that much work). \r\n\r\nThe query parser gives you a workable tree to write queries for (using a subset of the full query parser).\r\n\r\nAn alternative solution, that would require more work, is to have an option for `InspectTree` formatting the strings as the actual queries. But I actually do think indentation for nesting makes a lot of sense to simplify the notation here. \r\n\r\nEdit: I misread your comment a bit. But as mentioned I think that the current formatting is actually pretty nice.",
            "created_at": "2023-11-28T16:37:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830263483",
            "id": 1830263483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF5q7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830263483/reactions"
            },
            "updated_at": "2023-11-28T16:40:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830263483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">I wonder if it would make more sense to just make the inspector output actually use the query syntax\r\n\r\nIf we did _that_ then I think this whole PR is moot, because then we could just stick with the `query` filetype plugin",
            "created_at": "2023-11-28T16:37:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830263952",
            "id": 1830263952,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF5yQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830263952/reactions"
            },
            "updated_at": "2023-11-28T16:38:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830263952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the current approach (minimal, legacy, syntax file for the Lispy bits we actually use) is the right one for now. We can always play with it further in followup PRs (but fair warning: these might be shot down quickly if there's too little gain for a lot of machinery -- the inspector is a pure debugging tool and need not be fancy).",
            "created_at": "2023-11-28T16:39:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830267501",
            "id": 1830267501,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF6pt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830267501/reactions"
            },
            "updated_at": "2023-11-28T16:42:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830267501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I think the current approach (minimal, legacy, syntax file for the Lispy bits we actually use) is the right one for now. We can always play with it further in followup PRs (but fair warning: these might be shot down quickly if there's too little gain for a lot of machinery -- the inspector is a pure debugging tool and need not be fancy).\r\n\r\nI think the current approach (of this pull request) is good, but don't you need to register a parser? Or am I missing something? I wouldn't really need much for the kind of highlighting I would like (so the `query` parser is good enough for me), but I would like to have treesitter available for highlighting. ",
            "created_at": "2023-11-28T16:51:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830285894",
            "id": 1830285894,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tF_JG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830285894/reactions"
            },
            "updated_at": "2023-11-28T16:51:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830285894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Making the inspector use \"normal\" query syntax was pretty easy, I already made a PR https://github.com/neovim/neovim/pull/26274",
            "created_at": "2023-11-28T16:54:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/22887#issuecomment-1830291387",
            "id": 1830291387,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
            "node_id": "IC_kwDOAPphoM5tGAe7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830291387/reactions"
            },
            "updated_at": "2023-11-28T16:54:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1830291387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/22887/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/22887/commits",
    "created_at": "2023-04-04T14:51:40Z",
    "diff_url": "https://github.com/neovim/neovim/pull/22887.diff",
    "draft": false,
    "head": {
        "label": "gpanders:playground-indent",
        "ref": "playground-indent",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2023-11-28T23:02:47Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 236749,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ff8d9e6994e41c1dd7fac02565575fe4015e0389",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/22887",
    "id": 1301812537,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/22887",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3059b8a1c384f880b0b9f00d94f8d88ffab6fdea",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5NmBU5",
    "number": 22887,
    "patch_url": "https://github.com/neovim/neovim/pull/22887.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    ],
    "requested_teams": [
        {
            "description": "The architects of a greener world",
            "html_url": "https://github.com/orgs/neovim/teams/treesitter",
            "id": 5021580,
            "members_url": "https://api.github.com/organizations/6471485/team/5021580/members{/member}",
            "name": "treesitter",
            "node_id": "T_kwDOAGK_Pc4ATJ-M",
            "notification_setting": "notifications_enabled",
            "parent": null,
            "permission": "pull",
            "privacy": "closed",
            "repositories_url": "https://api.github.com/organizations/6471485/team/5021580/repos",
            "slug": "treesitter",
            "url": "https://api.github.com/organizations/6471485/team/5021580"
        }
    ],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/22887/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ff8d9e6994e41c1dd7fac02565575fe4015e0389",
    "title": "fix(treesitter):  use 'tsinspector' filetype for InspectTree",
    "updated_at": "2023-11-28T16:54:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/22887",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}