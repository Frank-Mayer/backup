{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26138/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26138/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26138"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26138"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26138/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/027f09e785492287d888fa633244436843c9fd50"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5017,
            "forks_count": 5017,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-25T23:41:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 234164,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71236,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-26T01:53:42Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71236,
            "watchers_count": 71236,
            "web_commit_signoff_required": false
        },
        "sha": "e89071522cb0b6d56fd4e7d7776851e73fb807c3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "callback functions should be the last parameter(s) where possible, for readability.\r\n\r\ncc @gpanders \r\n\r\nrelated (but different): https://github.com/neovim/neovim/issues/24141",
    "closed_at": "2023-11-23T13:20:01Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1401947925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401947925"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is there \"magic\" happening with `M.map` and `M.filter`? Why don't they act like normal, non-\"self\", non-object, module functions? What passes the `...` var args?\r\n\r\n```\r\ntest/functional/helpers.lua:107: Error executing lua: /home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:955: bad argument #1 to 'src' (table expected, got nil)\r\nstack traceback:\r\n\t[C]: in function 'src'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:955: in function 'next'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:236: in function 'next'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:315: in function 'map'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/snippet.lua:426: in function 'append_to_snippet'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/snippet.lua:472: in function 'expand'\r\n\t[string \"<nvim>\"]:1: in main chunk\r\n\r\nstack traceback:\r\n\ttest/functional/helpers.lua:107: in function 'exec_lua'\r\n\ttest/functional/lua/snippet_spec.lua:34: in function 'test_expand_success'\r\n\ttest/functional/lua/snippet_spec.lua:45: in function <test/functional/lua/snippet_spec.lua:44>\r\n```",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T12:06:14Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1401947925",
            "id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TkAcV",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744229750,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401947925/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T12:13:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401947925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402023763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402023763"
                }
            },
            "author_association": "MEMBER",
            "body": "The entire vim.iter API is designed to work with any kind of Lua iterator. Iterators in Lua are simply functions that return multiple values. The iterator must be the final argument in these functions for this reason.\r\n\r\nThis means you can do, eg\r\n\r\n```\r\nvim.iter.map(cb, string.gmatch(...))\r\n```\r\n\r\nor\r\n\r\n```\r\nvim.iter.filter(cb, vim.fs.parents(...))\r\n```\r\n\r\nIf you make the callback the last function argument then we lose the ability to use any function iterator with this API",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T13:10:47Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402023763",
            "id": 1402023763,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TkS9T",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744345711,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402023763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T13:10:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402023763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402119740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402119740"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah I keep forgetting this behavior of multiple return values. I was hoping a signature like `M.map(...)` could use `select()` to inspect the `...`. But that doesn't work because if one calls `map(ipairs(), fn)`, Lua drops but all but the first return value from `ipairs()`.",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T14:06:20Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402119740",
            "id": 1402119740,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TkqY8",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744502710,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402119740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:28:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402119740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402125697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402125697"
                }
            },
            "author_association": "MEMBER",
            "body": "Other parts of the stdlib that accept iterables could require either a table, function or `vim.iter`. Then they don't need to worry about placing the parameter at the end.\r\n\r\nThat would be another reason why avoiding the \"scan\" would be good: https://github.com/neovim/neovim/issues/24746\r\n\r\nThoughts?",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T14:10:49Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402125697",
            "id": 1402125697,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5Tkr2B",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744511918,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402125697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T14:11:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402125697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402223479"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402223479"
                }
            },
            "author_association": "MEMBER",
            "body": "We're also (and primarily) talking about the _Lua_ stdlib, though, which is not under our control...",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T15:17:36Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402223479",
            "id": 1402223479,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TlDt3",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744664561,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402223479/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T15:17:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402223479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402374910"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402374910"
                }
            },
            "author_association": "MEMBER",
            "body": "We don't control the function signatures of the Lua stdlib so I'm not worried about that :)",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T16:29:09Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402374910",
            "id": 1402374910,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5Tlor-",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744878166,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402374910/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:29:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402374910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402376824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376824"
                }
            },
            "author_association": "MEMBER",
            "body": "But the point is that we want to chain _our_ iterators with Lua standard iterators (after all, chaining is their whole point), so we are constrained by _their_ function signatures.",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T16:30:39Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402376824",
            "id": 1402376824,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TlpJ4",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744880951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:30:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402385289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402385289"
                }
            },
            "author_association": "MEMBER",
            "body": "Example? \r\n\r\nThe Nvim-stdlib functions only need to _accept_ function/table/vim.iter, they don't need to _accept_ the multiple-return-value (ipairs-like) iterator. If the caller wants to pass a vim.iter object to a Lua-stdlib function that expects a ipairs-like iterator, the caller can convert it on-demand. This is orthogonal to how Nvim-stdlib function signatures are defined.",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T16:37:16Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402385289",
            "id": 1402385289,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TlrOJ",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744893988,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402385289/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:39:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402385289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402390816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402390816"
                }
            },
            "author_association": "MEMBER",
            "body": "> they don't need to accept the multiple-return-value (ipairs-like) iterator.\r\n\r\nThat would severely limit the usefulness of this API; see @gpanders comment above.",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-22T16:41:40Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402390816",
            "id": 1402390816,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5Tlskg",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1744901849,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402390816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:41:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402390816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1403265611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403265611"
                }
            },
            "author_association": "MEMBER",
            "body": "> That would severely limit the usefulness of this API;\r\n\r\n `vim.iter()` can accept multi-return iterator, that's different than expecting every Nvim-stdlib function to also accept multi-return iterators. And it's impossible for things like zip() to accept _multiple_ multi-return iterators, anyway.\r\n\r\nIs it not acceptable to require a `vim.iter()` wrapper if one wants to work with multi-return iterators?\r\n\r\nCurrently the only reason I see `ipairs` passed around is because we don't pass the list index to the callbacks... #24141\r\n\r\nThis was also discussed in April: https://github.com/neovim/neovim/pull/23029#issuecomment-1517187405",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-23T11:42:40Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1403265611",
            "id": 1403265611,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TpCJL",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1746268779,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403265611/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T13:10:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403265611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1403462933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403462933"
                }
            },
            "author_association": "MEMBER",
            "body": "> Other parts of the stdlib that accept iterables could require either a table, function or `vim.iter`. Then they don't need to worry about placing the parameter at the end.\r\n> \r\n> That would be another reason why avoiding the \"scan\" would be good: #24746\r\n> \r\n> Thoughts?\r\n\r\nSure, I think this is a reasonable constraint to place on our own stdlib. But of course `vim.iter()` would still have to accept the multi-return-value type iterators. And making `vim.iter.map(f, it)` behave differently than `vim.iter(it):map(f)` (the latter accepts any iterator, but not the former) is a footgun waiting to happen, imo. Maybe this could be ameliorated with sufficient documentation though.",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-23T14:32:45Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1403462933",
            "id": 1403462933,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5TpyUV",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1746584630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403462933/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T14:32:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403462933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1405233395"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405233395"
                }
            },
            "author_association": "MEMBER",
            "body": "> But of course `vim.iter()` would still have to accept the multi-return-value type iterators.\r\n\r\nYes, absolutely. The key is that `vim.iter` is the common unit that is passed around, then we don't need to fashion every other Nvim-stdlib functon to directly handle mutli-return iterators.\r\n",
            "commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "created_at": "2023-11-25T21:14:29Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1405233395",
            "id": 1405233395,
            "in_reply_to_id": 1401947925,
            "line": 1030,
            "node_id": "PRRC_kwDOAPphoM5Twijz",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 29,
            "pull_request_review_id": 1749236993,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405233395/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T21:14:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405233395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26138/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26138/commits",
    "created_at": "2023-11-21T16:29:16Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26138.diff",
    "draft": false,
    "head": {
        "label": "justinmk:iter",
        "ref": "iter",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2023-11-25T21:05:32Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 229374,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2023-07-25T13:51:02Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "027f09e785492287d888fa633244436843c9fd50",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26138",
    "id": 1611347744,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "",
            "id": 3968935075,
            "name": "breaking-change",
            "node_id": "LA_kwDOAPphoM7skSSj",
            "url": "https://api.github.com/repos/neovim/neovim/labels/breaking-change"
        }
    ],
    "locked": false,
    "merge_commit_sha": "89f8f259718f401c75c46bc2b8420d3589969b05",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5gCzcg",
    "number": 26138,
    "patch_url": "https://github.com/neovim/neovim/pull/26138.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26138/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/027f09e785492287d888fa633244436843c9fd50",
    "title": "refactor(vim.iter)!: reorder map/filter parameters",
    "updated_at": "2023-11-25T21:14:29Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}