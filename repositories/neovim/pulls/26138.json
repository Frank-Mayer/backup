{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26138/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26138/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26138"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26138"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26138/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/969310549a5a264a20347115285005336dbd9ca4"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5277,
            "forks_count": 5277,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1705,
            "open_issues_count": 1705,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-23T00:28:51Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 267079,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76421,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-23T01:19:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76421,
            "watchers_count": 76421,
            "web_commit_signoff_required": false
        },
        "sha": "9319d97679053a219b1701d70abce414d0f6a8b0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "# Problem\r\n\r\nThe use-case for the convenience functions `vim.iter.map()`, `vim.iter.filter()`, `vim.iter.totable()` is not clear.\r\n\r\n# Solution\r\n\r\nDrop them for now. We can revisit after 0.10 release.\r\n\r\n# Note\r\n\r\nhttps://github.com/neovim/neovim/commit/14e4b6bbd8640675d7393bdeb3e93d74ab875ff1 removed most uses of `vim.iter.map()` , which perhaps supports the idea that it's of limited value?\r\n\r\n# Old description\r\n\r\ncallback functions should be the last parameter(s) where possible, for readability.\r\n\r\ncc @gpanders \r\n\r\nrelated (but different): https://github.com/neovim/neovim/issues/24141",
    "closed_at": "2024-04-19T13:22:41Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1401947925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401947925"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is there \"magic\" happening with `M.map` and `M.filter`? Why don't they act like normal, non-\"self\", non-object, module functions? What passes the `...` var args?\r\n\r\n```\r\ntest/functional/helpers.lua:107: Error executing lua: /home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:955: bad argument #1 to 'src' (table expected, got nil)\r\nstack traceback:\r\n\t[C]: in function 'src'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:955: in function 'next'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:236: in function 'next'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/iter.lua:315: in function 'map'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/snippet.lua:426: in function 'append_to_snippet'\r\n\t/home/runner/work/neovim/neovim/runtime/lua/vim/snippet.lua:472: in function 'expand'\r\n\t[string \"<nvim>\"]:1: in main chunk\r\n\r\nstack traceback:\r\n\ttest/functional/helpers.lua:107: in function 'exec_lua'\r\n\ttest/functional/lua/snippet_spec.lua:34: in function 'test_expand_success'\r\n\ttest/functional/lua/snippet_spec.lua:45: in function <test/functional/lua/snippet_spec.lua:44>\r\n```",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T12:06:14Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1401947925",
            "id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TkAcV",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744229750,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401947925/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T12:13:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401947925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402023763"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402023763"
                }
            },
            "author_association": "MEMBER",
            "body": "The entire vim.iter API is designed to work with any kind of Lua iterator. Iterators in Lua are simply functions that return multiple values. The iterator must be the final argument in these functions for this reason.\r\n\r\nThis means you can do, eg\r\n\r\n```\r\nvim.iter.map(cb, string.gmatch(...))\r\n```\r\n\r\nor\r\n\r\n```\r\nvim.iter.filter(cb, vim.fs.parents(...))\r\n```\r\n\r\nIf you make the callback the last function argument then we lose the ability to use any function iterator with this API",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T13:10:47Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402023763",
            "id": 1402023763,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TkS9T",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744345711,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402023763/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T13:10:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402023763",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402119740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402119740"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah I keep forgetting this behavior of multiple return values. I was hoping a signature like `M.map(...)` could use `select()` to inspect the `...`. But that doesn't work because if one calls `map(ipairs(), fn)`, Lua drops but all but the first return value from `ipairs()`.",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T14:06:20Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402119740",
            "id": 1402119740,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TkqY8",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744502710,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402119740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:28:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402119740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402125697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402125697"
                }
            },
            "author_association": "MEMBER",
            "body": "Other parts of the stdlib that accept iterables could require either a table, function or `vim.iter`. Then they don't need to worry about placing the parameter at the end.\r\n\r\nThat would be another reason why avoiding the \"scan\" would be good: https://github.com/neovim/neovim/issues/24746\r\n\r\nThoughts?",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T14:10:49Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402125697",
            "id": 1402125697,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tkr2B",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744511918,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402125697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T14:11:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402125697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402223479"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402223479"
                }
            },
            "author_association": "MEMBER",
            "body": "We're also (and primarily) talking about the _Lua_ stdlib, though, which is not under our control...",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T15:17:36Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402223479",
            "id": 1402223479,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TlDt3",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744664561,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402223479/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T15:17:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402223479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402374910"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402374910"
                }
            },
            "author_association": "MEMBER",
            "body": "We don't control the function signatures of the Lua stdlib so I'm not worried about that :)",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T16:29:09Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402374910",
            "id": 1402374910,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tlor-",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744878166,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402374910/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:29:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402374910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402376824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376824"
                }
            },
            "author_association": "MEMBER",
            "body": "But the point is that we want to chain _our_ iterators with Lua standard iterators (after all, chaining is their whole point), so we are constrained by _their_ function signatures.",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T16:30:39Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402376824",
            "id": 1402376824,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TlpJ4",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744880951,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:30:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402385289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402385289"
                }
            },
            "author_association": "MEMBER",
            "body": "Example? \r\n\r\nThe Nvim-stdlib functions only need to _accept_ function/table/vim.iter, they don't need to _accept_ the multiple-return-value (ipairs-like) iterator. If the caller wants to pass a vim.iter object to a Lua-stdlib function that expects a ipairs-like iterator, the caller can convert it on-demand. This is orthogonal to how Nvim-stdlib function signatures are defined.",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T16:37:16Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402385289",
            "id": 1402385289,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TlrOJ",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744893988,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402385289/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:39:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402385289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1402390816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402390816"
                }
            },
            "author_association": "MEMBER",
            "body": "> they don't need to accept the multiple-return-value (ipairs-like) iterator.\r\n\r\nThat would severely limit the usefulness of this API; see @gpanders comment above.",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-22T16:41:40Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1402390816",
            "id": 1402390816,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tlskg",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1744901849,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402390816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:41:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402390816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1403265611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403265611"
                }
            },
            "author_association": "MEMBER",
            "body": "> That would severely limit the usefulness of this API;\r\n\r\n `vim.iter()` can accept multi-return iterator, that's different than expecting every Nvim-stdlib function to also accept multi-return iterators. And it's impossible for things like zip() to accept _multiple_ multi-return iterators, anyway.\r\n\r\nIs it not acceptable to require a `vim.iter()` wrapper if one wants to work with multi-return iterators?\r\n\r\nCurrently the only reason I see `ipairs` passed around is because we don't pass the list index to the callbacks... #24141\r\n\r\nThis was also discussed in April: https://github.com/neovim/neovim/pull/23029#issuecomment-1517187405",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-23T11:42:40Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1403265611",
            "id": 1403265611,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TpCJL",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1746268779,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403265611/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T13:10:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403265611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1403462933"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403462933"
                }
            },
            "author_association": "MEMBER",
            "body": "> Other parts of the stdlib that accept iterables could require either a table, function or `vim.iter`. Then they don't need to worry about placing the parameter at the end.\r\n> \r\n> That would be another reason why avoiding the \"scan\" would be good: #24746\r\n> \r\n> Thoughts?\r\n\r\nSure, I think this is a reasonable constraint to place on our own stdlib. But of course `vim.iter()` would still have to accept the multi-return-value type iterators. And making `vim.iter.map(f, it)` behave differently than `vim.iter(it):map(f)` (the latter accepts any iterator, but not the former) is a footgun waiting to happen, imo. Maybe this could be ameliorated with sufficient documentation though.",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-23T14:32:45Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1403462933",
            "id": 1403462933,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TpyUV",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1746584630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403462933/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-23T14:32:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1403462933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26138#discussion_r1405233395"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26138"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405233395"
                }
            },
            "author_association": "MEMBER",
            "body": "> But of course `vim.iter()` would still have to accept the multi-return-value type iterators.\r\n\r\nYes, absolutely. The key is that `vim.iter` is the common unit that is passed around, then we don't need to fashion every other Nvim-stdlib functon to directly handle mutli-return iterators.\r\n",
            "commit_id": "969310549a5a264a20347115285005336dbd9ca4",
            "created_at": "2023-11-25T21:14:29Z",
            "diff_hunk": "@@ -1019,12 +1020,13 @@ end\n ---\n ---@see |Iter:map()|\n ---\n+---@param src table|function Table or iterator function to filter\n ---@param f function(...):?any Map function. Accepts the current iterator or table values as\n ---                            arguments and returns one or more new values. Nil values are removed\n ---                            from the final table.\n----@param src table|function Table or iterator function to filter\n ---@return table\n-function M.map(f, src, ...)\n+function M.map(src, f, ...)\n+  assert(type(f) == 'function', 'arg2 must be the callback function. :help news-breaking-dev')\n   return Iter.new(src, ...):map(f):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26138#discussion_r1405233395",
            "id": 1405233395,
            "in_reply_to_id": 1401947925,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Twijz",
            "original_commit_id": "027f09e785492287d888fa633244436843c9fd50",
            "original_line": 1030,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1749236993,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405233395/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T21:14:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405233395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> The entire vim.iter API is designed to work with any kind of Lua iterator. Iterators in Lua are simply functions that return multiple values. The iterator must be the final argument in these functions for this reason.\r\n> \r\n> This means you can do, eg `vim.iter.map(cb, string.gmatch(...))` or `vim.iter.filter(cb, vim.fs.parents(...))`\r\n> \r\n> If you make the callback the last function argument then we lose the ability to use any function iterator with this API\r\n\r\nIt's completely reasonable to require `vim.iter(string.gmatch(...)):map()` for callers that want to pass a Lua multi-return iterator.\r\n\r\n> > they don't need to accept the multiple-return-value (ipairs-like) iterator.\r\n> \r\n> That would severely limit the usefulness of this API; see @gpanders comment above.\r\n\r\nvim.iter.map/filter are merely a convenience. They don't need to support multi-return iterator. It's more important to strongly establish that callbacks are the last arg in all stdlib interfaces, where possible. It's so awkward to have the data as the _last_ arg. We made this mistake with e.g. `vim.tbl_map()` and we shoudn't make it again.",
            "created_at": "2024-04-18T14:19:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2063991959",
            "id": 2063991959,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57BgSX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063991959/reactions"
            },
            "updated_at": "2024-04-18T14:21:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2063991959",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We should just remove the convenience functions then.\r\n\r\nHaving the convenience functions behave differently than the \"non-convenience\" variants is worse than not having them at all.",
            "created_at": "2024-04-18T14:28:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2064011965",
            "id": 2064011965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57BlK9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064011965/reactions"
            },
            "updated_at": "2024-04-18T14:30:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064011965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Btw this isn't a breaking change since vim.iter hasn't released yet.",
            "created_at": "2024-04-18T14:30:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2064015187",
            "id": 2064015187,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57Bl9T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064015187/reactions"
            },
            "updated_at": "2024-04-18T14:30:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064015187",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Having the convenience functions behave differently than the \"non-convenience\" variants is worse than not having them at all.\r\n\r\nIt's just a slight limitation (which can be detected and show an informative message). After all, they change the input to `:totable()`, which is also a kind of \"limitation\".\r\n\r\nBut maybe we should remove them, we could perhaps revisit after 0.10",
            "created_at": "2024-04-18T14:43:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2064062061",
            "id": 2064062061,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57BxZt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064062061/reactions"
            },
            "updated_at": "2024-04-18T15:00:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064062061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Having the convenience functions behave differently than the \"non-convenience\" variants is worse than not having them at all.\r\n> \r\n> It's just a slight limitation (which can be detected and show an informative message)\r\n\r\nHow is it detected? If you pass a function that returns multiple values (like `ipairs()`) as any function parameter except the last, then all of the return values except the first are dropped.\r\n\r\nIf you can figure this out I'm not opposed to it, but I don't think it's possible. Happy to be proved wrong.",
            "created_at": "2024-04-18T15:01:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2064130974",
            "id": 2064130974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57CCOe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064130974/reactions"
            },
            "updated_at": "2024-04-18T15:01:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064130974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How is it detected?\r\n\r\nIf >2 args are passed",
            "created_at": "2024-04-18T15:30:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2064245382",
            "id": 2064245382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57CeKG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064245382/reactions"
            },
            "updated_at": "2024-04-18T15:30:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064245382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > How is it detected?\r\n> \r\n> If >2 args are passed\r\n\r\nThat is exactly my point though. You will never see this happen, because all of the multi return values from the function iterator are dropped except the first.\r\n\r\n```lua\r\nlocal function test(...)\r\n  local nargs = select('#', ...)\r\n  print(nargs, 'args were passed')\r\nend\r\n\r\ntest(ipairs({1, 2, 3, 4}), vim.print)\r\ntest(ipairs({1, 2, 3, 4}))\r\n```\r\n\r\n\r\n```\r\n$ nvim -l test.lua\r\n2 args were passed\r\n3 args were passed\r\n```\r\n\r\n`ipairs` returns 3 return values. But in the first call to `test`, the last 2 are droped, so `test()` only sees 2 arguments (the first return value of `ipairs` and the `vim.print` function).\r\n\r\nIn the second invocation of `test` we see all 3 return values from `ipairs()` because it is passed as the last argument.",
            "created_at": "2024-04-18T15:58:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2064354130",
            "id": 2064354130,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57C4tS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064354130/reactions"
            },
            "updated_at": "2024-04-18T15:58:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2064354130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But in the first call to `test`, the last 2 are droped\r\n\r\nThe following case is the _current_ usage, which I'd want to detect & warn about, to avoid pain for HEAD users:\r\n\r\n    test(vim.print, ipairs({1, 2, 3, 4}))\r\n\r\nIt's true that the swapped case, which you [noted earlier](https://github.com/neovim/neovim/pull/26138#discussion_r1402119740), can't be detected, otherwise we wouldn't need to make any compromises.",
            "created_at": "2024-04-18T19:14:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2065010993",
            "id": 2065010993,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57FZEx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2065010993/reactions"
            },
            "updated_at": "2024-04-18T19:15:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2065010993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We should just remove the convenience functions then.\r\n\r\nInteresting to note that [14e4b6b](https://github.com/neovim/neovim/commit/14e4b6bbd8640675d7393bdeb3e93d74ab875ff1) removed all of our uses of `vim.iter.map()`.\r\n\r\nI have reworked this PR to remove iter.map/iter.filter.",
            "created_at": "2024-04-19T12:21:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2066455995",
            "id": 2066455995,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57K527",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066455995/reactions"
            },
            "updated_at": "2024-04-19T12:21:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066455995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For the record, I am not at all happy with this. This removes significant useful functionality for questionable aesthetic benefit. I respect your executive privileges but cannot leave this uncommented.",
            "created_at": "2024-04-19T12:59:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2066527164",
            "id": 2066527164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57LLO8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066527164/reactions"
            },
            "updated_at": "2024-04-19T12:59:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066527164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This removes significant useful functionality for questionable aesthetic benefit\r\n\r\nIt's not for aesthetics. It's the result of the above discussion. If we can articulate the \"significant benefit\" then the story changes. But in that case, the callback should be the last arg (and the aesthetics there greatly affect the ergonomics: it is _very_ awkward, in terms of readability, for the data source to not be the first arg of an operator).",
            "created_at": "2024-04-19T13:05:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2066537894",
            "id": 2066537894,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57LN2m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066537894/reactions"
            },
            "updated_at": "2024-04-19T13:07:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066537894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not interested in debating this, since my reading of the above discussion apparently differs from yours. Ergonomics are important, but sometimes necessarily constrained by desirable functionality. We apparently have very different (and incompatible) ideas about the relative priority of the two.",
            "created_at": "2024-04-19T13:13:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2066553106",
            "id": 2066553106,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57LRkS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066553106/reactions"
            },
            "updated_at": "2024-04-19T13:13:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066553106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Interesting to note that 14e4b6b removed all of our uses of vim.iter.map().\r\n\r\nThere are still quite a few `tbl_map` usages, which I thought `vim.iter.map()` was supposed to replace eventually.\r\n(And `tbl_map` is used a lot in plugins: https://github.com/search?q=vim.tbl_map+language%3ALua&type=code&l=Lua)\r\n\r\n\r\n> If we can articulate the \"significant benefit\" then the story changes. But in that case, the callback should be the last arg (and the aesthetics there greatly affect the ergonomics: it is very awkward, in terms of readability, for the data source to not be the first arg of an operator).\r\n\r\nIn some other languages one of the reasons for having the function first is to ease partial application.\r\n\r\nNot sure if a `partial` or `flip` is on the radar, and if this counts as significant benefit. I'm merely pointing it out because it wasn't mentioned so far in the discussion.\r\n\r\n(To clarify, I'm not opposed to removing it for now for 0.10 and revisiting it later given that the tbl variants remain untouched for now. Just adding some remarks for when/if it gets revisited)\r\n",
            "created_at": "2024-04-19T13:39:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2066611930",
            "id": 2066611930,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57Lf7a",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066611930/reactions"
            },
            "updated_at": "2024-04-19T13:56:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066611930",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> There are still quite a few `tbl_map` usages, which I thought `vim.iter.map()` was supposed to replace eventually. (And `tbl_map` is used a lot in plugins: https://github.com/search?q=vim.tbl_map+language%3ALua&type=code&l=Lua)\r\n\r\nYes, definitely. Though `vim.iter():map()` can be used for those cases.\r\n\r\n> Not sure if a `partial` or `flip` is on the radar, and if this counts as significant benefit. I'm merely pointing it out because it wasn't mentioned so far in the discussion.\r\n\r\nGood point. Does a \"pipeline\" (pseudo-monad) interface overlap with / eliminate the use-case for partial application?",
            "created_at": "2024-04-19T14:01:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/26138#issuecomment-2066654097",
            "id": 2066654097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
            "node_id": "IC_kwDOAPphoM57LqOR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066654097/reactions"
            },
            "updated_at": "2024-04-19T14:01:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2066654097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26138/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26138/commits",
    "created_at": "2023-11-21T16:29:16Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26138.diff",
    "draft": false,
    "head": {
        "label": "justinmk:iter",
        "ref": "iter",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2024-04-22T13:08:47Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 261332,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2023-07-25T13:51:02Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "969310549a5a264a20347115285005336dbd9ca4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26138",
    "id": 1611347744,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26138",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "",
            "id": 3968935075,
            "name": "breaking-change",
            "node_id": "LA_kwDOAPphoM7skSSj",
            "url": "https://api.github.com/repos/neovim/neovim/labels/breaking-change"
        }
    ],
    "locked": false,
    "merge_commit_sha": "18da6964cc610795ba1b7010e75d4f12ce73322a",
    "merged_at": "2024-04-19T13:22:41Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5gCzcg",
    "number": 26138,
    "patch_url": "https://github.com/neovim/neovim/pull/26138.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26138/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/969310549a5a264a20347115285005336dbd9ca4",
    "title": "refactor(vim.iter)!: remove vim.iter.map/filter/totable",
    "updated_at": "2024-04-19T14:01:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26138",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}