{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30014/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30014/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30014"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30014"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30014/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/cfdf68a7acde16597fbd896674af68c42361102c"
        }
    },
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5554,
            "forks_count": 5554,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1776,
            "open_issues_count": 1776,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-02T22:52:19Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 283521,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 81367,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-09-03T02:01:19Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 81367,
            "watchers_count": 81367,
            "web_commit_signoff_required": false
        },
        "sha": "4353996d0fa8e5872a334d68196d8088391960cf",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": " The implementation of grapheme clusters   was upgraded to closely follow extended grapheme clusters as defined by UAX#29  in the unicode standard. Noteworthily, this enables proper display of many  more emoji characters than before, including those encoded with multiple\r\nemoji codepoints combined with ZWJ (zero width joiner) codepoints and variant selectors.\r\n\r\nFix #7151\r\nFix #22014",
    "closed_at": "2024-08-30T10:58:48Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1726662462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1726662462"
                }
            },
            "author_association": "MEMBER",
            "body": "This test is for unprintable characters. When ZWJ is no longer unprintable some other unprintable character between 0x1000 and 0xFFFF should be used.",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-22T09:08:07Z",
            "diff_hunk": "@@ -3905,7 +3905,7 @@ func Test_normal_gj_on_extra_wide_char()\n   put =text\n   call cursor(2,1)\n   norm! gj\n-  call assert_equal([0,2,25,0], getpos('.'))\n+  call assert_equal([0,2,29,0], getpos('.'))",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1726662462",
            "id": 1726662462,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5m6sc-",
            "original_commit_id": "41bc866e5e377d1758a456ab1d026a0ad742006e",
            "original_line": 3908,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/old/testdir/test_normal.vim",
            "position": null,
            "pull_request_review_id": 2253934232,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1726662462/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-22T09:08:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1726662462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1727048715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1727048715"
                }
            },
            "author_association": "MEMBER",
            "body": "\"extra wide\" refers to the unprintable char taking 6 cells, which is more than most chars. \"unprintable\" alone doesn't necessarily have that meaning.",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-22T13:21:03Z",
            "diff_hunk": "@@ -3897,9 +3897,9 @@ func Test_normal_count_after_operator()\n   bw!\n endfunc\n \n-func Test_normal_gj_on_extra_wide_char()\n+func Test_normal_gj_on_unprintable_char()",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1727048715",
            "id": 1727048715,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5m8KwL",
            "original_commit_id": "c98b3e832cfdd9dffd1b55e7aa5d1917bf21bb0b",
            "original_line": 3900,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/old/testdir/test_normal.vim",
            "position": null,
            "pull_request_review_id": 2254508412,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1727048715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-22T13:21:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1727048715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1727213119"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1727213119"
                }
            },
            "author_association": "MEMBER",
            "body": "\"extra wide\" absolutely does not imply that something is at least 6 cells wide. \r\n\"unprintable\" refers to a documented, pre-existing thing which is the subject of this test.\r\n\r\nif the exact width of 6 is important I will add a comment.",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-22T14:52:21Z",
            "diff_hunk": "@@ -3897,9 +3897,9 @@ func Test_normal_count_after_operator()\n   bw!\n endfunc\n \n-func Test_normal_gj_on_extra_wide_char()\n+func Test_normal_gj_on_unprintable_char()",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1727213119",
            "id": 1727213119,
            "in_reply_to_id": 1727048715,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5m8y4_",
            "original_commit_id": "c98b3e832cfdd9dffd1b55e7aa5d1917bf21bb0b",
            "original_line": 3900,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/old/testdir/test_normal.vim",
            "position": null,
            "pull_request_review_id": 2254760901,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1727213119/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-22T14:52:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1727213119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1728807388"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728807388"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nin the unicode standard, with some modifications: An ascii char will always\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-23T11:15:35Z",
            "diff_hunk": "@@ -646,6 +646,12 @@ widespread as file format.\n A composing or combining character is used to change the meaning of the\n character before it.  The combining characters are drawn on top of the\n preceding character.\n+\n+Nvim largely follows the definition of extended grapheme clusters in UAX#29\n+in the unicode standard, with some modifications. An ascii char will always",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1728807388",
            "id": 1728807388,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nC4Hc",
            "original_commit_id": "be34d8fe8106d07e6065886b24aa3ec252809ae7",
            "original_line": 651,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/mbyte.txt",
            "position": null,
            "pull_request_review_id": 2256989125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728807388/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-23T11:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728807388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1728807731"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728807731"
                }
            },
            "author_association": "MEMBER",
            "body": "Should \"Unicode\" be capitalized here and below?\r\n",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-23T11:15:54Z",
            "diff_hunk": "@@ -646,6 +646,12 @@ widespread as file format.\n A composing or combining character is used to change the meaning of the\n character before it.  The combining characters are drawn on top of the\n preceding character.\n+\n+Nvim largely follows the definition of extended grapheme clusters in UAX#29\n+in the unicode standard, with some modifications. An ascii char will always",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1728807731",
            "id": 1728807731,
            "in_reply_to_id": 1728807388,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nC4Mz",
            "original_commit_id": "be34d8fe8106d07e6065886b24aa3ec252809ae7",
            "original_line": 651,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/mbyte.txt",
            "position": null,
            "pull_request_review_id": 2256989125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728807731/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-23T11:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728807731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1728808054"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728808054"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nstart a new cluster. In addition, 'arabicshape' enables the combining of some\r\narabic letters when they are shaped to be displayed together in a single cell.\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-23T11:16:12Z",
            "diff_hunk": "@@ -646,6 +646,12 @@ widespread as file format.\n A composing or combining character is used to change the meaning of the\n character before it.  The combining characters are drawn on top of the\n preceding character.\n+\n+Nvim largely follows the definition of extended grapheme clusters in UAX#29\n+in the unicode standard, with some modifications. An ascii char will always\n+start a new cluster. In addition 'arabicshape' enables the combining of some\n+arabic letters, when they are shaped to be displayed togheter in a single cell.",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1728808054",
            "id": 1728808054,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nC4R2",
            "original_commit_id": "be34d8fe8106d07e6065886b24aa3ec252809ae7",
            "original_line": 653,
            "original_position": 8,
            "original_start_line": 652,
            "path": "runtime/doc/mbyte.txt",
            "position": null,
            "pull_request_review_id": 2256989125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728808054/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-23T11:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728808054",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1728808367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728808367"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\tsingle width. However, such \"text emoji\" are treated as full-width\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-23T11:16:32Z",
            "diff_hunk": "@@ -2217,9 +2217,12 @@ A jump table for the options with a short description can be found at |Q_op|.\n \t\t\tglobal\n \tWhen on all Unicode emoji characters are considered to be full width.\n \tThis excludes \"text emoji\" characters, which are normally displayed as\n-\tsingle width.  Unfortunately there is no good specification for this\n-\tand it has been determined on trial-and-error basis.  Use the\n-\t|setcellwidths()| function to change the behavior.\n+\tsingle width. However, Such \"text emoji\" are treated as full-width",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1728808367",
            "id": 1728808367,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nC4Wv",
            "original_commit_id": "be34d8fe8106d07e6065886b24aa3ec252809ae7",
            "original_line": 2220,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 2256989125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728808367/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-23T11:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728808367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1728809024"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728809024"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n///   As of unicode 15.1 this will only break BOUNDCLASS_PREPEND followed by ascii,\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-23T11:17:08Z",
            "diff_hunk": "@@ -793,29 +812,45 @@ int mb_cptr2char_adv(const char **pp)\n   return c;\n }\n \n+static bool utf_iscomposing_first(int c)\n+{\n+  return c >= 128 && !utf8proc_grapheme_break(' ', c);\n+}\n+\n /// Check if the character pointed to by \"p2\" is a composing character when it\n-/// comes after \"p1\".  For Arabic sometimes \"ab\" is replaced with \"c\", which\n-/// behaves like a composing character.\n-bool utf_composinglike(const char *p1, const char *p2)\n+/// comes after \"p1\".\n+///\n+/// We use the definition in UAX#29 as implemented by utf8proc with some\n+/// exceptions:\n+///\n+/// - ASCII chars always begin a new cluster. This is a long assumed invariant\n+///   in the code base and very useful for performance (we can exit early for ASCII\n+///   all over the place, branch predictor go brrr in ascii-only text).\n+///   as of unicode 15.1 this will only break BOUNDCLASS_PREPEND followed by ascii,",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1728809024",
            "id": 1728809024,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nC4hA",
            "original_commit_id": "be34d8fe8106d07e6065886b24aa3ec252809ae7",
            "original_line": 829,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/mbyte.c",
            "position": null,
            "pull_request_review_id": 2256989125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728809024/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-23T11:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728809024",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1728809398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728809398"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// - When 'arabicshape' is active, some pairs of arabic letters \"ab\" is replaced with\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-23T11:17:25Z",
            "diff_hunk": "@@ -793,29 +812,45 @@ int mb_cptr2char_adv(const char **pp)\n   return c;\n }\n \n+static bool utf_iscomposing_first(int c)\n+{\n+  return c >= 128 && !utf8proc_grapheme_break(' ', c);\n+}\n+\n /// Check if the character pointed to by \"p2\" is a composing character when it\n-/// comes after \"p1\".  For Arabic sometimes \"ab\" is replaced with \"c\", which\n-/// behaves like a composing character.\n-bool utf_composinglike(const char *p1, const char *p2)\n+/// comes after \"p1\".\n+///\n+/// We use the definition in UAX#29 as implemented by utf8proc with some\n+/// exceptions:\n+///\n+/// - ASCII chars always begin a new cluster. This is a long assumed invariant\n+///   in the code base and very useful for performance (we can exit early for ASCII\n+///   all over the place, branch predictor go brrr in ascii-only text).\n+///   as of unicode 15.1 this will only break BOUNDCLASS_PREPEND followed by ascii,\n+///   which should be exceedingly rare (these PREPEND chars are expected to be\n+///   followed by multibyte chars within the same script family)\n+///\n+/// - When 'arabicshape' is active, some pairs of arabic leters \"ab\" is replaced with",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1728809398",
            "id": 1728809398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nC4m2",
            "original_commit_id": "be34d8fe8106d07e6065886b24aa3ec252809ae7",
            "original_line": 833,
            "original_position": 91,
            "original_start_line": null,
            "path": "src/nvim/mbyte.c",
            "position": null,
            "pull_request_review_id": 2256989125,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728809398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-23T11:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1728809398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732517101"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732517101"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T09:54:10Z",
            "diff_hunk": "@@ -381,15 +473,28 @@ describe('multibyte rendering: statusline', function()\n     }\n   end)\n \n-  it('unprintable chars in filename with custom stl', function()\n+  it('emoji with ZWJ in filename with custom stl', function()\n     command('set statusline=xx%#ErrorMsg#%f%##yy')\n     command('file 🧑‍💻')\n+    screen:expect {\n+      grid = [[\n+      ^                                        |\n+      {1:~                                       }|\n+      {3:xx}{9:🧑‍💻}{3:yy                                  }|\n+                                              |\n+    ]],\n+    }\n+  end)\n+\n+  it('unprintable chars in filename with custom stl', function()\n+    command('set statusline=xx%#ErrorMsg#%f%##yy')\n+    command('file 🧑​💻')\n     -- TODO: this is also wrong but also avoids a crash",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732517101",
            "id": 1732517101,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nRBzt",
            "original_commit_id": "249a7ea25fc7e3aa2f2f7f156ea945bcc09e4c3f",
            "original_line": 492,
            "original_position": 148,
            "original_start_line": null,
            "path": "test/functional/ui/multibyte_spec.lua",
            "position": null,
            "pull_request_review_id": 2262768965,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732517101/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T09:54:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732517101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732812690"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732812690"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\narabic letters, when they are shaped to be displayed together in a single cell.\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:03:51Z",
            "diff_hunk": "@@ -646,6 +646,12 @@ widespread as file format.\n A composing or combining character is used to change the meaning of the\n character before it.  The combining characters are drawn on top of the\n preceding character.\n+\n+Nvim largely follows the definition of extended grapheme clusters in UAX#29\n+in the Unicode standard, with some modifications: An ascii char will always\n+start a new cluster. In addition 'arabicshape', enables the combining of some\n+arabic letters, when they are shaped to be displayed toghether in a single cell.",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732812690",
            "id": 1732812690,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nSJ-S",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 653,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/mbyte.txt",
            "position": null,
            "pull_request_review_id": 2263291832,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732812690/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T13:03:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732812690",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732833027"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732833027"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  // Check for composing characters.  We can only display a limited amount, but\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:15:25Z",
            "diff_hunk": "@@ -996,9 +1031,10 @@ int utfc_ptr2len_len(const char *p, int size)\n     return 1;\n   }\n \n-  // Check for composing characters.  We can handle only the first six, but\n+  // Check for composing characters.  we can only display a limited amount, but",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732833027",
            "id": 1732833027,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nSO8D",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 1034,
            "original_position": 193,
            "original_start_line": null,
            "path": "src/nvim/mbyte.c",
            "position": null,
            "pull_request_review_id": 2263326971,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732833027/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T13:15:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732833027",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732853745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732853745"
                }
            },
            "author_association": "MEMBER",
            "body": "Using `0x80` here seems more consistent with similar functions\r\n```suggestion\r\n  assert(*next >= 0x80);\r\n```",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:27:48Z",
            "diff_hunk": "@@ -1679,50 +1736,107 @@ int utf_head_off(const char *base_in, const char *p_in)\n   const uint8_t *base = (uint8_t *)base_in;\n   const uint8_t *p = (uint8_t *)p_in;\n \n-  // Skip backwards over trailing bytes: 10xx.xxxx\n-  // Skip backwards again if on a composing char.\n-  const uint8_t *q;\n-  for (q = p;; q--) {\n-    // Move s to the last byte of this char.\n-    const uint8_t *s;\n-    for (s = q; (s[1] & 0xc0) == 0x80; s++) {}\n-\n-    // Move q to the first byte of this char.\n-    while (q > base && (*q & 0xc0) == 0x80) {\n-      q--;\n-    }\n-    // Check for illegal sequence. Do allow an illegal byte after where we\n-    // started.\n-    int len = utf8len_tab[*q];\n-    if (len != (int)(s - q + 1) && len != (int)(p - q + 1)) {\n-      return 0;\n+  const uint8_t *start = p;\n+\n+  // move start to the first byte of this codepoint\n+  // might stop on a continuation byte if overlong, handled by utf_ptr2CharInfo_impl\n+  while (start > base && (*start & 0xc0) == 0x80 && (p - start) < 6) {\n+    start--;\n+  }\n+\n+  uint8_t cur_len = utf8len_tab[*start];\n+  int32_t cur_code = utf_ptr2CharInfo_impl(start, (uintptr_t)cur_len);\n+  if (cur_code < 0) {\n+    return 0;  // p must be part of an illegal sequence\n+  }\n+  const uint8_t * const safe_end = start + cur_len;\n+\n+  int cur_bc = utf8proc_get_property(cur_code)->boundclass;\n+  if (always_break(cur_bc)) {\n+    return (int)(p - start);\n+  }\n+\n+  // backtrack to find the start of a cluster. we might go too far, checked in the next loop\n+  const uint8_t *cur_pos = start, *const p_start = start;\n+\n+  if (start == base) {\n+    return (int)(p - start);\n+  }\n+\n+  start--;\n+  while (*start >= 0x80) {  // stop on ascii, we are done\n+    while (start > base && (*start & 0xc0) == 0x80 && (cur_pos - start) < 6) {\n+      start--;\n     }\n \n-    if (q <= base) {\n+    int32_t prev_code = utf_ptr2CharInfo_impl(start, (uintptr_t)utf8len_tab[*start]);\n+    if (prev_code < 0) {\n+      start = cur_pos;  // start at valid sequence after invalid bytes\n       break;\n     }\n \n-    int c = utf_ptr2char((char *)q);\n-    if (utf_iscomposing(c)) {\n-      continue;\n+    int prev_bc = utf8proc_get_property(prev_code)->boundclass;\n+    if (always_break_two(prev_bc, cur_bc) && !arabic_combine(prev_code, cur_code)) {\n+      start = cur_pos;  // prev_code cannot be a part of this cluster\n+      break;\n+    } else if (start == base) {\n+      break;\n     }\n+    cur_pos = start;\n+    cur_bc = prev_bc;\n+    cur_code = prev_code;\n \n-    if (arabic_maycombine(c)) {\n-      // Advance to get a sneak-peak at the next char\n-      const uint8_t *j = q;\n-      j--;\n-      // Move j to the first byte of this char.\n-      while (j > base && (*j & 0xc0) == 0x80) {\n-        j--;\n-      }\n-      if (arabic_combine(utf_ptr2char((char *)j), c)) {\n-        continue;\n-      }\n+    start--;\n+  }\n+\n+  // hot path: we are already on the first codepoint of a sequence\n+  if (start == p_start) {\n+    return (int)(p - start);\n+  }\n+\n+  const uint8_t *q = start;\n+  while (q < p) {\n+    // don't need to find end of cluster. once we reached the codepoint of p, we are done\n+    int len = utfc_ptr2len_len((const char *)q, (int)(safe_end - q));\n+\n+    if (q + len > p) {\n+      return (int)(p - q);\n     }\n-    break;\n+\n+    q += len;\n   }\n \n-  return (int)(p - q);\n+  return 0;\n+}\n+\n+/// Assumes caller already handles ascii. see `utfc_next`\n+StrCharInfo utfc_next_impl(StrCharInfo cur)\n+{\n+  int32_t prev_code = cur.chr.value;\n+  uint8_t *next = (uint8_t *)(cur.ptr + cur.chr.len);\n+  GraphemeState state = GRAPHEME_STATE_INIT;\n+  assert(*next >= 128);",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732853745",
            "id": 1732853745,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nST_x",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 1818,
            "original_position": 364,
            "original_start_line": null,
            "path": "src/nvim/mbyte.c",
            "position": null,
            "pull_request_review_id": 2263363432,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732853745/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T13:27:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732853745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732863283"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732863283"
                }
            },
            "author_association": "MEMBER",
            "body": "This kind of makes it pointless to pass in `cur_char`, as `utf_ptr2cells()` already handles illegal bytes, and the `cur_char >= 0x80` check can be replaced with `MB_BYTE2LEN(*cur) > 1`.\r\n\r\nOr the logic in `utf_ptr2cells()` can be replicated here without the first `utf_ptr2char()` to avoid decoding first char twice, but then that will also require passing in `ci.chr.len`, so not sure if that's worth it.",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:33:31Z",
            "diff_hunk": "@@ -146,7 +146,7 @@ CharSize charsize_regular(CharsizeArg *csarg, char *const cur, colnr_T const vco\n   } else if (cur_char < 0) {\n     size = kInvalidByteCells;\n   } else {\n-    size = char2cells(cur_char);\n+    size = ptr2cells(cur);",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732863283",
            "id": 1732863283,
            "line": 149,
            "node_id": "PRRC_kwDOAPphoM5nSWUz",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 149,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": 5,
            "pull_request_review_id": 2263382947,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732863283/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T14:06:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732863283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732863974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732863974"
                }
            },
            "author_association": "MEMBER",
            "body": "ditto",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:33:51Z",
            "diff_hunk": "@@ -352,7 +352,7 @@ static inline CharSize charsize_fast_impl(win_T *const wp, bool use_tabstop, col\n     if (cur_char < 0) {\n       width = kInvalidByteCells;\n     } else {\n-      width = char2cells(cur_char);\n+      width = ptr2cells(cur);",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732863974",
            "id": 1732863974,
            "line": 359,
            "node_id": "PRRC_kwDOAPphoM5nSWfm",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 359,
            "original_position": 25,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": 29,
            "pull_request_review_id": 2263382947,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732863974/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T13:41:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732863974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732864200"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732864200"
                }
            },
            "author_association": "MEMBER",
            "body": "ditto",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:33:59Z",
            "diff_hunk": "@@ -371,23 +371,23 @@ static inline CharSize charsize_fast_impl(win_T *const wp, bool use_tabstop, col\n /// Can be used if CSType is kCharsizeFast.\n ///\n /// @see charsize_regular\n-CharSize charsize_fast(CharsizeArg *csarg, colnr_T const vcol, int32_t const cur_char)\n+CharSize charsize_fast(CharsizeArg *csarg, const char *cur, colnr_T vcol, int32_t cur_char)\n   FUNC_ATTR_PURE\n {\n-  return charsize_fast_impl(csarg->win, csarg->use_tabstop, vcol, cur_char);\n+  return charsize_fast_impl(csarg->win, cur, csarg->use_tabstop, vcol, cur_char);\n }\n \n /// Get the number of cells taken up on the screen at given virtual column.\n ///\n /// @see win_chartabsize()\n-int charsize_nowrap(buf_T *buf, bool use_tabstop, colnr_T vcol, int32_t cur_char)\n+int charsize_nowrap(buf_T *buf, const char *cur, bool use_tabstop, colnr_T vcol, int32_t cur_char)\n {\n   if (cur_char == TAB && use_tabstop) {\n     return tabstop_padding(vcol, buf->b_p_ts, buf->b_p_vts_array);\n   } else if (cur_char < 0) {\n     return kInvalidByteCells;\n   } else {\n-    return char2cells(cur_char);\n+    return ptr2cells(cur);",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732864200",
            "id": 1732864200,
            "line": 394,
            "node_id": "PRRC_kwDOAPphoM5nSWjI",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 394,
            "original_position": 53,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": 57,
            "pull_request_review_id": 2263382947,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732864200/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-27T13:41:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732864200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1732888207"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732888207"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe `utf_ptr2CharInfo()` can be used here instead of these two calls?",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-27T13:47:32Z",
            "diff_hunk": "@@ -516,15 +516,24 @@ int utf_ptr2cells(const char *p)\n   // Need to convert to a character number.\n   if ((uint8_t)(*p) >= 0x80) {\n     int c = utf_ptr2char(p);\n+    int len = utf_ptr2len(p);",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1732888207",
            "id": 1732888207,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5nScaP",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 519,
            "original_position": 4,
            "original_start_line": 518,
            "path": "src/nvim/mbyte.c",
            "position": null,
            "pull_request_review_id": 2263426904,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732888207/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-08-27T13:58:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1732888207",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30014#discussion_r1734316103"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30014"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1734316103"
                }
            },
            "author_association": "MEMBER",
            "body": "ye, multiple decoding also happens in other places like the main win_line() loop. we probably want a specialized version of CharInfo which also includes the ptr2cells() width calculated at the same time as the byte length. Although I am thinking of that as a follow-up perf PR while only focusing on correctness (and no larger regressions) in this PR.",
            "commit_id": "cfdf68a7acde16597fbd896674af68c42361102c",
            "created_at": "2024-08-28T09:20:26Z",
            "diff_hunk": "@@ -146,7 +146,7 @@ CharSize charsize_regular(CharsizeArg *csarg, char *const cur, colnr_T const vco\n   } else if (cur_char < 0) {\n     size = kInvalidByteCells;\n   } else {\n-    size = char2cells(cur_char);\n+    size = ptr2cells(cur);",
            "html_url": "https://github.com/neovim/neovim/pull/30014#discussion_r1734316103",
            "id": 1734316103,
            "in_reply_to_id": 1732863283,
            "line": 149,
            "node_id": "PRRC_kwDOAPphoM5nX5BH",
            "original_commit_id": "7bdfbe188d30d293ce33a6bc6d33bf2bbee95a3d",
            "original_line": 149,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": 5,
            "pull_request_review_id": 2265674969,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1734316103/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-08-28T09:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1734316103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "@bfredl sorry to ping you but I have been searching everywhere to try and figure out a solution to my problem and I believe it is similar to the problem(s) you were aiming to fix with this PR. I posted the repro and details in a post in the Neovim reddit here: https://www.reddit.com/r/neovim/comments/1f6z9da/help_with_1_keycap_digit_1_emoji_sequence_with/\r\n\r\nI am happy to give you more details or move this conversation somewhere else if you prefer, but the TLDR is that the emoji 1️⃣ (and the other similar numbers 2-9) are having problems and I believe it is due to the multiple code points. It is comprised of `U+31 + U+FE0F + U+20E3` and doing the `str2list` returns: `{ 49, 65039, 8419 }`. Thanks in advance!",
            "created_at": "2024-09-02T05:49:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/30014#issuecomment-2323865113",
            "id": 2323865113,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
            "node_id": "IC_kwDOAPphoM6Kg14Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2323865113/reactions"
            },
            "updated_at": "2024-09-02T05:49:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2323865113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That probably can't be fixed due to performance reasons.",
            "created_at": "2024-09-02T06:12:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/30014#issuecomment-2323893028",
            "id": 2323893028,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
            "node_id": "IC_kwDOAPphoM6Kg8sk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2323893028/reactions"
            },
            "updated_at": "2024-09-02T06:12:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2323893028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That probably can't be fixed due to performance reasons.\n\n@zeertzjq thanks for the quick reply! Is there some sort of \"fallback\" workaround that I could implement in my config? Like an autocmd that would render emojis like these to a broken icon (or an alternative) emoji (something I would choose)? My team uses these number emojis a lot in comments so it is not an option for me to just remove / replace. But I am totally fine if I just render emojis like these as compatible ones (\"replace\" how it renders on client side but not alter the actual emoji as I don't want to create / commit a change.  I would just create a mapping list and add to it anytime these pop up. I'm just not sure if there is a reasonable way to do this (presumably an autocmd)? Thanks!!",
            "created_at": "2024-09-02T06:52:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/30014#issuecomment-2323948108",
            "id": 2323948108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
            "node_id": "IC_kwDOAPphoM6KhKJM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2323948108/reactions"
            },
            "updated_at": "2024-09-02T06:57:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2323948108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "we could at least mark anything + 0xFE0F as having ambiguous terminal width ( `utf_ambiguous_width`) . That would fix rendering of the rest of the line getting out of sync, even if it is not having the correct width (which is hard to encode as `setcellwidths()` does not handle clusters by design).",
            "created_at": "2024-09-02T09:16:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/30014#issuecomment-2324235815",
            "id": 2324235815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
            "node_id": "IC_kwDOAPphoM6KiQYn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2324235815/reactions"
            },
            "updated_at": "2024-09-02T09:16:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2324235815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "> we could at least mark anything + 0xFE0F as having ambiguous terminal width ( utf_ambiguous_width) . That would fix rendering of the rest of the line getting out of sync\r\n\r\nThanks @bfredl ! That sounds great to me! My issue is not the display of the emoji itself but the fact it throws the rest of the line (and often surrounding lines) off. A couple questions:\r\n\r\n1. are you able to confirm that my scenario is actually a problem (as opposed to just being an issue on my side)? Like does it make sense that I am having a problem with this 1️⃣ emoji?\r\n2. can you think of any temporary workaround for the time being that I can apply on my end? I assume the `utf_ambiguous_width` is something you have to do in neovim core and not something I can do on my end?\r\n\r\nThanks so much for the quick response!",
            "created_at": "2024-09-02T12:56:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/30014#issuecomment-2324698517",
            "id": 2324698517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
            "node_id": "IC_kwDOAPphoM6KkBWV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2324698517/reactions"
            },
            "updated_at": "2024-09-02T12:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2324698517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "PSA: _Please_ don't leave tangential comments on (especially) on a (merged) PR! If you have a problem, open an issue (yes, that means filling out the template. it's annoying but there for a reason!).\r\n\r\nThat would also allow a PR to be linked to it, so you wouldn't have missed https://github.com/neovim/neovim/pull/30232.",
            "created_at": "2024-09-02T12:58:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/30014#issuecomment-2324702784",
            "id": 2324702784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
            "node_id": "IC_kwDOAPphoM6KkCZA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2324702784/reactions"
            },
            "updated_at": "2024-09-02T12:58:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2324702784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30014/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30014/commits",
    "created_at": "2024-08-08T17:35:17Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30014.diff",
    "draft": false,
    "head": {
        "label": "bfredl:neoemoji",
        "ref": "neoemoji",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/bfredl/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/bfredl/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/bfredl/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/bfredl/neovim/branches{/branch}",
            "clone_url": "https://github.com/bfredl/neovim.git",
            "collaborators_url": "https://api.github.com/repos/bfredl/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/bfredl/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/bfredl/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/bfredl/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/bfredl/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/bfredl/neovim/contributors",
            "created_at": "2014-06-20T19:51:31Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/bfredl/neovim/deployments",
            "description": "vim's rebirth for the 21st century",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/bfredl/neovim/downloads",
            "events_url": "https://api.github.com/repos/bfredl/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/bfredl/neovim/forks",
            "full_name": "bfredl/neovim",
            "git_commits_url": "https://api.github.com/repos/bfredl/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/bfredl/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/bfredl/neovim/git/tags{/sha}",
            "git_url": "git://github.com/bfredl/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "http://neovim.org/",
            "hooks_url": "https://api.github.com/repos/bfredl/neovim/hooks",
            "html_url": "https://github.com/bfredl/neovim",
            "id": 21050434,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/bfredl/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/bfredl/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/bfredl/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/bfredl/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/bfredl/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/bfredl/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/bfredl/neovim/merges",
            "milestones_url": "https://api.github.com/repos/bfredl/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMTA1MDQzNA==",
            "notifications_url": "https://api.github.com/repos/bfredl/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/bfredl/neovim/pulls{/number}",
            "pushed_at": "2024-09-02T10:49:06Z",
            "releases_url": "https://api.github.com/repos/bfredl/neovim/releases{/id}",
            "size": 284264,
            "ssh_url": "git@github.com:bfredl/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/bfredl/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/bfredl/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/bfredl/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/bfredl/neovim/subscription",
            "svn_url": "https://github.com/bfredl/neovim",
            "tags_url": "https://api.github.com/repos/bfredl/neovim/tags",
            "teams_url": "https://api.github.com/repos/bfredl/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/bfredl/neovim/git/trees{/sha}",
            "updated_at": "2022-03-21T08:01:17Z",
            "url": "https://api.github.com/repos/bfredl/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "cfdf68a7acde16597fbd896674af68c42361102c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30014",
    "id": 2011004049,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30014",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "(multibyte) unicode characters",
            "id": 2882115256,
            "name": "unicode  💩",
            "node_id": "MDU6TGFiZWwyODgyMTE1MjU2",
            "url": "https://api.github.com/repos/neovim/neovim/labels/unicode%20%20%F0%9F%92%A9"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "Enable CI for s390x",
            "id": 6154834276,
            "name": "ci:s390x",
            "node_id": "LA_kwDOAPphoM8AAAABbttRZA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:s390x"
        }
    ],
    "locked": true,
    "merge_commit_sha": "5f95f1249f464e4f0ceed468ec5a1ba6e810da14",
    "merged_at": "2024-08-30T10:58:48Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM533XyR",
    "number": 30014,
    "patch_url": "https://github.com/neovim/neovim/pull/30014.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30014/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/cfdf68a7acde16597fbd896674af68c42361102c",
    "title": "support emojis with ZWJ and variant selectors",
    "updated_at": "2024-09-02T12:58:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30014",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
        "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
        "followers_url": "https://api.github.com/users/bfredl/followers",
        "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
        "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/bfredl",
        "id": 1363104,
        "login": "bfredl",
        "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
        "organizations_url": "https://api.github.com/users/bfredl/orgs",
        "received_events_url": "https://api.github.com/users/bfredl/received_events",
        "repos_url": "https://api.github.com/users/bfredl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/bfredl"
    }
}