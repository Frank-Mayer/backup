{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25512/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25512/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25512"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25512"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25512/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/76570465372822ac45fdde92afaa564e1cb6d487"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4912,
            "forks_count": 4912,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1653,
            "open_issues_count": 1653,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-10-10T01:53:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 252665,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70016,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-10-10T00:53:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70016,
            "watchers_count": 70016,
            "web_commit_signoff_required": false
        },
        "sha": "c40a1c0f41ad2557b1e1e1850244eca2d895a07d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "resolves #25069\r\n\r\nProblem\r\n---\r\nThe LSP specification allows inlay hints to include tooltips, clickable label parts, and code actions; but there is no way to query for these.\r\n\r\nThe UX problem is tricky (since inlay hints exist only at one (row,col) position, and can have multiple label parts, and is generally designed for mouse-centric UX); but we can punt that to plugins.\r\n\r\nSolution\r\n---\r\nAdd a minimal viable extension point from which plugins can query for inlay hints in a range to build functionality on top of.\r\n\r\nPossible Next Steps\r\n---\r\n\r\n- Add `virt_text_idx` field to `vim.fn.getmousepos()` return value, for usage in mappings of `<LeftMouse>`, `<C-LeftMouse>`, etc\r\n- Provide mechanism to resolve inlay hints `inlayHint/resolve`, otherwise they may not have the tooltip markdown attached.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347614685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347614685"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Unfortunately this only works for LuaLS and doesn't show up in generated Vimdocs\n\nA YOLO solution could be to rename/deprecate  `__call` to  `set` or something \n\nOtherwise maybe we bank on the `gen_vimdoc.py` rewrite lol",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T15:29:27Z",
            "diff_hunk": "@@ -260,7 +344,10 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n+--- @overload fun(bufnr: number, enable: boolean) Enable/disable inlay hints for a buffer.\n+--- bufnr: Buffer handle, or 0 for current\n+--- enable: true/false to enable/disable, nil to toggle",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347614685",
            "id": 1347614685,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QUvfd",
            "original_commit_id": "032ab9d3e174493fc8c279e5c1f11c6582f21efb",
            "original_line": 350,
            "original_position": 98,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660168118,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347614685/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:01:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347614685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347646593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347646593"
                }
            },
            "author_association": "MEMBER",
            "body": "Afaik newer APIs tend to use (0, 0) indexing. But we should also look at where https://github.com/neovim/neovim/issues/25509 is heading.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T15:52:28Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347646593",
            "id": 1347646593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU3SB",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 133,
            "original_position": 36,
            "original_start_line": 132,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347646593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347646593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347647133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347647133"
                }
            },
            "author_association": "MEMBER",
            "body": "`to format` is probably a copy paste error?",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T15:52:48Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347647133",
            "id": 1347647133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU3ad",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 131,
            "original_position": 34,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347647133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347647133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347650106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347650106"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd tend to change `nil` to imply all buffers. Otherwise you've no way to get all inlay hints. While getting the one for the current buffer could be done using `{ bufnr = 0 }` or `{ bufnr = api.nvim_get_current_buf() }`\r\n",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T15:54:17Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347650106",
            "id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU4I6",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347650106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347650106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347651372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347651372"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- @class vim.lsp.inlay_hints.get.opts\r\n```\r\n\r\nclass Type annotations are global, so namespacing doesn't hurt.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T15:55:12Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347651372",
            "id": 1347651372,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU4cs",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 101,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347651372/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347651372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347655601"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347655601"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I tried to use ` ```lua ` but I couldn't make it work with gen_vimdoc.py regardless of what spacing/indentation I tried",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T15:58:25Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347655601",
            "id": 1347655601,
            "line": 123,
            "node_id": "PRRC_kwDOAPphoM5QU5ex",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 123,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 26,
            "pull_request_review_id": 1660168118,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347655601/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347655601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347665525"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347665525"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I guess then we also want `nil` range to imply the whole buffer (for each buffer). I'll work on that",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:06:08Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347665525",
            "id": 1347665525,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU751",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660241378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347665525/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T16:06:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347665525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347667956"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347667956"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Subscribed!\n\nI guess I can look into lsp.Range here? Will look tomorrow",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:08:11Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347667956",
            "id": 1347667956,
            "in_reply_to_id": 1347646593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU8f0",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 133,
            "original_position": 36,
            "original_start_line": 132,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660245137,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347667956/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T16:08:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347667956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347693429"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347693429"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: I think using `?` instead of `|nil` is preferred.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:28:55Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347693429",
            "id": 1347693429,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVCt1",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347693429/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347693429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347697411"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347697411"
                }
            },
            "author_association": "MEMBER",
            "body": "I think you need to add a blank line before the code block and after it (example [here](https://github.com/MariaSolOs/neovim/blob/3079fa1f9f198bb303fa616004da9c269673c7a5/runtime/lua/vim/_editor.lua#L886-L896)).",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:32:05Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347697411",
            "id": 1347697411,
            "in_reply_to_id": 1347655601,
            "line": 123,
            "node_id": "PRRC_kwDOAPphoM5QVDsD",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 123,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 26,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347697411/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347697411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708659"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708659"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local cursor_pos = api.nvim_win_get_cursor(0)\r\n```",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:41:38Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.\n+---     Defaults to cursor position.\n+--- @return lsp.InlayHint[]\n+function M.get(options)\n+  options = options or {}\n+  --- @cast options InlayHintOptions\n+  local bufnr = options.bufnr or api.nvim_get_current_buf()\n+  local range = options.range\n+  if not range then\n+    local cursor_pos = vim.api.nvim_win_get_cursor(0)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708659",
            "id": 1347708659,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVGbz",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 142,
            "original_position": 45,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708659/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708799"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708799"
                }
            },
            "author_association": "MEMBER",
            "body": "Yea Markdown code fences are known not to work in \"inline\" cases like this :(",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:41:46Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708799",
            "id": 1347708799,
            "in_reply_to_id": 1347655601,
            "line": 123,
            "node_id": "PRRC_kwDOAPphoM5QVGd_",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 123,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 26,
            "pull_request_review_id": 1660303052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 2,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708799/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710145"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710145"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not use the options type here? That what users can get better editor support.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:42:45Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710145",
            "id": 1347710145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVGzB",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710145/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710851"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: It seems like these are usually just named `opts`.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:43:22Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710851",
            "id": 1347710851,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVG-D",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710851/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347716860"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347716860"
                }
            },
            "author_association": "MEMBER",
            "body": "But either works with our tooling, which is the important bit.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-05T16:48:14Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347716860",
            "id": 1347716860,
            "in_reply_to_id": 1347693429,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVIb8",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660314652,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347716860/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:48:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347716860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348281273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348281273"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Actually, multiple buffers is trickier than I thought.\r\n\r\nThe [`InlayHint` struct](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHint) doesn't have documentURI or anything. So for multiple buffers to make sense (i.e. know where each `InlayHint` is coming from), we'd have to add bufnr to the inlay hint object ourselves (or create a mapping). Is it worth it? What's the use case for multiple buffers?",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:11:23Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348281273",
            "id": 1348281273,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXSO5",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661172154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348281273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T06:11:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348281273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348303654"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348303654"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The issue here is the interaction between the code fence and the bullet point. If you put an extra newline, an extra bullet point is inserted",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:39:32Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348303654",
            "id": 1348303654,
            "in_reply_to_id": 1347655601,
            "line": 123,
            "node_id": "PRRC_kwDOAPphoM5QXXsm",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 123,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 26,
            "pull_request_review_id": 1661204706,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348303654/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:39:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348303654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312551"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312551"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "fixed :+1:",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:50:46Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312551",
            "id": 1348312551,
            "in_reply_to_id": 1347647133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXZ3n",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 131,
            "original_position": 34,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661217767,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312551/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312653"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " changed to `lsp.Range`",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:50:54Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312653",
            "id": 1348312653,
            "in_reply_to_id": 1347646593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXZ5N",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 133,
            "original_position": 36,
            "original_start_line": 132,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661217959,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T06:50:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313532"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313532"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think a simple usecase would be to have two windows open next to each other with different buffers.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:51:56Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313532",
            "id": 1348313532,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXaG8",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661219257,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313532/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T06:51:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313914"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313914"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " changed :+1:",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:52:20Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313914",
            "id": 1348313914,
            "in_reply_to_id": 1347651372,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXaM6",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 101,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661219805,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313914/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:52:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313914",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314064"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Figured something out :+1:",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:52:34Z",
            "diff_hunk": "@@ -260,7 +344,10 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n+--- @overload fun(bufnr: number, enable: boolean) Enable/disable inlay hints for a buffer.\n+--- bufnr: Buffer handle, or 0 for current\n+--- enable: true/false to enable/disable, nil to toggle",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314064",
            "id": 1348314064,
            "in_reply_to_id": 1347614685,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXaPQ",
            "original_commit_id": "032ab9d3e174493fc8c279e5c1f11c6582f21efb",
            "original_line": 350,
            "original_position": 98,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661220072,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314064/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:52:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314970"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314970"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Changed to `?` (in TypeScript this would be the only correct way b/c of assigning `undefined`; in Lua it's just for aesthetics)",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T06:53:43Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314970",
            "id": 1348314970,
            "in_reply_to_id": 1347693429,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXada",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661221494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314970/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:53:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348329669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348329669"
                }
            },
            "author_association": "MEMBER",
            "body": "> Is it worth it? What's the use case for multiple buffers?\r\n\r\nI don't have a concrete use-case in mind. It was mostly to go with the more flexible variant to avoid driving us into a corner with the choice.\r\n\r\nThinking about this some more, we may actually need to wrap the InlayHint structure into a custom table anyway to provide the client or client_id. Otherwise you can't reliably execute a command (as users shouldn't attempt to use _all_ connected clients to execute it, but the client which provided the inlayhint). Same would be the case for resolve (although that's still tbd how we deal with that in general)\r\n\r\nAnother option could be to go with `.get(bufnr, opts)` to make `bufnr` mandatory. No strong preference, but I'd tend to custom struct, and support all buffers, given the `client_id` requirement.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T07:11:11Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348329669",
            "id": 1348329669,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXeDF",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661247199,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348329669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T07:11:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348329669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348333814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348333814"
                }
            },
            "author_association": "MEMBER",
            "body": "Getting all the hints might be helpful in case a plugin wants to trigger an `inlayHint/refresh` request, but that would require direct communication with the client (or the plugin being the LSP client itself).",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T07:15:33Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348333814",
            "id": 1348333814,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXfD2",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661253505,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348333814/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T07:47:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348333814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585233"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Updated, thanks!",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T11:13:04Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585233",
            "id": 1348585233,
            "in_reply_to_id": 1347710851,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QYccR",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661644285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T11:13:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585787"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585787"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I coulda sworn it broke CI before, but it seems fine now, so I've done so!",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T11:13:46Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585787",
            "id": 1348585787,
            "in_reply_to_id": 1347710145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QYck7",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661645193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585787/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T11:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348586697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348586697"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I ran into the `client_id` requirement myself with the plugin demo. Sounds good. I've made the struct change.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-06T11:14:45Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348586697",
            "id": 1348586697,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QYczJ",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661646542,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348586697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T11:14:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348586697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1350839067"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350839067"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we move `vim.lsp.inlay_hint()` to this module as well (maybe renaming it to `toggle`)?",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-09T22:08:29Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1350839067",
            "id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QhCsb",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665372034,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350839067/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T22:20:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350839067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1350865743"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350865743"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit, but I would use `integer` for buffer numbers and client IDs.",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-09T22:19:08Z",
            "diff_hunk": "@@ -98,6 +98,111 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr number?",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1350865743",
            "id": 1350865743,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QhJNP",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1665372034,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350865743/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T22:20:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350865743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351022612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351022612"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " i keep forgetting that exists (typescript brain lol), thanks",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-10T00:09:15Z",
            "diff_hunk": "@@ -98,6 +98,111 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr number?",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351022612",
            "id": 1351022612,
            "in_reply_to_id": 1350865743,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QhvgU",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1665605038,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351022612/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T00:09:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351022612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351046088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351046088"
                }
            },
            "author_association": "MEMBER",
            "body": "lol tell me about it",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-10T00:16:46Z",
            "diff_hunk": "@@ -98,6 +98,111 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr number?",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351046088",
            "id": 1351046088,
            "in_reply_to_id": 1350865743,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qh1PI",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1665631844,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351046088/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T00:16:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351046088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351114585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351114585"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm a fan of `toggle`, I initially suggested that before I figured out how to overload it in the docs. I still want to do it since I'm not a huge fan of using callable objects for APIs\r\n\r\nThat being said, I'm probably the most cavalier person when it comes to deprecations and/or breaking changes so I'll defer to others on this.\r\n\r\nOne somewhat awkward thing is that cmp displays the completion for the function variant (which would be deprecated) until you add the dot after it, so users might not realize that there's non-deprecated stuff after the dot. Although putting the deprecation message on a newline seems like a pretty good fix:\r\n\r\n\r\n<img width=\"599\" alt=\"Screenshot 2023-10-09 at 6 03 38 PM\" src=\"https://github.com/neovim/neovim/assets/5601392/da48d376-a85a-448c-9d84-444bc5aa22a9\">\r\ns",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-10T01:04:05Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351114585",
            "id": 1351114585,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QiF9Z",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665716892,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351114585/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T01:05:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351114585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351137096"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351137096"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm the documentation from the completion entry makes me think that LuaLS is returning the results from both the module definition and the current function, which does feel confusing (and potential bug farm IMO).",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-10T01:36:51Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351137096",
            "id": 1351137096,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QiLdI",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665748153,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351137096/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T01:36:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351137096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351175126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351175126"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Actually, YOLO, why be timid.\r\n\r\nIncluding the change in the PR for now until further advised. Inlay hints never released in stable (0.9) anyway",
            "commit_id": "76570465372822ac45fdde92afaa564e1cb6d487",
            "created_at": "2023-10-10T01:53:36Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351175126",
            "id": 1351175126,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QiUvW",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665792612,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351175126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T01:53:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351175126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's the sample plugin using this API: https://github.com/llllvvuu/interactive-inlay.nvim\r\n\r\nI looked at how others are doing interactive inlay hints, and noticed that @MariaSolOs authored the `tsserver` stuff so probably has smart things to say (and probably knows more about our conventions on the LSP side, which I know nothing about)",
            "created_at": "2023-10-05T12:54:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748842989",
            "id": 1748842989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPTnt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748842989/reactions"
            },
            "updated_at": "2023-10-05T12:54:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748842989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "cc @mfussenegger @p00f ",
            "created_at": "2023-10-05T13:06:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748862991",
            "id": 1748862991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPYgP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748862991/reactions"
            },
            "updated_at": "2023-10-05T13:06:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748862991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Dumping some more notes:\r\n\r\nEdge cases where inlay hint tooltip/click is more efficient than regular hover / go to type definition:\r\n- Variable type inlay hint where type has a type inside of it\r\n- Return type inlay hint\r\n\r\nIn theory, language servers could include these info/prompts in regular hover docs too. `lua_ls` for example has typedoc in variable hover doc, but not in function hover doc\r\n\r\nThe efficiency difference is probably smaller in Neovim because everything is fast in Neovim.",
            "created_at": "2023-10-05T13:24:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748894608",
            "id": 1748894608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPgOQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748894608/reactions"
            },
            "updated_at": "2023-10-06T06:55:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748894608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think clickable should just be clickable, instead of \"querying\" a hint",
            "created_at": "2023-10-05T13:31:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748907374",
            "id": 1748907374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPjVu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748907374/reactions"
            },
            "updated_at": "2023-10-05T13:31:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748907374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36493671?v=4",
                "events_url": "https://api.github.com/users/p00f/events{/privacy}",
                "followers_url": "https://api.github.com/users/p00f/followers",
                "following_url": "https://api.github.com/users/p00f/following{/other_user}",
                "gists_url": "https://api.github.com/users/p00f/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/p00f",
                "id": 36493671,
                "login": "p00f",
                "node_id": "MDQ6VXNlcjM2NDkzNjcx",
                "organizations_url": "https://api.github.com/users/p00f/orgs",
                "received_events_url": "https://api.github.com/users/p00f/received_events",
                "repos_url": "https://api.github.com/users/p00f/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/p00f/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/p00f/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/p00f"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think clickable should just be clickable, instead of \"querying\" a hint\r\n\r\nFor TUI, mouse click/hover may not be feasible, in which case the question one has to figure out is how to \"DWIM\" based on a key press. Range query would be the most general tool that plugins could use to do that.\r\n\r\n(also users might just prefer to use keyboard)\r\n\r\nHow hard would it be to make virtual text clickable? Like setting the \"cursor: pointer\" and everything?\r\n\r\n",
            "created_at": "2023-10-05T13:37:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748918047",
            "id": 1748918047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPl8f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748918047/reactions"
            },
            "updated_at": "2023-10-05T16:13:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748918047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How hard would it be to make virtual text clickable? Like setting the \"cursor: pointer\" and everything?\r\n\r\nOSC 8 is what you need to communicate \"clickability\" to the terminal, but even that is just for hyperlinks. I don't think it's possible to make an OSC 8 link do something like write text back to the running application.\r\n\r\nThere might be some way to do something hacky here. Maybe using an empty \"link\" so that the terminal still gives you the pointer cursor, but the click event still goes through to Nvim. No idea if that'd work, I'm just brainstorming.",
            "created_at": "2023-10-05T13:44:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748932592",
            "id": 1748932592,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPpfw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748932592/reactions"
            },
            "updated_at": "2023-10-05T13:44:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748932592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Maybe using an empty \"link\" so that the terminal still gives you the pointer cursor, but the click event still goes through to Nvim. No idea if that'd work, I'm just brainstorming.\r\n\r\nVery interesting, seems worth looking into.\r\n\r\nFor handling the click event itself, I played around with `vim.fn.getmousepos()` just now. I don't think any of the fields it returns are enough to figure out which label was clicked; perhaps a `virt_text_idx` field would do the trick?\r\n\r\nThen on the plugin side, I could add mappings for `<LeftMouse>`, `<C-LeftMouse>`, etc which get the `vim.lsp.buf.inlay_hints()` at the mouse `{ row, col }` and finds the label via `virt_text_idx`\n\nEDIT: The mouse handler does need to be Neovim core if the clickability indicator is in core (which it has to be, I think)\n\nTODO: I haven't thought through how this all plays with GUI frontends like Neovide",
            "created_at": "2023-10-05T13:59:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748960004",
            "id": 1748960004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPwME",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748960004/reactions"
            },
            "updated_at": "2023-10-05T16:13:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748960004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": " Some research on mouse hover: https://github.com/neovim/neovim/issues/9534",
            "created_at": "2023-10-05T14:09:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748981601",
            "id": 1748981601,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oP1dh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748981601/reactions"
            },
            "updated_at": "2023-10-05T14:09:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748981601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "### regarding api/location\r\n\r\nPart of the motivation for a dedicated module for `inlay_hints` was that it would allow us to add new methods to it. So big -1 for now adding a `buf.inlay_hints` that is ending up calling a different method on `inlay_hints`.\r\n\r\nThis should be a `vim.lsp.inlay_hints.get(opts)` if we want to expose the data. Where `opts` provides various filters. Similar to `vim.diagnostic.get()` or `vim.lsp.codelens.get()`.\r\n\r\n\r\n### regarding resolve\r\n\r\nI think ideally we'd handle this transparently, without users of higher level APIs knowing anything about it.\r\n\r\n\r\n---\r\n\r\n> The LSP specification allows inlay hints to include tooltips, clickable label parts, and code actions;\r\n\r\n\r\nThey do not have code actions, but can contain textEdits that one can apply (I think the intention here is to persist the inlay hint into actual text).\r\n\r\nThis could be exposed via a `inlay_hints.apply()` or `inlay_hints.run()` or something like that.\r\n\r\nThe label can also contain a command. I have no idea what the intention here is. Do language servers use this? If so, what for?\r\n\r\n\r\n---\r\n\r\n\r\nI wonder if neovim should have a more generic tooltip mechanism?\r\n",
            "created_at": "2023-10-05T14:10:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748982515",
            "id": 1748982515,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oP1rz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748982515/reactions"
            },
            "updated_at": "2023-10-05T14:10:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748982515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This should be a `vim.lsp.inlay_hints.get(opts)` if we want to expose the data. Where `opts` provides various filters. Similar to `vim.diagnostic.get()` or `vim.lsp.codelens.get()`.\r\n\r\nThanks, that's exactly the kind of advice I'm looking for regarding the conventions (I'm not familiar with what's the \"old way\" vs \"new way\"). GitHub is being slow to update PRs, but I just updated the branch to make it this way.\r\n\r\nThe only awkward thing is that `__call` does not show up in generated vimdoc. It works perfectly in LSP hover docs though.\r\n\r\n> This could be exposed via a `inlay_hints.apply()` or `inlay_hints.run()` or something like that.\r\n\r\nI wanted to keep initial drafts conservative by only doing trivial low-level stuff first, but if y'all are open to it we can also add these additional utilities as a next step.\r\n\r\n> I wonder if neovim should have a more generic tooltip mechanism?\r\n\r\nRelated to your comment on Matrix about `vim.ui.config`?\r\n\r\nI was going to try using `open_floating_preview` for my plugin, will report back on how well it works.",
            "created_at": "2023-10-05T15:15:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749111669",
            "id": 1749111669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oQVN1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749111669/reactions"
            },
            "updated_at": "2023-10-05T15:15:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749111669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I wanted to keep initial drafts conservative by only doing trivial low-level stuff first, but if y'all are open to it we can also add these additional utilities as a next step.\r\n\r\nGood call :+1: \r\n\r\nI didn't mean to imply that we should do that now/at the same time. Just as a rough outline of what we could do later.\r\n\r\n\r\n> > I wonder if neovim should have a more generic tooltip mechanism?\r\n>\r\n> Related to your comment on Matrix about vim.ui.config?\r\n\r\n\r\nI didn't have anything concrete in mind - that was just thinking out loud.\r\n",
            "created_at": "2023-10-05T15:50:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749176145",
            "id": 1749176145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oQk9R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749176145/reactions"
            },
            "updated_at": "2023-10-05T15:50:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749176145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Just as a rough outline of what we could do later.\n\nIndeed, now that I think about it, it does seem correct to have Neovim handle the text edits / commands part given that we already have `TextEdit`, `Command`, etc logic\n\nSo the only complexity outsourced to plugins would be triggering the inlay hint w/o mouse",
            "created_at": "2023-10-05T17:11:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749332025",
            "id": 1749332025,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oRLA5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749332025/reactions"
            },
            "updated_at": "2023-10-05T17:17:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749332025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Indeed, now that I think about it, it does seem correct to have Neovim handle the text edits / commands part given that we already have TextEdit, Command, etc logic\r\n\r\n@llllvvuu Might not be relevant but do note that when using inlay hints as a \"go to definition\", there could be multiple definitions and so one needs to consider how to handle that. In VS Code for example, when control-clicking on an inlay hints that has multiple definitions, the \"Peek definition\" hover window is displayed to show all the results. In Neovim this could mean hooking up to `vim.ui.select`.\r\n\r\nJust a heads-up because this might not be immediately obvious from the specification of [label parts](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintLabelPart).",
            "created_at": "2023-10-05T17:21:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749345877",
            "id": 1749345877,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oROZV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749345877/reactions"
            },
            "updated_at": "2023-10-05T17:21:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749345877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I figured out a janky way to keep the vimdoc intact for the `__call`. Just updated the PR.\r\n\r\n> Might not be relevant but do note that when using inlay hints as a \"go to definition\", there could be multiple definitions\r\n\r\nIt's very relevant! Currently I'm tracking all the UI stuff in my [plugin roadmap](https://github.com/llllvvuu/interactive-inlay.nvim#roadmap), and starting with headless stuff here. If the UI stuff gets good reception downstream then I'll start proposing to upstream.\r\n\r\n`vim.ui.select` is a great suggestion, if we want to put some UI in core that would be the way probably. I didn't realize it because I use Telescope for everything (and would probably use Telescope for the plugin too), but it looks like Neovim even includes a UI for references using `loclist`.\r\n\r\nSo maybe core UI (if it exists) can be `loclist` for `location`s + `vim.ui.select` for `command`s\r\n\r\n> I think ideally we'd handle this transparently, without users of higher level APIs knowing anything about it.\r\n\r\nThinking about this a bit. If we want to do resolution instead of the user doing it, we need to figure out what the right trigger for it is. Do we automatically resolve everything that we return from `vim.lsp.inlay_hint.get()`?\r\n\r\nIn any case, it looks like manual resolving is [already possible](\r\nhttps://github.com/hrsh7th/cmp-nvim-lsp/blob/44b16d11215dce86f253ce0c30949813c0a90765/lua/cmp_nvim_lsp/source.lua#L85-L87\r\n) without any extra work from our part (by calling `client.request` directly). Yay!",
            "created_at": "2023-10-06T07:45:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1750134546",
            "id": 1750134546,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oUO8S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750134546/reactions"
            },
            "updated_at": "2023-10-06T07:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750134546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Thinking about this a bit. If we want to do resolution instead of the user doing it, we need to figure out what the right trigger for it is. Do we automatically resolve everything that we return from vim.lsp.inlay_hint.get()?\r\n\r\nI think that might be quite expensive. It also depends a bit on what functionality we want to have built-in eventually.\r\nE.g. we may end up wanting to resolve any inlay hints that are in the active view-port automatically.\r\nIn which case `.get()` should probably only return them as-is, and leave it up to the consumers to further resolve them as needed.\r\n\r\nMaybe that's the safer option for now, we can still change that later if the various use-cases become clearer. And given that we expose the `client_id`, it isn't too difficult to resolve them without any extra API.\r\n\r\n\r\nA test case would be good, otherwise this seems to shape up nicely.\r\n",
            "created_at": "2023-10-07T07:39:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1751638506",
            "id": 1751638506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oZ-Hq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751638506/reactions"
            },
            "updated_at": "2023-10-07T07:39:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751638506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> A test case would be good, otherwise this seems to shape up nicely.\r\n\r\nYup, will do that now that I've collected comments. Once the test case(s) is done I'll move this out of draft.\r\n\r\n> Maybe that's the safer option for now, we can still change that later if the various use-cases become clearer. And given that we expose the client_id, it isn't too difficult to resolve them without any extra API.\r\n\r\nYeah it turned out to be really easy:\r\nhttps://github.com/llllvvuu/interactive-inlay.nvim/blob/6457a209104be3de70e821cdfe4891798eaabbfe/lua/interactive-inlay/init.lua#L27-L29\r\n\r\nI'll probably do nothing for now and see if we get any feature requests.",
            "created_at": "2023-10-07T08:21:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1751648605",
            "id": 1751648605,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oaAld",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751648605/reactions"
            },
            "updated_at": "2023-10-07T08:21:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751648605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25512/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25512/commits",
    "created_at": "2023-10-05T12:52:12Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25512.diff",
    "draft": true,
    "head": {
        "label": "llllvvuu:feat/inlay_hints",
        "ref": "feat/inlay_hints",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/llllvvuu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/llllvvuu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/llllvvuu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/llllvvuu/neovim/branches{/branch}",
            "clone_url": "https://github.com/llllvvuu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/llllvvuu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/llllvvuu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/llllvvuu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/llllvvuu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/llllvvuu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/llllvvuu/neovim/contributors",
            "created_at": "2023-09-10T03:41:28Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/llllvvuu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/llllvvuu/neovim/downloads",
            "events_url": "https://api.github.com/repos/llllvvuu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/llllvvuu/neovim/forks",
            "full_name": "llllvvuu/neovim",
            "git_commits_url": "https://api.github.com/repos/llllvvuu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/llllvvuu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/llllvvuu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/llllvvuu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/llllvvuu/neovim/hooks",
            "html_url": "https://github.com/llllvvuu/neovim",
            "id": 689514052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/llllvvuu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/llllvvuu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/llllvvuu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/llllvvuu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/llllvvuu/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/llllvvuu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/llllvvuu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/llllvvuu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKRkmRA",
            "notifications_url": "https://api.github.com/repos/llllvvuu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/llllvvuu/neovim/pulls{/number}",
            "pushed_at": "2023-10-10T01:53:12Z",
            "releases_url": "https://api.github.com/repos/llllvvuu/neovim/releases{/id}",
            "size": 248166,
            "ssh_url": "git@github.com:llllvvuu/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/llllvvuu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/llllvvuu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/llllvvuu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/llllvvuu/neovim/subscription",
            "svn_url": "https://github.com/llllvvuu/neovim",
            "tags_url": "https://api.github.com/repos/llllvvuu/neovim/tags",
            "teams_url": "https://api.github.com/repos/llllvvuu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/llllvvuu/neovim/git/trees{/sha}",
            "updated_at": "2023-09-10T03:41:28Z",
            "url": "https://api.github.com/repos/llllvvuu/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "76570465372822ac45fdde92afaa564e1cb6d487",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
            "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
            "followers_url": "https://api.github.com/users/llllvvuu/followers",
            "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
            "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/llllvvuu",
            "id": 5601392,
            "login": "llllvvuu",
            "node_id": "MDQ6VXNlcjU2MDEzOTI=",
            "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
            "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
            "repos_url": "https://api.github.com/users/llllvvuu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/llllvvuu"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25512",
    "id": 1543619008,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c540bdd20dc95478d1aae1c1b9da6b75281be5ad",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5cAcHA",
    "number": 25512,
    "patch_url": "https://github.com/neovim/neovim/pull/25512.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25512/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/76570465372822ac45fdde92afaa564e1cb6d487",
    "title": "feat(lsp): `vim.lsp.inlay_hint.get()`",
    "updated_at": "2023-10-10T01:53:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
        "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
        "followers_url": "https://api.github.com/users/llllvvuu/followers",
        "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
        "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/llllvvuu",
        "id": 5601392,
        "login": "llllvvuu",
        "node_id": "MDQ6VXNlcjU2MDEzOTI=",
        "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
        "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
        "repos_url": "https://api.github.com/users/llllvvuu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/llllvvuu"
    }
}