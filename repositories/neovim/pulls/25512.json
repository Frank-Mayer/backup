{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25512/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25512/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25512"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25512"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25512/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7fb8172ba7f894e29c12ccb84e27214d74aa37e6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4948,
            "forks_count": 4948,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1674,
            "open_issues_count": 1674,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-10-30T01:36:48Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 241371,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70507,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-10-30T01:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70507,
            "watchers_count": 70507,
            "web_commit_signoff_required": false
        },
        "sha": "9f32deba56ea867a8bb9b9ab7f44bcc5142e8bbc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "resolves #25069\r\n\r\nrefactor!: `vim.lsp.inlay_hint()` -> `vim.lsp.inlay_hint.toggle()`\r\n\r\nProblem\r\n---\r\nThe LSP specification allows inlay hints to include tooltips, clickable label parts, and code actions; but Neovim provides no API to query for these.\r\n\r\nSolution\r\n---\r\nAdd minimal viable extension point from which plugins can query for inlay hints in a range, in order to build functionality on top of.\r\n\r\nPossible Next Steps\r\n---\r\n\r\n- Add `virt_text_idx` field to `vim.fn.getmousepos()` return value, for usage in mappings of `<LeftMouse>`, `<C-LeftMouse>`, etc",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347614685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347614685"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Unfortunately this only works for LuaLS and doesn't show up in generated Vimdocs\n\nA YOLO solution could be to rename/deprecate  `__call` to  `set` or something \n\nOtherwise maybe we bank on the `gen_vimdoc.py` rewrite lol",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T15:29:27Z",
            "diff_hunk": "@@ -260,7 +344,10 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n+--- @overload fun(bufnr: number, enable: boolean) Enable/disable inlay hints for a buffer.\n+--- bufnr: Buffer handle, or 0 for current\n+--- enable: true/false to enable/disable, nil to toggle",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347614685",
            "id": 1347614685,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QUvfd",
            "original_commit_id": "032ab9d3e174493fc8c279e5c1f11c6582f21efb",
            "original_line": 350,
            "original_position": 98,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660168118,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347614685/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:01:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347614685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347646593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347646593"
                }
            },
            "author_association": "MEMBER",
            "body": "Afaik newer APIs tend to use (0, 0) indexing. But we should also look at where https://github.com/neovim/neovim/issues/25509 is heading.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T15:52:28Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347646593",
            "id": 1347646593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU3SB",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 133,
            "original_position": 36,
            "original_start_line": 132,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347646593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347646593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347647133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347647133"
                }
            },
            "author_association": "MEMBER",
            "body": "`to format` is probably a copy paste error?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T15:52:48Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347647133",
            "id": 1347647133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU3ad",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 131,
            "original_position": 34,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347647133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347647133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347650106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347650106"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd tend to change `nil` to imply all buffers. Otherwise you've no way to get all inlay hints. While getting the one for the current buffer could be done using `{ bufnr = 0 }` or `{ bufnr = api.nvim_get_current_buf() }`\r\n",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T15:54:17Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347650106",
            "id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU4I6",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347650106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347650106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347651372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347651372"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- @class vim.lsp.inlay_hints.get.opts\r\n```\r\n\r\nclass Type annotations are global, so namespacing doesn't hurt.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T15:55:12Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347651372",
            "id": 1347651372,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU4cs",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 101,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660213258,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347651372/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347651372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347655601"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347655601"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I tried to use ` ```lua ` but I couldn't make it work with gen_vimdoc.py regardless of what spacing/indentation I tried",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T15:58:25Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347655601",
            "id": 1347655601,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU5ex",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 140,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660168118,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347655601/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T15:58:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347655601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347665525"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347665525"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I guess then we also want `nil` range to imply the whole buffer (for each buffer). I'll work on that",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:06:08Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347665525",
            "id": 1347665525,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU751",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660241378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347665525/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T16:06:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347665525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347667956"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347667956"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Subscribed!\n\nI guess I can look into lsp.Range here? Will look tomorrow",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:08:11Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347667956",
            "id": 1347667956,
            "in_reply_to_id": 1347646593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QU8f0",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 133,
            "original_position": 36,
            "original_start_line": 132,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660245137,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347667956/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-05T16:08:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347667956",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347693429"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347693429"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: I think using `?` instead of `|nil` is preferred.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:28:55Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347693429",
            "id": 1347693429,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVCt1",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347693429/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347693429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347697411"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347697411"
                }
            },
            "author_association": "MEMBER",
            "body": "I think you need to add a blank line before the code block and after it (example [here](https://github.com/MariaSolOs/neovim/blob/3079fa1f9f198bb303fa616004da9c269673c7a5/runtime/lua/vim/_editor.lua#L886-L896)).",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:32:05Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347697411",
            "id": 1347697411,
            "in_reply_to_id": 1347655601,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVDsD",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 140,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347697411/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347697411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708659"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708659"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local cursor_pos = api.nvim_win_get_cursor(0)\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:41:38Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.\n+---     Defaults to cursor position.\n+--- @return lsp.InlayHint[]\n+function M.get(options)\n+  options = options or {}\n+  --- @cast options InlayHintOptions\n+  local bufnr = options.bufnr or api.nvim_get_current_buf()\n+  local range = options.range\n+  if not range then\n+    local cursor_pos = vim.api.nvim_win_get_cursor(0)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708659",
            "id": 1347708659,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVGbz",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 142,
            "original_position": 45,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708659/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708799"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708799"
                }
            },
            "author_association": "MEMBER",
            "body": "Yea Markdown code fences are known not to work in \"inline\" cases like this :(",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:41:46Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347708799",
            "id": 1347708799,
            "in_reply_to_id": 1347655601,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVGd_",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 140,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660303052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 2,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708799/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:41:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347708799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710145"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710145"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not use the options type here? That what users can get better editor support.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:42:45Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710145",
            "id": 1347710145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVGzB",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710145/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710851"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: It seems like these are usually just named `opts`.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:43:22Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347710851",
            "id": 1347710851,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVG-D",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660281385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710851/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347710851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1347716860"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347716860"
                }
            },
            "author_association": "MEMBER",
            "body": "But either works with our tooling, which is the important bit.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-05T16:48:14Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1347716860",
            "id": 1347716860,
            "in_reply_to_id": 1347693429,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QVIb8",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1660314652,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347716860/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-05T16:48:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1347716860",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348281273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348281273"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Actually, multiple buffers is trickier than I thought.\r\n\r\nThe [`InlayHint` struct](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHint) doesn't have documentURI or anything. So for multiple buffers to make sense (i.e. know where each `InlayHint` is coming from), we'd have to add bufnr to the inlay hint object ourselves (or create a mapping). Is it worth it? What's the use case for multiple buffers?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:11:23Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348281273",
            "id": 1348281273,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXSO5",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661172154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348281273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T06:11:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348281273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348303654"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348303654"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The issue here is the interaction between the code fence and the bullet point. If you put an extra newline, an extra bullet point is inserted",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:39:32Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348303654",
            "id": 1348303654,
            "in_reply_to_id": 1347655601,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXXsm",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 140,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661204706,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348303654/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:39:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348303654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312551"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312551"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "fixed :+1:",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:50:46Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312551",
            "id": 1348312551,
            "in_reply_to_id": 1347647133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXZ3n",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 131,
            "original_position": 34,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661217767,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312551/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312653"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312653"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " changed to `lsp.Range`",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:50:54Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).\n+---\n+--- - filter (function|nil):\n+---     Predicate used to filter clients. Receives a client as argument and must return a\n+---     boolean. Clients matching the predicate are included. Example: <pre>lua\n+---                 -- Don't request inlay hints from typescript-language-server\n+---                 vim.lsp.inlay_hint.get {\n+---                   filter = function(client) return client.name ~= \"tsserver\" end\n+---                 }\n+---     </pre>\n+---\n+--- - id (number|nil):\n+---     Restrict hints to the client with ID (client.id) matching this field.\n+---\n+--- - name (string|nil):\n+---     Restrict hints to the client with name (client.name) matching this field.\n+---\n+--- - range (table|nil) Range to format.\n+---     Table must contain `start` and `end` keys with {row,col} tuples using\n+---     (1,0) indexing.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348312653",
            "id": 1348312653,
            "in_reply_to_id": 1347646593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXZ5N",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 133,
            "original_position": 36,
            "original_start_line": 132,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661217959,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312653/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T06:50:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348312653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313532"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313532"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think a simple usecase would be to have two windows open next to each other with different buffers.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:51:56Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313532",
            "id": 1348313532,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXaG8",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661219257,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313532/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T06:51:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313914"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313914"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " changed :+1:",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:52:20Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348313914",
            "id": 1348313914,
            "in_reply_to_id": 1347651372,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXaM6",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 101,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661219805,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313914/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:52:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348313914",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314064"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Figured something out :+1:",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:52:34Z",
            "diff_hunk": "@@ -260,7 +344,10 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n+--- @overload fun(bufnr: number, enable: boolean) Enable/disable inlay hints for a buffer.\n+--- bufnr: Buffer handle, or 0 for current\n+--- enable: true/false to enable/disable, nil to toggle",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314064",
            "id": 1348314064,
            "in_reply_to_id": 1347614685,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXaPQ",
            "original_commit_id": "032ab9d3e174493fc8c279e5c1f11c6582f21efb",
            "original_line": 350,
            "original_position": 98,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661220072,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314064/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:52:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314970"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314970"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Changed to `?` (in TypeScript this would be the only correct way b/c of assigning `undefined`; in Lua it's just for aesthetics)",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T06:53:43Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348314970",
            "id": 1348314970,
            "in_reply_to_id": 1347693429,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXada",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661221494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314970/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T06:53:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348314970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348329669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348329669"
                }
            },
            "author_association": "MEMBER",
            "body": "> Is it worth it? What's the use case for multiple buffers?\r\n\r\nI don't have a concrete use-case in mind. It was mostly to go with the more flexible variant to avoid driving us into a corner with the choice.\r\n\r\nThinking about this some more, we may actually need to wrap the InlayHint structure into a custom table anyway to provide the client or client_id. Otherwise you can't reliably execute a command (as users shouldn't attempt to use _all_ connected clients to execute it, but the client which provided the inlayhint). Same would be the case for resolve (although that's still tbd how we deal with that in general)\r\n\r\nAnother option could be to go with `.get(bufnr, opts)` to make `bufnr` mandatory. No strong preference, but I'd tend to custom struct, and support all buffers, given the `client_id` requirement.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T07:11:11Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348329669",
            "id": 1348329669,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXeDF",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661247199,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348329669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T07:11:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348329669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348333814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348333814"
                }
            },
            "author_association": "MEMBER",
            "body": "Getting all the hints might be helpful in case a plugin wants to trigger an `inlayHint/refresh` request, but that would require direct communication with the client (or the plugin being the LSP client itself).",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T07:15:33Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348333814",
            "id": 1348333814,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QXfD2",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661253505,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348333814/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T07:47:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348333814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585233"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Updated, thanks!",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T11:13:04Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585233",
            "id": 1348585233,
            "in_reply_to_id": 1347710851,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QYccR",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661644285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T11:13:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585787"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585787"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I coulda sworn it broke CI before, but it seems fine now, so I've done so!",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T11:13:46Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348585787",
            "id": 1348585787,
            "in_reply_to_id": 1347710145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QYck7",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 111,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661645193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585787/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-06T11:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348585787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1348586697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348586697"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I ran into the `client_id` requirement myself with the plugin demo. Sounds good. I've made the struct change.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-06T11:14:45Z",
            "diff_hunk": "@@ -98,6 +98,91 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class InlayHintOptions\n+--- @field bufnr number|nil\n+--- @field filter function|nil\n+--- @field id number|nil\n+--- @field name string|nil\n+--- @field range { start: number[], end: number[] }|nil\n+\n+--- Returns inlay hints in the (optionally) given buffer, client, and range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+---\n+--- @param options table|nil Optional table which holds the following optional fields:\n+--- - bufnr (number|nil):\n+---     Restrict hints to the clients attached to the given buffer, defaults to the current\n+---     buffer (0).",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1348586697",
            "id": 1348586697,
            "in_reply_to_id": 1347650106,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QYczJ",
            "original_commit_id": "91659b4d6939e76daa5b16225dcae976bde4fb80",
            "original_line": 114,
            "original_position": 17,
            "original_start_line": 112,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1661646542,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348586697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-06T11:14:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1348586697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1350839067"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350839067"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we move `vim.lsp.inlay_hint()` to this module as well (maybe renaming it to `toggle`)?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-09T22:08:29Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1350839067",
            "id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QhCsb",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665372034,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350839067/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T22:20:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350839067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1350865743"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350865743"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit, but I would use `integer` for buffer numbers and client IDs.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-09T22:19:08Z",
            "diff_hunk": "@@ -98,6 +98,111 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr number?",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1350865743",
            "id": 1350865743,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QhJNP",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1665372034,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350865743/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T22:20:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350865743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351022612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351022612"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " i keep forgetting that exists (typescript brain lol), thanks",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T00:09:15Z",
            "diff_hunk": "@@ -98,6 +98,111 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr number?",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351022612",
            "id": 1351022612,
            "in_reply_to_id": 1350865743,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QhvgU",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1665605038,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351022612/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T00:09:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351022612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351046088"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351046088"
                }
            },
            "author_association": "MEMBER",
            "body": "lol tell me about it",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T00:16:46Z",
            "diff_hunk": "@@ -98,6 +98,111 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr number?",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351046088",
            "id": 1351046088,
            "in_reply_to_id": 1350865743,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qh1PI",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 102,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1665631844,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351046088/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T00:16:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351046088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351114585"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351114585"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm a fan of `toggle`, I initially suggested that before I figured out how to overload it in the docs. I still want to do it since I'm not a huge fan of using callable objects for APIs\r\n\r\nThat being said, I'm probably the most cavalier person when it comes to deprecations and/or breaking changes so I'll defer to others on this.\r\n\r\nOne somewhat awkward thing is that cmp displays the completion for the function variant (which would be deprecated) until you add the dot after it, so users might not realize that there's non-deprecated stuff after the dot. Although putting the deprecation message on a newline seems like a pretty good fix:\r\n\r\n\r\n<img width=\"599\" alt=\"Screenshot 2023-10-09 at 6 03 38 PM\" src=\"https://github.com/neovim/neovim/assets/5601392/da48d376-a85a-448c-9d84-444bc5aa22a9\">\r\ns",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T01:04:05Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351114585",
            "id": 1351114585,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QiF9Z",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665716892,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351114585/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T01:05:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351114585",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351137096"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351137096"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm the documentation from the completion entry makes me think that LuaLS is returning the results from both the module definition and the current function, which does feel confusing (and potential bug farm IMO).",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T01:36:51Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351137096",
            "id": 1351137096,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QiLdI",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665748153,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351137096/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T01:36:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351137096",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351175126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351175126"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Actually, YOLO, why be timid.\r\n\r\nIncluding the change in the PR for now until further advised. Inlay hints never released in stable (0.9) anyway",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T01:53:36Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351175126",
            "id": 1351175126,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QiUvW",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665792612,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351175126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T01:53:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351175126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1351199869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351199869"
                }
            },
            "author_association": "MEMBER",
            "body": "I support this decision, so at least you won't be alone in the upcoming (?) debate 😉 ",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T02:11:17Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1351199869",
            "id": 1351199869,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5Qiax9",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1665827308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351199869/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T02:11:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1351199869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1352296536"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1352296536"
                }
            },
            "author_association": "MEMBER",
            "body": "It’s not considered a breaking change until it’s included in a release, so changing this is fine as long as there’s (technical) agreement. ",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T11:39:39Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1352296536",
            "id": 1352296536,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QmmhY",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1667391028,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1352296536/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T11:39:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1352296536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353259134"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353259134"
                }
            },
            "author_association": "MEMBER",
            "body": "When inlay hints were moved in https://github.com/neovim/neovim/pull/24130 there was no deprecation notice. Given that inlay hints haven't been released yet, do we need to add this deprecation note?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T19:58:32Z",
            "diff_hunk": "@@ -140,6 +140,7 @@ LSP FUNCTIONS\n - *vim.lsp.util.get_progress_messages()*\tUse |vim.lsp.status()| or access\n \t\t\t\t\t\t`progress` of |vim.lsp.client|\n - *vim.lsp.get_active_clients()*\t\tUse |vim.lsp.get_clients()|\n+- *vim.lsp.inlay_hint()*\t\t\tUse |vim.lsp.inlay_hint.toggle()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353259134",
            "id": 1353259134,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QqRh-",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 143,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353259134/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353259134",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353286044"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353286044"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should use `'inlayHint/resolve'` here for consistency with other examples.\r\n\r\nI prefer using `vim.lsp.protocol.Methods` in documentation examples btw, but see https://github.com/neovim/neovim/pull/24977 on why I didn't end up changing it.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:28:09Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353286044",
            "id": 1353286044,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QqYGc",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1475,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353286044/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353286044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353290577"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353290577"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      • {opts}  vim.lsp.inlay_hint.get.opts? Optional table which holds the following optional fields:\r\n```\r\nHuh is the generator adding this space?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:30:39Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353290577",
            "id": 1353290577,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QqZNR",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1489,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353290577/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353290577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353297137"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353297137"
                }
            },
            "author_association": "MEMBER",
            "body": "Feels kind of odd for this explanation of `lsp.Range` to be here instead of where it is defined.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:33:59Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353297137",
            "id": 1353297137,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qqazx",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1505,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353297137/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353297137",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353300411"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353300411"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe I'm just slow but I think that adding something like \"Table of objects with the following fields...\".",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:35:08Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this\n+                  range, inclusive. `lsp.Range` is a table with `start` and\n+                  `end` keys with type `lsp.Position`. `lsp.Position` is\n+                  (0,0)-indexed.\n+\n+    Return: ~\n+        vim.lsp.inlay_hint.get.resp []:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353300411",
            "id": 1353300411,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qqbm7",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1504,
            "original_position": 57,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353300411/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353300411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353306719"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353306719"
                }
            },
            "author_association": "MEMBER",
            "body": "Is the underscore a typo?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:36:59Z",
            "diff_hunk": "@@ -260,15 +382,28 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable_ (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable_)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353306719",
            "id": 1353306719,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QqdJf",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 389,
            "original_position": 137,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353306719/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353306719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353342798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353342798"
                }
            },
            "author_association": "MEMBER",
            "body": "Idk if there are any guidelines regarding how to name `it` tests but I think they usually start with a verb and are phrased like: \"applies inlay hints when toggle is called\".",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:46:23Z",
            "diff_hunk": "@@ -60,13 +59,13 @@ describe('inlay hints', function()\n             end,\n           }\n         })\n-      ]], response)\n+      ]],\n+        response\n+      )\n     end)\n \n-    it(\n-      'inlay hints are applied when vim.lsp.inlay_hint(true) is called',\n-      function()\n-        local res = exec_lua([[\n+    it('inlay hints are applied when vim.lsp.inlay_hint.toggle(true) is called', function()",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353342798",
            "id": 1353342798,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qql9O",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 67,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/inlay_hint_spec.lua",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353342798/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353342798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353355097"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353355097"
                }
            },
            "author_association": "MEMBER",
            "body": "I appreciate the type annotations <3",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T20:48:42Z",
            "diff_hunk": "@@ -230,8 +222,111 @@ describe('inlay hints', function()\n   ^}                                                 |\n                                                     |\n ]],\n-          unchanged = true\n+        unchanged = true,\n+      })\n+    end)\n+\n+    it('inlay_hint.get() returns filtered inlay hints', function()\n+      local expected2 = {\n+        kind = 1,\n+        paddingLeft = false,\n+        label = ': int',\n+        position = {\n+          character = 10,\n+          line = 2,\n+        },\n+        paddingRight = false,\n+      }\n+      -- Start two clients\n+      exec_lua(\n+        [[\n+        local response = ...\n+        bufnr = vim.api.nvim_get_current_buf()\n+        vim.api.nvim_win_set_buf(0, bufnr)\n+        server2 = _create_server({\n+          capabilities = {\n+            inlayHintProvider = true,\n+          },\n+          handlers = {\n+            ['textDocument/inlayHint'] = function()\n+              return { response }\n+            end,\n+          }\n         })\n-      end)\n+        client1 = vim.lsp.start({ name = 'dummy', cmd = server.cmd })\n+        client2 = vim.lsp.start({ name = 'dummy2', cmd = server2.cmd })\n+      ]],\n+        expected2\n+      )\n+\n+      insert(text)\n+      exec_lua('vim.lsp.inlay_hint.toggle(bufnr, true)')\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      local res = exec_lua('return vim.lsp.inlay_hint.get()')\n+      local expected = vim.json.decode(response) --- @type lsp.InlayHint[]\n+      eq(res, {\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[1] },\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[2] },\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[3] },\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua('return vim.lsp.inlay_hint.get({ name = \"dummy2\" })')\n+      eq(res, {\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[\n+        local filter = function(client) return client.name ~= 'dummy' end\n+        return vim.lsp.inlay_hint.get({ filter = filter })\n+      ]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[return vim.lsp.inlay_hint.get({\n+        id = 1,\n+        range = {\n+          start = { line = 0, character = 0 },\n+          [\"end\"] = { line = 3, character = 0 },\n+        },\n+      })]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[1] },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[return vim.lsp.inlay_hint.get({\n+        range = {\n+          start = { line = 2, character = 10 },\n+          [\"end\"] = { line = 2, character = 10 },\n+        },\n+      })]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[return vim.lsp.inlay_hint.get({\n+        bufnr = vim.api.nvim_get_current_buf(),\n+        range = {\n+          start = { line = 4, character = 18 },\n+          [\"end\"] = { line = 5, character = 17 },\n+        },\n+      })]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[2] },\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[3] },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353355097",
            "id": 1353355097,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qqo9Z",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 328,
            "original_position": 325,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/inlay_hint_spec.lua",
            "position": null,
            "pull_request_review_id": 1668782293,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353355097/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T20:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353355097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353466831"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353466831"
                }
            },
            "author_association": "MEMBER",
            "body": "I think no. This will break for those using nightly, but there's no expectation of stability there, and no need to document pre-release breakages. `news.txt` and `deprecated.txt` should document things that change between releases, otherwise the signal-to-noise ratio becomes too low.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-10T21:44:46Z",
            "diff_hunk": "@@ -140,6 +140,7 @@ LSP FUNCTIONS\n - *vim.lsp.util.get_progress_messages()*\tUse |vim.lsp.status()| or access\n \t\t\t\t\t\t`progress` of |vim.lsp.client|\n - *vim.lsp.get_active_clients()*\t\tUse |vim.lsp.get_clients()|\n+- *vim.lsp.inlay_hint()*\t\t\tUse |vim.lsp.inlay_hint.toggle()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353466831",
            "id": 1353466831,
            "in_reply_to_id": 1353259134,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QrEPP",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 143,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 1669131229,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353466831/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-10T21:44:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353466831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353828839"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353828839"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There is an existing longer hover doc for `lsp.Range`, but it doesn't show up in vimdoc :sob: so this is just tl;dr version",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T01:48:37Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353828839",
            "id": 1353828839,
            "in_reply_to_id": 1353297137,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qscnn",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1505,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669601112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353828839/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T01:48:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353828839",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353829174"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353829174"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think so lol, I didn't add it. Unfortunately CI tends to fail when you deviate from the great generator",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T01:49:23Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353829174",
            "id": 1353829174,
            "in_reply_to_id": 1353290577,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qscs2",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1489,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669601571,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353829174/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T01:49:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353829174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353830145"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353830145"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Nah that's a fine idea, added\r\n\r\n(also, looks like the generator added a space here too lol)",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T01:51:27Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this\n+                  range, inclusive. `lsp.Range` is a table with `start` and\n+                  `end` keys with type `lsp.Position`. `lsp.Position` is\n+                  (0,0)-indexed.\n+\n+    Return: ~\n+        vim.lsp.inlay_hint.get.resp []:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353830145",
            "id": 1353830145,
            "in_reply_to_id": 1353300411,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qsc8B",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1504,
            "original_position": 57,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669603030,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353830145/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T01:51:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353830145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353830524"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353830524"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It's from the original code; the reason is because `enable` is already defined in the module scope (`local function enable`)",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T01:52:18Z",
            "diff_hunk": "@@ -260,15 +382,28 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable_ (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable_)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353830524",
            "id": 1353830524,
            "in_reply_to_id": 1353306719,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QsdB8",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 389,
            "original_position": 137,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1669603539,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353830524/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T01:52:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353830524",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353831514"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353831514"
                }
            },
            "author_association": "MEMBER",
            "body": "Don't deprecate. Remove this completely.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T01:54:41Z",
            "diff_hunk": "@@ -2519,13 +2519,22 @@ function lsp.with(handler, override_config)\n   end\n end\n \n+--- @deprecated\n+--- *Deprecated: Use |vim.lsp.inlay_hint.toggle()| instead.*\n+---\n --- Enable/disable/toggle inlay hints for a buffer\n----@param bufnr (integer) Buffer handle, or 0 for current\n----@param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n function lsp.inlay_hint(bufnr, enable)\n-  return require('vim.lsp.inlay_hint')(bufnr, enable)\n+  vim.deprecate('vim.lsp.inlay_hint()', 'vim.lsp.inlay_hint.toggle()', '0.11')\n+  return require('vim.lsp.inlay_hint').toggle(bufnr, enable)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353831514",
            "id": 1353831514,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QsdRa",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 2532,
            "original_position": 17,
            "original_start_line": 2522,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1669604945,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353831514/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-11T01:54:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353831514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353862206"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353862206"
                }
            },
            "author_association": "MEMBER",
            "body": "Okay I promise I will look into it once I'm done with snippets.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:29:36Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353862206",
            "id": 1353862206,
            "in_reply_to_id": 1353290577,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qskw-",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1489,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669643221,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353862206/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T02:29:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353862206",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353866004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353866004"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmmm even if the explanation is relevant here, I feel we should exclude it. It just doesn't feel like the right place for this description to show up in.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:30:43Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353866004",
            "id": 1353866004,
            "in_reply_to_id": 1353297137,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QslsU",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1505,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669648284,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353866004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T02:30:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353866004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353867726"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353867726"
                }
            },
            "author_association": "MEMBER",
            "body": "Damn the type generator just keeps loosing points ehh",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:31:19Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this\n+                  range, inclusive. `lsp.Range` is a table with `start` and\n+                  `end` keys with type `lsp.Position`. `lsp.Position` is\n+                  (0,0)-indexed.\n+\n+    Return: ~\n+        vim.lsp.inlay_hint.get.resp []:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353867726",
            "id": 1353867726,
            "in_reply_to_id": 1353300411,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QsmHO",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1504,
            "original_position": 57,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669651146,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353867726/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T02:31:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353867726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353878875"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353878875"
                }
            },
            "author_association": "MEMBER",
            "body": "I see. I would be okay with it if this was only available/accessed in internal APIs, but its name shows up in public documentation:https://github.com/neovim/neovim/blob/54eeeba951ba468ab4a964b7baeedebdece6e39d/runtime/doc/lsp.txt#L1509 And so I think we should either rename the variable or change the hidden internal variables to handle the name conflict instead.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:35:01Z",
            "diff_hunk": "@@ -260,15 +382,28 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable_ (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable_)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353878875",
            "id": 1353878875,
            "in_reply_to_id": 1353306719,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qso1b",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 389,
            "original_position": 137,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1669661722,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353878875/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:53:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353878875",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353908284"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908284"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That makes sense. Updated.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:54:40Z",
            "diff_hunk": "@@ -260,15 +382,28 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable_ (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable_)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353908284",
            "id": 1353908284,
            "in_reply_to_id": 1353306719,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QswA8",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 389,
            "original_position": 137,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1669700669,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908284/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T02:54:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353908574"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908574"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Makes sense, removed",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:55:10Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end\n+                     }\n+<\n+                • id (integer?): Only return inlay hints from the client with\n+                  ID (client.id) matching this field.\n+                • name (string?): Only return inlay hints from the client with\n+                  name (client.name) matching this field.\n+                • range (lsp.Range?): Only return inlay hints within this",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353908574",
            "id": 1353908574,
            "in_reply_to_id": 1353297137,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QswFe",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1505,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669700975,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908574/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T02:55:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908574",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353908961"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908961"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " ground-up rewrite? :joy:",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:55:51Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353908961",
            "id": 1353908961,
            "in_reply_to_id": 1353290577,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QswLh",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1489,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669701395,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908961/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T02:55:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353908961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353909559"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353909559"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "removed",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T02:56:09Z",
            "diff_hunk": "@@ -2519,13 +2519,22 @@ function lsp.with(handler, override_config)\n   end\n end\n \n+--- @deprecated\n+--- *Deprecated: Use |vim.lsp.inlay_hint.toggle()| instead.*\n+---\n --- Enable/disable/toggle inlay hints for a buffer\n----@param bufnr (integer) Buffer handle, or 0 for current\n----@param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n function lsp.inlay_hint(bufnr, enable)\n-  return require('vim.lsp.inlay_hint')(bufnr, enable)\n+  vim.deprecate('vim.lsp.inlay_hint()', 'vim.lsp.inlay_hint.toggle()', '0.11')\n+  return require('vim.lsp.inlay_hint').toggle(bufnr, enable)\n end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353909559",
            "id": 1353909559,
            "in_reply_to_id": 1353831514,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QswU3",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 2532,
            "original_position": 17,
            "original_start_line": 2522,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1669702028,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353909559/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-11T02:56:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353909559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353921342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353921342"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "thx for context, changed",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T03:00:30Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353921342",
            "id": 1353921342,
            "in_reply_to_id": 1353286044,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QszM-",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1475,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669715966,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353921342/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:00:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353921342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353921555"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353921555"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "removed",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T03:00:34Z",
            "diff_hunk": "@@ -140,6 +140,7 @@ LSP FUNCTIONS\n - *vim.lsp.util.get_progress_messages()*\tUse |vim.lsp.status()| or access\n \t\t\t\t\t\t`progress` of |vim.lsp.client|\n - *vim.lsp.get_active_clients()*\t\tUse |vim.lsp.get_clients()|\n+- *vim.lsp.inlay_hint()*\t\t\tUse |vim.lsp.inlay_hint.toggle()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353921555",
            "id": 1353921555,
            "in_reply_to_id": 1353259134,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QszQT",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 143,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 1669716170,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353921555/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:00:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353921555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353923495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353923495"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "sounds good, re-organized the test hierarchy in this file to fit that better",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T03:01:07Z",
            "diff_hunk": "@@ -60,13 +59,13 @@ describe('inlay hints', function()\n             end,\n           }\n         })\n-      ]], response)\n+      ]],\n+        response\n+      )\n     end)\n \n-    it(\n-      'inlay hints are applied when vim.lsp.inlay_hint(true) is called',\n-      function()\n-        local res = exec_lua([[\n+    it('inlay hints are applied when vim.lsp.inlay_hint.toggle(true) is called', function()",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353923495",
            "id": 1353923495,
            "in_reply_to_id": 1353342798,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qszun",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 67,
            "original_position": 35,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/inlay_hint_spec.lua",
            "position": null,
            "pull_request_review_id": 1669718195,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353923495/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:01:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353923495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353963535"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353963535"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ricing my Neovim tests lol (productive? no)\r\n\r\n<img width=\"395\" alt=\"Screenshot 2023-10-10 at 8 12 16 PM\" src=\"https://github.com/neovim/neovim/assets/5601392/77663404-3293-416f-8f83-1b80bcdffa73\">\r\n",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T03:12:57Z",
            "diff_hunk": "@@ -230,8 +222,111 @@ describe('inlay hints', function()\n   ^}                                                 |\n                                                     |\n ]],\n-          unchanged = true\n+        unchanged = true,\n+      })\n+    end)\n+\n+    it('inlay_hint.get() returns filtered inlay hints', function()\n+      local expected2 = {\n+        kind = 1,\n+        paddingLeft = false,\n+        label = ': int',\n+        position = {\n+          character = 10,\n+          line = 2,\n+        },\n+        paddingRight = false,\n+      }\n+      -- Start two clients\n+      exec_lua(\n+        [[\n+        local response = ...\n+        bufnr = vim.api.nvim_get_current_buf()\n+        vim.api.nvim_win_set_buf(0, bufnr)\n+        server2 = _create_server({\n+          capabilities = {\n+            inlayHintProvider = true,\n+          },\n+          handlers = {\n+            ['textDocument/inlayHint'] = function()\n+              return { response }\n+            end,\n+          }\n         })\n-      end)\n+        client1 = vim.lsp.start({ name = 'dummy', cmd = server.cmd })\n+        client2 = vim.lsp.start({ name = 'dummy2', cmd = server2.cmd })\n+      ]],\n+        expected2\n+      )\n+\n+      insert(text)\n+      exec_lua('vim.lsp.inlay_hint.toggle(bufnr, true)')\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      local res = exec_lua('return vim.lsp.inlay_hint.get()')\n+      local expected = vim.json.decode(response) --- @type lsp.InlayHint[]\n+      eq(res, {\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[1] },\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[2] },\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[3] },\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua('return vim.lsp.inlay_hint.get({ name = \"dummy2\" })')\n+      eq(res, {\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[\n+        local filter = function(client) return client.name ~= 'dummy' end\n+        return vim.lsp.inlay_hint.get({ filter = filter })\n+      ]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[return vim.lsp.inlay_hint.get({\n+        id = 1,\n+        range = {\n+          start = { line = 0, character = 0 },\n+          [\"end\"] = { line = 3, character = 0 },\n+        },\n+      })]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[1] },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[return vim.lsp.inlay_hint.get({\n+        range = {\n+          start = { line = 2, character = 10 },\n+          [\"end\"] = { line = 2, character = 10 },\n+        },\n+      })]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 2, inlay_hint = expected2 },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp\n+      res = exec_lua([[return vim.lsp.inlay_hint.get({\n+        bufnr = vim.api.nvim_get_current_buf(),\n+        range = {\n+          start = { line = 4, character = 18 },\n+          [\"end\"] = { line = 5, character = 17 },\n+        },\n+      })]])\n+      eq(res, {\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[2] },\n+        { bufnr = 1, client_id = 1, inlay_hint = expected[3] },\n+      })\n+\n+      --- @type vim.lsp.inlay_hint.get.resp",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353963535",
            "id": 1353963535,
            "in_reply_to_id": 1353355097,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qs9gP",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 328,
            "original_position": 325,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/inlay_hint_spec.lua",
            "position": null,
            "pull_request_review_id": 1669767211,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353963535/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:12:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353963535",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353975970"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353975970"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "removed",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T03:43:38Z",
            "diff_hunk": "@@ -1469,6 +1469,42 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353975970",
            "id": 1353975970,
            "in_reply_to_id": 1350839067,
            "line": 1466,
            "node_id": "PRRC_kwDOAPphoM5QtAii",
            "original_commit_id": "7cae2da293273901cfaba755e642a27662fa851d",
            "original_line": 1466,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 19,
            "pull_request_review_id": 1669785334,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353975970/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:43:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353975970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1353980076"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353980076"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah. I want to blow it up with dynamite and write something _nice_.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T03:54:31Z",
            "diff_hunk": "@@ -1469,6 +1462,58 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+        resolved_hint = client.request(methods.inlayHint_resolve, hint.inlay_hint, callback, bufnr)\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+        command = resolved_hint.label[1].command\n+        vim.lsp.buf.execute_command({ command = command })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1353980076",
            "id": 1353980076,
            "in_reply_to_id": 1353290577,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QtBis",
            "original_commit_id": "54eeeba951ba468ab4a964b7baeedebdece6e39d",
            "original_line": 1489,
            "original_position": 35,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1669791391,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353980076/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T03:54:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1353980076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1354105124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354105124"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is `resp` a naming convention consistent with existing type annotations?  I saw `ret` was used in other meta types, and personally don't think `resp` (stands for `response`) is a crystal-clear abbreviation. In addition, some other type names starts with `lsp.`.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T05:01:20Z",
            "diff_hunk": "@@ -98,6 +98,127 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr integer?\n+--- @field filter function?\n+--- @field id integer?\n+--- @field name string?\n+--- @field range lsp.Range?\n+---\n+--- @class vim.lsp.inlay_hint.get.resp",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1354105124",
            "id": 1354105124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QtgEk",
            "original_commit_id": "a2c6d13563d3688dbd721ff855e62a669de4b100",
            "original_line": 108,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1669949638,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354105124/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T05:20:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354105124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1354112166"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354112166"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Docs and some example code about [inlayHint/resolve](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHint_resolve) is indeed great to have here! As a suggestion, I wish this example usage could be a self-contained code that can run without much modification and edits needed. Or even easier to understand.\r\n\r\nLine 121 (`client.request`) looks like a synchronous call, so I guess you probably meant `request_sync` (or rewrite the remaining lines in a callback/handler).\r\nIf meant an asynchronous `client.request`, `callback` is not defined in this context? Another nitpicking is that we seem to prefer calling it as `handler` rather than a `callback`.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T05:15:46Z",
            "diff_hunk": "@@ -98,6 +98,127 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr integer?\n+--- @field filter function?\n+--- @field id integer?\n+--- @field name string?\n+--- @field range lsp.Range?\n+---\n+--- @class vim.lsp.inlay_hint.get.resp\n+--- @field bufnr integer\n+--- @field client_id integer\n+--- @field inlay_hint lsp.InlayHint\n+\n+--- Get the list of inlay hints, (optionally) restricted by buffer, client, or range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+--- The returned inlay hints are unresolved.\n+---\n+--- Example usage:\n+---\n+--- ```lua\n+--- local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+--- resolved_hint = client.request('inlayHint/resolve', hint.inlay_hint, callback, bufnr)\n+--- vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+--- command = resolved_hint.label[1].command\n+--- vim.lsp.buf.execute_command({ command = command })\n+--- ```",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1354112166",
            "id": 1354112166,
            "line": 131,
            "node_id": "PRRC_kwDOAPphoM5Qthym",
            "original_commit_id": "a2c6d13563d3688dbd721ff855e62a669de4b100",
            "original_line": 131,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 34,
            "pull_request_review_id": 1669949638,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354112166/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T05:27:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354112166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1354119017"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354119017"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": " changed to `ret`, thank you for the tip\r\n\r\nregarding `vim.lsp.*` vs `lsp.*`: I think using `lsp.*` in `protocol.lua` and `vim.lsp.*` elsewhere would be good for distinguishing between Microsoft's LSP standard and Neovim's LSP client API",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T05:28:10Z",
            "diff_hunk": "@@ -98,6 +98,127 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr integer?\n+--- @field filter function?\n+--- @field id integer?\n+--- @field name string?\n+--- @field range lsp.Range?\n+---\n+--- @class vim.lsp.inlay_hint.get.resp",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1354119017",
            "id": 1354119017,
            "in_reply_to_id": 1354105124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qtjdp",
            "original_commit_id": "a2c6d13563d3688dbd721ff855e62a669de4b100",
            "original_line": 108,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1669970366,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354119017/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T05:28:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354119017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1354128196"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354128196"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I should've tested the example, my bad. It should be working and complete now",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-11T05:43:46Z",
            "diff_hunk": "@@ -98,6 +98,127 @@ function M.on_refresh(err, _, ctx, _)\n   return vim.NIL\n end\n \n+--- @class vim.lsp.inlay_hint.get.opts\n+--- @field bufnr integer?\n+--- @field filter function?\n+--- @field id integer?\n+--- @field name string?\n+--- @field range lsp.Range?\n+---\n+--- @class vim.lsp.inlay_hint.get.resp\n+--- @field bufnr integer\n+--- @field client_id integer\n+--- @field inlay_hint lsp.InlayHint\n+\n+--- Get the list of inlay hints, (optionally) restricted by buffer, client, or range.\n+--- This method does not make an LSP request, but just queries locally stored inlay hints.\n+--- The returned inlay hints are unresolved.\n+---\n+--- Example usage:\n+---\n+--- ```lua\n+--- local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+--- resolved_hint = client.request('inlayHint/resolve', hint.inlay_hint, callback, bufnr)\n+--- vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+--- command = resolved_hint.label[1].command\n+--- vim.lsp.buf.execute_command({ command = command })\n+--- ```",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1354128196",
            "id": 1354128196,
            "in_reply_to_id": 1354112166,
            "line": 131,
            "node_id": "PRRC_kwDOAPphoM5QtltE",
            "original_commit_id": "a2c6d13563d3688dbd721ff855e62a669de4b100",
            "original_line": 131,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 34,
            "pull_request_review_id": 1669983799,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354128196/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-11T05:43:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1354128196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1355905507"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355905507"
                }
            },
            "author_association": "MEMBER",
            "body": "\"toggle\" is not a verb in our existing apis, but \"enable\" has some precedent. Can avoid adding a new verb, helps discoverability.\r\n\r\n```suggestion\r\nfunction M.enable(bufnr, enable)\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T00:15:46Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1355905507",
            "id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q0Xnj",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1672778659,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355905507/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T00:16:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355905507",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1355976373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355976373"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Those cases are where `.enable()` and `.disable()` are separately exported, which seems less efficient.\r\n\r\nI'd probably not roll it into `.enable(bool)` since that might be more confusing (uncanny valley) than `.toggle(bool)`\r\n\r\nI'm not opposed to `.enable()` + `disable()` + `bool enabled()`, although it's not a very widespread precedent (only see in `diagnostic.lua` and `loader.lua`), maybe worth considering this instance on its own merit (two funcs or one func that does more?)?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T02:34:01Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1355976373",
            "id": 1355976373,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q0o61",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1672909873,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355976373/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T02:34:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355976373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1355978071"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355978071"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "rt does seem like in other domains (e.g. REST) people prefer two endpoints over one toggle endpoint, so that's a point in favor of `.enable()` + `.disable()`.\r\n\r\nAnother option (compromise) would be to expose the `.enable()` + `.disable()` + `toggle()` functions that are just internal right now. The thing is, toggling is actually a very common operation for inlay hints.\r\n\r\nI'll let other folks chime in as well.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T02:37:51Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1355978071",
            "id": 1355978071,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q0pVX",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1672917113,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355978071/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T02:47:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355978071",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1355986057"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355986057"
                }
            },
            "author_association": "MEMBER",
            "body": "Agreed. Although an unprecedented verb isn't ideal, using a function called `enable` to disable feels even less intuitive.\r\n\r\n> I'm not opposed to `.enable()` + `disable()` + `bool enabled()`\r\n\r\nIdk I don't like the idea of having a bunch of redundant functions...",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T02:50:01Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1355986057",
            "id": 1355986057,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q0rSJ",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1672935505,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355986057/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T02:50:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1355986057",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1356812788"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1356812788"
                }
            },
            "author_association": "MEMBER",
            "body": "> Those cases are where .enable() and .disable() are separately exported, which seems less efficient.\r\n\r\nThose are just accidents. When don't need a new verb. And we can establish `enable()` as the omni-interface for (1) enable, (2) disable, (3) toggle. Having 2 or 3 separate functions for this trivial use-case is silly. ",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T13:19:41Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1356812788",
            "id": 1356812788,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q31H0",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1674162873,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1356812788/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T13:19:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1356812788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357016472"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357016472"
                }
            },
            "author_association": "MEMBER",
            "body": "For what's worth my vote would also go for `toggle`  instead of a `enable` that can also disable. \r\n\r\nIt's definition is a pretty good match, and its not like it isn't used in the code base (granted not as API as far as I can tell, but we were just talking about a win_toggle the other day as well)\r\n\r\n```\r\n↪  rg toggle | wc -l\r\n214\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T15:36:59Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357016472",
            "id": 1357016472,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q4m2Y",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1674508291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357016472/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T15:49:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357016472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357047814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357047814"
                }
            },
            "author_association": "MEMBER",
            "body": "Could we leave the resolved state undefined or mention that it might be unresolved?\r\n\r\nIt would keep the door open to do internal resolving when we expose other functionality without introducing a behaviour change",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:02:04Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357047814",
            "id": 1357047814,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q4ugG",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1471,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674566772,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357047814/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:09:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357047814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357048831"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357048831"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\r\n```\r\n\r\nutf-8 is wrong for all but a handful language servers",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:03:00Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357048831",
            "id": 1357048831,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q4uv_",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1480,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674566772,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357048831/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:09:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357048831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357050764"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357050764"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        local client = vim.lsp.get_client_by_id(hint.client_id)\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:04:32Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357050764",
            "id": 1357050764,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q4vOM",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1477,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674566772,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357050764/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:09:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357050764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357054545"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357054545"
                }
            },
            "author_association": "MEMBER",
            "body": "This is kinda wrong/ incomplete as command can refer to client commands.\r\nwe've a client. _exec_cmd function that does the right thing but it's private so far. \r\n\r\nMaybe we can remove this part for now? We definitely shouldn't spread this incorrect pattern further.  In fact I think we should deprecate buf.execute_command because it's inherently broken. A command always originates from a single server and buf.execute_command broadcasts it to all clients attached to the buffer",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:07:57Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+\n+        local label_part = resolved_hint.label[1]\n+        command = label_part.command\n+        vim.lsp.buf.execute_command({ command = command })",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357054545",
            "id": 1357054545,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q4wJR",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1484,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674566772,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357054545/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:16:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357054545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074093"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074093"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sure, left it open",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:26:15Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074093",
            "id": 1357074093,
            "in_reply_to_id": 1357047814,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q406t",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1471,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674611863,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074093/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:26:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074509"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074509"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the tip!",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:26:39Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074509",
            "id": 1357074509,
            "in_reply_to_id": 1357048831,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q41BN",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1480,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674612531,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074509/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:26:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074599"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074599"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the tip!\r\n",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:26:45Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074599",
            "id": 1357074599,
            "in_reply_to_id": 1357050764,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q41Cn",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1477,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674612662,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074599/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:26:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074805"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074805"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the tip!\r\n",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:26:55Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, 'utf-8')\n+\n+        local label_part = resolved_hint.label[1]\n+        command = label_part.command\n+        vim.lsp.buf.execute_command({ command = command })",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357074805",
            "id": 1357074805,
            "in_reply_to_id": 1357054545,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q41F1",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1484,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674612943,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074805/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T16:26:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357074805",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357086255"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357086255"
                }
            },
            "author_association": "MEMBER",
            "body": "> but we were just talking about a win_toggle the other day as well\r\n\r\nThe name in that case was more of a placeholder.\r\n\r\nThe most important thing is that we have 1 function instead of 3 functions for everything that needs to be \"toggled\". ~~So I can live with \"toggle\", can we agree to deprecate all the `enable`/`disable` cases in the API?~~",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T16:36:54Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357086255",
            "id": 1357086255,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q434v",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1674630255,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357086255/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T15:37:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357086255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1357236184"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357236184"
                }
            },
            "author_association": "MEMBER",
            "body": "This makes me realize that `get_client_by_id` might be redundant? Given the flexibility of the filter that can be used with `get_clients`, why keep the specialized functions?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-12T18:31:45Z",
            "diff_hunk": "@@ -1469,6 +1462,68 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range. This method does not make an LSP request, but just queries locally\n+    stored inlay hints. The returned inlay hints are unresolved.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_clients({ id = hint.client_id })[1]",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1357236184",
            "id": 1357236184,
            "in_reply_to_id": 1357050764,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q5cfY",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 1477,
            "original_position": 30,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1674884451,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357236184/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-12T18:31:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1357236184",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358198672"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358198672"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional fields |kwargs|:\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T12:32:33Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358198672",
            "id": 1358198672,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q9HeQ",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1489,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1676382268,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358198672/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T12:32:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358198672",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358201579"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358201579"
                }
            },
            "author_association": "MEMBER",
            "body": "Does the `hint` object have a client field? Then the filter predicate could be more generic. OTOH, I guess that's kind of redundant since the caller to get() can filter the items using `vim.iter`.\r\n\r\n```suggestion\r\n                       filter = function(hint) return hint.client.name ~= \"tsserver\" end\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T12:35:26Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358201579",
            "id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q9ILr",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1676387038,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358201579/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T12:36:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358201579",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358203229"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358203229"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "At this point we don't have hint objects yet, to get them we have to loop through each client, then through each line for that client, then for each hint of that line. This filter is for cutting off the first loop",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T12:37:09Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358203229",
            "id": 1358203229,
            "in_reply_to_id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q9Ild",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1676389665,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358203229/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T12:38:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358203229",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358206369"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358206369"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`filter` is  definitely a weird name though as it's something that seems to imply filtering in post\r\n\r\nand filtering in post wouldn't be a necessary feature, as users can just `vim.tbl_filter`\r\n\r\npre-filtering the `get()` would matter a bit more if we in the future decide to tack on an actual LSP request",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T12:40:13Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358206369",
            "id": 1358206369,
            "in_reply_to_id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q9JWh",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1676394519,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358206369/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T12:56:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358206369",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358267651"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358267651"
                }
            },
            "author_association": "MEMBER",
            "body": "In `vim.lsp.get_clients` this is named `filter`. The `get_clients` interface is what we consider the \"best practice\" so it probably makes sense to be consistent here.\r\n\r\n```suggestion\r\n      • {filter}  vim.lsp.inlay_hint.get.opts ? Optional fields |kwargs|:\r\n```",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T13:28:09Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional fields |kwargs|:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358267651",
            "id": 1358267651,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q9YUD",
            "original_commit_id": "b6e9204e3b7f10d0f6e30991202051ef7c848f6e",
            "original_line": 1489,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1676507876,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358267651/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T13:28:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358267651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358280162"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358280162"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this field actually needed? What other Nvim lsp features support client filtering?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T13:38:08Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358280162",
            "id": 1358280162,
            "in_reply_to_id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q9bXi",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1676527813,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358280162/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T13:38:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358280162",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358295379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358295379"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sounds good, renamed and also reworked the object",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T13:49:49Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional fields |kwargs|:",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358295379",
            "id": 1358295379,
            "in_reply_to_id": 1358267651,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Q9fFT",
            "original_commit_id": "b6e9204e3b7f10d0f6e30991202051ef7c848f6e",
            "original_line": 1489,
            "original_position": 42,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1676552314,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358295379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T13:49:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358295379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358399172"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358399172"
                }
            },
            "author_association": "MEMBER",
            "body": "Request-specific methods like `vim.lsp.buf.format` and `vim.lsp.buf.rename` have a similar `filter` field.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T15:14:56Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358399172",
            "id": 1358399172,
            "in_reply_to_id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q94bE",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1676718735,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358399172/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T15:14:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358399172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358418439"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358418439"
                }
            },
            "author_association": "MEMBER",
            "body": "Thinking on this more,  I really don't think we should go with toggle(). See https://github.com/neovim/neovim/pull/25512#pullrequestreview-1676750276",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T15:31:08Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358418439",
            "id": 1358418439,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q99IH",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1676749982,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358418439/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T15:36:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358418439",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358423274"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358423274"
                }
            },
            "author_association": "MEMBER",
            "body": "Didn't we have that exact same discussion already for inlay_hints? And didn't we resolve that? So can we not just follow that precedent and save another discussion?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T15:35:56Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358423274",
            "id": 1358423274,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q9-Tq",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1676757533,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358423274/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T15:35:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358423274",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358426931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358426931"
                }
            },
            "author_association": "MEMBER",
            "body": "> Request-specific methods like vim.lsp.buf.format and vim.lsp.buf.rename have a similar filter field.\r\n\r\nThey have a filter because they have a side effect that depends on the clients, not a result that one could post-process.\r\n\r\nIf there's no big performance advantage from moving the filters into the method I'd also tend to remove or trim them\r\n",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T15:38:42Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358426931",
            "id": 1358426931,
            "in_reply_to_id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q9_Mz",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1676763263,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358426931/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T15:38:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358426931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358427710"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358427710"
                }
            },
            "author_association": "MEMBER",
            "body": "`enable(..., ~is_enabled())` makes sense as a toggle because we need `is_enabled` anyway. So if that was the result of the previous discussion then yes, we can avoid a new discussion.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T15:39:00Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358427710",
            "id": 1358427710,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5Q9_Y-",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1676764324,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358427710/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T15:39:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358427710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1358906792"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358906792"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The range is the important filter due to the how the inlay hint data structure is (array per line - which we could revisit if it became an issue)\n\nBufnr also seems important if someome has a lot of buffers\n\nBut client, yeah i think we can remove",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-13T22:07:02Z",
            "diff_hunk": "@@ -1469,6 +1462,63 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({opts})                                         *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {opts}  vim.lsp.inlay_hint.get.opts ? Optional table which holds the following optional fields:\n+                • bufnr (integer?): Only return inlay hints from the clients\n+                  attached to the given buffer.\n+                • filter (function?): Predicate used to filter clients.\n+                  Receives a client as argument and must return a boolean.\n+                  Clients matching the predicate are included. Example: >lua\n+\n+                     -- Don't request inlay hints from typescript-language-server\n+                     vim.lsp.inlay_hint.get {\n+                       filter = function(client) return client.name ~= \"tsserver\" end",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1358906792",
            "id": 1358906792,
            "in_reply_to_id": 1358201579,
            "line": 1498,
            "node_id": "PRRC_kwDOAPphoM5Q_0Wo",
            "original_commit_id": "fb72441aca655b745fd62dfd994aac1f5d107c54",
            "original_line": 1498,
            "original_position": 51,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 51,
            "pull_request_review_id": 1677458447,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358906792/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-13T22:07:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1358906792",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1359079307"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1359079307"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Previous discussion is at: https://github.com/neovim/neovim/pull/23984\r\n\r\nLooks like we went with the toggle there",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-14T02:57:02Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1359079307",
            "id": 1359079307,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5RAeeL",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1677692424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1359079307/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-14T02:57:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1359079307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1360153316"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360153316"
                }
            },
            "author_association": "MEMBER",
            "body": "What happened to the parameter descriptions?",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-16T06:04:59Z",
            "diff_hunk": "@@ -1469,6 +1462,57 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({filter})                                       *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {filter}  vim.lsp.inlay_hint.get.filter ? Optional fields |kwargs|:\n+                  • bufnr (integer?)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1360153316",
            "id": 1360153316,
            "line": 1490,
            "node_id": "PRRC_kwDOAPphoM5REkrk",
            "original_commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "original_line": 1490,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 43,
            "pull_request_review_id": 1679169027,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360153316/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-16T06:11:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360153316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1360153987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360153987"
                }
            },
            "author_association": "MEMBER",
            "body": "To better illustrate the use of the parameter options, I would use `bufnr = 0` here and comment on how that results in the current buffer being used.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-16T06:06:07Z",
            "diff_hunk": "@@ -1469,6 +1462,57 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({filter})                                       *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1360153987",
            "id": 1360153987,
            "line": 1474,
            "node_id": "PRRC_kwDOAPphoM5REk2D",
            "original_commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "original_line": 1474,
            "original_position": 27,
            "original_start_line": 1473,
            "path": "runtime/doc/lsp.txt",
            "position": 27,
            "pull_request_review_id": 1679169027,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360153987/reactions"
            },
            "side": "RIGHT",
            "start_line": 1473,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-16T06:11:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360153987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1360156863"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360156863"
                }
            },
            "author_association": "MEMBER",
            "body": "Based on the use of `bufnr` in this function, we should change the type of the parameter to `integer|nil`.\r\n\r\nThe same applies to `_enable` and `_toggle`.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-16T06:10:27Z",
            "diff_hunk": "@@ -121,7 +240,7 @@ end\n \n --- Disable inlay hints for a buffer\n ---@param bufnr (integer) Buffer handle, or 0 for current\n-local function disable(bufnr)\n+local function _disable(bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1360156863",
            "id": 1360156863,
            "line": 243,
            "node_id": "PRRC_kwDOAPphoM5REli_",
            "original_commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "original_line": 243,
            "original_position": 131,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 131,
            "pull_request_review_id": 1679169027,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360156863/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-16T06:11:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360156863",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1360164942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360164942"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "With the rename from `opts` to `filter` they became self-documenting (I think)\r\n\r\nI can add a note about bufnr = 0 special case like you mentioned in the other comment though",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-16T06:22:28Z",
            "diff_hunk": "@@ -1469,6 +1462,57 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({filter})                                       *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {filter}  vim.lsp.inlay_hint.get.filter ? Optional fields |kwargs|:\n+                  • bufnr (integer?)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1360164942",
            "id": 1360164942,
            "in_reply_to_id": 1360153316,
            "line": 1490,
            "node_id": "PRRC_kwDOAPphoM5REnhO",
            "original_commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "original_line": 1490,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 43,
            "pull_request_review_id": 1679187792,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360164942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-16T06:22:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360164942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1360168423"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360168423"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, the names are descriptive enough but I think we should still call out the values with special meaning.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-16T06:27:09Z",
            "diff_hunk": "@@ -1469,6 +1462,57 @@ save({lenses}, {bufnr}, {client_id})                 *vim.lsp.codelens.save()*\n       • {client_id}  (integer)\n \n \n+==============================================================================\n+Lua module: vim.lsp.inlay_hint                                *lsp-inlay_hint*\n+\n+get({filter})                                       *vim.lsp.inlay_hint.get()*\n+    Get the list of inlay hints, (optionally) restricted by buffer, client, or\n+    range.\n+\n+    Example usage: >lua\n+        local timeout, bufnr = 100, vim.api.nvim_get_current_buf()\n+        local hint = vim.lsp.inlay_hint.get({ bufnr = bufnr })[1]\n+\n+        local client = vim.lsp.get_client_by_id(hint.client_id)\n+        resolved_hint = client.request_sync(\n+          'inlayHint/resolve', hint.inlay_hint, timeout, bufnr).result\n+        vim.lsp.util.apply_text_edits(resolved_hint.textEdits, bufnr, client.encoding)\n+\n+        location = resolved_hint.label[1].location\n+        client.request(\"textDocument/hover\", {\n+          textDocument = { uri = location.uri },\n+          position = location.range.start,\n+        })\n+<\n+\n+    Parameters: ~\n+      • {filter}  vim.lsp.inlay_hint.get.filter ? Optional fields |kwargs|:\n+                  • bufnr (integer?)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1360168423",
            "id": 1360168423,
            "in_reply_to_id": 1360153316,
            "line": 1490,
            "node_id": "PRRC_kwDOAPphoM5REoXn",
            "original_commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "original_line": 1490,
            "original_position": 43,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 43,
            "pull_request_review_id": 1679195713,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360168423/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-16T06:27:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360168423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25512#discussion_r1360586498"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25512"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360586498"
                }
            },
            "author_association": "MEMBER",
            "body": "The case for \"toggle\" is very weak given the presumed need for `is_enabled`. So to be clear, to move forward with this, I'm expecting `enable` + `is_enabled` in this PR.",
            "commit_id": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
            "created_at": "2023-10-16T12:32:50Z",
            "diff_hunk": "@@ -260,15 +393,19 @@ api.nvim_set_decoration_provider(namespace, {\n   end,\n })\n \n-return setmetatable(M, {\n-  __call = function(_, bufnr, enable_)\n-    vim.validate({ enable = { enable_, { 'boolean', 'nil' } }, bufnr = { bufnr, 'number' } })\n-    if enable_ then\n-      enable(bufnr)\n-    elseif enable_ == false then\n-      disable(bufnr)\n-    else\n-      toggle(bufnr)\n-    end\n-  end,\n-})\n+--- Enable/disable/toggle inlay hints for a buffer\n+---\n+--- @param bufnr (integer) Buffer handle, or 0 for current\n+--- @param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.toggle(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/25512#discussion_r1360586498",
            "id": 1360586498,
            "in_reply_to_id": 1355905507,
            "line": 386,
            "node_id": "PRRC_kwDOAPphoM5RGOcC",
            "original_commit_id": "bc4f8ba0e2baba240f948fa07f966a8e20a99a12",
            "original_line": 386,
            "original_position": 215,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 201,
            "pull_request_review_id": 1679854983,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360586498/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-16T12:32:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1360586498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Here's the sample plugin using this API: https://github.com/llllvvuu/interactive-inlay.nvim\r\n\r\nI looked at how others are doing interactive inlay hints, and noticed that @MariaSolOs authored the `tsserver` stuff so probably has smart things to say (and probably knows more about our conventions on the LSP side, which I know nothing about)",
            "created_at": "2023-10-05T12:54:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748842989",
            "id": 1748842989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPTnt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748842989/reactions"
            },
            "updated_at": "2023-10-05T12:54:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748842989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "cc @mfussenegger @p00f ",
            "created_at": "2023-10-05T13:06:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748862991",
            "id": 1748862991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPYgP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748862991/reactions"
            },
            "updated_at": "2023-10-05T13:06:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748862991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Dumping some more notes:\r\n\r\nEdge cases where inlay hint tooltip/click is more efficient than regular hover / go to type definition:\r\n- Variable type inlay hint where type has a type inside of it\r\n- Return type inlay hint\r\n\r\nIn theory, language servers could include these info/prompts in regular hover docs too. `lua_ls` for example has typedoc in variable hover doc, but not in function hover doc\r\n\r\nThe efficiency difference is probably smaller in Neovim because everything is fast in Neovim.",
            "created_at": "2023-10-05T13:24:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748894608",
            "id": 1748894608,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPgOQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748894608/reactions"
            },
            "updated_at": "2023-10-06T06:55:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748894608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think clickable should just be clickable, instead of \"querying\" a hint",
            "created_at": "2023-10-05T13:31:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748907374",
            "id": 1748907374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPjVu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748907374/reactions"
            },
            "updated_at": "2023-10-05T13:31:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748907374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/36493671?v=4",
                "events_url": "https://api.github.com/users/p00f/events{/privacy}",
                "followers_url": "https://api.github.com/users/p00f/followers",
                "following_url": "https://api.github.com/users/p00f/following{/other_user}",
                "gists_url": "https://api.github.com/users/p00f/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/p00f",
                "id": 36493671,
                "login": "p00f",
                "node_id": "MDQ6VXNlcjM2NDkzNjcx",
                "organizations_url": "https://api.github.com/users/p00f/orgs",
                "received_events_url": "https://api.github.com/users/p00f/received_events",
                "repos_url": "https://api.github.com/users/p00f/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/p00f/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/p00f/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/p00f"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think clickable should just be clickable, instead of \"querying\" a hint\r\n\r\nFor TUI, mouse click/hover may not be feasible, in which case the question one has to figure out is how to \"DWIM\" based on a key press. Range query would be the most general tool that plugins could use to do that.\r\n\r\n(also users might just prefer to use keyboard)\r\n\r\nHow hard would it be to make virtual text clickable? Like setting the \"cursor: pointer\" and everything?\r\n\r\n",
            "created_at": "2023-10-05T13:37:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748918047",
            "id": 1748918047,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPl8f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748918047/reactions"
            },
            "updated_at": "2023-10-05T16:13:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748918047",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How hard would it be to make virtual text clickable? Like setting the \"cursor: pointer\" and everything?\r\n\r\nOSC 8 is what you need to communicate \"clickability\" to the terminal, but even that is just for hyperlinks. I don't think it's possible to make an OSC 8 link do something like write text back to the running application.\r\n\r\nThere might be some way to do something hacky here. Maybe using an empty \"link\" so that the terminal still gives you the pointer cursor, but the click event still goes through to Nvim. No idea if that'd work, I'm just brainstorming.",
            "created_at": "2023-10-05T13:44:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748932592",
            "id": 1748932592,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPpfw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748932592/reactions"
            },
            "updated_at": "2023-10-05T13:44:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748932592",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Maybe using an empty \"link\" so that the terminal still gives you the pointer cursor, but the click event still goes through to Nvim. No idea if that'd work, I'm just brainstorming.\r\n\r\nVery interesting, seems worth looking into.\r\n\r\nFor handling the click event itself, I played around with `vim.fn.getmousepos()` just now. I don't think any of the fields it returns are enough to figure out which label was clicked; perhaps a `virt_text_idx` field would do the trick?\r\n\r\nThen on the plugin side, I could add mappings for `<LeftMouse>`, `<C-LeftMouse>`, etc which get the `vim.lsp.buf.inlay_hints()` at the mouse `{ row, col }` and finds the label via `virt_text_idx`\n\nEDIT: The mouse handler does need to be Neovim core if the clickability indicator is in core (which it has to be, I think)\n\nTODO: I haven't thought through how this all plays with GUI frontends like Neovide",
            "created_at": "2023-10-05T13:59:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748960004",
            "id": 1748960004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oPwME",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748960004/reactions"
            },
            "updated_at": "2023-10-05T16:13:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748960004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": " Some research on mouse hover: https://github.com/neovim/neovim/issues/9534",
            "created_at": "2023-10-05T14:09:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748981601",
            "id": 1748981601,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oP1dh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748981601/reactions"
            },
            "updated_at": "2023-10-05T14:09:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748981601",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "### regarding api/location\r\n\r\nPart of the motivation for a dedicated module for `inlay_hints` was that it would allow us to add new methods to it. So big -1 for now adding a `buf.inlay_hints` that is ending up calling a different method on `inlay_hints`.\r\n\r\nThis should be a `vim.lsp.inlay_hints.get(opts)` if we want to expose the data. Where `opts` provides various filters. Similar to `vim.diagnostic.get()` or `vim.lsp.codelens.get()`.\r\n\r\n\r\n### regarding resolve\r\n\r\nI think ideally we'd handle this transparently, without users of higher level APIs knowing anything about it.\r\n\r\n\r\n---\r\n\r\n> The LSP specification allows inlay hints to include tooltips, clickable label parts, and code actions;\r\n\r\n\r\nThey do not have code actions, but can contain textEdits that one can apply (I think the intention here is to persist the inlay hint into actual text).\r\n\r\nThis could be exposed via a `inlay_hints.apply()` or `inlay_hints.run()` or something like that.\r\n\r\nThe label can also contain a command. I have no idea what the intention here is. Do language servers use this? If so, what for?\r\n\r\n\r\n---\r\n\r\n\r\nI wonder if neovim should have a more generic tooltip mechanism?\r\n",
            "created_at": "2023-10-05T14:10:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1748982515",
            "id": 1748982515,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oP1rz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748982515/reactions"
            },
            "updated_at": "2023-10-05T14:10:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1748982515",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This should be a `vim.lsp.inlay_hints.get(opts)` if we want to expose the data. Where `opts` provides various filters. Similar to `vim.diagnostic.get()` or `vim.lsp.codelens.get()`.\r\n\r\nThanks, that's exactly the kind of advice I'm looking for regarding the conventions (I'm not familiar with what's the \"old way\" vs \"new way\"). GitHub is being slow to update PRs, but I just updated the branch to make it this way.\r\n\r\nThe only awkward thing is that `__call` does not show up in generated vimdoc. It works perfectly in LSP hover docs though.\r\n\r\n> This could be exposed via a `inlay_hints.apply()` or `inlay_hints.run()` or something like that.\r\n\r\nI wanted to keep initial drafts conservative by only doing trivial low-level stuff first, but if y'all are open to it we can also add these additional utilities as a next step.\r\n\r\n> I wonder if neovim should have a more generic tooltip mechanism?\r\n\r\nRelated to your comment on Matrix about `vim.ui.config`?\r\n\r\nI was going to try using `open_floating_preview` for my plugin, will report back on how well it works.",
            "created_at": "2023-10-05T15:15:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749111669",
            "id": 1749111669,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oQVN1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749111669/reactions"
            },
            "updated_at": "2023-10-05T15:15:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749111669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I wanted to keep initial drafts conservative by only doing trivial low-level stuff first, but if y'all are open to it we can also add these additional utilities as a next step.\r\n\r\nGood call :+1: \r\n\r\nI didn't mean to imply that we should do that now/at the same time. Just as a rough outline of what we could do later.\r\n\r\n\r\n> > I wonder if neovim should have a more generic tooltip mechanism?\r\n>\r\n> Related to your comment on Matrix about vim.ui.config?\r\n\r\n\r\nI didn't have anything concrete in mind - that was just thinking out loud.\r\n",
            "created_at": "2023-10-05T15:50:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749176145",
            "id": 1749176145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oQk9R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749176145/reactions"
            },
            "updated_at": "2023-10-05T15:50:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749176145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Just as a rough outline of what we could do later.\n\nIndeed, now that I think about it, it does seem correct to have Neovim handle the text edits / commands part given that we already have `TextEdit`, `Command`, etc logic\n\nSo the only complexity outsourced to plugins would be triggering the inlay hint w/o mouse",
            "created_at": "2023-10-05T17:11:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749332025",
            "id": 1749332025,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oRLA5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749332025/reactions"
            },
            "updated_at": "2023-10-05T17:17:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749332025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Indeed, now that I think about it, it does seem correct to have Neovim handle the text edits / commands part given that we already have TextEdit, Command, etc logic\r\n\r\n@llllvvuu Might not be relevant but do note that when using inlay hints as a \"go to definition\", there could be multiple definitions and so one needs to consider how to handle that. In VS Code for example, when control-clicking on an inlay hints that has multiple definitions, the \"Peek definition\" hover window is displayed to show all the results. In Neovim this could mean hooking up to `vim.ui.select`.\r\n\r\nJust a heads-up because this might not be immediately obvious from the specification of [label parts](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#inlayHintLabelPart).",
            "created_at": "2023-10-05T17:21:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1749345877",
            "id": 1749345877,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oROZV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749345877/reactions"
            },
            "updated_at": "2023-10-05T17:21:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1749345877",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I figured out a janky way to keep the vimdoc intact for the `__call`. Just updated the PR.\r\n\r\n> Might not be relevant but do note that when using inlay hints as a \"go to definition\", there could be multiple definitions\r\n\r\nIt's very relevant! Currently I'm tracking all the UI stuff in my [plugin roadmap](https://github.com/llllvvuu/interactive-inlay.nvim#roadmap), and starting with headless stuff here. If the UI stuff gets good reception downstream then I'll start proposing to upstream.\r\n\r\n`vim.ui.select` is a great suggestion, if we want to put some UI in core that would be the way probably. I didn't realize it because I use Telescope for everything (and would probably use Telescope for the plugin too), but it looks like Neovim even includes a UI for references using `loclist`.\r\n\r\nSo maybe core UI (if it exists) can be `loclist` for `location`s + `vim.ui.select` for `command`s\r\n\r\n> I think ideally we'd handle this transparently, without users of higher level APIs knowing anything about it.\r\n\r\nThinking about this a bit. If we want to do resolution instead of the user doing it, we need to figure out what the right trigger for it is. Do we automatically resolve everything that we return from `vim.lsp.inlay_hint.get()`?\r\n\r\nIn any case, it looks like manual resolving is [already possible](\r\nhttps://github.com/hrsh7th/cmp-nvim-lsp/blob/44b16d11215dce86f253ce0c30949813c0a90765/lua/cmp_nvim_lsp/source.lua#L85-L87\r\n) without any extra work from our part (by calling `client.request` directly). Yay!",
            "created_at": "2023-10-06T07:45:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1750134546",
            "id": 1750134546,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oUO8S",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750134546/reactions"
            },
            "updated_at": "2023-10-06T07:47:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1750134546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Thinking about this a bit. If we want to do resolution instead of the user doing it, we need to figure out what the right trigger for it is. Do we automatically resolve everything that we return from vim.lsp.inlay_hint.get()?\r\n\r\nI think that might be quite expensive. It also depends a bit on what functionality we want to have built-in eventually.\r\nE.g. we may end up wanting to resolve any inlay hints that are in the active view-port automatically.\r\nIn which case `.get()` should probably only return them as-is, and leave it up to the consumers to further resolve them as needed.\r\n\r\nMaybe that's the safer option for now, we can still change that later if the various use-cases become clearer. And given that we expose the `client_id`, it isn't too difficult to resolve them without any extra API.\r\n\r\n\r\nA test case would be good, otherwise this seems to shape up nicely.\r\n",
            "created_at": "2023-10-07T07:39:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1751638506",
            "id": 1751638506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oZ-Hq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751638506/reactions"
            },
            "updated_at": "2023-10-07T07:39:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751638506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> A test case would be good, otherwise this seems to shape up nicely.\r\n\r\nYup, will do that now that I've collected comments. Once the test case(s) is done I'll move this out of draft.\r\n\r\n> Maybe that's the safer option for now, we can still change that later if the various use-cases become clearer. And given that we expose the client_id, it isn't too difficult to resolve them without any extra API.\r\n\r\nYeah it turned out to be really easy:\r\nhttps://github.com/llllvvuu/interactive-inlay.nvim/blob/6457a209104be3de70e821cdfe4891798eaabbfe/lua/interactive-inlay/init.lua#L27-L29\r\n\r\nI'll probably do nothing for now and see if we get any feature requests.",
            "created_at": "2023-10-07T08:21:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1751648605",
            "id": 1751648605,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oaAld",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751648605/reactions"
            },
            "updated_at": "2023-10-07T08:21:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1751648605",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Alright, finally got those tests added and ready to rumble",
            "created_at": "2023-10-10T17:55:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1755951800",
            "id": 1755951800,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5oqbK4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1755951800/reactions"
            },
            "updated_at": "2023-10-10T17:55:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1755951800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> whereas toggle is quirky and uncommon.\r\n\r\nIt seems pretty common, including in your own dotfiles: https://github.com/search?q=vim.lsp.inlay_hint&type=code\r\n\r\n>toggling is simply:\r\n> enable(..., ~is_enabled())\r\n\r\nThis is fair though.\r\n\r\n> We always end up getting requests for is_enable\r\n\r\nIndeed I think I will add `is_enabled()` regardless of where the toggle vs enable discussion goes.",
            "created_at": "2023-10-14T03:01:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1762516073",
            "id": 1762516073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5pDdxp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1762516073/reactions"
            },
            "updated_at": "2023-10-14T03:01:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1762516073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > We always end up getting requests for is_enable\r\n> \r\n> Indeed I think I will add `is_enabled()` regardless of where the toggle vs enable discussion goes.\r\n\r\nJust to be clear, I'm waiting for this change and then we can merge this PR.",
            "created_at": "2023-10-29T11:00:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/25512#issuecomment-1784066576",
            "id": 1784066576,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
            "node_id": "IC_kwDOAPphoM5qVrIQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1784066576/reactions"
            },
            "updated_at": "2023-10-29T11:00:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1784066576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25512/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25512/commits",
    "created_at": "2023-10-05T12:52:12Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25512.diff",
    "draft": false,
    "head": {
        "label": "llllvvuu:feat/inlay_hints",
        "ref": "feat/inlay_hints",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/llllvvuu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/llllvvuu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/llllvvuu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/llllvvuu/neovim/branches{/branch}",
            "clone_url": "https://github.com/llllvvuu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/llllvvuu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/llllvvuu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/llllvvuu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/llllvvuu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/llllvvuu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/llllvvuu/neovim/contributors",
            "created_at": "2023-09-10T03:41:28Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/llllvvuu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/llllvvuu/neovim/downloads",
            "events_url": "https://api.github.com/repos/llllvvuu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/llllvvuu/neovim/forks",
            "full_name": "llllvvuu/neovim",
            "git_commits_url": "https://api.github.com/repos/llllvvuu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/llllvvuu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/llllvvuu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/llllvvuu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/llllvvuu/neovim/hooks",
            "html_url": "https://github.com/llllvvuu/neovim",
            "id": 689514052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/llllvvuu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/llllvvuu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/llllvvuu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/llllvvuu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/llllvvuu/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/llllvvuu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/llllvvuu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/llllvvuu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKRkmRA",
            "notifications_url": "https://api.github.com/repos/llllvvuu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/llllvvuu/neovim/pulls{/number}",
            "pushed_at": "2023-10-13T13:49:24Z",
            "releases_url": "https://api.github.com/repos/llllvvuu/neovim/releases{/id}",
            "size": 245564,
            "ssh_url": "git@github.com:llllvvuu/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/llllvvuu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/llllvvuu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/llllvvuu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/llllvvuu/neovim/subscription",
            "svn_url": "https://github.com/llllvvuu/neovim",
            "tags_url": "https://api.github.com/repos/llllvvuu/neovim/tags",
            "teams_url": "https://api.github.com/repos/llllvvuu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/llllvvuu/neovim/git/trees{/sha}",
            "updated_at": "2023-09-10T03:41:28Z",
            "url": "https://api.github.com/repos/llllvvuu/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
            "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
            "followers_url": "https://api.github.com/users/llllvvuu/followers",
            "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
            "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/llllvvuu",
            "id": 5601392,
            "login": "llllvvuu",
            "node_id": "MDQ6VXNlcjU2MDEzOTI=",
            "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
            "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
            "repos_url": "https://api.github.com/users/llllvvuu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/llllvvuu"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25512",
    "id": 1543619008,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25512",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6e088cd1596334a7efeccf737c84562dbf300b0e",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5cAcHA",
    "number": 25512,
    "patch_url": "https://github.com/neovim/neovim/pull/25512.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
            "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
            "followers_url": "https://api.github.com/users/glepnir/followers",
            "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
            "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/glepnir",
            "id": 41671631,
            "login": "glepnir",
            "node_id": "MDQ6VXNlcjQxNjcxNjMx",
            "organizations_url": "https://api.github.com/users/glepnir/orgs",
            "received_events_url": "https://api.github.com/users/glepnir/received_events",
            "repos_url": "https://api.github.com/users/glepnir/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/glepnir"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25512/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7fb8172ba7f894e29c12ccb84e27214d74aa37e6",
    "title": "feat(lsp)!: `vim.lsp.inlay_hint.get()`",
    "updated_at": "2023-10-29T11:00:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25512",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
        "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
        "followers_url": "https://api.github.com/users/llllvvuu/followers",
        "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
        "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/llllvvuu",
        "id": 5601392,
        "login": "llllvvuu",
        "node_id": "MDQ6VXNlcjU2MDEzOTI=",
        "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
        "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
        "repos_url": "https://api.github.com/users/llllvvuu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/llllvvuu"
    }
}