{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26085/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26085/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26085"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26085"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26085/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/757bcdda30493d7d8a0efb939a165ae1bd92eeb3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5024,
            "forks_count": 5024,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1702,
            "open_issues_count": 1702,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-29T01:47:25Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 241485,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71307,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-29T00:42:27Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71307,
            "watchers_count": 71307,
            "web_commit_signoff_required": false
        },
        "sha": "8868ecd401f6a45d005fe68c57fbba79d32af192",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "**Problem**: `:InspectTree` doesn't correctly handle nested injections\r\n\r\nUsing nvim-treesitter, we can have a codeblock of\r\n```html\r\n<script> \r\nconst x = html`<ge></ge>`\r\n</script>\r\n```\r\nthat will be rendered as the image: ![image](https://github.com/neovim/neovim/assets/29790821/c95be05a-9dc6-4f8e-8770-fab951c3fcb9)\r\n\r\n\r\nThis was because of the codeblock below https://github.com/neovim/neovim/blob/315c711700a87fe3fa546906ab39557ebba19baf/runtime/lua/vim/treesitter/dev.lua#L104-L115\r\n\r\nWhen we check for an injection, we only consider it to be a child of the root tree, and didn't check whether it was a child of another injection tree.\r\n\r\n**Solution**: During initial creation of `TSTreeView`, Iterate over all root trees to get their injections, not just the root tree. For each overlapping tree of a parent tree, Keep the injection tree with the biggest range as the child.\r\n\r\nPotential issues:\r\n- The old nvim-treesitter-playground implementation has all injections for a range shown, should this be followed?\r\n- How exactly can we find the tree with the biggest range? I used to try `child:trees()[1]:root()`, but this sometimes break while messing with a large enough file. Because of that, I opted for iterating every injected tree of a child, which is sometimes unnecessary.\r\n\r\nfixes #26084 \r\n\r\n| Before | After |\r\n| - | - |\r\n| ![image](https://github.com/neovim/neovim/assets/29790821/c95be05a-9dc6-4f8e-8770-fab951c3fcb9) | ![image](https://github.com/neovim/neovim/assets/29790821/9490c294-3c35-44e2-9059-3fbd1a96f46f) |",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1396630141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396630141"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't know if the inner injected trees are parsed before or after the outer ones. If the order are outer -> inner, then I will remove the if accordingly",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-17T02:51:14Z",
            "diff_hunk": "@@ -99,22 +99,44 @@ function TSTreeView:new(bufnr, lang)\n   -- For each child tree (injected language), find the root of the tree and locate the node within\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n-  local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n-      if node then\n-        injections[node:id()] = {\n-          lang = ltree:lang(),\n-          root = r,\n-        }\n-      end\n-    end)\n+  local tstrees = parser:parse(true)\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n   end\n+  parser:for_each_tree(function(root_tree, root_ltree)\n+    local root = root_tree:root()\n+    for _, child in pairs(root_ltree:children()) do\n+      child:for_each_tree(function(tree, ltree)\n+        local r = tree:root()\n+        local node = root:named_descendant_for_range(r:range())\n+        if node then\n+          if injections[node:id()] then",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1396630141",
            "id": 1396630141,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TPuJ9",
            "original_commit_id": "e873e81ab3dadcaebc3cb52ec55d016f13952b2d",
            "original_line": 119,
            "original_position": 34,
            "original_start_line": 118,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1735935002,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396630141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-17T02:51:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1396630141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1397453488"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1397453488"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This seems unsafe but I don't know. I'm just expecting the first tree to be the root tree and not anything else",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-17T15:05:43Z",
            "diff_hunk": "@@ -100,19 +100,39 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n+  end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      local r = child:trees()[1]:root()",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1397453488",
            "id": 1397453488,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TS3Kw",
            "original_commit_id": "51f8bfdea8512813213b3afea919abbec5094d10",
            "original_line": 115,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1737218468,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1397453488/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-17T15:08:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1397453488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1401711666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401711666"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It breaks, so I attempted it a different way",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-22T08:59:34Z",
            "diff_hunk": "@@ -100,19 +100,39 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n+  end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      local r = child:trees()[1]:root()",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1401711666",
            "id": 1401711666,
            "in_reply_to_id": 1397453488,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TjGwy",
            "original_commit_id": "51f8bfdea8512813213b3afea919abbec5094d10",
            "original_line": 115,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1743868880,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401711666/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T08:59:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401711666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1408011783"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408011783"
                }
            },
            "author_association": "MEMBER",
            "body": "Do you have an example where comparing the node lengths is necessary? I tried changing this check to\r\n\r\n```lua\r\nif node and not injections[node:id()] then\r\n```\r\n\r\nand both examples in this PR still work as expected.\r\n\r\nI am wondering if we can simplify this by removing the `node_length` check completely.",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-28T16:02:08Z",
            "diff_hunk": "@@ -100,19 +100,41 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n-      if node then\n-        injections[node:id()] = {\n-          lang = ltree:lang(),\n-          root = r,\n-        }\n-      end\n-    end)\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n   end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      child:for_each_tree(function(tree, ltree)\n+        local r = tree:root()\n+        local node = parent:named_descendant_for_range(r:range())\n+        if node then\n+          if injections[node:id()] then",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1408011783",
            "id": 1408011783,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T7I4H",
            "original_commit_id": "ca97ea9d98a3a41b2ddef890fd4b812c971da278",
            "original_line": 119,
            "original_position": 32,
            "original_start_line": 118,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1753286839,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408011783/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-28T16:09:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408011783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1408272455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408272455"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't know the exact order of child tree iteration, so I opted to compare the node length\n\nAs `for_each_tree` uses `pairs()`, the iterating order of the trees is not guaranteed to be outermost->innermost. If I understand this incorrectly then I will remove node_length",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-28T19:14:19Z",
            "diff_hunk": "@@ -100,19 +100,41 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n-      if node then\n-        injections[node:id()] = {\n-          lang = ltree:lang(),\n-          root = r,\n-        }\n-      end\n-    end)\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n   end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      child:for_each_tree(function(tree, ltree)\n+        local r = tree:root()\n+        local node = parent:named_descendant_for_range(r:range())\n+        if node then\n+          if injections[node:id()] then",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1408272455",
            "id": 1408272455,
            "in_reply_to_id": 1408011783,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T8IhH",
            "original_commit_id": "ca97ea9d98a3a41b2ddef890fd4b812c971da278",
            "original_line": 119,
            "original_position": 32,
            "original_start_line": 118,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1753705681,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408272455/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-28T19:17:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408272455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1408338894"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408338894"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok, I think you're right that it's safer not to assume the iteration order.\r\n\r\nI don't like this `node_length` function, I'd prefer to have it as a method on TSNode or in the Range module instead, but we can do that in a follow up. Two changes I want to make here in this PR:\r\n\r\n1. Store the size of the current injection in the `injections` table to make it easier/cheaper to compare in each iteration\r\n2. `assert` that `named_descendant_for_range` is non-nil (it won't ever be nil)\r\n\r\n```diff\r\n-        local node = parent:named_descendant_for_range(r:range())\r\n-        if node then\r\n-          if injections[node:id()] then\r\n-            local old_r = injections[node:id()].root\r\n-            -- Keep the outermost tree, as this is most likely the parent's tree\r\n-            if node_length(r) >= node_length(old_r) then\r\n-              injections[node:id()] = {\r\n-                lang = ltree:lang(),\r\n-                root = r,\r\n-              }\r\n-            end\r\n-          else\r\n-            injections[node:id()] = {\r\n-              lang = ltree:lang(),\r\n-              root = r,\r\n-            }\r\n-          end\r\n+        local node = assert(parent:named_descendant_for_range(r:range()))\r\n+        local id = node:id()\r\n+        local size = node_length(r)\r\n+        if not injections[id] or size > injections[id].size then\r\n+          injections[id] = {\r\n+            lang = ltree:lang(),\r\n+            root = r,\r\n+            size = size,\r\n+          }\r\n```\r\n\r\n",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-28T19:47:55Z",
            "diff_hunk": "@@ -100,19 +100,41 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n-      if node then\n-        injections[node:id()] = {\n-          lang = ltree:lang(),\n-          root = r,\n-        }\n-      end\n-    end)\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n   end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      child:for_each_tree(function(tree, ltree)\n+        local r = tree:root()\n+        local node = parent:named_descendant_for_range(r:range())\n+        if node then\n+          if injections[node:id()] then",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1408338894",
            "id": 1408338894,
            "in_reply_to_id": 1408011783,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T8YvO",
            "original_commit_id": "ca97ea9d98a3a41b2ddef890fd4b812c971da278",
            "original_line": 119,
            "original_position": 32,
            "original_start_line": 118,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1753802355,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408338894/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-28T19:47:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408338894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1408382394"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408382394"
                }
            },
            "author_association": "MEMBER",
            "body": "Well what do you know, there already exists a `:byte_length()` method on `TSNode`, it's just undocumented. So you can replace `node_length(r)` with `r:byte_length()`. Since the byte length is computed in C it should be fast enough that we don't need to cache it.\r\n\r\nNew diff:\r\n\r\n```diff\r\n-        local node = parent:named_descendant_for_range(r:range())\r\n-        if node then\r\n-          if injections[node:id()] then\r\n-            local old_r = injections[node:id()].root\r\n-            -- Keep the outermost tree, as this is most likely the parent's tree\r\n-            if node_length(r) >= node_length(old_r) then\r\n-              injections[node:id()] = {\r\n-                lang = ltree:lang(),\r\n-                root = r,\r\n-              }\r\n-            end\r\n-          else\r\n-            injections[node:id()] = {\r\n-              lang = ltree:lang(),\r\n-              root = r,\r\n-            }\r\n-          end\r\n+        local node = assert(parent:named_descendant_for_range(r:range()))\r\n+        local id = node:id()\r\n+        if not injections[id] or r:byte_length() > injections[id].root:byte_length() then\r\n+          injections[id] = {\r\n+            lang = ltree:lang(),\r\n+            root = r,\r\n+          }\r\n```",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-28T20:28:43Z",
            "diff_hunk": "@@ -100,19 +100,41 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n-      if node then\n-        injections[node:id()] = {\n-          lang = ltree:lang(),\n-          root = r,\n-        }\n-      end\n-    end)\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n   end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      child:for_each_tree(function(tree, ltree)\n+        local r = tree:root()\n+        local node = parent:named_descendant_for_range(r:range())\n+        if node then\n+          if injections[node:id()] then",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1408382394",
            "id": 1408382394,
            "in_reply_to_id": 1408011783,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T8jW6",
            "original_commit_id": "ca97ea9d98a3a41b2ddef890fd4b812c971da278",
            "original_line": 119,
            "original_position": 32,
            "original_start_line": 118,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1753871423,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408382394/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-28T20:28:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408382394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26085#discussion_r1408574621"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26085"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408574621"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have applied the diffs you suggested",
            "commit_id": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
            "created_at": "2023-11-29T00:27:17Z",
            "diff_hunk": "@@ -100,19 +100,41 @@ function TSTreeView:new(bufnr, lang)\n   -- the primary tree that contains that root. Add a mapping from the node in the primary tree to\n   -- the root in the child tree to the {injections} table.\n   local root = parser:parse(true)[1]:root()\n-  local injections = {} ---@type table<integer,table>\n-  for _, child in pairs(parser:children()) do\n-    child:for_each_tree(function(tree, ltree)\n-      local r = tree:root()\n-      local node = root:named_descendant_for_range(r:range())\n-      if node then\n-        injections[node:id()] = {\n-          lang = ltree:lang(),\n-          root = r,\n-        }\n-      end\n-    end)\n+  local injections = {} ---@type table<integer,{lang: string, root: TSNode}>\n+\n+  ---@param node TSNode\n+  ---@return number\n+  local function node_length(node)\n+    local _, _, start_byte = node:start()\n+    local _, _, end_byte = node:end_()\n+    return end_byte - start_byte\n   end\n+  parser:for_each_tree(function(parent_tree, parent_ltree)\n+    local parent = parent_tree:root()\n+    for _, child in pairs(parent_ltree:children()) do\n+      child:for_each_tree(function(tree, ltree)\n+        local r = tree:root()\n+        local node = parent:named_descendant_for_range(r:range())\n+        if node then\n+          if injections[node:id()] then",
            "html_url": "https://github.com/neovim/neovim/pull/26085#discussion_r1408574621",
            "id": 1408574621,
            "in_reply_to_id": 1408011783,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5T9SSd",
            "original_commit_id": "ca97ea9d98a3a41b2ddef890fd4b812c971da278",
            "original_line": 119,
            "original_position": 32,
            "original_start_line": 118,
            "path": "runtime/lua/vim/treesitter/dev.lua",
            "position": null,
            "pull_request_review_id": 1754183663,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408574621/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-29T00:27:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1408574621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "Thank you for fixing this, I have also run into this problem with nested injected languages. \r\n\r\nHave you tried something more complicated like the following in a markdown file? (remove the `;` before ```, I just added them so it shows up nicely in GitHub)\r\n\r\n```markdown\r\nMarkdown\r\n;```markdown\r\nInjected markdown.\r\n~~~lua\r\nprint 'Injected Lua'\r\nprint({{{{}}}})\r\nvim.cmd[[echo str([])]]\r\nvim.cmd[[\r\necho 'Injected vim in injected Lua'\r\necho str([])\r\n]]\r\n~~~\r\nMore injected markdown.\r\n;```\r\n```\r\n\r\n(Also, did you double check that the languages are as you expected when you press `I` in the `InspectTree` window to have the language of each line listed?)",
            "created_at": "2023-11-27T22:52:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/26085#issuecomment-1828760581",
            "id": 1828760581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26085",
            "node_id": "IC_kwDOAPphoM5tAKwF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828760581/reactions"
            },
            "updated_at": "2023-11-27T23:20:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828760581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Have you tried something more complicated like the following in a markdown file? (remove the ; before ```, I just added them so it shows up nicely in GitHub)\r\n\r\nIt's not more complicated than my example. It's still just nested injections.\r\n\r\nFwiw, here's the result of your code. \r\n![image](https://github.com/neovim/neovim/assets/29790821/b0a5b6a8-9655-4b89-86f4-6aab3ce19bc1)\r\n",
            "created_at": "2023-11-28T02:44:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/26085#issuecomment-1828972266",
            "id": 1828972266,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26085",
            "node_id": "IC_kwDOAPphoM5tA-bq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828972266/reactions"
            },
            "updated_at": "2023-11-28T02:44:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1828972266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "NONE",
            "body": "> It's not more complicated than my example. It's still just nested injections.\r\n\r\nIt is still just nested injections, yes. What I meant with more complicated was really just deeper nesting + multiple injections of the same language at the same nesting level. In particular, I have run into a problem with multiple injections of the same language at the same nesting level before, so I thought it would be worth testing.  \r\n\r\n> Fwiw, here's the result of your code. \r\n\r\nThank you. That looks like I would expect for that part. \r\n",
            "created_at": "2023-11-28T12:30:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/26085#issuecomment-1829748286",
            "id": 1829748286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26085",
            "node_id": "IC_kwDOAPphoM5tD74-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829748286/reactions"
            },
            "updated_at": "2023-11-28T12:30:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1829748286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7075380?v=4",
                "events_url": "https://api.github.com/users/Danielkonge/events{/privacy}",
                "followers_url": "https://api.github.com/users/Danielkonge/followers",
                "following_url": "https://api.github.com/users/Danielkonge/following{/other_user}",
                "gists_url": "https://api.github.com/users/Danielkonge/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Danielkonge",
                "id": 7075380,
                "login": "Danielkonge",
                "node_id": "MDQ6VXNlcjcwNzUzODA=",
                "organizations_url": "https://api.github.com/users/Danielkonge/orgs",
                "received_events_url": "https://api.github.com/users/Danielkonge/received_events",
                "repos_url": "https://api.github.com/users/Danielkonge/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Danielkonge/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Danielkonge/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Danielkonge"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I have run into a problem with multiple injections of the same language at the same nesting level before, so I thought it would be worth testing.\r\n\r\nIf this still happens for nvim-treesitter, make sure to send a PR :D. We tried very aggressively to not have a node be injected with two languages (bar comment nodes).",
            "created_at": "2023-11-29T01:23:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/26085#issuecomment-1831043415",
            "id": 1831043415,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26085",
            "node_id": "IC_kwDOAPphoM5tI4FX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1831043415/reactions"
            },
            "updated_at": "2023-11-29T01:23:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1831043415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26085/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26085/commits",
    "created_at": "2023-11-17T02:37:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26085.diff",
    "draft": false,
    "head": {
        "label": "lucario387:fix-nested-inj",
        "ref": "fix-nested-inj",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lucario387/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lucario387/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lucario387/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lucario387/neovim/branches{/branch}",
            "clone_url": "https://github.com/lucario387/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lucario387/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lucario387/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lucario387/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lucario387/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lucario387/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lucario387/neovim/contributors",
            "created_at": "2023-08-07T14:44:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lucario387/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lucario387/neovim/downloads",
            "events_url": "https://api.github.com/repos/lucario387/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lucario387/neovim/forks",
            "full_name": "lucario387/neovim",
            "git_commits_url": "https://api.github.com/repos/lucario387/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lucario387/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lucario387/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lucario387/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lucario387/neovim/hooks",
            "html_url": "https://github.com/lucario387/neovim",
            "id": 675710408,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lucario387/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lucario387/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lucario387/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lucario387/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lucario387/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/lucario387/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lucario387/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lucario387/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKEaFyA",
            "notifications_url": "https://api.github.com/repos/lucario387/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lucario387/neovim/pulls{/number}",
            "pushed_at": "2023-11-29T01:17:10Z",
            "releases_url": "https://api.github.com/repos/lucario387/neovim/releases{/id}",
            "size": 235775,
            "ssh_url": "git@github.com:lucario387/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lucario387/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lucario387/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lucario387/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lucario387/neovim/subscription",
            "svn_url": "https://github.com/lucario387/neovim",
            "tags_url": "https://api.github.com/repos/lucario387/neovim/tags",
            "teams_url": "https://api.github.com/repos/lucario387/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lucario387/neovim/git/trees{/sha}",
            "updated_at": "2023-08-07T14:44:29Z",
            "url": "https://api.github.com/repos/lucario387/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
            "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
            "followers_url": "https://api.github.com/users/lucario387/followers",
            "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lucario387",
            "id": 29790821,
            "login": "lucario387",
            "node_id": "MDQ6VXNlcjI5NzkwODIx",
            "organizations_url": "https://api.github.com/users/lucario387/orgs",
            "received_events_url": "https://api.github.com/users/lucario387/received_events",
            "repos_url": "https://api.github.com/users/lucario387/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lucario387"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26085",
    "id": 1605573304,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26085",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "fef2c0",
            "default": false,
            "description": "",
            "id": 5363823255,
            "name": "backport release-0.9",
            "node_id": "LA_kwDOAPphoM8AAAABP7Vylw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/backport%20release-0.9"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e1297f37401925c11c026451758faf2927aad80c",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5fsxq4",
    "number": 26085,
    "patch_url": "https://github.com/neovim/neovim/pull/26085.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26085/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/757bcdda30493d7d8a0efb939a165ae1bd92eeb3",
    "title": "fix(treesitter): make InspectTree correctly handle nested injections",
    "updated_at": "2023-11-29T01:23:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26085",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
        "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
        "followers_url": "https://api.github.com/users/lucario387/followers",
        "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
        "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lucario387",
        "id": 29790821,
        "login": "lucario387",
        "node_id": "MDQ6VXNlcjI5NzkwODIx",
        "organizations_url": "https://api.github.com/users/lucario387/orgs",
        "received_events_url": "https://api.github.com/users/lucario387/received_events",
        "repos_url": "https://api.github.com/users/lucario387/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lucario387"
    }
}