{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15218/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15218/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15218"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15218"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15218/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/84f66909e4008a57da947f1640bfc24da5e41a72"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5096,
            "forks_count": 5096,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1716,
            "open_issues_count": 1716,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T01:20:52Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248449,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72293,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-02T00:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72293,
            "watchers_count": 72293,
            "web_commit_signoff_required": false
        },
        "sha": "b3b02eb52943fdc8ba74af3b485e9d11655bc9c9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "The `split()` VimL function trims empty items from the returned list by default, so that, e.g.\r\n\r\n```vim\r\nsplit(\"\\nhello\\nworld\\n\\n\", \"\\n\")\r\n```\r\n\r\nreturns\r\n\r\n```vim\r\n[\"hello\", \"world\"]\r\n```\r\n\r\nThe Lua implementation of vim.split does not do this. For example,\r\n\r\n```lua\r\nvim.split(\"\\nhello\\nworld\\n\\n\", \"\\n\")\r\n```\r\n\r\nreturns\r\n\r\n```lua\r\n{'', 'hello', 'world', '', ''}\r\n```\r\n\r\nAdd an optional parameter to the `vim.split` function that, when true, trims these empty elements from the front and back of the returned table. This is only possible for vim.split and not `vim.gsplit`; because `vim.gsplit` is an iterator, there is no way for it to know if the current item is the last non-empty item.\r\n\r\nNote that in order to preserve backward compatibility, the parameter for the Lua `vim.split` function is `trimempty`, while the VimL function uses `keepempty` (i.e. they are opposites). This means there is a disconnect between these two functions that may surprise users.\r\n",
    "closed_at": "2021-10-04T00:33:12Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r715661884"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/715661884"
                }
            },
            "author_association": "MEMBER",
            "body": "vimscript split() calls the param `keepempty`. Should we stick with that? Or is there precedent for \"trimempty\" elsewhere? ",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-24T14:28:47Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r715661884",
            "id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qqCI8",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763147393,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715661884/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-24T14:28:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715661884",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r715715982"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/715715982"
                }
            },
            "author_association": "MEMBER",
            "body": "I mentioned this in the original PR comment, but the discontinuity here is to preserve backward compatibility. If we called it `keepempty` and changed the default behavior we would risk breaking a lot of existing usage of `vim.split`.",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-24T15:37:13Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r715715982",
            "id": 715715982,
            "in_reply_to_id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qqPWO",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763221805,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715715982/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-24T15:37:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715715982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r715949516"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/715949516"
                }
            },
            "author_association": "MEMBER",
            "body": "sorry I missed that. Since there are conflicts anyway, let's rename it to `noempty`. \"Trim\" potentially useful for a feature where each item is trimmed (e.g. [.NET has this](https://docs.microsoft.com/en-us/dotnet/api/system.stringsplitoptions?view=net-5.0#fields).\r\n\r\n.NET also uses the negative case (RemoveEmptyEntries) so there's that :)",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-24T23:25:07Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r715949516",
            "id": 715949516,
            "in_reply_to_id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qrIXM",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763529399,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715949516/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-24T23:25:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715949516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r715958563"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/715958563"
                }
            },
            "author_association": "MEMBER",
            "body": "It’s not “noempty” though, only empty elements from the front and back of the array are removed. “noempty” implies *all* empty elements are removed.\r\n\r\nthough I guess the vim parameter “keepempty” suffers from the same ambiguity.",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-25T00:07:00Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r715958563",
            "id": 715958563,
            "in_reply_to_id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qrKkj",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763538130,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715958563/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-25T00:08:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/715958563",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r716023437"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/716023437"
                }
            },
            "author_association": "MEMBER",
            "body": "oh my. ok, fair enough. Looks like the tests cover that case?\r\n\r\nWe can go ahead with this PR, though it would be a good time to introduce a \"kwargs\" variant instead of adding a 4th arg. But we can wait on that, up to you.",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-25T10:28:39Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r716023437",
            "id": 716023437,
            "in_reply_to_id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qraaN",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763580997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/716023437/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-25T10:28:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/716023437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r716058731"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/716058731"
                }
            },
            "author_association": "MEMBER",
            "body": "I think a kwargs variant is a good idea. If we go that route it would make sense to also make `{plain}` a keyword arg so that we don't mix positional and keyword arguments, but we can't do this without breaking backward compatibility. We could make `{plain}` a keyword arg as well as keeping it as a positional one for now to avoid breaking existing scripts, but update the documentation to indicate that new usages should use the keyword variant.\r\n\r\nbut maybe I'm overthinking this :) what do you think?",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-25T15:58:19Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r716058731",
            "id": 716058731,
            "in_reply_to_id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qrjBr",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763602642,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/716058731/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-25T15:58:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/716058731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15218#discussion_r716107932"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15218"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/716107932"
                }
            },
            "author_association": "MEMBER",
            "body": "> kwargs variant is a good idea. If we go that route it would make sense to also make `{plain}` a keyword arg so that we don't mix positional and keyword arguments, but we can't do this without breaking backward compatibility\r\n\r\ntypicall pattern is to accept exactly 1 arg for the kwargs variant. That's backward-compatible because normally arg1 is a string, not a table. See e.g. screen:expect() https://github.com/neovim/neovim/blob/b854e3ee8c7234f0e144c5e850c3cea9c3e01388/test/functional/ui/screen.lua#L315-L319\r\n\r\nIt's a bit noisy in the impl, but we can start to build common util functions since this is a pattern that should be pervasive (or just start kwargs from the beginning for most functions).",
            "commit_id": "84f66909e4008a57da947f1640bfc24da5e41a72",
            "created_at": "2021-09-25T22:56:55Z",
            "diff_hunk": "@@ -98,17 +98,41 @@ end\n --- <pre>\n ---  split(\":aa::b:\", \":\")     --> {'','aa','','b',''}\n ---  split(\"axaby\", \"ab?\")     --> {'','x','y'}\n----  split(x*yz*o, \"*\", true)  --> {'x','yz','o'}\n+---  split(\"x*yz*o\", \"*\", true)  --> {'x','yz','o'}\n+---  split(\"|x|y|z|\", \"|\", true, true) --> {'x', 'y', 'z'}\n --- </pre>\n---\n---@see |vim.gsplit()|\n ---\n---@param s String to split\n---@param sep Separator string or pattern\n---@param plain If `true` use `sep` literally (passed to String.find)\n---@returns List-like table of the split components.\n-function vim.split(s,sep,plain)\n-  local t={} for c in vim.gsplit(s, sep, plain) do table.insert(t,c) end\n+---@see |vim.gsplit()|\n+---\n+---@param s String to split\n+---@param sep Separator string or pattern\n+---@param plain If `true` use `sep` literally (passed to String.find)\n+---@param trimempty If `true` remove empty items from the front and back of the list\n+---@returns List-like table of the split components.\n+function vim.split(s, sep, plain, trimempty)",
            "html_url": "https://github.com/neovim/neovim/pull/15218#discussion_r716107932",
            "id": 716107932,
            "in_reply_to_id": 715661884,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4qrvCc",
            "original_commit_id": "4fbbcc9d80f217c962d251c3adf43acb696fd25f",
            "original_line": 112,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 763634949,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/716107932/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-09-25T22:56:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/716107932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15218/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15218/commits",
    "created_at": "2021-07-29T21:30:48Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15218.diff",
    "draft": false,
    "head": {
        "label": "gpanders:split-trimempty",
        "ref": "split-trimempty",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2023-12-28T14:34:45Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 238861,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "84f66909e4008a57da947f1640bfc24da5e41a72",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15218",
    "id": 699854625,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15218",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8a9f292991bca7d84a987be7b0eb0fd675a8dbb1",
    "merged_at": "2021-10-04T00:33:12Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0Njk5ODU0NjI1",
    "number": 15218,
    "patch_url": "https://github.com/neovim/neovim/pull/15218.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15218/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/84f66909e4008a57da947f1640bfc24da5e41a72",
    "title": "feat(lua): add \"noempty\" param to vim.split()",
    "updated_at": "2023-12-27T17:06:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15218",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}