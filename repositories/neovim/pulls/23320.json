{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23320/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23320/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/23320"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23320"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23320/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5b111a8f00f8dbe458a3d437c9f06c9419d24840"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5096,
            "forks_count": 5096,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1716,
            "open_issues_count": 1716,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T01:20:52Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248449,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72293,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-02T00:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72293,
            "watchers_count": 72293,
            "web_commit_signoff_required": false
        },
        "sha": "fba18a3b62310f4535d979a05288101b9af2ef50",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Fix #22489\r\nClose #8715\r\nClose #11014 (superseded)\r\n\r\n**vim-patch:9.0.0640: cannot scroll by screen line if a line wraps**\r\n\r\nProblem:    Cannot scroll by screen line if a line wraps.\r\nSolution:   Add the 'smoothscroll' option.  Only works for CTRL-E and CTRL-Y\r\n            so far.\r\n\r\nhttps://github.com/vim/vim/commit/f6196f424474e2a9c160f2a995fc2691f82b58f9\r\n\r\n**vim-patch:9.0.0641: missing part of the new option code**\r\n\r\nProblem:    Missing part of the new option code.\r\nSolution:   Add missing WV_SMS.\r\n\r\nhttps://github.com/vim/vim/commit/bbbda8fd81f6d720962b67ae885825bad9be4456\r\n\r\n**vim-patch:9.0.0642: breakindent test fails**\r\n\r\nProblem:    Breakindent test fails.\r\nSolution:   Correct logic for resetting need_showbreak.\r\n\r\nhttps://github.com/vim/vim/commit/693729ae58bd30fc1a4c08042ebe9923b45f5763\r\n\r\n**vim-patch:9.0.0643: smoothscroll test fails**\r\n\r\nProblem:    Smoothscroll test fails.\r\nSolution:   Check if skipcol changed.\r\n\r\nhttps://github.com/vim/vim/commit/b34c4b7863af8718ad726173585dd38a7c292f0f\r\n\r\n**vim-patch:9.0.0644: 'smoothscroll' is not copied to a new window on :split**\r\n\r\nProblem:    'smoothscroll' is not copied to a new window on :split.\r\nSolution:   Copy the option value.  Add a test.\r\n\r\nhttps://github.com/vim/vim/commit/b1fd26d208aadc96d3e8b9215f761150f40a9f91\r\n\r\n**vim-patch:9.0.0645: CTRL-Y does not stop at line 1**\r\n\r\nProblem:    CTRL-Y does not stop at line 1. (John Marriott)\r\nSolution:   Stop at line 1 when 'smoothscroll' is not set. (closes vim/vim#11261)\r\n\r\nhttps://github.com/vim/vim/commit/8df9748edb2ac8bd025e34e06194ac210667c97a\r\n\r\n**vim-patch:9.0.0646: with 'smoothscroll' CTRL-E is wrong when 'foldmethod' set**\r\n\r\nProblem:    with 'smoothscroll' set CTRL-E does not work properly when\r\n            'foldmethod' is set to \"indent\". (Yee Cheng Chin)\r\nSolution:   Merge the code for scroling with folds and 'smoothscroll'.\r\n            (closes vim/vim#11262)\r\n\r\nhttps://github.com/vim/vim/commit/6b2d4ff7148e0b416ba745d20d061e6f7bb53ee7\r\n\r\n**vim-patch:9.0.0649: no indication the first line is broken for 'smoothscroll'**\r\n\r\nProblem:    No indication when the first line is broken for 'smoothscroll'.\r\nSolution:   Show \"<<<\" in the first line.\r\n\r\nhttps://github.com/vim/vim/commit/406b5d89e18742ac6e6256ffc72fb70a27f0148b\r\n\r\n\r\n**vim-patch:9.0.0650: some tests are failing**\r\n\r\nProblem:    Some tests are failing.\r\nSolution:   Adjust for \"<<<\" showing up.\r\n\r\nhttps://github.com/vim/vim/commit/0466d398a550623126fba3a2a08208a798b28bda\r\n\r\n**vim-patch:9.0.0652: 'smoothscroll' not tested with 'number' and \"n\" in 'cpo'**\r\n\r\nProblem:    'smoothscroll' not tested with 'number' and \"n\" in 'cpo'.\r\nSolution:   Add tests, fix uncovered problem.\r\n\r\nhttps://github.com/vim/vim/commit/b6aab8f44beb8c5d99393abdc2c9faab085c72aa\r\n\r\n**vim-patch:9.0.0654: breakindent test fails**\r\n\r\nProblem:    Breakindent test fails.\r\nSolution:   Temporarily accept wrong result.\r\n\r\nhttps://github.com/vim/vim/commit/ec32c781a282398e3da27f4aec4b03fcd20f8b0d\r\n\r\n**vim-patch:9.0.0671: negative topline using CTRL-Y with 'smoothscroll' and 'diff'**\r\n\r\nProblem:    Negative topline using CTRL-Y with 'smoothscroll' and 'diff'.\r\n                (Ernie Rael)\r\nSolution:   Only use 'smoothscroll' when 'wrap' is set.\r\n\r\nhttps://github.com/vim/vim/commit/1a58e1d97cfc72e501cbf63ad75f46f1bb4c8da2\r\n\r\n**vim-patch:9.0.0672: line partly shows with 'smoothscroll' and 'scrolloff' zero**\r\n\r\nProblem:    Cursor line only partly shows with 'smoothscroll' and 'scrolloff'\r\n            zero.\r\nSolution:   Do not use 'smoothscroll' when adjusting the bottom of the window.\r\n            (closes vim/vim#11269)\r\n\r\nhttps://github.com/vim/vim/commit/9bab7a024393200bb2c03b3abddfda86436990a7\r\n\r\n**vim-patch:9.0.0673: first line wong with 'smoothscroll' and 'scrolloff' zero**\r\n\r\nProblem:    First line not scrolled properly with 'smoothscroll' and\r\n            'scrolloff' zero and using \"k\".\r\nSolution:   Make sure the cursor position is visible.\r\n\r\nhttps://github.com/vim/vim/commit/46b54747c5d252c584571a321231bad9330018ec\r\n\r\n**vim-patch:9.0.0677: breakindent test accepts wrong result**\r\n\r\nProblem:    Breakindent test accepts wrong result.\r\nSolution:   Fix the number column and adjust the expected text.\r\n\r\nhttps://github.com/vim/vim/commit/06618f94f1c9ed73a84ad5d6a8e1933b0b8da846\r\n\r\n**vim-patch:9.0.0679: tests failing with 'smoothscroll', 'number' and \"n\" in 'cpo'**\r\n\r\nProblem:    Tests failing with 'smoothscroll', 'number' and \"n\" in 'cpo'.\r\nSolution:   Do not count number column in topline if columns are skipped.\r\n\r\nhttps://github.com/vim/vim/commit/35b251d2c2c9d415887d334473669ea886117356\r\n\r\n**vim-patch:9.0.0680: tests failing with 'breakindent', 'number' and \"n\" in 'cpo'**\r\n\r\nProblem:    Tests failing with 'breakindent', 'number' and \"n\" in 'cpo'.\r\nSolution:   Do count the number column in topline if 'breakindent' is set.\r\n\r\nhttps://github.com/vim/vim/commit/3725116f6ec3b5c01e456b151a60c0690e04f76c\r\n\r\n\r\n**vim-patch:9.0.0681: \"<<<\" shows for 'smoothscroll' even when 'showbreak is set**\r\n\r\nProblem:    \"<<<\" shows for 'smoothscroll' even when 'showbreak is\r\nset.\r\nSolution:   When 'showbreak' is set do not display \"<<<\".\r\n\r\nhttps://github.com/vim/vim/commit/0937b9fb244949b7ce9bfcf8398d7495b9b6aa85\r\n\r\n**vim-patch:9.0.0701: with 'smoothscroll' cursor position not adjusted in long line**\r\n\r\nProblem:    With 'smoothscroll' the cursor position s not adjusted in a long\r\n            line.\r\nSolution:   Move the cursor further up or down in the line.\r\n\r\nhttps://github.com/vim/vim/commit/8cf3459878198c5bb4a96f3c63214b2beccce341\r\n\r\n**vim-patch:9.0.0707: with 'smoothscroll' cursor position not adjusted in long line**\r\n\r\nProblem:    With 'smoothscroll' and 'scrolloff' non-zero the cursor position\r\n            is not properly adjusted in a long line.\r\nSolution:   Move the cursor further up or down in the line.\r\n\r\nhttps://github.com/vim/vim/commit/118c235112854f34182d968613d7fe98be3b290b\r\n\r\n**vim-patch:9.0.0734: cursor position invalid when scrolling with 'smoothscroll'**\r\n\r\nProblem:    Cursor position invalid when scrolling with 'smoothscroll' set.\r\n            (Ernie Rael)\r\nSolution:   Add w_valid_skipcol and clear flags when it changes.  Adjust\r\n            w_skipcol after moving the cursor.\r\n\r\nhttps://github.com/vim/vim/commit/2fbabd238a94022c99506e920186a5b6cdf15426\r\n\r\n**vim-patch:9.0.0735: breakindent and scrolloff tests fail**\r\n\r\nProblem:    Breakindent and scrolloff tests fail.\r\nSolution:   Temporarily skip the assertions.\r\n\r\nhttps://github.com/vim/vim/commit/e42033e735febb163fdc57aadbc11787ca611ba9\r\n\r\n**vim-patch:9.0.0745: wrong cursor position when using \"gj\" and \"gk\" in a long line**\r\n\r\nProblem:    Wrong cursor position when using \"gj\" and \"gk\" in a long line.\r\nSolution:   Adjust computations for the cursor position and skipcol. Re-enable\r\n            tests that pass now, disable failing breakindent test.\r\n\r\nhttps://github.com/vim/vim/commit/4b6172e108fe06be47c09f8690dc54608be3ee80\r\n\r\n**vim-patch:9.0.0746: breakindent test cases are commented out**\r\n\r\nProblem:    Breakindent test cases are commented out.\r\nSolution:   Adjust expected result to slightly different behavior.  Correct\r\n            computations for cursor position.\r\n\r\nhttps://github.com/vim/vim/commit/856c5d2bc7c3864f8b63a0ab3e376d5c5e51f1d5\r\n\r\n**vim-patch:9.0.0751: 'scrolloff' does not work well with 'smoothscroll'**\r\n\r\nProblem:    'scrolloff' does not work well with 'smoothscroll'.\r\nSolution:   Make positioning the cursor a bit better.  Rename functions.\r\n\r\nhttps://github.com/vim/vim/commit/c9121f798f49fa71e814912cb186d89c164090c3\r\n\r\n**vim-patch:9.0.0757: line number not visisble with 'smoothscroll', 'nu' and 'rnu'**\r\n\r\nProblem:    Line number not visisble with 'smoothscroll', 'nu' and 'rnu'.\r\nSolution:   Put the \">>>\" after the line number instead of on top.\r\n\r\nhttps://github.com/vim/vim/commit/eb4de629315f2682d8b314462d02422ec98d751a\r\n\r\n**vim-patch:9.0.0758: \"precedes\" from 'listchars' overwritten by <<<**\r\n\r\nProblem:    \"precedes\" from 'listchars' overwritten by <<< for 'smoothscroll'.\r\nSolution:   Keep the \"precedes\" character.\r\n\r\nhttps://github.com/vim/vim/commit/13cdde39520220bb856cba16626327c706752b51\r\n\r\n**vim-patch:9.0.0760: display test for 'listchars' \"precedes\" fails**\r\n\r\nProblem:    Display test for 'listchars' \"precedes\" fails.\r\nSolution:   Correct the expected result.\r\n\r\nhttps://github.com/vim/vim/commit/297164cb7972beff35e375ccac4fbad8196ccbd7\r\n\r\n**vim-patch:9.0.0807: with 'smoothscroll' typing \"0\" may not go to the first column**\r\n\r\nProblem:    With 'smoothscroll' typing \"0\" may not go to the first column.\r\nSolution:   Recompute w_cline_height when needed.  Do not scroll up when it\r\n            would move the cursor.\r\n\r\nhttps://github.com/vim/vim/commit/d5337efece7c68e9b4ce864532ea49b02453b674\r\n\r\n**vim-patch:9.0.0892: may redraw when not needed**\r\n\r\nProblem:    May redraw when not needed, causing slow scrolling.\r\nSolution:   Do not redraw when w_skipcol doesn't change.  When w_skipcol\r\n            changes only redraw from the top. (issue vim/vim#11559)\r\n\r\nhttps://github.com/vim/vim/commit/f32fb93e431e4db95a8663d86dfeb6bffa5896f6\r\n\r\n**vim-patch:9.0.0893: 'smoothscroll' cursor calculations wrong when 'number' is set**\r\n\r\nProblem:    'smoothscroll' cursor calculations wrong when 'number' is set.\r\nSolution:   Correct the code that computes the width. (closes vim/vim#11492)\r\n\r\nhttps://github.com/vim/vim/commit/01ee52bab6041450095c53f9469b1b266a7e3d4d\r\n\r\n**vim-patch:9.0.0898: with 'smoothscroll' cursor is one screen line too far down**\r\n\r\nProblem:    With 'smoothscroll' cursor is one screen line too far down. (Ernie\r\n            Rael)\r\nSolution:   Add a test that currently has the wrong result so that a fix can\r\n            be made. (issue vim/vim#11436)\r\n\r\nhttps://github.com/vim/vim/commit/75ac25b4967cdcdfdf2d6c086a6e2308868c280a\r\n\r\n**vim-patch:9.0.0900: cursor moves too far with 'smoothscroll'**\r\n\r\nProblem:    Cursor moves too far with 'smoothscroll'.\r\nSolution:   Only move as far as really needed. (Yee Cheng Chin, closes vim/vim#11504)\r\n\r\nhttps://github.com/vim/vim/commit/81ba26e9de24ca6b1c05b6ec03e53b21793f1a4b\r\n\r\n**vim-patch:9.0.0901: setting w_leftcol and handling side effects is confusing**\r\n\r\nProblem:    Setting w_leftcol and handling side effects is confusing.\r\nSolution:   Use a function to set w_leftcol() and handle side effects.\r\n\r\nhttps://github.com/vim/vim/commit/0c34d562647f029faca40f7733ccfb7b5377672b\r\n\r\n**vim-patch:9.0.0908: with 'smoothscroll' cursor may end up in wrong position**\r\n\r\nProblem:    With 'smoothscroll' cursor may end up in wrong position.\r\nSolution:   Correct the computation of screen lines. (Yee Cheng Chin,\r\n            closes vim/vim#11502)\r\n\r\nhttps://github.com/vim/vim/commit/361895d2a15b4b0bbbb4c009261eab5b3d69ebf1\r\n\r\n**vim-patch:9.0.0911: with 'smoothscroll' set mouse click position may be wrong**\r\n\r\nProblem:    With 'smoothscroll' set mouse click position may be wrong.\r\nSolution:   Adjust computations for w_skipcol. (Yee Cheng Chin, closes vim/vim#11514)\r\n\r\nhttps://github.com/vim/vim/commit/e6392b102151ec69fad232bcf00591230cef8e1c\r\n\r\n**vim-patch:9.0.0998: \"gk\" may reset skipcol when not needed**\r\n\r\nProblem:    \"gk\" may reset skipcol when not needed.\r\nSolution:   Only reset skipcol if the cursor column is less.\r\n\r\nhttps://github.com/vim/vim/commit/1b73edd9ee40aec400f3611f59823cec5fd1c489\r\n\r\n**vim-patch:9.0.1000: with 'smoothscroll' skipcol may be reset unnecessarily**\r\n\r\nProblem:    With 'smoothscroll' skipcol may be reset unnecessarily.\r\nSolution:   Check the line does actually fit in the window.\r\n\r\nhttps://github.com/vim/vim/commit/b21b8e9ed081a6ef6b6745fe65d219b3ac046c3b\r\n\r\n**vim-patch:9.0.1121: cursor positioning and display problems with 'smoothscroll'**\r\n\r\nProblem:    Cursor positioning and display problems with 'smoothscroll' and\r\n            using \"zt\", \"zb\" or \"zz\".\r\nSolution:   Adjust computations and conditions. (Yee Cheng Chin,\r\n            closes vim/vim#11764)\r\n\r\nhttps://github.com/vim/vim/commit/db4d88c2adfe8f8122341ac9d6cae27ef78451c8\r\n\r\n**vim-patch:9.0.1247: divide by zero with 'smoothscroll' set and a narrow window**\r\n\r\nProblem:    Divide by zero with 'smoothscroll' set and a narrow window.\r\nSolution:   Bail out when the window is too narrow.\r\n\r\nhttps://github.com/vim/vim/commit/870219c58c0804bdc55419b2e455c06ac715a835\r\n\r\n**vim-patch:9.0.1367: divide by zero in zero-width window**\r\n\r\nProblem:    Divide by zero in zero-width window.\r\nSolution:   Check the width is positive.\r\n\r\nhttps://github.com/vim/vim/commit/e0f869196930ef5f25a0ac41c9215b09c9ce2d3c\r\n\r\n**vim-patch:9.0.1435: scrolling too many lines when 'wrap' and 'diff' are set**\r\n\r\nProblem:    Scrolling too many lines when 'wrap' and 'diff' are set.\r\nSolution:   Only scroll by screenlines for 'diff' when 'wrap' is not set.\r\n            (closes vim/vim#12211)\r\n\r\nhttps://github.com/vim/vim/commit/38d867f041349e1400c2cce9cac06f59ae6ccbb1\r\n\r\n**vim-patch:9.0.1502: no test for deleting the end of a long wrapped line**\r\n\r\nProblem:    No test for deleting the end of a long wrapped line.\r\nSolution:   Add a test to check the right text is displayed. (Luuk van Baal,\r\n            closes vim/vim#12318)\r\n\r\nhttps://github.com/vim/vim/commit/5b10a140983c16140d69a214494c4b8af8b34763",
    "closed_at": "2023-05-02T11:42:32Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1177294621"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177294621"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure where this cursor discrepancy comes from, the oldtest does `7G`. Not sure it matters either.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-26T03:22:10Z",
            "diff_hunk": "@@ -0,0 +1,134 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local clear = helpers.clear\n+local exec = helpers.exec\n+local feed = helpers.feed\n+\n+before_each(clear)\n+\n+describe('smoothscroll', function()\n+  local screen\n+\n+  before_each(function()\n+    screen = Screen.new(40, 12)\n+    screen:attach()\n+  end)\n+\n+  -- Test_CtrlE_CtrlY_stop_at_end\n+  it('disabled does not break <C-E> and <C-Y> stop at end', function()\n+    exec([[\n+      enew\n+      call setline(1, ['one', 'two'])\n+      set number\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect({any = \"  1 ^one\"})\n+    feed('<C-E><C-E><C-E>')\n+    screen:expect({any = \"  2 ^two\"})\n+  end)\n+\n+  -- Test_smoothscroll_CtrlE_CtrlY\n+  it('works with <C-E> and <C-E>', function()\n+    exec([[\n+      call setline(1, [ 'line one', 'word '->repeat(20), 'line three', 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll\n+      :5\n+    ]])\n+    local s0 = [[\n+      line one                                |\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s1 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s2 = [[\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s3 = [[\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s4 = [[\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    feed('<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('<C-E>')\n+    screen:expect(s3)\n+    feed('<C-E>')\n+    screen:expect(s4)\n+    feed('<C-Y>')\n+    screen:expect(s3)\n+    feed('<C-Y>')\n+    screen:expect(s2)\n+    feed('<C-Y>')\n+    screen:expect(s1)\n+    feed('<C-Y>')\n+    screen:expect(s0)\n+\n+    exec('set foldmethod=indent')\n+    feed('5G<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('5G<C-Y>')",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1177294621",
            "id": 1177294621,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GLBcd",
            "original_commit_id": "cd1e1c4ce537850f3820b1d60e79d8175fc9c322",
            "original_line": 129,
            "original_position": 129,
            "original_start_line": null,
            "path": "test/functional/legacy/scroll_opt_spec.lua",
            "position": null,
            "pull_request_review_id": 1401095207,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177294621/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-26T03:22:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177294621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1177297646"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177297646"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah it comes from `'scrolloff'`. Do we match the vim test by setting scrolloff to 5? Or leave it like this.\r\n\r\nI guess setting scrolloff increases the test coverage, I'll update the tests...",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-26T03:29:59Z",
            "diff_hunk": "@@ -0,0 +1,134 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local clear = helpers.clear\n+local exec = helpers.exec\n+local feed = helpers.feed\n+\n+before_each(clear)\n+\n+describe('smoothscroll', function()\n+  local screen\n+\n+  before_each(function()\n+    screen = Screen.new(40, 12)\n+    screen:attach()\n+  end)\n+\n+  -- Test_CtrlE_CtrlY_stop_at_end\n+  it('disabled does not break <C-E> and <C-Y> stop at end', function()\n+    exec([[\n+      enew\n+      call setline(1, ['one', 'two'])\n+      set number\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect({any = \"  1 ^one\"})\n+    feed('<C-E><C-E><C-E>')\n+    screen:expect({any = \"  2 ^two\"})\n+  end)\n+\n+  -- Test_smoothscroll_CtrlE_CtrlY\n+  it('works with <C-E> and <C-E>', function()\n+    exec([[\n+      call setline(1, [ 'line one', 'word '->repeat(20), 'line three', 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll\n+      :5\n+    ]])\n+    local s0 = [[\n+      line one                                |\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s1 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s2 = [[\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s3 = [[\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s4 = [[\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    feed('<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('<C-E>')\n+    screen:expect(s3)\n+    feed('<C-E>')\n+    screen:expect(s4)\n+    feed('<C-Y>')\n+    screen:expect(s3)\n+    feed('<C-Y>')\n+    screen:expect(s2)\n+    feed('<C-Y>')\n+    screen:expect(s1)\n+    feed('<C-Y>')\n+    screen:expect(s0)\n+\n+    exec('set foldmethod=indent')\n+    feed('5G<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('5G<C-Y>')",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1177297646",
            "id": 1177297646,
            "in_reply_to_id": 1177294621,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GLCLu",
            "original_commit_id": "cd1e1c4ce537850f3820b1d60e79d8175fc9c322",
            "original_line": 129,
            "original_position": 129,
            "original_start_line": null,
            "path": "test/functional/legacy/scroll_opt_spec.lua",
            "position": null,
            "pull_request_review_id": 1401099299,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177297646/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-26T03:31:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177297646",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1177298798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177298798"
                }
            },
            "author_association": "MEMBER",
            "body": "I think matching the Vim test is better.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-26T03:32:37Z",
            "diff_hunk": "@@ -0,0 +1,134 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local clear = helpers.clear\n+local exec = helpers.exec\n+local feed = helpers.feed\n+\n+before_each(clear)\n+\n+describe('smoothscroll', function()\n+  local screen\n+\n+  before_each(function()\n+    screen = Screen.new(40, 12)\n+    screen:attach()\n+  end)\n+\n+  -- Test_CtrlE_CtrlY_stop_at_end\n+  it('disabled does not break <C-E> and <C-Y> stop at end', function()\n+    exec([[\n+      enew\n+      call setline(1, ['one', 'two'])\n+      set number\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect({any = \"  1 ^one\"})\n+    feed('<C-E><C-E><C-E>')\n+    screen:expect({any = \"  2 ^two\"})\n+  end)\n+\n+  -- Test_smoothscroll_CtrlE_CtrlY\n+  it('works with <C-E> and <C-E>', function()\n+    exec([[\n+      call setline(1, [ 'line one', 'word '->repeat(20), 'line three', 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll\n+      :5\n+    ]])\n+    local s0 = [[\n+      line one                                |\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s1 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s2 = [[\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s3 = [[\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s4 = [[\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    feed('<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('<C-E>')\n+    screen:expect(s3)\n+    feed('<C-E>')\n+    screen:expect(s4)\n+    feed('<C-Y>')\n+    screen:expect(s3)\n+    feed('<C-Y>')\n+    screen:expect(s2)\n+    feed('<C-Y>')\n+    screen:expect(s1)\n+    feed('<C-Y>')\n+    screen:expect(s0)\n+\n+    exec('set foldmethod=indent')\n+    feed('5G<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('5G<C-Y>')",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1177298798",
            "id": 1177298798,
            "in_reply_to_id": 1177294621,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GLCdu",
            "original_commit_id": "cd1e1c4ce537850f3820b1d60e79d8175fc9c322",
            "original_line": 129,
            "original_position": 129,
            "original_start_line": null,
            "path": "test/functional/legacy/scroll_opt_spec.lua",
            "position": null,
            "pull_request_review_id": 1401100674,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177298798/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-26T03:32:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1177298798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180518297"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180518297"
                }
            },
            "author_association": "MEMBER",
            "body": "Moved from vim's `wlv_screen_line()` to `grid_put_linebuf()`.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T14:59:21Z",
            "diff_hunk": "@@ -529,6 +529,30 @@ void grid_put_linebuf(ScreenGrid *grid, int row, int coloff, int endcol, int cle\n   max_off_from = linebuf_size;\n   max_off_to = grid->line_offset[row] + (size_t)grid->cols;\n \n+  // Take care of putting \"<<<\" on the first line for 'smoothscroll'.",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180518297",
            "id": 1180518297,
            "line": 533,
            "node_id": "PRRC_kwDOAPphoM5GXUeZ",
            "original_commit_id": "fcba9cff5be19c3448b0d38de13ddeca6903b7ff",
            "original_line": 533,
            "original_position": 13,
            "original_start_line": null,
            "path": "src/nvim/grid.c",
            "position": 21,
            "pull_request_review_id": 1406126555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180518297/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-28T15:11:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180518297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180523954"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180523954"
                }
            },
            "author_association": "MEMBER",
            "body": "Added a `winheight` argument to pass down to `plines_win_nofill()`. This lets us re-use `plines_win_full()` in the newly added [`plines_correct_topline()`](https://github.com/neovim/neovim/pull/23320/files/fcba9cff5be19c3448b0d38de13ddeca6903b7ff#diff-f40edd1119e8d8e05cc4ee50876dc2a3a44363f04eb4d591f329b69cd69d15e0), which needs to first [`adjust_plines_for_skipcol()`](https://github.com/neovim/neovim/pull/23320/files/fcba9cff5be19c3448b0d38de13ddeca6903b7ff#diff-f40edd1119e8d8e05cc4ee50876dc2a3a44363f04eb4d591f329b69cd69d15e0) before limiting to window height itself.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T15:04:45Z",
            "diff_hunk": "@@ -189,10 +189,11 @@ int plines_win_col(win_T *wp, linenr_T lnum, long column)\n /// @param[out] nextp    if not NULL, the line after a fold\n /// @param[out] foldedp  if not NULL, whether lnum is on a fold\n /// @param[in]  cache    whether to use the window's cache for folds\n+/// @param[in]  winheight when true limit to window height",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180523954",
            "id": 1180523954,
            "line": 192,
            "node_id": "PRRC_kwDOAPphoM5GXV2y",
            "original_commit_id": "fcba9cff5be19c3448b0d38de13ddeca6903b7ff",
            "original_line": 192,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": 4,
            "pull_request_review_id": 1406126555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180523954/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-28T21:23:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180523954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180524844"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180524844"
                }
            },
            "author_association": "MEMBER",
            "body": "Need to find a way to reproduce this failure.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T15:05:39Z",
            "diff_hunk": "@@ -0,0 +1,655 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local clear = helpers.clear\n+local exec = helpers.exec\n+local feed = helpers.feed\n+\n+before_each(clear)\n+\n+describe('smoothscroll', function()\n+  local screen\n+\n+  before_each(function()\n+    screen = Screen.new(40, 12)\n+    screen:attach()\n+  end)\n+\n+  -- Test_CtrlE_CtrlY_stop_at_end\n+  it('disabled does not break <C-E> and <C-Y> stop at end', function()\n+    exec([[\n+      enew\n+      call setline(1, ['one', 'two'])\n+      set number\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect({any = \"  1 ^one\"})\n+    feed('<C-E><C-E><C-E>')\n+    screen:expect({any = \"  2 ^two\"})\n+  end)\n+\n+  -- Test_smoothscroll_CtrlE_CtrlY\n+  it('works with <C-E> and <C-E>', function()\n+    exec([[\n+      call setline(1, [ 'line one', 'word '->repeat(20), 'line three', 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll scrolloff=5\n+      :5\n+    ]])\n+    local s1 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s2 = [[\n+      <<<d word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s3 = [[\n+      <<<d word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s4 = [[\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s5 = [[\n+      <<<d word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s6 = [[\n+      <<<d word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s7 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s8 = [[\n+      line one                                |\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+                                              |\n+    ]]\n+    feed('<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('<C-E>')\n+    screen:expect(s3)\n+    feed('<C-E>')\n+    screen:expect(s4)\n+    feed('<C-Y>')\n+    screen:expect(s5)\n+    feed('<C-Y>')\n+    screen:expect(s6)\n+    feed('<C-Y>')\n+    screen:expect(s7)\n+    feed('<C-Y>')\n+    screen:expect(s8)\n+    exec('set foldmethod=indent')\n+    -- move the cursor so we can reuse the same dumps\n+    feed('5G<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('7G<C-Y>')\n+    screen:expect(s7)\n+    feed('<C-Y>')\n+    screen:expect(s8)\n+  end)\n+\n+  -- Test_smoothscroll_number\n+  it(\"works 'number' and 'cpo'+=n\", function()\n+    exec([[\n+      call setline(1, [ 'one ' .. 'word '->repeat(20), 'two ' .. 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll scrolloff=5\n+      set number cpo+=n\n+      :3\n+      func g:DoRel()\n+        set number relativenumber scrolloff=0\n+        :%del\n+        call setline(1, [ 'one', 'very long text '->repeat(12), 'three', ])\n+        exe \"normal 2Gzt\\<C-E>\"\n+      endfunc\n+    ]])\n+    screen:expect([[\n+        1 one word word word word word word wo|\n+      rd word word word word word word word wo|\n+      rd word word word word word             |\n+        2 two long word long word long word lo|\n+      ng word long word long word long word   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-E>')\n+    screen:expect([[\n+      <<<word word word word word word word wo|\n+      rd word word word word word             |\n+        2 two long word long word long word lo|\n+      ng word long word long word long word   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-E>')\n+    screen:expect([[\n+      <<<word word word word word             |\n+        2 two long word long word long word lo|\n+      ng word long word long word long word   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    exec('set cpo-=n')\n+    screen:expect([[\n+      <<< d word word word word word word     |\n+        2 two long word long word long word lo|\n+          ng word long word long word long wor|\n+          d                                   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect([[\n+      <<< rd word word word word word word wor|\n+          d word word word word word word     |\n+        2 two long word long word long word lo|\n+          ng word long word long word long wor|\n+          d                                   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect([[\n+        1 one word word word word word word wo|\n+          rd word word word word word word wor|\n+          d word word word word word word     |\n+        2 two long word long word long word lo|\n+          ng word long word long word long wor|\n+          d                                   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    exec('call DoRel()')\n+    screen:expect([[\n+      2<<<^ong text very long text very long te|\n+          xt very long text very long text ver|\n+          y long text very long text very long|\n+           text very long text very long text |\n+        1 three                               |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      --No lines in buffer--                  |\n+    ]])\n+  end)\n+\n+  -- Test_smoothscroll_list\n+  it(\"works with list mode\", function()\n+    screen:try_resize(40, 8)\n+    exec([[\n+      set smoothscroll scrolloff=0\n+      set list\n+      call setline(1, [ 'one', 'very long text '->repeat(12), 'three', ])\n+      exe \"normal 2Gzt\\<C-E>\"\n+    ]])\n+    screen:expect([[\n+      <<<t very long text very long text very |\n+      ^long text very long text very long text |\n+      very long text very long text very long |\n+      text very long text-                    |\n+      three                                   |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    exec('set listchars+=precedes:#')\n+    screen:expect([[\n+      #ext very long text very long text very |\n+      ^long text very long text very long text |\n+      very long text very long text very long |\n+      text very long text-                    |\n+      three                                   |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+  end)\n+\n+  -- Test_smoothscroll_diff_mode\n+  it(\"works with diff mode\", function()\n+    screen:try_resize(40, 8)\n+    exec([[\n+      let text = 'just some text here'\n+      call setline(1, text)\n+      set smoothscroll\n+      diffthis\n+      new\n+      call setline(1, text)\n+      set smoothscroll\n+      diffthis\n+    ]])\n+    screen:expect([[\n+      - ^just some text here                   |\n+      ~                                       |\n+      ~                                       |\n+      [No Name] [+]                           |\n+      - just some text here                   |\n+      ~                                       |\n+      [No Name] [+]                           |\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect_unchanged()\n+    feed('<C-E>')\n+    screen:expect_unchanged()\n+  end)\n+\n+  -- Test_smoothscroll_wrap_scrolloff_zero\n+  it(\"works with zero 'scrolloff'\", function()\n+    screen:try_resize(40, 8)\n+    exec([[\n+      call setline(1, ['Line' .. (' with some text'->repeat(7))]->repeat(7))\n+      set smoothscroll scrolloff=0 display=\n+      :3\n+    ]])\n+    screen:expect([[\n+      <<<h some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+      ^Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+                                              |\n+    ]])\n+    feed('j')\n+    screen:expect_unchanged()\n+    -- moving cursor down - whole bottom line shows\n+    feed('<C-E>j')\n+    screen:expect_unchanged()\n+    feed('G')\n+    screen:expect_unchanged()\n+    -- moving cursor up right after the >>> marker - no need to show whole line\n+    feed('2gj3l2k')\n+    screen:expect([[\n+      <<<^h some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+                                              |\n+    ]])\n+    feed('2j02k')\n+    screen:expect([[\n+      ^Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+      @                                       |\n+                                              |\n+    ]])\n+  end)\n+\n+  -- Test_smoothscroll_wrap_long_line\n+  it(\"adjusts the cursor position in a long line\", function()\n+    screen:try_resize(40, 6)\n+    exec([[\n+      call setline(1, ['one', 'two', 'Line' .. (' with lots of text'->repeat(30)) .. ' end', 'four'])\n+      set smoothscroll scrolloff=0\n+      normal 3G10|zt\n+    ]])\n+    -- scrolling up, cursor moves screen line down\n+    screen:expect([[\n+      Line with^ lots of text with lots of text|\n+       with lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text with lots of te|\n+                                              |\n+    ]])\n+    feed('<C-E>')\n+    screen:expect([[\n+      <<<th lot^s of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text with lots of te|\n+      xt with lots of text with lots of text w|\n+                                              |\n+    ]])\n+    feed('5<C-E>')\n+    screen:expect([[\n+      <<< lots ^of text with lots of text with |\n+      lots of text with lots of text with lots|\n+       of text with lots of text with lots of |\n+      text with lots of text with lots of text|\n+       with lots of text with lots of text wit|\n+                                              |\n+    ]])\n+    -- scrolling down, cursor moves screen line up\n+    feed('5<C-Y>')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text with lots of te|\n+      xt with l^ots of text with lots of text w|\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect([[\n+      Line with lots of text with lots of text|\n+       with lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text wi^th lots of text with lots of te|\n+                                              |\n+    ]])\n+    -- 'scrolloff' set to 1, scrolling up, cursor moves screen line down\n+    exec('set scrolloff=1')\n+    feed('10|<C-E>')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of^ text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text with lots of te|\n+      xt with lots of text with lots of text w|\n+                                              |\n+    ]])\n+    -- 'scrolloff' set to 1, scrolling down, cursor moves screen line up\n+    feed('<C-E>gjgj<C-Y>')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text wi^th lots of text with lots of te|\n+      xt with lots of text with lots of text w|\n+                                              |\n+    ]])\n+    -- 'scrolloff' set to 2, scrolling up, cursor moves screen line down\n+    exec('set scrolloff=2')\n+    feed('10|<C-E>')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of tex^t with lots of text with lots o|\n+      f text with lots of text with lots of te|\n+      xt with lots of text with lots of text w|\n+                                              |\n+    ]])\n+    -- 'scrolloff' set to 2, scrolling down, cursor moves screen line up\n+    feed('<C-E>gj<C-Y>')\n+    screen:expect_unchanged()\n+    -- 'scrolloff' set to 0, move cursor down one line. Cursor should move properly,\n+    -- and since this is a really long line, it will be put on top of the screen.\n+    exec('set scrolloff=0')\n+    feed('0j')\n+    screen:expect([[\n+      <<<of text with lots of text with lots o|\n+      f text with lots of text end            |\n+      ^four                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    -- Test zt/zz/zb that they work properly when a long line is above it\n+    feed('zb')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text end            |\n+      ^four                                    |\n+                                              |\n+    ]])\n+    feed('zz')\n+    screen:expect([[\n+      <<<of text with lots of text with lots o|\n+      f text with lots of text end            |\n+      ^four                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('zt')\n+    screen:expect([[\n+      ^four                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    -- Repeat the step and move the cursor down again.\n+    -- This time, use a shorter long line that is barely long enough to span more\n+    -- than one window. Note that the cursor is at the bottom this time because\n+    -- Vim prefers to do so if we are scrolling a few lines only.\n+    exec(\"call setline(1, ['one', 'two', 'Line' .. (' with lots of text'->repeat(10)) .. ' end', 'four'])\")\n+    feed('3Gztj')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text end            |\n+      ^four                                    |\n+                                              |\n+    ]])\n+    -- Repeat the step but this time start it when the line is smooth-scrolled by\n+    -- one line. This tests that the offset calculation is still correct and\n+    -- still end up scrolling down to the next line with cursor at bottom of\n+    -- screen.\n+    feed('3Gzt<C-E>j')\n+    screen:expect([[\n+      <<<th lots of text with lots of text wit|\n+      h lots of text with lots of text with lo|\n+      ts of text with lots of text with lots o|\n+      f text with lots of text end            |\n+      fou^r                                    |\n+                                              |\n+    ]])\n+  end)\n+\n+  -- Test_smoothscroll_one_long_line\n+  it(\"scrolls correctly when moving the cursor\", function()\n+    screen:try_resize(40, 6)\n+    exec([[\n+      call setline(1, 'with lots of text '->repeat(7))\n+      set smoothscroll scrolloff=0\n+    ]])\n+    local s1 = [[\n+      ^with lots of text with lots of text with|\n+       lots of text with lots of text with lot|\n+      s of text with lots of text with lots of|\n+       text                                   |\n+      ~                                       |\n+                                              |\n+    ]]\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect([[\n+      <<<ts of text with lots of text with lot|\n+      ^s of text with lots of text with lots of|\n+       text                                   |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('0')\n+    screen:expect(s1)\n+  end)\n+\n+  -- Test_smoothscroll_long_line_showbreak\n+  it(\"cursor is not one screen line too far down\", function()\n+    screen:try_resize(40, 6)\n+    -- a line that spans four screen lines\n+    exec(\"call setline(1, 'with lots of text in one line '->repeat(6))\")\n+    exec('set smoothscroll scrolloff=0 showbreak=+++\\\\ ')\n+    local s1 = [[\n+      ^with lots of text in one line with lots |\n+      +++ of text in one line with lots of tex|\n+      +++ t in one line with lots of text in o|\n+      +++ ne line with lots of text in one lin|\n+      +++ e with lots of text in one line     |\n+                                              |\n+    ]]\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect([[\n+      +++ ^of text in one line with lots of tex|\n+      +++ t in one line with lots of text in o|\n+      +++ ne line with lots of text in one lin|\n+      +++ e with lots of text in one line     |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('0')\n+    screen:expect(s1)\n+  end)\n+\n+  -- Test_smoothscroll_zero_width\n+  it(\"does not divide by zero with a narrow window\", function()\n+    screen:try_resize(60, 6)\n+    -- FIXME: cannot split with 'winsize' \"0 0\" and does not crash without",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180524844",
            "id": 1180524844,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXWEs",
            "original_commit_id": "fcba9cff5be19c3448b0d38de13ddeca6903b7ff",
            "original_line": 626,
            "original_position": 626,
            "original_start_line": null,
            "path": "test/functional/legacy/scroll_opt_spec.lua",
            "position": null,
            "pull_request_review_id": 1406126555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180524844/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-04-29T23:42:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180524844",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180578593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180578593"
                }
            },
            "author_association": "MEMBER",
            "body": "Duplicate comment\r\n```suggestion\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T15:57:31Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180578593",
            "id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXjMh",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406222481,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180578593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T15:57:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180578593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180584277"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180584277"
                }
            },
            "author_association": "MEMBER",
            "body": "Huh I guess it was added by accident when porting a different patch?",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T16:03:27Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180584277",
            "id": 1180584277,
            "in_reply_to_id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXklV",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406231424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180584277/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T16:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180584277",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180587480"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180587480"
                }
            },
            "author_association": "MEMBER",
            "body": "No, I added it intentionally because the position of the linebreak changed. The existing comment has the latest linebreak position.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T16:07:18Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180587480",
            "id": 1180587480,
            "in_reply_to_id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXlXY",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406236819,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180587480/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T16:08:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180587480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180596098"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180596098"
                }
            },
            "author_association": "MEMBER",
            "body": "Do you want me to change the linebreak to stay compatible with vim? I may have changed the linebreak some other comments as well. I thought we allowed/preferred longer lines.\r\n\r\nI guess the point is being able to `patch` without conflicts? I did everything by hand because most of it doesn't apply cleanly anyways because of ifdefs/formatting...",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T16:16:43Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180596098",
            "id": 1180596098,
            "in_reply_to_id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXneC",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406250552,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180596098/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T16:16:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180596098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180603807"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180603807"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, I do think having a linebreak after `>` sign looks a bit strange. I changed the line break to match Vim in the rebase.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T16:25:31Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180603807",
            "id": 1180603807,
            "in_reply_to_id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXpWf",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406262176,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180603807/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T16:26:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180603807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180605742"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180605742"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T16:27:51Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180605742",
            "id": 1180605742,
            "in_reply_to_id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GXp0u",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406265153,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180605742/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T16:27:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180605742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1180866549"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180866549"
                }
            },
            "author_association": "MEMBER",
            "body": "> No, I added it intentionally because the position of the linebreak changed. The existing comment has the latest linebreak position.\r\n\r\nI meant that this comment was originally added in a smoothscroll patch, so it was unexpected to already have in our code. Hence why I missed it and it ended up duplicated.\r\n(You added it in an unrelated patch that happened to change the linebreak.)",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-04-28T22:48:22Z",
            "diff_hunk": "@@ -1691,27 +2102,68 @@ void scroll_cursor_bot(int min_scroll, int set_topbot)\n ///\n void scroll_cursor_halfway(bool atend, bool prefer_above)\n {\n-  int above = 0;\n-  int topfill = 0;\n-  int below = 0;\n-  lineoff_T loff;\n-  lineoff_T boff;\n   linenr_T old_topline = curwin->w_topline;\n-\n-  loff.lnum = boff.lnum = curwin->w_cursor.lnum;\n+  lineoff_T loff = { .lnum = curwin->w_cursor.lnum };\n+  lineoff_T boff = { .lnum = curwin->w_cursor.lnum };\n   (void)hasFolding(loff.lnum, &loff.lnum, &boff.lnum);\n   int used = plines_win_nofill(curwin, loff.lnum, true);\n   loff.fill = 0;\n   boff.fill = 0;\n   linenr_T topline = loff.lnum;\n+  colnr_T skipcol = 0;\n+  bool set_skipcol = false;\n+\n+  int half_height = 0;\n+  bool smooth_scroll = false;\n+  if (curwin->w_p_sms && curwin->w_p_wrap) {\n+    // 'smoothscroll' and 'wrap' are set\n+    smooth_scroll = true;\n+    half_height = (curwin->w_height - used) / 2;\n+    used = 0;\n+  }\n \n+  int topfill = 0;\n   while (topline > 1) {\n+    // If using smoothscroll, we can precisely scroll to the\n+    // exact point where the cursor is halfway down the screen.\n+    if (smooth_scroll) {\n+      topline_back_winheight(curwin, &loff, false);\n+      if (loff.height == MAXCOL) {\n+        break;\n+      } else {\n+        used += loff.height;\n+      }\n+      if (used > half_height) {\n+        if (used - loff.height < half_height) {\n+          int plines_offset = used - half_height;\n+          loff.height -= plines_offset;\n+          used = half_height;\n+\n+          topline = loff.lnum;\n+          topfill = loff.fill;\n+          skipcol = skipcol_from_plines(curwin, plines_offset);\n+          set_skipcol = true;\n+        }\n+        break;\n+      }\n+      topline = loff.lnum;\n+      topfill = loff.fill;\n+      continue;\n+    }\n+\n+    // If not using smoothscroll, we have to iteratively find how many\n+    // lines to scroll down to roughly fit the cursor.\n+    // This may not be right in the middle if the lines' physical height >\n+    // 1 (e.g. 'wrap' is on).\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1180866549",
            "id": 1180866549,
            "in_reply_to_id": 1180578593,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GYpf1",
            "original_commit_id": "5f746ee316a1503bd195e3be42149a734381c839",
            "original_line": 2159,
            "original_position": 1090,
            "original_start_line": 2156,
            "path": "src/nvim/move.c",
            "position": null,
            "pull_request_review_id": 1406678585,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180866549/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-04-28T22:49:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1180866549",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1181535397"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181535397"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't work with tabline, winbar, or splits above.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-01T12:04:04Z",
            "diff_hunk": "@@ -529,6 +529,30 @@ void grid_put_linebuf(ScreenGrid *grid, int row, int coloff, int endcol, int cle\n   max_off_from = linebuf_size;\n   max_off_to = grid->line_offset[row] + (size_t)grid->cols;\n \n+  // Take care of putting \"<<<\" on the first line for 'smoothscroll'.\n+  if (row == 0 && wp->w_skipcol > 0\n+      // do not overwrite the 'showbreak' text with \"<<<\"\n+      && *get_showbreak_value(wp) == NUL\n+      // do not overwrite the 'listchars' \"precedes\" text with \"<<<\"\n+      && !(wp->w_p_list && wp->w_p_lcs_chars.prec != 0)) {\n+    int off = 0;\n+    int skip = 0;\n+    if (wp->w_p_nu && wp->w_p_rnu) {\n+      // do not overwrite the line number, change \"123 text\" to\n+      // \"123>>>xt\".\n+      while (skip < wp->w_width && ascii_isdigit(*linebuf_char[off])) {\n+        off++;\n+        skip++;\n+      }\n+    }\n+\n+    for (int i = 0; i < 3 && i + skip < wp->w_width; i++) {\n+      schar_from_ascii(linebuf_char[off], '<');\n+      linebuf_attr[off] = HL_ATTR(HLF_AT);\n+      off++;\n+    }\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1181535397",
            "id": 1181535397,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GbMyl",
            "original_commit_id": "8a9395fced7a5c5dc2b0dae1b48f147f3c18543d",
            "original_line": 556,
            "original_position": 36,
            "original_start_line": 532,
            "path": "src/nvim/grid.c",
            "position": null,
            "pull_request_review_id": 1407544566,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181535397/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-01T12:04:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181535397",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1181542359"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181542359"
                }
            },
            "author_association": "MEMBER",
            "body": "Right, how about this:\r\n```diff\r\ndiff --git a/src/nvim/grid.c b/src/nvim/grid.c\r\nindex f02ff7951..2c548e11f 100644\r\n--- a/src/nvim/grid.c\r\n+++ b/src/nvim/grid.c\r\n@@ -503,6 +503,7 @@ void grid_put_linebuf(ScreenGrid *grid, int row, int coloff, int endcol, int cle\r\n   int col = 0;\r\n   bool redraw_next;                         // redraw_this for next character\r\n   bool clear_next = false;\r\n+  bool topline = row == 0;\r\n   int char_cells;                           // 1: normal char\r\n                                             // 2: occupies two display cells\r\n   int start_dirty = -1, end_dirty = 0;\r\n@@ -529,7 +530,7 @@ void grid_put_linebuf(ScreenGrid *grid, int row, int coloff, int endcol, int cle\r\n   max_off_from = linebuf_size;\r\n   max_off_to = grid->line_offset[row] + (size_t)grid->cols;\r\n\r\n-  if (row == 0 && wp->w_skipcol > 0) {\r\n+  if (topline && wp->w_skipcol > 0) {\r\n     // Take care of putting \"<<<\" on the first line for 'smoothscroll'.\r\n     for (int i = 0; i < 3; i++) {\r\n       schar_from_ascii(linebuf_char[i], '<');\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-01T12:23:32Z",
            "diff_hunk": "@@ -529,6 +529,30 @@ void grid_put_linebuf(ScreenGrid *grid, int row, int coloff, int endcol, int cle\n   max_off_from = linebuf_size;\n   max_off_to = grid->line_offset[row] + (size_t)grid->cols;\n \n+  // Take care of putting \"<<<\" on the first line for 'smoothscroll'.\n+  if (row == 0 && wp->w_skipcol > 0\n+      // do not overwrite the 'showbreak' text with \"<<<\"\n+      && *get_showbreak_value(wp) == NUL\n+      // do not overwrite the 'listchars' \"precedes\" text with \"<<<\"\n+      && !(wp->w_p_list && wp->w_p_lcs_chars.prec != 0)) {\n+    int off = 0;\n+    int skip = 0;\n+    if (wp->w_p_nu && wp->w_p_rnu) {\n+      // do not overwrite the line number, change \"123 text\" to\n+      // \"123>>>xt\".\n+      while (skip < wp->w_width && ascii_isdigit(*linebuf_char[off])) {\n+        off++;\n+        skip++;\n+      }\n+    }\n+\n+    for (int i = 0; i < 3 && i + skip < wp->w_width; i++) {\n+      schar_from_ascii(linebuf_char[off], '<');\n+      linebuf_attr[off] = HL_ATTR(HLF_AT);\n+      off++;\n+    }\n+  }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1181542359",
            "id": 1181542359,
            "in_reply_to_id": 1181535397,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GbOfX",
            "original_commit_id": "8a9395fced7a5c5dc2b0dae1b48f147f3c18543d",
            "original_line": 556,
            "original_position": 36,
            "original_start_line": 532,
            "path": "src/nvim/grid.c",
            "position": null,
            "pull_request_review_id": 1407554950,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181542359/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-01T12:23:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181542359",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1181985417"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181985417"
                }
            },
            "author_association": "MEMBER",
            "body": "This should be before 'softtabstop', not after.",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-02T00:20:50Z",
            "diff_hunk": "@@ -5671,6 +5671,16 @@ A jump table for the options with a short description can be found at |Q_op|.\n \tThe value of 'softtabstop' will be ignored if |'varsofttabstop'| is set\n \tto anything other than an empty string.\n \n+\t\t\t*'smoothscroll'* *'sms'* *'nosmoothscroll'* *'nosms'*\n+'smoothscroll' 'sms'\tboolean  (default off)\n+\t\t\tlocal to window\n+\tScrolling works with screen lines.  When 'wrap' is set and the first\n+\tline in the window wraps part of it may not be visible, as if it is\n+\tabove the window. \"<<<\" is displayed at the start of the first line,\n+\thighlighted with |hl-NonText|.\n+\tNOTE: only partly implemented, currently works with CTRL-E, CTRL-Y\n+\tand scrolling with the mouse.\n+",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1181985417",
            "id": 1181985417,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Gc6qJ",
            "original_commit_id": "738d9d1b0f555ff2755158f259715a59eb2ee470",
            "original_line": 5683,
            "original_position": 13,
            "original_start_line": 5674,
            "path": "runtime/doc/options.txt",
            "position": null,
            "pull_request_review_id": 1408248848,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181985417/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-02T00:20:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181985417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1181985995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181985995"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  int wo_sms;\r\n#define w_p_sms w_onebuf_opt.wo_sms     // 'smoothscroll'\r\n  int wo_spell;\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-02T00:22:31Z",
            "diff_hunk": "@@ -193,6 +193,8 @@ typedef struct {\n   long wo_scr;\n #define w_p_scr w_onebuf_opt.wo_scr     // 'scroll'\n   int wo_spell;\n+#define w_p_sms w_onebuf_opt.wo_sms     // 'smoothscroll'\n+  int wo_sms;",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1181985995",
            "id": 1181985995,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Gc6zL",
            "original_commit_id": "738d9d1b0f555ff2755158f259715a59eb2ee470",
            "original_line": 195,
            "original_position": 5,
            "original_start_line": 195,
            "path": "src/nvim/buffer_defs.h",
            "position": null,
            "pull_request_review_id": 1408249687,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181985995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-02T00:22:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181985995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1181991839"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181991839"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      \\['cursorlineopt', '\"screenline\"', '\"' .. &cursorlineopt .. '\"'],\r\n      \\['colorcolumn', '\"+1\"', '\"' .. &colorcolumn .. '\"'],\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-02T00:38:13Z",
            "diff_hunk": "@@ -775,6 +775,108 @@ func Test_copy_winopt()\n   set hidden&\n endfunc\n \n+func Test_split_copy_options()\n+  let values = [\n+    \\['cursorbind', 1, 0],\n+    \\['fillchars', '\"vert:-\"', '\"' .. &fillchars .. '\"'],\n+    \\['list', 1, 0],\n+    \\['listchars', '\"space:-\"', '\"' .. &listchars .. '\"'],\n+    \\['number', 1, 0],\n+    \\['relativenumber', 1, 0],\n+    \\['scrollbind', 1, 0],\n+    \\['smoothscroll', 1, 0],\n+    \\['virtualedit', '\"block\"', '\"' .. &virtualedit .. '\"'],\n+    \"\\ ['wincolor', '\"Search\"', '\"' .. &wincolor .. '\"'],\n+    \\['wrap', 0, 1],\n+  \\]\n+  if has('linebreak')\n+    let values += [\n+      \\['breakindent', 1, 0],\n+      \\['breakindentopt', '\"min:5\"', '\"' .. &breakindentopt .. '\"'],\n+      \\['linebreak', 1, 0],\n+      \\['numberwidth', 7, 4],\n+      \\['showbreak', '\"++\"', '\"' .. &showbreak .. '\"'],\n+    \\]\n+  endif\n+  if has('rightleft')\n+    let values += [\n+      \\['rightleft', 1, 0],\n+      \\['rightleftcmd', '\"search\"', '\"' .. &rightleftcmd .. '\"'],\n+    \\]\n+  endif\n+  if has('statusline')\n+    let values += [\n+      \\['statusline', '\"---%f---\"', '\"' .. &statusline .. '\"'],\n+    \\]\n+  endif\n+  if has('spell')\n+    let values += [\n+      \\['spell', 1, 0],\n+    \\]\n+  endif\n+  if has('syntax')\n+    let values += [\n+      \\['cursorcolumn', 1, 0],\n+      \\['cursorline', 1, 0],\n+      \\['colorcolumn', '\"+1\"', '\"' .. &colorcolumn .. '\"'],\n+      \\['cursorlineopt', '\"screenline\"', '\"' .. &cursorlineopt .. '\"'],",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1181991839",
            "id": 1181991839,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Gc8Of",
            "original_commit_id": "738d9d1b0f555ff2755158f259715a59eb2ee470",
            "original_line": 821,
            "original_position": 57,
            "original_start_line": 821,
            "path": "test/old/testdir/test_options.vim",
            "position": null,
            "pull_request_review_id": 1408257632,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181991839/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-05-02T00:38:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1181991839",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1182008009"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182008009"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    -- moving cursor up where the >>> marker is - whole top line shows\r\n    feed('2j02k')\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-02T01:27:09Z",
            "diff_hunk": "@@ -0,0 +1,776 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local clear = helpers.clear\n+local exec = helpers.exec\n+local feed = helpers.feed\n+\n+before_each(clear)\n+\n+describe('smoothscroll', function()\n+  local screen\n+\n+  before_each(function()\n+    screen = Screen.new(40, 12)\n+    screen:attach()\n+  end)\n+\n+  -- oldtest: Test_CtrlE_CtrlY_stop_at_end()\n+  it('disabled does not break <C-E> and <C-Y> stop at end', function()\n+    exec([[\n+      enew\n+      call setline(1, ['one', 'two'])\n+      set number\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect({any = \"  1 ^one\"})\n+    feed('<C-E><C-E><C-E>')\n+    screen:expect({any = \"  2 ^two\"})\n+  end)\n+\n+  -- oldtest: Test_smoothscroll_CtrlE_CtrlY()\n+  it('works with <C-E> and <C-E>', function()\n+    exec([[\n+      call setline(1, [ 'line one', 'word '->repeat(20), 'line three', 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll scrolloff=5\n+      :5\n+    ]])\n+    local s1 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s2 = [[\n+      <<<d word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s3 = [[\n+      <<<d word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      ^line                                    |\n+      line                                    |\n+      line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s4 = [[\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s5 = [[\n+      <<<d word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s6 = [[\n+      <<<d word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s7 = [[\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]]\n+    local s8 = [[\n+      line one                                |\n+      word word word word word word word word |\n+      word word word word word word word word |\n+      word word word word                     |\n+      line three                              |\n+      long word long word long word long word |\n+      long word long word long word           |\n+      line                                    |\n+      line                                    |\n+      ^line                                    |\n+      ~                                       |\n+                                              |\n+    ]]\n+    feed('<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('<C-E>')\n+    screen:expect(s3)\n+    feed('<C-E>')\n+    screen:expect(s4)\n+    feed('<C-Y>')\n+    screen:expect(s5)\n+    feed('<C-Y>')\n+    screen:expect(s6)\n+    feed('<C-Y>')\n+    screen:expect(s7)\n+    feed('<C-Y>')\n+    screen:expect(s8)\n+    exec('set foldmethod=indent')\n+    -- move the cursor so we can reuse the same dumps\n+    feed('5G<C-E>')\n+    screen:expect(s1)\n+    feed('<C-E>')\n+    screen:expect(s2)\n+    feed('7G<C-Y>')\n+    screen:expect(s7)\n+    feed('<C-Y>')\n+    screen:expect(s8)\n+  end)\n+\n+  -- oldtest: Test_smoothscroll_number()\n+  it(\"works 'number' and 'cpo'+=n\", function()\n+    exec([[\n+      call setline(1, [ 'one ' .. 'word '->repeat(20), 'two ' .. 'long word '->repeat(7), 'line', 'line', 'line', ])\n+      set smoothscroll scrolloff=5\n+      set number cpo+=n\n+      :3\n+      func g:DoRel()\n+        set number relativenumber scrolloff=0\n+        :%del\n+        call setline(1, [ 'one', 'very long text '->repeat(12), 'three', ])\n+        exe \"normal 2Gzt\\<C-E>\"\n+      endfunc\n+    ]])\n+    screen:expect([[\n+        1 one word word word word word word wo|\n+      rd word word word word word word word wo|\n+      rd word word word word word             |\n+        2 two long word long word long word lo|\n+      ng word long word long word long word   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-E>')\n+    screen:expect([[\n+      <<<word word word word word word word wo|\n+      rd word word word word word             |\n+        2 two long word long word long word lo|\n+      ng word long word long word long word   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-E>')\n+    screen:expect([[\n+      <<<word word word word word             |\n+        2 two long word long word long word lo|\n+      ng word long word long word long word   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    exec('set cpo-=n')\n+    screen:expect([[\n+      <<< d word word word word word word     |\n+        2 two long word long word long word lo|\n+          ng word long word long word long wor|\n+          d                                   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect([[\n+      <<< rd word word word word word word wor|\n+          d word word word word word word     |\n+        2 two long word long word long word lo|\n+          ng word long word long word long wor|\n+          d                                   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect([[\n+        1 one word word word word word word wo|\n+          rd word word word word word word wor|\n+          d word word word word word word     |\n+        2 two long word long word long word lo|\n+          ng word long word long word long wor|\n+          d                                   |\n+        3 ^line                                |\n+        4 line                                |\n+        5 line                                |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    exec('call DoRel()')\n+    screen:expect([[\n+      2<<<^ong text very long text very long te|\n+          xt very long text very long text ver|\n+          y long text very long text very long|\n+           text very long text very long text |\n+        1 three                               |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      ~                                       |\n+      --No lines in buffer--                  |\n+    ]])\n+  end)\n+\n+  -- oldtest: Test_smoothscroll_list()\n+  it(\"works with list mode\", function()\n+    screen:try_resize(40, 8)\n+    exec([[\n+      set smoothscroll scrolloff=0\n+      set list\n+      call setline(1, [ 'one', 'very long text '->repeat(12), 'three', ])\n+      exe \"normal 2Gzt\\<C-E>\"\n+    ]])\n+    screen:expect([[\n+      <<<t very long text very long text very |\n+      ^long text very long text very long text |\n+      very long text very long text very long |\n+      text very long text-                    |\n+      three                                   |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+    exec('set listchars+=precedes:#')\n+    screen:expect([[\n+      #ext very long text very long text very |\n+      ^long text very long text very long text |\n+      very long text very long text very long |\n+      text very long text-                    |\n+      three                                   |\n+      ~                                       |\n+      ~                                       |\n+                                              |\n+    ]])\n+  end)\n+\n+  -- oldtest: Test_smoothscroll_diff_mode()\n+  it(\"works with diff mode\", function()\n+    screen:try_resize(40, 8)\n+    exec([[\n+      let text = 'just some text here'\n+      call setline(1, text)\n+      set smoothscroll\n+      diffthis\n+      new\n+      call setline(1, text)\n+      set smoothscroll\n+      diffthis\n+    ]])\n+    screen:expect([[\n+      - ^just some text here                   |\n+      ~                                       |\n+      ~                                       |\n+      [No Name] [+]                           |\n+      - just some text here                   |\n+      ~                                       |\n+      [No Name] [+]                           |\n+                                              |\n+    ]])\n+    feed('<C-Y>')\n+    screen:expect_unchanged()\n+    feed('<C-E>')\n+    screen:expect_unchanged()\n+  end)\n+\n+  -- oldtest: Test_smoothscroll_wrap_scrolloff_zero()\n+  it(\"works with zero 'scrolloff'\", function()\n+    screen:try_resize(40, 8)\n+    exec([[\n+      call setline(1, ['Line' .. (' with some text'->repeat(7))]->repeat(7))\n+      set smoothscroll scrolloff=0 display=\n+      :3\n+    ]])\n+    screen:expect([[\n+      <<<h some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+      ^Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+                                              |\n+    ]])\n+    feed('j')\n+    screen:expect_unchanged()\n+    -- moving cursor down - whole bottom line shows\n+    feed('<C-E>j')\n+    screen:expect_unchanged()\n+    feed('G')\n+    screen:expect_unchanged()\n+    -- moving cursor up right after the >>> marker - no need to show whole line\n+    feed('2gj3l2k')\n+    screen:expect([[\n+      <<<^h some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+      Line with some text with some text with |\n+      some text with some text with some text |\n+      with some text with some text           |\n+                                              |\n+    ]])\n+    feed('2j02k')",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1182008009",
            "id": 1182008009,
            "line": 396,
            "node_id": "PRRC_kwDOAPphoM5GdALJ",
            "original_commit_id": "738d9d1b0f555ff2755158f259715a59eb2ee470",
            "original_line": 396,
            "original_position": 395,
            "original_start_line": null,
            "path": "test/functional/legacy/scroll_opt_spec.lua",
            "position": 396,
            "pull_request_review_id": 1408280049,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182008009/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-02T01:27:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182008009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1182008965"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182008965"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  // \"zl\" - scroll window to the left if not wrapping\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-02T01:29:43Z",
            "diff_hunk": "@@ -2890,27 +2893,21 @@ static void nv_zet(cmdarg_T *cap)\n   case 'h':\n   case K_LEFT:\n     if (!curwin->w_p_wrap) {\n-      if ((colnr_T)cap->count1 > curwin->w_leftcol) {\n-        curwin->w_leftcol = 0;\n-      } else {\n-        curwin->w_leftcol -= (colnr_T)cap->count1;\n-      }\n-      leftcol_changed();\n+      (void)set_leftcol((colnr_T)cap->count1 > curwin->w_leftcol\n+                        ? 0 : curwin->w_leftcol - (colnr_T)cap->count1);\n     }\n     break;\n \n-  // \"zL\" - scroll screen left half-page\n+  // \"zL\" - scroll window left half-page\n   case 'L':\n     cap->count1 *= curwin->w_width_inner / 2;\n     FALLTHROUGH;\n \n-  // \"zl\" - scroll screen to the left\n+  // \"zl\" - scroll window to the left",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1182008965",
            "id": 1182008965,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5GdAaF",
            "original_commit_id": "738d9d1b0f555ff2755158f259715a59eb2ee470",
            "original_line": 2906,
            "original_position": 95,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 1408281208,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182008965/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-02T01:29:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182008965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/23320#discussion_r1182013991"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/23320"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182013991"
                }
            },
            "author_association": "MEMBER",
            "body": "Missing blank line\r\n```suggestion\r\nendfunc\r\n\r\n```",
            "commit_id": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
            "created_at": "2023-05-02T01:45:12Z",
            "diff_hunk": "@@ -1889,7 +1889,25 @@ function Test_new_help_window_on_error()\n \n   call assert_equal(wincount, winnr('$'))\n   call assert_equal(expand(\"<cword>\"), \"'mod'\")\n-endfunction\n+endfunc\n+\n+func Test_smoothscroll_in_zero_width_window()\n+  let save_lines = &lines\n+  let save_columns = &columns\n+\n+  winsize 0 24\n+  set cpo+=n\n+  exe \"noremap 0 \\<C-W>n\\<C-W>L\"\n+  norm 000000\n+  set number smoothscroll\n+  exe \"norm \\<C-Y>\"\n \n+  only!\n+  let &lines = save_lines\n+  let &columns = save_columns\n+  set cpo-=n\n+  unmap 0\n+  set nonumber nosmoothscroll\n+endfunc",
            "html_url": "https://github.com/neovim/neovim/pull/23320#discussion_r1182013991",
            "id": 1182013991,
            "line": 1911,
            "node_id": "PRRC_kwDOAPphoM5GdBon",
            "original_commit_id": "738d9d1b0f555ff2755158f259715a59eb2ee470",
            "original_line": 1911,
            "original_position": 87,
            "original_start_line": null,
            "path": "test/old/testdir/test_window_cmd.vim",
            "position": 87,
            "pull_request_review_id": 1408287813,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182013991/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-05-02T01:45:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1182013991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Probably also fixes #22489",
            "created_at": "2023-04-26T01:33:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1522635495",
            "id": 1522635495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5awZLn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1522635495/reactions"
            },
            "updated_at": "2023-04-26T01:33:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1522635495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oops, didn't notice that [that](https://github.com/neovim/neovim/actions/runs/4804634761/jobs/8550341910?pr=23320#step:14:5468) test was a vim9 test. What do we do with it?\r\n\r\nComment it out and port it to lua? Or port the oldtest to regular vimscript and keep it there?",
            "created_at": "2023-04-26T04:01:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1522743382",
            "id": 1522743382,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5awzhW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1522743382/reactions"
            },
            "updated_at": "2023-04-26T04:03:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1522743382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I ported https://github.com/vim/vim/commit/406b5d89e18742ac6e6256ffc72fb70a27f0148b to `grid_put_linebuf()`. Not sure if it should be marked partial.",
            "created_at": "2023-04-26T12:46:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1523361122",
            "id": 1523361122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5azKVi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523361122/reactions"
            },
            "updated_at": "2023-04-26T12:46:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523361122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> clason: Isn't that exactly what we have vim9jit for?\r\n\r\nPorting it to a neovim compatible vimscript test in the same file might make future updates to that test more straightforward to port. In this case (it's a simple test), that might be easier than going through `vim9jit`.",
            "created_at": "2023-04-26T12:49:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1523365272",
            "id": 1523365272,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5azLWY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523365272/reactions"
            },
            "updated_at": "2023-04-29T23:39:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1523365272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> vim-patch:9.0.1247: oldtest divide by zero does not work ported to functionaltest\r\nfind a way to make this fail pre v9.0.1247 in neovim and port to functionaltest. this test doesn't fail with vim either on v9.0.1246 so IDK\r\n\r\nI think I updated the test to behave the same as vim (which does not abort the screendump test on errors) by adding `sil!`. However neither the functionaltest for us, nor the oldtest for vim fail on `v9.0.1246` so the test seems pointless.\r\n\r\n> I think I updated the test to behave the same as vim (which does not abort the screendump test on errors)\r\n\r\nThis is probably not true, I noticed vim passes some arguments to `RunVimInTerminal()` including `-e`(Ex-mode) and `-s`(silent-mode).\r\nI'm not sure how to replicate this test in functionaltest, passing `-es` to `clear()` results in:\r\n\r\n    nvim: --embed conflicts with -es/-Es/-l\r\n",
            "created_at": "2023-04-29T00:00:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1528253196",
            "id": 1528253196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bF0sM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1528253196/reactions"
            },
            "updated_at": "2023-05-01T13:05:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1528253196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I went over all patch diffs side by side one more time, taking extra care to make sure that the ported screendump tests are identical.\r\nReady to merge AFAIAC:shipit:",
            "created_at": "2023-04-30T22:22:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1529153136",
            "id": 1529153136,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bJQZw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1529153136/reactions"
            },
            "updated_at": "2023-04-30T22:22:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1529153136",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The commit message of v9.0.0641 should be squashed into v9.0.0640.",
            "created_at": "2023-05-02T00:35:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1530684618",
            "id": 1530684618,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bPGTK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1530684618/reactions"
            },
            "updated_at": "2023-05-02T00:35:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1530684618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Otherwise LGTM for non-multigrid UI. For multigrid UI most of these `w_width` and `w_height` should need to be changed to `w_width_inner` and `w_height_inner`.",
            "created_at": "2023-05-02T01:56:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1530762843",
            "id": 1530762843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bPZZb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1530762843/reactions"
            },
            "updated_at": "2023-05-02T02:43:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1530762843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for the review, I'll include the changes.\r\n\r\n> For multigrid UI most of these w_width and w_height should need to be changed to w_width_inner and w_height_inner.\r\n\r\nYeah I was wondering about this when porting the patches but noticed other uses of `w_height/width` in `move.c` still, so I wasn't sure. Should every occurrence simply be replaced with the inner variant? ",
            "created_at": "2023-05-02T08:29:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1531079534",
            "id": 1531079534,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bQmtu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531079534/reactions"
            },
            "updated_at": "2023-05-02T14:16:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531079534",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For multigrid UI most of these w_width and w_height should need to be changed to w_width_inner and w_height_inner.\r\n\r\n> > Yeah I was wondering about this when porting the patches but noticed other uses of w_height/width in move.c still. Should every occurrence simply be replaced with the inner variant?\r\n\r\nShould we `if multrigrid else` wrap the 'smoothscroll' tests and verify by hand?",
            "created_at": "2023-05-02T09:03:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1531127919",
            "id": 1531127919,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bQyhv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531127919/reactions"
            },
            "updated_at": "2023-05-02T09:03:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531127919",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes I think all window widths and heights in this PR should be the inner variant. Running the tests with ext_multigrid isn't really useful as `w_width_inner` is still the same as `w_width` without calling `nvim_ui_try_resize_grid`.",
            "created_at": "2023-05-02T09:26:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1531159183",
            "id": 1531159183,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bQ6KP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531159183/reactions"
            },
            "updated_at": "2023-05-02T10:15:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531159183",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There are two `w_height` in `adjust_skipcol()` and `pline_correct_topline()` that should be changed to `w_height_inner`.",
            "created_at": "2023-05-02T11:03:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1531277692",
            "id": 1531277692,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bRXF8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531277692/reactions"
            },
            "updated_at": "2023-05-02T11:03:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531277692",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also, in the first commit, co-author isn't recognized if it isn't at the end of the commit message. And if you rebase on master the two `w_height` mentioned above should be the only remaining occurrences of `w_width` or `w_height` in `move.c`.",
            "created_at": "2023-05-02T11:05:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1531280015",
            "id": 1531280015,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5bRXqP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531280015/reactions"
            },
            "updated_at": "2023-05-02T11:05:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1531280015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "hi, thanks for the feature. when will this be available in an official release? can't find it in the latest (v0.9.4)",
            "created_at": "2023-12-29T17:22:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/23320#issuecomment-1872231472",
            "id": 1872231472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
            "node_id": "IC_kwDOAPphoM5vl_ww",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872231472/reactions"
            },
            "updated_at": "2023-12-29T17:22:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872231472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9881960?v=4",
                "events_url": "https://api.github.com/users/rishabh-ranjan/events{/privacy}",
                "followers_url": "https://api.github.com/users/rishabh-ranjan/followers",
                "following_url": "https://api.github.com/users/rishabh-ranjan/following{/other_user}",
                "gists_url": "https://api.github.com/users/rishabh-ranjan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rishabh-ranjan",
                "id": 9881960,
                "login": "rishabh-ranjan",
                "node_id": "MDQ6VXNlcjk4ODE5NjA=",
                "organizations_url": "https://api.github.com/users/rishabh-ranjan/orgs",
                "received_events_url": "https://api.github.com/users/rishabh-ranjan/received_events",
                "repos_url": "https://api.github.com/users/rishabh-ranjan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rishabh-ranjan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rishabh-ranjan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rishabh-ranjan"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23320/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/23320/commits",
    "created_at": "2023-04-26T01:30:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/23320.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:smoothscroll",
        "ref": "smoothscroll",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2024-01-01T23:00:55Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 244810,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2022-09-14T02:39:38Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5b111a8f00f8dbe458a3d437c9f06c9419d24840",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/23320",
    "id": 1327965228,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23320",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 113026979,
            "name": "ui",
            "node_id": "MDU6TGFiZWwxMTMwMjY5Nzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ui"
        },
        {
            "color": "e6e6e6",
            "default": false,
            "description": "See https://github.com/neovim/neovim/wiki/Merging-patches-from-upstream-Vim",
            "id": 843184430,
            "name": "vim-patch",
            "node_id": "MDU6TGFiZWw4NDMxODQ0MzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/vim-patch"
        }
    ],
    "locked": true,
    "merge_commit_sha": "808752f1b09d2f03af5b58167602fef8320c11dc",
    "merged_at": "2023-05-02T11:42:32Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5PJyQs",
    "number": 23320,
    "patch_url": "https://github.com/neovim/neovim/pull/23320.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/23320/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5b111a8f00f8dbe458a3d437c9f06c9419d24840",
    "title": "feat(ui): add 'smoothscroll' option",
    "updated_at": "2023-12-29T17:40:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/23320",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal"
    }
}