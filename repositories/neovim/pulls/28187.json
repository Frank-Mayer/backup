{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28187/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28187/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28187"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28187"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28187/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/74718aa54dcc01190b6cf5486be8ddda45acc8fa"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5250,
            "forks_count": 5250,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1713,
            "open_issues_count": 1713,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-09T01:48:31Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 266306,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 75972,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-09T00:12:02Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 75972,
            "watchers_count": 75972,
            "web_commit_signoff_required": false
        },
        "sha": "2b9d8dc87e84ea9c03eb8852af8fd9fe00a6033a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem: There is currently no way to check if a given path is absolute or convert a relative path to an absolute path through the Lua stdlib. `vim.fs.joinpath` does not work when the path is absolute. There is also currently no way to resolve `C:foo\\bar` style paths in Windows.\r\n\r\nSolution: Add `vim.fs.abspath`, which allows converting any path to an absolute path. This also allows checking if current path is absolute by doing `vim.fs.abspath(path) == path`. It also has support for `C:foo\\bar` style paths in Windows.\r\n\r\nTODO: Add tests",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553813426"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553813426"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Current working directory to use as the base for the relative path.\r\n--- This option is also ignored for C:foo\\bar style paths on Windows, as those paths use the current\r\n--- directory of the drive specified in the path.\r\n--- (default: |current-directory|)\r\n--- @field cwd? string\r\n```\r\n\r\nShould produce nicer docs.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T14:57:18Z",
            "diff_hunk": "@@ -86,6 +86,64 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- If omitted, the |current-directory| is used.\n+--- This option is also ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- @field cwd? string",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553813426",
            "id": 1553813426,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5cnU-y",
            "original_commit_id": "3dfba0e3ce12cbbbe70452e3e73976324936a0b5",
            "original_line": 96,
            "original_position": 11,
            "original_start_line": 92,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1983443192,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553813426/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-05T14:57:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553813426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553814118"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553814118"
                }
            },
            "author_association": "MEMBER",
            "body": "Move this to below line 134",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T14:57:51Z",
            "diff_hunk": "@@ -86,6 +86,64 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- If omitted, the |current-directory| is used.\n+--- This option is also ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- @field cwd? string\n+\n+--- Convert path to an absolute path. Does not check if the path exists, resolve symlinks or\n+--- hardlinks (including `.` and `..`), or expand environment variables. If the path is already\n+--- absolute, it is returned unchanged.\n+---\n+--- @param path string Path\n+--- @param opts vim.fs.abspath.Opts? Optional keyword arguments:\n+--- @return string Absolute path\n+function M.abspath(path, opts)\n+  opts = opts or {}\n+\n+  vim.validate({\n+    path = { path, { 'string' } },\n+    cwd = { opts.cwd, { 'string' }, true },\n+  })\n+\n+  local is_absolute --- @type boolean\n+  local cwd --- @type string",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553814118",
            "id": 1553814118,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5cnVJm",
            "original_commit_id": "3dfba0e3ce12cbbbe70452e3e73976324936a0b5",
            "original_line": 114,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 1983444281,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553814118/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T14:57:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553814118",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553908741"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553908741"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah I still don't get the point of this. I can't come up with a reason you'd need this. If you need to know the absolute path from a file that isn't relative to the current working directory, does that not mean that you already know the absolute path of the file as it would be `cwd + path`? If so, why can't this just be done with string concatenation?",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T15:42:40Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553908741",
            "id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cnsQF",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983575683,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553908741/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T15:42:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553908741",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553918298"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553918298"
                }
            },
            "author_association": "MEMBER",
            "body": "> Yeah I still don't get the point of this. I can't come up with a reason you'd need this. If you need to know the absolute path from a file that isn't relative to the current working directory, does that not mean that you already know the absolute path of the file as it would be `cwd + path`? If so, why can't this just be done with string concatenation?\r\n\r\nNot necessarily. Assume you have a `cwd`, but you don't know if `path` is absolute or relative. Doing `cwd + path` won't work if `path` is already absolute. In which case, you'd first have to do a check if `path` is absolute by doing `abspath(path) == path`, and _then_ do `cwd + path` if path is not absolute, which imo is way too complicated to expect the average Neovim user to understand.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T15:49:21Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553918298",
            "id": 1553918298,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cnula",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983590639,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553918298/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T15:49:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553918298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553943505"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553943505"
                }
            },
            "author_association": "MEMBER",
            "body": "> Assume you have a `cwd`\r\n\r\nI already have a problem with this premise. Why would I have a random `cwd` that isn't the current working directory?",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T16:04:41Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553943505",
            "id": 1553943505,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cn0vR",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983629720,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553943505/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T16:04:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553943505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553957554"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553957554"
                }
            },
            "author_association": "MEMBER",
            "body": "> > Assume you have a `cwd`\r\n> \r\n> I already have a problem with this premise. Why would I have a random `cwd` that isn't the current working directory?\r\n\r\nI'll give you a usecase that I recently had, where I made a `Rename` command that allowed me to rename any file, and the new name would actually be a path that's relative to the directory of the file being renamed. Another usecase I can think of would be a fuzzy file searcher that allows you to specify a directory, then shows you the filenames relative to the target directory you specified.\r\n\r\nI'm sure @echasnovski can think of other usecases as well, considering that he agreed with having `cwd` in Matrix.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T16:13:20Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553957554",
            "id": 1553957554,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cn4Ky",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983649974,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553957554/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T16:14:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553957554",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553960464"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553960464"
                }
            },
            "author_association": "MEMBER",
            "body": "> I'll give you a usecase that I recently had, where I made a Rename command that allowed me to rename any file, and the new name would actually be a path that's relative to the directory of the file being renamed.\r\n\r\nCan I take a look at the code? Could you link it?",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T16:15:59Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553960464",
            "id": 1553960464,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cn44Q",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983654465,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553960464/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T16:16:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553960464",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553963849"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553963849"
                }
            },
            "author_association": "MEMBER",
            "body": "> > I'll give you a usecase that I recently had, where I made a Rename command that allowed me to rename any file, and the new name would actually be a path that's relative to the directory of the file being renamed.\r\n> \r\n> Can I take a look at the code? Could you link it?\r\n\r\nhttps://github.com/famiu/dot-nvim/blob/master/plugin/file_cmds.lua",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T16:19:23Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553963849",
            "id": 1553963849,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cn5tJ",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983660120,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553963849/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T16:19:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553963849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553978659"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553978659"
                }
            },
            "author_association": "MEMBER",
            "body": "> I'm sure @echasnovski can think of other usecases as well, considering that he agreed with having `cwd` in Matrix.\r\n\r\nSure. One of the real examples for me was to get absolute paths of particular subdirectories for all directories in 'runtimepath'. Here we have \"many `cwd`\" + \"single `path`\".\r\n\r\nNow, this particular case (and many more) can be solved with `vim.fs.joinpath(vim.fs.abspath(cwd), path)`, but it is not 100% the case due to some obscure Windwos paths. So having `opts.cwd` seems logical to me.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T16:33:46Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553978659",
            "id": 1553978659,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cn9Uj",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983683510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553978659/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T16:33:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553978659",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1553981569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553981569"
                }
            },
            "author_association": "MEMBER",
            "body": "> > I'm sure @echasnovski can think of other usecases as well, considering that he agreed with having `cwd` in Matrix.\r\n> \r\n> Sure. One of the real examples for me was to get absolute paths of particular subdirectories for all directories in 'runtimepath'. Here we have \"many `cwd`\" + \"single `path`\".\r\n> \r\n> Now, this particular case (and many more) can be solved with `vim.fs.joinpath(vim.fs.abspath(cwd), path)`, but it is not 100% the case due to some obscure Windwos paths. So having `opts.cwd` seems logical to me.\r\n\r\nIt also just adds 3 lines of code and is very low-cost, so basically not much reason to not have it.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-05T16:36:43Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1553981569",
            "id": 1553981569,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cn-CB",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1983687929,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553981569/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-05T16:36:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1553981569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1554619008"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1554619008"
                }
            },
            "author_association": "MEMBER",
            "body": "Specifying a separate `cwd` is fine. This is similar to the `openat` function. It's not a common use case, but there's no reason not to support it (especially if it's easy to support, as @famiu said).",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-06T14:17:16Z",
            "diff_hunk": "@@ -2847,6 +2847,24 @@ vim.keymap.set({mode}, {lhs}, {rhs}, {opts})                *vim.keymap.set()*\n ==============================================================================\n Lua module: vim.fs                                                    *vim.fs*\n \n+vim.fs.abspath({path}, {opts})                              *vim.fs.abspath()*\n+    Convert path to an absolute path. Does not check if the path exists,\n+    resolve symlinks or hardlinks (including `.` and `..`), or expand\n+    environment variables. If the path is already absolute, it is returned\n+    unchanged.\n+\n+    Parameters: ~\n+      • {path}  (`string`) Path\n+      • {opts}  (`table?`) Optional keyword arguments:\n+                • {cwd}? (`string`, default: |current-directory|) Current",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1554619008",
            "id": 1554619008,
            "in_reply_to_id": 1553908741,
            "line": 2859,
            "node_id": "PRRC_kwDOAPphoM5cqZqA",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 2859,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 13,
            "pull_request_review_id": 1984567586,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1554619008/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-06T14:17:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1554619008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1555003056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555003056"
                }
            },
            "author_association": "MEMBER",
            "body": "could be a ternary, which also avoids the ned for a `@type` annotation",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-07T16:07:06Z",
            "diff_hunk": "@@ -86,6 +86,66 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- This option is ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- (default: |current-directory|)\n+--- @field cwd? string\n+\n+--- Convert path to an absolute path. Does not check if the path exists, resolve symlinks or\n+--- hardlinks (including `.` and `..`), or expand environment variables. If the path is already\n+--- absolute, it is returned unchanged.\n+---\n+--- @param path string Path\n+--- @param opts vim.fs.abspath.Opts? Optional keyword arguments:\n+--- @return string Absolute path\n+function M.abspath(path, opts)\n+  opts = opts or {}\n+\n+  vim.validate({\n+    path = { path, { 'string' } },\n+    cwd = { opts.cwd, { 'string' }, true },\n+  })\n+\n+  local is_absolute --- @type boolean\n+\n+  if not iswin then\n+    -- In Unix-like systems, an absolute path always starts with a slash.\n+    is_absolute = path:sub(1, 1) == '/'\n+  else\n+    -- Windows absolute path formats:\n+    --   {drive_letter}:\\path\\to\\file: Absolute path from the root of drive.\n+    --   \\\\{server}\\{share}\\path\\to\\file: UNC path.\n+    --   \\\\{? or .}\\{drive_letter}:\\path\\to\\file: Device path.\n+    --   \\\\{? or .}\\UNC\\{server}\\{share}\\path\\to\\file: Device UNC path.\n+    --   \\\\{? or .}\\Volume{GUID}\\path\\to\\file: Device Volume path.\n+    is_absolute = path:match('^%w:/')\n+      or path:match('^//')\n+      or path:match('^%w:\\\\')\n+      or path:match('^\\\\\\\\')\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1555003056",
            "id": 1555003056,
            "line": 129,
            "node_id": "PRRC_kwDOAPphoM5cr3aw",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 129,
            "original_position": 44,
            "original_start_line": 113,
            "path": "runtime/lua/vim/fs.lua",
            "position": 44,
            "pull_request_review_id": 1985123743,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555003056/reactions"
            },
            "side": "RIGHT",
            "start_line": 113,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-07T16:07:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555003056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1555003259"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555003259"
                }
            },
            "author_association": "MEMBER",
            "body": "Actually, this entire code can be removed once #28203 is merged, since that allows us a much simpler way of detecting absolute paths through `split_windows_path`",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-07T16:08:50Z",
            "diff_hunk": "@@ -86,6 +86,66 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- This option is ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- (default: |current-directory|)\n+--- @field cwd? string\n+\n+--- Convert path to an absolute path. Does not check if the path exists, resolve symlinks or\n+--- hardlinks (including `.` and `..`), or expand environment variables. If the path is already\n+--- absolute, it is returned unchanged.\n+---\n+--- @param path string Path\n+--- @param opts vim.fs.abspath.Opts? Optional keyword arguments:\n+--- @return string Absolute path\n+function M.abspath(path, opts)\n+  opts = opts or {}\n+\n+  vim.validate({\n+    path = { path, { 'string' } },\n+    cwd = { opts.cwd, { 'string' }, true },\n+  })\n+\n+  local is_absolute --- @type boolean\n+\n+  if not iswin then\n+    -- In Unix-like systems, an absolute path always starts with a slash.\n+    is_absolute = path:sub(1, 1) == '/'\n+  else\n+    -- Windows absolute path formats:\n+    --   {drive_letter}:\\path\\to\\file: Absolute path from the root of drive.\n+    --   \\\\{server}\\{share}\\path\\to\\file: UNC path.\n+    --   \\\\{? or .}\\{drive_letter}:\\path\\to\\file: Device path.\n+    --   \\\\{? or .}\\UNC\\{server}\\{share}\\path\\to\\file: Device UNC path.\n+    --   \\\\{? or .}\\Volume{GUID}\\path\\to\\file: Device Volume path.\n+    is_absolute = path:match('^%w:/')\n+      or path:match('^//')\n+      or path:match('^%w:\\\\')\n+      or path:match('^\\\\\\\\')\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1555003259",
            "id": 1555003259,
            "in_reply_to_id": 1555003056,
            "line": 129,
            "node_id": "PRRC_kwDOAPphoM5cr3d7",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 129,
            "original_position": 44,
            "original_start_line": 113,
            "path": "runtime/lua/vim/fs.lua",
            "position": 44,
            "pull_request_review_id": 1985123952,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555003259/reactions"
            },
            "side": "RIGHT",
            "start_line": 113,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-07T16:09:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555003259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1555004239"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555004239"
                }
            },
            "author_association": "MEMBER",
            "body": "if `paths` is a list, that has a few advantages:\r\n\r\n- allows multiple segments to be combined, similar to nodejs resolve() https://nodejs.org/api/path.html#pathresolvepaths\r\n- when calling, the \"cwd\" is the first arg, which is more readable and more explicit. compare:\r\n    - `abspath('foo', {cwd: '.'})`\r\n    - `abspath({'.', 'foo'})`\r\n    - making it explicit has other advantages, such as reminder plugin authors to think about `getcwd()` and window-local paths.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-07T16:14:53Z",
            "diff_hunk": "@@ -86,6 +86,66 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- This option is ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- (default: |current-directory|)\n+--- @field cwd? string\n+\n+--- Convert path to an absolute path. Does not check if the path exists, resolve symlinks or\n+--- hardlinks (including `.` and `..`), or expand environment variables. If the path is already\n+--- absolute, it is returned unchanged.\n+---\n+--- @param path string Path\n+--- @param opts vim.fs.abspath.Opts? Optional keyword arguments:\n+--- @return string Absolute path\n+function M.abspath(path, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1555004239",
            "id": 1555004239,
            "line": 105,
            "node_id": "PRRC_kwDOAPphoM5cr3tP",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 105,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 20,
            "pull_request_review_id": 1985124730,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555004239/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-07T16:14:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555004239",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1555008923"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555008923"
                }
            },
            "author_association": "MEMBER",
            "body": "> * allows multiple segments to be combined, similar to nodejs resolve()\r\n\r\n`vim.fs.joinpath()` can do that already\r\n\r\n> * when calling, the \"cwd\" is the first arg, which is more readable and more explicit. compare:when calling, the \"cwd\" is the first arg, which is more readable and more explicit. compare:\r\n\r\nTbh with you, I personally do not find it more intuitive, the opposite, even. And even if it were more intuitive, in the vast majority of cases, you're going to not set `cwd` manually, and in those cases, just having a single path argument is much simpler.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-07T16:46:25Z",
            "diff_hunk": "@@ -86,6 +86,66 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- This option is ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- (default: |current-directory|)\n+--- @field cwd? string\n+\n+--- Convert path to an absolute path. Does not check if the path exists, resolve symlinks or\n+--- hardlinks (including `.` and `..`), or expand environment variables. If the path is already\n+--- absolute, it is returned unchanged.\n+---\n+--- @param path string Path\n+--- @param opts vim.fs.abspath.Opts? Optional keyword arguments:\n+--- @return string Absolute path\n+function M.abspath(path, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1555008923",
            "id": 1555008923,
            "in_reply_to_id": 1555004239,
            "line": 105,
            "node_id": "PRRC_kwDOAPphoM5cr42b",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 105,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 20,
            "pull_request_review_id": 1985129245,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555008923/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-07T16:46:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555008923",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28187#discussion_r1555012742"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28187"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555012742"
                }
            },
            "author_association": "MEMBER",
            "body": "Alternatively could define it as `path: string|table`. That allows opt-in to explicit multi-arg form. Although that's a bit redundant with joinpath(), it eliminates the `opts.cwd` option.\r\n\r\n> in the vast majority of cases, you're going to not set cwd manually, and in those cases, just having a single path argument is much simpler.\r\n\r\nFor the single-arg case we can default to using CWD as the root dir.",
            "commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "created_at": "2024-04-07T17:11:00Z",
            "diff_hunk": "@@ -86,6 +86,66 @@ function M.basename(file)\n   return file:match('/$') and '' or (file:match('[^/]*$'))\n end\n \n+--- @class vim.fs.abspath.Opts\n+--- @inlinedoc\n+---\n+--- Current working directory to use as the base for the relative path.\n+--- This option is ignored for C:foo\\bar style paths on Windows, as those paths use the current\n+--- directory of the drive specified in the path.\n+--- (default: |current-directory|)\n+--- @field cwd? string\n+\n+--- Convert path to an absolute path. Does not check if the path exists, resolve symlinks or\n+--- hardlinks (including `.` and `..`), or expand environment variables. If the path is already\n+--- absolute, it is returned unchanged.\n+---\n+--- @param path string Path\n+--- @param opts vim.fs.abspath.Opts? Optional keyword arguments:\n+--- @return string Absolute path\n+function M.abspath(path, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/28187#discussion_r1555012742",
            "id": 1555012742,
            "in_reply_to_id": 1555004239,
            "line": 105,
            "node_id": "PRRC_kwDOAPphoM5cr5yG",
            "original_commit_id": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
            "original_line": 105,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 20,
            "pull_request_review_id": 1985134177,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555012742/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-07T17:11:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1555012742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28187/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28187/commits",
    "created_at": "2024-04-05T14:20:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28187.diff",
    "draft": true,
    "head": {
        "label": "famiu:feat/vim.fs/abspath",
        "ref": "feat/vim.fs/abspath",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/famiu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/famiu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/famiu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/famiu/neovim/branches{/branch}",
            "clone_url": "https://github.com/famiu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/famiu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/famiu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/famiu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/famiu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/famiu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/famiu/neovim/contributors",
            "created_at": "2021-10-11T04:58:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/famiu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/famiu/neovim/downloads",
            "events_url": "https://api.github.com/repos/famiu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/famiu/neovim/forks",
            "full_name": "famiu/neovim",
            "git_commits_url": "https://api.github.com/repos/famiu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/famiu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/famiu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/famiu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/famiu/neovim/hooks",
            "html_url": "https://github.com/famiu/neovim",
            "id": 415783665,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/famiu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/famiu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/famiu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/famiu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/famiu/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/famiu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/famiu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/famiu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGMha8Q",
            "notifications_url": "https://api.github.com/repos/famiu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/famiu/neovim/pulls{/number}",
            "pushed_at": "2024-04-09T01:41:52Z",
            "releases_url": "https://api.github.com/repos/famiu/neovim/releases{/id}",
            "size": 259522,
            "ssh_url": "git@github.com:famiu/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/famiu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/famiu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/famiu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/famiu/neovim/subscription",
            "svn_url": "https://github.com/famiu/neovim",
            "tags_url": "https://api.github.com/repos/famiu/neovim/tags",
            "teams_url": "https://api.github.com/repos/famiu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/famiu/neovim/git/trees{/sha}",
            "updated_at": "2022-08-29T10:09:33Z",
            "url": "https://api.github.com/repos/famiu/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "74718aa54dcc01190b6cf5486be8ddda45acc8fa",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28187",
    "id": 1809448841,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28187",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "locked": false,
    "merge_commit_sha": "58b9aa3996a0f0ac7f1e5eb6d410f4fe9e5b8ada",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5r2f-J",
    "number": 28187,
    "patch_url": "https://github.com/neovim/neovim/pull/28187.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28187/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/74718aa54dcc01190b6cf5486be8ddda45acc8fa",
    "title": "feat(lua): add `vim.fs.abspath`",
    "updated_at": "2024-04-07T17:11:00Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28187",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu"
    }
}