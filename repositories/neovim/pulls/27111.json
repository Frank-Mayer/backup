{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27111/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27111/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27111"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27111"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27111/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6aca4d3067c2dc37e913cd6414ed254e38e76e0d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5174,
            "forks_count": 5174,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1735,
            "open_issues_count": 1735,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-30T00:09:25Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 251558,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73268,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-30T01:30:36Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73268,
            "watchers_count": 73268,
            "web_commit_signoff_required": false
        },
        "sha": "fa9a85ae468b9df30ae9e5c05a08c0f124e267df",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "## Summary\r\n\r\nAdd Lua meta annotations `vim.cmd.*` for Ex commands, and auto-generate `|ex-cmd-index|`.\r\n\r\nCloses #26903.\r\n\r\nPlease see the commit messages for individual commits for more details.\r\n\r\n### Relevant issues (similar work for `vim.fn`):\r\n\r\n- #18311 Tracking issue for (eval.lua: vimscript functions)\r\n  - The source is `src/nvim/eval.lua`: contains params, docs, signature, etc.\r\n- #24473 Lua typing and annotations for `vim.fn.*`: `_meta/vim.fn.lua`\r\n- #24493 Generate vimdoc `builtin.txt` (vimscript functions)\r\n\r\n\r\n### Limitation / Future Work:\r\n\r\n- No arguments\r\n- No Ex-cmd attributes included (e.g., bang, range, nargs, bar, etc.)\r\n- Full documentations are still separate (they are spread throughout the vimdoc, so it'd be a more involved job).\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460706494"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460706494"
                }
            },
            "author_association": "MEMBER",
            "body": "These feel like a little ugly hacks -- I avoided adding them to `src/nvim/ex_cmds.lua`, to avoid any side effects. But should we add them into the `ex_cms` list? How should I deal with them?",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T02:36:47Z",
            "diff_hunk": "@@ -0,0 +1,110 @@\n+-- A script to generate vimdoc |ex-cmd-index| in runtime/doc/index.txt\n+-- This script will print the generated index into stdout.\n+-- See scripts/gen_vimdoc.py.\n+\n+---@type vim.ExCmd[]\n+local ex_cmds = require('src/nvim/ex_cmds').cmds\n+ex_cmds = vim.tbl_filter(function(ex_cmd)\n+  return not ex_cmd.removed\n+  -- return ex_cmd.short_command ~= nil\n+end, ex_cmds) --[[ @as vim.ExCmd[] ]]\n+\n+-- see #27084\n+local print = function(...)\n+  io.stdout:write(...)\n+end\n+\n+local START_OFFSET = 32\n+local TEXT_WIDTH = 78\n+\n+local function word_wrap(text, text_width, indent)\n+  local lines = {}\n+  local line = ''\n+  local start_offset = indent\n+\n+  local indent_if_necssary = function(l)\n+    assert(START_OFFSET % 8 == 0) -- tabsize must be 8\n+    return (#lines > 0 and string.rep('\\t', START_OFFSET / 8) or '') .. l\n+  end\n+\n+  ---@diagnostic disable-next-line: no-unknown\n+  for word in text:gmatch('%S+') do\n+    ---@cast word string\n+    if #line + #word + 1 + start_offset > text_width then\n+      table.insert(lines, indent_if_necssary(line))\n+      start_offset = 0\n+      line = word\n+    else\n+      if #line > 0 then\n+        line = line .. ' ' .. word\n+      else\n+        line = word\n+      end\n+    end\n+  end\n+\n+  table.insert(lines, indent_if_necssary(line))\n+  return table.concat(lines, '\\n')\n+end\n+\n+local HEADER = [[\n+==============================================================================\n+6. EX commands\t\t\t\t*Ex-commands* *ex-cmd-index* *:index*\n+\n+This is a brief but complete listing of all the \":\" commands, without\n+mentioning any arguments.  The optional part of the command name is inside [].\n+The commands are sorted on the non-optional part of their name.\n+\n+Note: the following list of |Ex-commands| is auto-generated.\n+\n+tag\t\tcommand\t\taction ~\n+------------------------------------------------------------------------------ ~\n+|:|\t\t:\t\tnothing\n+|:range|\t:{range}\tgo to last line in {range}\n+]]\n+\n+print(HEADER)\n+\n+-- manually add a few exceptions that are not included in the ex_cmds list.\n+vim.list_extend(ex_cmds, {\n+  { command = '!!', short_command = '!!', desc = [[repeat last \":!\" command]] },\n+  { command = 'star', short_command = '*', desc = [[use the last Visual area, like :'<,'>]] },\n+  { command = '@@', short_command = '@@', desc = [[repeat the previous \":@\"]] },\n+  { command = 'dl', short_command = 'dl', desc = [[short for |:delete| with the 'l' flag]] },\n+  { command = 'dp', short_command = 'd[elete]p', desc = [[short for |:delete| with the 'p' flag]] },\n+})",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460706494",
            "id": 1460706494,
            "line": 75,
            "node_id": "PRRC_kwDOAPphoM5XEJy-",
            "original_commit_id": "31b89950be0c655c96b896dba01062c0050ce25f",
            "original_line": 75,
            "original_position": 75,
            "original_start_line": null,
            "path": "scripts/gendoc_ex_cmd_index.lua",
            "position": 75,
            "pull_request_review_id": 1834754614,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460706494/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T02:42:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460706494",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460794542"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460794542"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure we need this. We don't mention it for other files.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T10:19:13Z",
            "diff_hunk": "@@ -1132,6 +1132,8 @@ This is a brief but complete listing of all the \":\" commands, without\n mentioning any arguments.  The optional part of the command name is inside [].\n The commands are sorted on the non-optional part of their name.\n \n+Note: the following list of |Ex-commands| is auto-generated.",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460794542",
            "id": 1460794542,
            "line": 1135,
            "node_id": "PRRC_kwDOAPphoM5XEfSu",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 1135,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/index.txt",
            "position": 4,
            "pull_request_review_id": 1835312562,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460794542/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T10:19:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460794542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460798082"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460798082"
                }
            },
            "author_association": "MEMBER",
            "body": "All vim.cmd.* should have `@param ... string`.\r\n\r\nWe can also add additional metadata to `ex_cmds.lua` if we want to annotate more specific params for each command. E.g. `vim.cmd.colorscheme` takes a single optional string argument name.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T10:28:59Z",
            "diff_hunk": "@@ -385,6 +391,46 @@ local function render_eval_meta(f, fun, write)\n   write(render_fun_sig(funname, params))\n end\n \n+--- @return table<string, vim.ExCmd>\n+local function get_excmd_meta()\n+  --- @type vim.ExCmd[]\n+  local cmds = require('src/nvim/ex_cmds').cmds\n+  local cmd_table = {} ---@type table<string, vim.ExCmd>\n+  for _, value in ipairs(cmds) do\n+    cmd_table[value.command] = value\n+  end\n+  return cmd_table\n+end\n+\n+--- @param cmd_name string\n+--- @param cmd vim.ExCmd\n+--- @param write fun(line: string)\n+local function render_excmd_meta(cmd_name, cmd, write)\n+  assert(cmd_name == cmd.command)\n+  if cmd.removed then\n+    -- skip deprecated or removed (E319) commands\n+    return\n+  end\n+\n+  local function write_vimcmd_fun(name, full_name)\n+    write('')\n+    write(\n+      ('---' .. (full_name and ('|:%s|\\n---'):format(full_name) or ''))\n+        .. (cmd.desc or 'TODO: Document for Ex-cmd is missing')\n+    )\n+\n+    if name:match('[^a-zA-Z0-9]') or LUA_KEYWORDS[name] then",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460798082",
            "id": 1460798082,
            "line": 422,
            "node_id": "PRRC_kwDOAPphoM5XEgKC",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 422,
            "original_position": 48,
            "original_start_line": null,
            "path": "scripts/gen_eval_files.lua",
            "position": 48,
            "pull_request_review_id": 1835313922,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460798082/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T10:36:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460798082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460798512"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460798512"
                }
            },
            "author_association": "MEMBER",
            "body": "Ideally we should also generate the vimdoc files and add the description into `ex_cmds.lua` but that can be a future improvement.\r\n\r\nBasically everything we did for `vim.fn.*`",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T10:30:15Z",
            "diff_hunk": "@@ -385,6 +391,46 @@ local function render_eval_meta(f, fun, write)\n   write(render_fun_sig(funname, params))\n end\n \n+--- @return table<string, vim.ExCmd>\n+local function get_excmd_meta()\n+  --- @type vim.ExCmd[]\n+  local cmds = require('src/nvim/ex_cmds').cmds\n+  local cmd_table = {} ---@type table<string, vim.ExCmd>\n+  for _, value in ipairs(cmds) do\n+    cmd_table[value.command] = value\n+  end\n+  return cmd_table\n+end\n+\n+--- @param cmd_name string\n+--- @param cmd vim.ExCmd\n+--- @param write fun(line: string)\n+local function render_excmd_meta(cmd_name, cmd, write)\n+  assert(cmd_name == cmd.command)\n+  if cmd.removed then\n+    -- skip deprecated or removed (E319) commands\n+    return\n+  end\n+\n+  local function write_vimcmd_fun(name, full_name)",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460798512",
            "id": 1460798512,
            "line": 415,
            "node_id": "PRRC_kwDOAPphoM5XEgQw",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 415,
            "original_position": 41,
            "original_start_line": null,
            "path": "scripts/gen_eval_files.lua",
            "position": 41,
            "pull_request_review_id": 1835313922,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460798512/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T10:36:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460798512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460800586"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460800586"
                }
            },
            "author_association": "MEMBER",
            "body": "This function is now 190 LOC. Can we break this up?",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T10:35:02Z",
            "diff_hunk": "@@ -1539,30 +1567,19 @@ def __bool__(self) -> bool:\n                     (INCLUDE_DEPRECATED and self.deprecated_functions_text))\n \n \n-def main(doxygen_config, args):\n-    \"\"\"Generates:\n-\n-    1. Vim :help docs\n-    2. *.mpack files for use by API clients\n-\n-    Doxygen is called and configured through stdin.\n-    \"\"\"\n-    for target in CONFIG:\n-        if args.target is not None and target != args.target:\n-            continue\n-\n-        config: Config = CONFIG[target]\n+def generate(target: str, config: Config, doxygen_config, args):",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460800586",
            "id": 1460800586,
            "line": 1570,
            "node_id": "PRRC_kwDOAPphoM5XEgxK",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 1570,
            "original_position": 163,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 163,
            "pull_request_review_id": 1835313922,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460800586/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T10:36:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460800586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460801127"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460801127"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, `ex_cmds.lua` should be the source of truth.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T10:36:28Z",
            "diff_hunk": "@@ -0,0 +1,110 @@\n+-- A script to generate vimdoc |ex-cmd-index| in runtime/doc/index.txt\n+-- This script will print the generated index into stdout.\n+-- See scripts/gen_vimdoc.py.\n+\n+---@type vim.ExCmd[]\n+local ex_cmds = require('src/nvim/ex_cmds').cmds\n+ex_cmds = vim.tbl_filter(function(ex_cmd)\n+  return not ex_cmd.removed\n+  -- return ex_cmd.short_command ~= nil\n+end, ex_cmds) --[[ @as vim.ExCmd[] ]]\n+\n+-- see #27084\n+local print = function(...)\n+  io.stdout:write(...)\n+end\n+\n+local START_OFFSET = 32\n+local TEXT_WIDTH = 78\n+\n+local function word_wrap(text, text_width, indent)\n+  local lines = {}\n+  local line = ''\n+  local start_offset = indent\n+\n+  local indent_if_necssary = function(l)\n+    assert(START_OFFSET % 8 == 0) -- tabsize must be 8\n+    return (#lines > 0 and string.rep('\\t', START_OFFSET / 8) or '') .. l\n+  end\n+\n+  ---@diagnostic disable-next-line: no-unknown\n+  for word in text:gmatch('%S+') do\n+    ---@cast word string\n+    if #line + #word + 1 + start_offset > text_width then\n+      table.insert(lines, indent_if_necssary(line))\n+      start_offset = 0\n+      line = word\n+    else\n+      if #line > 0 then\n+        line = line .. ' ' .. word\n+      else\n+        line = word\n+      end\n+    end\n+  end\n+\n+  table.insert(lines, indent_if_necssary(line))\n+  return table.concat(lines, '\\n')\n+end\n+\n+local HEADER = [[\n+==============================================================================\n+6. EX commands\t\t\t\t*Ex-commands* *ex-cmd-index* *:index*\n+\n+This is a brief but complete listing of all the \":\" commands, without\n+mentioning any arguments.  The optional part of the command name is inside [].\n+The commands are sorted on the non-optional part of their name.\n+\n+Note: the following list of |Ex-commands| is auto-generated.\n+\n+tag\t\tcommand\t\taction ~\n+------------------------------------------------------------------------------ ~\n+|:|\t\t:\t\tnothing\n+|:range|\t:{range}\tgo to last line in {range}\n+]]\n+\n+print(HEADER)\n+\n+-- manually add a few exceptions that are not included in the ex_cmds list.\n+vim.list_extend(ex_cmds, {\n+  { command = '!!', short_command = '!!', desc = [[repeat last \":!\" command]] },\n+  { command = 'star', short_command = '*', desc = [[use the last Visual area, like :'<,'>]] },\n+  { command = '@@', short_command = '@@', desc = [[repeat the previous \":@\"]] },\n+  { command = 'dl', short_command = 'dl', desc = [[short for |:delete| with the 'l' flag]] },\n+  { command = 'dp', short_command = 'd[elete]p', desc = [[short for |:delete| with the 'p' flag]] },\n+})",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460801127",
            "id": 1460801127,
            "in_reply_to_id": 1460706494,
            "line": 75,
            "node_id": "PRRC_kwDOAPphoM5XEg5n",
            "original_commit_id": "31b89950be0c655c96b896dba01062c0050ce25f",
            "original_line": 75,
            "original_position": 75,
            "original_start_line": null,
            "path": "scripts/gendoc_ex_cmd_index.lua",
            "position": 75,
            "pull_request_review_id": 1835316105,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460801127/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T10:36:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460801127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460934798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460934798"
                }
            },
            "author_association": "MEMBER",
            "body": "Of course! This work took the first step for such a refactoring, so I can easily move out the inner function to outer scopes (previously everything was all in the for loop in `main()`...). I tried to minimize the diff even including whitespaces for doxygen stuffs, but we should make more agressive changes here. /cc @justinmk ",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T15:02:42Z",
            "diff_hunk": "@@ -1539,30 +1567,19 @@ def __bool__(self) -> bool:\n                     (INCLUDE_DEPRECATED and self.deprecated_functions_text))\n \n \n-def main(doxygen_config, args):\n-    \"\"\"Generates:\n-\n-    1. Vim :help docs\n-    2. *.mpack files for use by API clients\n-\n-    Doxygen is called and configured through stdin.\n-    \"\"\"\n-    for target in CONFIG:\n-        if args.target is not None and target != args.target:\n-            continue\n-\n-        config: Config = CONFIG[target]\n+def generate(target: str, config: Config, doxygen_config, args):",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460934798",
            "id": 1460934798,
            "in_reply_to_id": 1460800586,
            "line": 1570,
            "node_id": "PRRC_kwDOAPphoM5XFBiO",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 1570,
            "original_position": 163,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 163,
            "pull_request_review_id": 1835361396,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460934798/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T15:02:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460934798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460937025"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460937025"
                }
            },
            "author_association": "MEMBER",
            "body": "Exactly, we should do so. I broke down the scope/step because `vim.fn.*` was easier as all the builtin vimscript functions are listed in `docbuiltin.txt` in the alphabetical order, but all the Ex cmds are scattered with different format.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T15:07:10Z",
            "diff_hunk": "@@ -385,6 +391,46 @@ local function render_eval_meta(f, fun, write)\n   write(render_fun_sig(funname, params))\n end\n \n+--- @return table<string, vim.ExCmd>\n+local function get_excmd_meta()\n+  --- @type vim.ExCmd[]\n+  local cmds = require('src/nvim/ex_cmds').cmds\n+  local cmd_table = {} ---@type table<string, vim.ExCmd>\n+  for _, value in ipairs(cmds) do\n+    cmd_table[value.command] = value\n+  end\n+  return cmd_table\n+end\n+\n+--- @param cmd_name string\n+--- @param cmd vim.ExCmd\n+--- @param write fun(line: string)\n+local function render_excmd_meta(cmd_name, cmd, write)\n+  assert(cmd_name == cmd.command)\n+  if cmd.removed then\n+    -- skip deprecated or removed (E319) commands\n+    return\n+  end\n+\n+  local function write_vimcmd_fun(name, full_name)",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460937025",
            "id": 1460937025,
            "in_reply_to_id": 1460798512,
            "line": 415,
            "node_id": "PRRC_kwDOAPphoM5XFCFB",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 415,
            "original_position": 41,
            "original_start_line": null,
            "path": "scripts/gen_eval_files.lua",
            "position": 41,
            "pull_request_review_id": 1835362139,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460937025/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T15:07:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460937025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460958249"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460958249"
                }
            },
            "author_association": "MEMBER",
            "body": "Alright, I think I could include params into the scope of this PR easily:\r\n\r\n(Rough) Plan:\r\n\r\n- ~~`EX_NEEDARG`: argument required -> `(...)`; otherwise, `()`.~~\r\n- Similarily for `EX_COUNT`, etc.\r\n- `EX_EXTRA`: allow extra args after command name -> becomes `...`; otherwise it's a single arg\r\n\r\n`X_COUNT`, `EX_RANGE`: also accepts integer arguments. e.g. `vim.cmd.buffer(1)` => `:buffer 1`",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T15:50:11Z",
            "diff_hunk": "@@ -385,6 +391,46 @@ local function render_eval_meta(f, fun, write)\n   write(render_fun_sig(funname, params))\n end\n \n+--- @return table<string, vim.ExCmd>\n+local function get_excmd_meta()\n+  --- @type vim.ExCmd[]\n+  local cmds = require('src/nvim/ex_cmds').cmds\n+  local cmd_table = {} ---@type table<string, vim.ExCmd>\n+  for _, value in ipairs(cmds) do\n+    cmd_table[value.command] = value\n+  end\n+  return cmd_table\n+end\n+\n+--- @param cmd_name string\n+--- @param cmd vim.ExCmd\n+--- @param write fun(line: string)\n+local function render_excmd_meta(cmd_name, cmd, write)\n+  assert(cmd_name == cmd.command)\n+  if cmd.removed then\n+    -- skip deprecated or removed (E319) commands\n+    return\n+  end\n+\n+  local function write_vimcmd_fun(name, full_name)\n+    write('')\n+    write(\n+      ('---' .. (full_name and ('|:%s|\\n---'):format(full_name) or ''))\n+        .. (cmd.desc or 'TODO: Document for Ex-cmd is missing')\n+    )\n+\n+    if name:match('[^a-zA-Z0-9]') or LUA_KEYWORDS[name] then",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460958249",
            "id": 1460958249,
            "in_reply_to_id": 1460798082,
            "line": 422,
            "node_id": "PRRC_kwDOAPphoM5XFHQp",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 422,
            "original_position": 48,
            "original_start_line": null,
            "path": "scripts/gen_eval_files.lua",
            "position": 48,
            "pull_request_review_id": 1835369193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460958249/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T19:23:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460958249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1460977889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460977889"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure I understand that. This is a big task.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-21T16:28:59Z",
            "diff_hunk": "@@ -385,6 +391,46 @@ local function render_eval_meta(f, fun, write)\n   write(render_fun_sig(funname, params))\n end\n \n+--- @return table<string, vim.ExCmd>\n+local function get_excmd_meta()\n+  --- @type vim.ExCmd[]\n+  local cmds = require('src/nvim/ex_cmds').cmds\n+  local cmd_table = {} ---@type table<string, vim.ExCmd>\n+  for _, value in ipairs(cmds) do\n+    cmd_table[value.command] = value\n+  end\n+  return cmd_table\n+end\n+\n+--- @param cmd_name string\n+--- @param cmd vim.ExCmd\n+--- @param write fun(line: string)\n+local function render_excmd_meta(cmd_name, cmd, write)\n+  assert(cmd_name == cmd.command)\n+  if cmd.removed then\n+    -- skip deprecated or removed (E319) commands\n+    return\n+  end\n+\n+  local function write_vimcmd_fun(name, full_name)",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1460977889",
            "id": 1460977889,
            "in_reply_to_id": 1460798512,
            "line": 415,
            "node_id": "PRRC_kwDOAPphoM5XFMDh",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 415,
            "original_position": 41,
            "original_start_line": null,
            "path": "scripts/gen_eval_files.lua",
            "position": 41,
            "pull_request_review_id": 1835374917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460977889/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T16:29:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460977889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1461242115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461242115"
                }
            },
            "author_association": "MEMBER",
            "body": "BTW, `gen_eval_files.lua` also renders some part of vimdoc (e.g. `options.txt` `vvars.txt`) so we should consolidate them. I now think `gen_eval_files.lua` would be a more appropriate place for `|ex-cmd-index|` than `gen_vimdoc`, so let me revert `gen_vimdoc.py`:\r\n\r\n- `gen_vimdoc.py` is mainly for C/Lua docstrings -> vimdoc (Function/Class documentation).\r\n  - All `nvim_*` APIs in C, and Lua APIs\r\n- `gen_eval_files.lua` is mainly for the *opposite*, i.e. some *general* source of truth -> Lua meta files (typing and docstring) and vimdoc (index)\r\n  - Ex-cmds, vvars, options, nvim APIs (uses mpack data from `gen_vimdoc.py`)\r\n\r\nAlternatively, we can also move or separate all the vimdoc generation stuff into `gen_vimdoc.py` -- Benefits of doing this is to be able to handle section-by-section generation, and doing all the docgen jobs in a single place and in a single pass. Will decide after some discussions.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-22T00:36:05Z",
            "diff_hunk": "@@ -281,6 +281,8 @@ If you need to modify or debug the documentation flow, these are the main files:\n   src/nvim/eval.lua     =>  runtime/doc/builtin.txt\n   src/nvim/options.lua  =>  runtime/doc/options.txt\n   ```\n+- `./scripts/gendoc_ex_cmd_index.lua`:\n+  Generates the index of Ex commands into `runtime/doc/index.txt`, used by `gen_vimdoc.py`.",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1461242115",
            "id": 1461242115,
            "line": 285,
            "node_id": "PRRC_kwDOAPphoM5XGMkD",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 285,
            "original_position": 5,
            "original_start_line": null,
            "path": "CONTRIBUTING.md",
            "position": 5,
            "pull_request_review_id": 1835500438,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461242115/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T00:50:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461242115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1461288713"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461288713"
                }
            },
            "author_association": "MEMBER",
            "body": "> `gen_eval_files.lua` is mainly for the _opposite_, i.e. some source of truth -> Lua meta files (typing and docstring) and vimdoc (index)\r\n\r\nLooks like `gen_eval_files.lua` already generates vimdoc, so I guess it doesn't matter either way. We should do whatever is less confusing for contributors. \r\n\r\nWe want to replace `gen_vimdoc.py` with a treesitter-based Lua script, so it probably makes sense to avoid enhancements to it where possible",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-22T02:18:57Z",
            "diff_hunk": "@@ -281,6 +281,8 @@ If you need to modify or debug the documentation flow, these are the main files:\n   src/nvim/eval.lua     =>  runtime/doc/builtin.txt\n   src/nvim/options.lua  =>  runtime/doc/options.txt\n   ```\n+- `./scripts/gendoc_ex_cmd_index.lua`:\n+  Generates the index of Ex commands into `runtime/doc/index.txt`, used by `gen_vimdoc.py`.",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1461288713",
            "id": 1461288713,
            "in_reply_to_id": 1461242115,
            "line": 285,
            "node_id": "PRRC_kwDOAPphoM5XGX8J",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 285,
            "original_position": 5,
            "original_start_line": null,
            "path": "CONTRIBUTING.md",
            "position": 5,
            "pull_request_review_id": 1835547292,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461288713/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-22T02:18:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461288713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1463650627"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463650627"
                }
            },
            "author_association": "MEMBER",
            "body": "Use the same filename convention as the existing scripts. `gendoc_` is different than the others, name it something like `gen_help_excmd_index.lua`",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-23T17:10:43Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1463650627",
            "id": 1463650627,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM5XPYlD",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "scripts/gendoc_ex_cmd_index.lua",
            "position": 1,
            "pull_request_review_id": 1839403394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463650627/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2024-01-23T17:10:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463650627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1463653759"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463653759"
                }
            },
            "author_association": "MEMBER",
            "body": "Naming matters, because eventually we may want to expose this file as data in the shipped runtime files. We use `shortname` in `nvim_get_option_info2` so let's use that here.\r\n\r\nLater we might want to change `command` to `name`, idk.\r\n```suggestion\r\n    shortname = 'a',\r\n```",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-23T17:13:18Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1463653759",
            "id": 1463653759,
            "line": 57,
            "node_id": "PRRC_kwDOAPphoM5XPZV_",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 57,
            "original_position": 20,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 20,
            "pull_request_review_id": 1839408700,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463653759/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-23T17:13:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463653759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1463659432"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463659432"
                }
            },
            "author_association": "MEMBER",
            "body": "~~eval.lua uses `desc` for the full documentation. So we should keep that in mind and use a different field for the \"short\" doc?~~\r\n\r\n```suggestion\r\n    shortdesc = [[enter new menu item for all modes]],\r\n```\r\n",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-23T17:16:48Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',\n+    desc = [[append text]],\n     flags = bit.bor(BANG, RANGE, ZEROR, TRLBAR, CMDWIN, LOCK_OK, MODIFY),\n     addr_type = 'ADDR_LINES',\n     func = 'ex_append',\n   },\n   {\n     command = 'abbreviate',\n+    short_command = 'ab',\n+    desc = [[enter abbreviation]],\n     flags = bit.bor(EXTRA, TRLBAR, NOTRLCOM, CTRLV, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abbreviate',\n   },\n   {\n     command = 'abclear',\n+    short_command = 'abc',\n+    desc = [[remove all abbreviations]],\n     flags = bit.bor(EXTRA, TRLBAR, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abclear',\n   },\n   {\n     command = 'aboveleft',\n+    short_command = 'abo',\n+    desc = [[make split window appear left or above]],\n     flags = bit.bor(NEEDARG, EXTRA, NOTRLCOM),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_wrongmodifier',\n   },\n   {\n     command = 'all',\n+    short_command = 'al',\n+    desc = [[open a window for each file in the argument list]],\n     flags = bit.bor(BANG, RANGE, COUNT, TRLBAR),\n     addr_type = 'ADDR_OTHER',\n     func = 'ex_all',\n   },\n   {\n     command = 'amenu',\n+    short_command = 'am',\n+    desc = [[enter new menu item for all modes]],",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1463659432",
            "id": 1463659432,
            "line": 98,
            "node_id": "PRRC_kwDOAPphoM5XPauo",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 98,
            "original_position": 61,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 61,
            "pull_request_review_id": 1839417610,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463659432/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-23T23:18:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1463659432",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1464107662"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464107662"
                }
            },
            "author_association": "MEMBER",
            "body": "Or we could generate the \"short desc\" for the index from the `desc`, by using the first X chars.\r\n\r\nI think that's better, it avoids an extra field that must be maintained.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-23T23:17:41Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',\n+    desc = [[append text]],\n     flags = bit.bor(BANG, RANGE, ZEROR, TRLBAR, CMDWIN, LOCK_OK, MODIFY),\n     addr_type = 'ADDR_LINES',\n     func = 'ex_append',\n   },\n   {\n     command = 'abbreviate',\n+    short_command = 'ab',\n+    desc = [[enter abbreviation]],\n     flags = bit.bor(EXTRA, TRLBAR, NOTRLCOM, CTRLV, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abbreviate',\n   },\n   {\n     command = 'abclear',\n+    short_command = 'abc',\n+    desc = [[remove all abbreviations]],\n     flags = bit.bor(EXTRA, TRLBAR, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abclear',\n   },\n   {\n     command = 'aboveleft',\n+    short_command = 'abo',\n+    desc = [[make split window appear left or above]],\n     flags = bit.bor(NEEDARG, EXTRA, NOTRLCOM),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_wrongmodifier',\n   },\n   {\n     command = 'all',\n+    short_command = 'al',\n+    desc = [[open a window for each file in the argument list]],\n     flags = bit.bor(BANG, RANGE, COUNT, TRLBAR),\n     addr_type = 'ADDR_OTHER',\n     func = 'ex_all',\n   },\n   {\n     command = 'amenu',\n+    short_command = 'am',\n+    desc = [[enter new menu item for all modes]],",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1464107662",
            "id": 1464107662,
            "in_reply_to_id": 1463659432,
            "line": 98,
            "node_id": "PRRC_kwDOAPphoM5XRIKO",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 98,
            "original_position": 61,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 61,
            "pull_request_review_id": 1840110176,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464107662/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-23T23:17:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464107662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1464111208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464111208"
                }
            },
            "author_association": "MEMBER",
            "body": "That would be ideal but currently the full `desc` docs for many commands don't necessarily start with the short desc (unless we update the docs to be written so) -- actually quite different (though semantically same). We'll have slightly different docs (short and full desc) than Vanilla vim's, but this would be fine.\r\n\r\nEven `:amenu`:\r\n\r\n>  The \":amenu\" command can be used to define menu entries for all modes at once,\r\n",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-23T23:23:24Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',\n+    desc = [[append text]],\n     flags = bit.bor(BANG, RANGE, ZEROR, TRLBAR, CMDWIN, LOCK_OK, MODIFY),\n     addr_type = 'ADDR_LINES',\n     func = 'ex_append',\n   },\n   {\n     command = 'abbreviate',\n+    short_command = 'ab',\n+    desc = [[enter abbreviation]],\n     flags = bit.bor(EXTRA, TRLBAR, NOTRLCOM, CTRLV, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abbreviate',\n   },\n   {\n     command = 'abclear',\n+    short_command = 'abc',\n+    desc = [[remove all abbreviations]],\n     flags = bit.bor(EXTRA, TRLBAR, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abclear',\n   },\n   {\n     command = 'aboveleft',\n+    short_command = 'abo',\n+    desc = [[make split window appear left or above]],\n     flags = bit.bor(NEEDARG, EXTRA, NOTRLCOM),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_wrongmodifier',\n   },\n   {\n     command = 'all',\n+    short_command = 'al',\n+    desc = [[open a window for each file in the argument list]],\n     flags = bit.bor(BANG, RANGE, COUNT, TRLBAR),\n     addr_type = 'ADDR_OTHER',\n     func = 'ex_all',\n   },\n   {\n     command = 'amenu',\n+    short_command = 'am',\n+    desc = [[enter new menu item for all modes]],",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1464111208",
            "id": 1464111208,
            "in_reply_to_id": 1463659432,
            "line": 98,
            "node_id": "PRRC_kwDOAPphoM5XRJBo",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 98,
            "original_position": 61,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 61,
            "pull_request_review_id": 1840114924,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464111208/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-23T23:23:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464111208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1464322087"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464322087"
                }
            },
            "author_association": "MEMBER",
            "body": "> Or we could generate the \"short desc\" for the index from the `desc`, by using the first X chars.\r\n> \r\n> I think that's better, it avoids an extra field that must be maintained.\r\n\r\nI think that will make maintenance even harder.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-24T05:22:45Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',\n+    desc = [[append text]],\n     flags = bit.bor(BANG, RANGE, ZEROR, TRLBAR, CMDWIN, LOCK_OK, MODIFY),\n     addr_type = 'ADDR_LINES',\n     func = 'ex_append',\n   },\n   {\n     command = 'abbreviate',\n+    short_command = 'ab',\n+    desc = [[enter abbreviation]],\n     flags = bit.bor(EXTRA, TRLBAR, NOTRLCOM, CTRLV, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abbreviate',\n   },\n   {\n     command = 'abclear',\n+    short_command = 'abc',\n+    desc = [[remove all abbreviations]],\n     flags = bit.bor(EXTRA, TRLBAR, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abclear',\n   },\n   {\n     command = 'aboveleft',\n+    short_command = 'abo',\n+    desc = [[make split window appear left or above]],\n     flags = bit.bor(NEEDARG, EXTRA, NOTRLCOM),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_wrongmodifier',\n   },\n   {\n     command = 'all',\n+    short_command = 'al',\n+    desc = [[open a window for each file in the argument list]],\n     flags = bit.bor(BANG, RANGE, COUNT, TRLBAR),\n     addr_type = 'ADDR_OTHER',\n     func = 'ex_all',\n   },\n   {\n     command = 'amenu',\n+    short_command = 'am',\n+    desc = [[enter new menu item for all modes]],",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1464322087",
            "id": 1464322087,
            "in_reply_to_id": 1463659432,
            "line": 98,
            "node_id": "PRRC_kwDOAPphoM5XR8gn",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 98,
            "original_position": 61,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 61,
            "pull_request_review_id": 1840437365,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464322087/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-24T05:22:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464322087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1464656218"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464656218"
                }
            },
            "author_association": "MEMBER",
            "body": "> unless we update the docs to be written so\n\nI don't think we need to be tied to how \"official vim\" documents these commands. We can do whatever makes sense for us.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-24T10:00:22Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',\n+    desc = [[append text]],\n     flags = bit.bor(BANG, RANGE, ZEROR, TRLBAR, CMDWIN, LOCK_OK, MODIFY),\n     addr_type = 'ADDR_LINES',\n     func = 'ex_append',\n   },\n   {\n     command = 'abbreviate',\n+    short_command = 'ab',\n+    desc = [[enter abbreviation]],\n     flags = bit.bor(EXTRA, TRLBAR, NOTRLCOM, CTRLV, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abbreviate',\n   },\n   {\n     command = 'abclear',\n+    short_command = 'abc',\n+    desc = [[remove all abbreviations]],\n     flags = bit.bor(EXTRA, TRLBAR, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abclear',\n   },\n   {\n     command = 'aboveleft',\n+    short_command = 'abo',\n+    desc = [[make split window appear left or above]],\n     flags = bit.bor(NEEDARG, EXTRA, NOTRLCOM),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_wrongmodifier',\n   },\n   {\n     command = 'all',\n+    short_command = 'al',\n+    desc = [[open a window for each file in the argument list]],\n     flags = bit.bor(BANG, RANGE, COUNT, TRLBAR),\n     addr_type = 'ADDR_OTHER',\n     func = 'ex_all',\n   },\n   {\n     command = 'amenu',\n+    short_command = 'am',\n+    desc = [[enter new menu item for all modes]],",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1464656218",
            "id": 1464656218,
            "in_reply_to_id": 1463659432,
            "line": 98,
            "node_id": "PRRC_kwDOAPphoM5XTOFa",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 98,
            "original_position": 61,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 61,
            "pull_request_review_id": 1840970168,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464656218/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-24T10:00:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1464656218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27111#discussion_r1469040361"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27111"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469040361"
                }
            },
            "author_association": "MEMBER",
            "body": "ok, for now let's just use `desc` as the short description. We aren't moving the long descs into this file any time soon.",
            "commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "created_at": "2024-01-29T03:28:35Z",
            "diff_hunk": "@@ -38,400 +38,544 @@ module.flags = {\n   PREVIEW = PREVIEW,\n }\n \n+--- See `src/nvim/ex_cmds_defs.h` for the meaning of each field\n+--- @class vim.ExCmd\n+--- @field command string name of Ex command, e.g., 'edit'\n+--- @field short_command string shorter name without the optional part, e.g., 'e' for :e[dit].\n+--- @field desc string a brief description, see |ex-cmd-index|\n+--- @field enum? string\n+--- @field flags integer\n+--- @field addr_type string\n+--- @field func string\n+--- @field removed? boolean deprecated or removed in neovim, should not appear in the docs\n+\n -- The following table is described in ex_cmds_defs.h file.\n+--- @type vim.ExCmd[]\n module.cmds = {\n   {\n     command = 'append',\n+    short_command = 'a',\n+    desc = [[append text]],\n     flags = bit.bor(BANG, RANGE, ZEROR, TRLBAR, CMDWIN, LOCK_OK, MODIFY),\n     addr_type = 'ADDR_LINES',\n     func = 'ex_append',\n   },\n   {\n     command = 'abbreviate',\n+    short_command = 'ab',\n+    desc = [[enter abbreviation]],\n     flags = bit.bor(EXTRA, TRLBAR, NOTRLCOM, CTRLV, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abbreviate',\n   },\n   {\n     command = 'abclear',\n+    short_command = 'abc',\n+    desc = [[remove all abbreviations]],\n     flags = bit.bor(EXTRA, TRLBAR, CMDWIN, LOCK_OK),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_abclear',\n   },\n   {\n     command = 'aboveleft',\n+    short_command = 'abo',\n+    desc = [[make split window appear left or above]],\n     flags = bit.bor(NEEDARG, EXTRA, NOTRLCOM),\n     addr_type = 'ADDR_NONE',\n     func = 'ex_wrongmodifier',\n   },\n   {\n     command = 'all',\n+    short_command = 'al',\n+    desc = [[open a window for each file in the argument list]],\n     flags = bit.bor(BANG, RANGE, COUNT, TRLBAR),\n     addr_type = 'ADDR_OTHER',\n     func = 'ex_all',\n   },\n   {\n     command = 'amenu',\n+    short_command = 'am',\n+    desc = [[enter new menu item for all modes]],",
            "html_url": "https://github.com/neovim/neovim/pull/27111#discussion_r1469040361",
            "id": 1469040361,
            "in_reply_to_id": 1463659432,
            "line": 98,
            "node_id": "PRRC_kwDOAPphoM5Xj8bp",
            "original_commit_id": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
            "original_line": 98,
            "original_position": 61,
            "original_start_line": null,
            "path": "src/nvim/ex_cmds.lua",
            "position": 61,
            "pull_request_review_id": 1847772097,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469040361/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-29T03:28:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1469040361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27111/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27111/commits",
    "created_at": "2024-01-21T02:19:04Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27111.diff",
    "draft": true,
    "head": {
        "label": "wookayin:docgen-lua-cmd",
        "ref": "docgen-lua-cmd",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/wookayin/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/wookayin/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/wookayin/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/wookayin/neovim/branches{/branch}",
            "clone_url": "https://github.com/wookayin/neovim.git",
            "collaborators_url": "https://api.github.com/repos/wookayin/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/wookayin/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/wookayin/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/wookayin/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/wookayin/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/wookayin/neovim/contributors",
            "created_at": "2022-10-30T19:40:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/wookayin/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/wookayin/neovim/downloads",
            "events_url": "https://api.github.com/repos/wookayin/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/wookayin/neovim/forks",
            "full_name": "wookayin/neovim",
            "git_commits_url": "https://api.github.com/repos/wookayin/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/wookayin/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/wookayin/neovim/git/tags{/sha}",
            "git_url": "git://github.com/wookayin/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/wookayin/neovim/hooks",
            "html_url": "https://github.com/wookayin/neovim",
            "id": 559659867,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/wookayin/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/wookayin/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/wookayin/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/wookayin/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/wookayin/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/wookayin/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/wookayin/neovim/merges",
            "milestones_url": "https://api.github.com/repos/wookayin/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIVu7Ww",
            "notifications_url": "https://api.github.com/repos/wookayin/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/wookayin/neovim/pulls{/number}",
            "pushed_at": "2024-01-29T22:22:15Z",
            "releases_url": "https://api.github.com/repos/wookayin/neovim/releases{/id}",
            "size": 246972,
            "ssh_url": "git@github.com:wookayin/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/wookayin/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/wookayin/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/wookayin/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/wookayin/neovim/subscription",
            "svn_url": "https://github.com/wookayin/neovim",
            "tags_url": "https://api.github.com/repos/wookayin/neovim/tags",
            "teams_url": "https://api.github.com/repos/wookayin/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/wookayin/neovim/git/trees{/sha}",
            "updated_at": "2024-01-25T20:45:40Z",
            "url": "https://api.github.com/repos/wookayin/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27111",
    "id": 1688463173,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27111",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "Nvim core functionality or code",
            "id": 858327504,
            "name": "core",
            "node_id": "MDU6TGFiZWw4NTgzMjc1MDQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/core"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c8b52b5f417aace07344944d7d8ec4a172097c4d",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5ko-dF",
    "number": 27111,
    "patch_url": "https://github.com/neovim/neovim/pull/27111.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27111/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6aca4d3067c2dc37e913cd6414ed254e38e76e0d",
    "title": "docs: auto-generate `vim.cmd.*` meta and `|ex-cmd-index|`",
    "updated_at": "2024-01-29T03:28:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27111",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin"
    }
}