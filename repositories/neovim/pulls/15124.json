{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15124/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15124/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15124"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15124"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15124/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15124"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/eced096df674ad8fc4c1b503df45e2098362f447"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5573,
            "forks_count": 5573,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1771,
            "open_issues_count": 1771,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-09T12:14:47Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 284802,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 81560,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-09-10T01:50:42Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 81560,
            "watchers_count": 81560,
            "web_commit_signoff_required": false
        },
        "sha": "c36df20aef22288f47e19084d2671327f7cd878c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This PR includes `vim.merge`, an utility function that is similar to `vim.tbl_deep_extend` with the **force** option, but also works for other types than tables.\r\n\r\n> --- Merges the values similar to vim.tbl_deep_extend with the **force** behavior,\r\n--- but the values can be any type, in which case they override the values on the left.\r\n--- Values will me merged in-place in the first left-most table. If you want the result to be in\r\n--- a new table, then simply pass an empty table as the first argument `vim.merge({}, ...)`\r\n\r\n## Note\r\n\r\nThis PR includes a commit from another PR #15094. Not sure how that works ðŸ˜…. I assume when the other PR is merged, this will also be able to merge.",
    "closed_at": "2022-10-29T11:28:27Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Can this function be refactored to unify the three (four, counting options) slightly different functions by adding full control over the behavior? I feel this would be a significant net improvement to the API.",
            "created_at": "2024-09-08T09:02:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336606857",
            "id": 2336606857,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRcqJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336606857/reactions"
            },
            "updated_at": "2024-09-08T09:02:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336606857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- `force`: is the strategy that should be used\r\n- `keep`: this one should not be needed, since `keep` is the same as `force` with a different order of the arguments\r\n- `error`: shouldn't exist. There's no single place this is used in the whole Neovim code-base\r\n- `options`: should be how merging works. Unless someone can show me a use-case for the new index based list table merging.\r\n\r\nIdeally, we should revert the changes to `tbl_deep_extend` and make this function `deprecated`.\r\n\r\nAdd the more solid `vim.merge` that can work with any type. See https://github.com/folke/lazy.nvim/blob/main/lua/lazy/core/util.lua#L439-L469",
            "created_at": "2024-09-08T09:12:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336610105",
            "id": 2336610105,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRdc5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336610105/reactions"
            },
            "updated_at": "2024-09-08T09:12:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336610105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The point is that all possible behaviors can be reasonable in some context, so we should (via an options table, not hard-coded \"behavior\" strings) support all of them to avoid the next \"this function should behave like this, not that, because $FOO\" (\"it already does, just set `opts = { ... }`\").\r\n",
            "created_at": "2024-09-08T09:14:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336610726",
            "id": 2336610726,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRdmm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336610726/reactions"
            },
            "updated_at": "2024-09-08T09:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336610726",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ideally, we should revert the changes to tbl_deep_extend and make this function deprecated.\r\n\r\nGo ahead, but please add better documentation in the process to explain why the behavior is what it is; otherwise we'll be here again in two years' time.",
            "created_at": "2024-09-08T09:16:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336611417",
            "id": 2336611417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRdxZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336611417/reactions"
            },
            "updated_at": "2024-09-08T09:16:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336611417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`tbl_deep_extend` or `vim.merge` can merge multiple tables at once, so not limited to two tables.\r\nThis makes it a bit annoying to implement options.\r\n\r\nIt would mean that even when using the default options, users would still need to add an empty table at the end.\r\n\r\nUnless you were thinking of another way?\r\n\r\n- `Util.merge(a,b,c, {error = true})`.\r\n- `Util.merge(a,b,c)` -> here we don't know if `c` is a table to merge, or if it's `opts` for the merging\r\n- `Util.merge(a,b,c,{})` -> always need to define an empty `opts` for defaults\r\n",
            "created_at": "2024-09-08T09:28:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336614809",
            "id": 2336614809,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRemZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336614809/reactions"
            },
            "updated_at": "2024-09-08T09:28:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336614809",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Due to varargs, I think there is a good reason to deviate from API guidelines and put the `opts` table first (even if it's empty). Users or plugins could still create convenience wrappers for (their) \"default\" behavior if that becomes cumbersome?\r\n\r\nI just think having _four_ subtly different functions is something to be avoided (today) even at significant cost.",
            "created_at": "2024-09-08T09:30:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336615693",
            "id": 2336615693,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRe0N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336615693/reactions"
            },
            "updated_at": "2024-09-08T09:30:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336615693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That could work, but I'm afraid that will lead to issues with people forgetting to add it. It's also not needed to have it as the first arg, if you always need to add `opts`, then it can also be the last arg as with all other functions.\r\n\r\nWhat about:\r\n- `vim.merge` -> just a shorthand for the other function\r\n- `vim.merge_with_opts` (or any other name)\r\n\r\nSince most people just need the merging functionality without any options (where they can switch the order of args for `keep` or `force`). For more advanced use-cases, they can use the other function.",
            "created_at": "2024-09-08T09:39:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336617941",
            "id": 2336617941,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRfXV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336617941/reactions"
            },
            "updated_at": "2024-09-08T09:39:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336617941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Since most people just need the merging functionality without any options (where they can switch the order of args for keep or force). \r\n\r\nI would like to be careful with such assumptions; it has bitten us before. In any case, my proposal is for one big (public!) function instead of four or more custom ones; if it turns out that adding a wrapper for one special case really pays off, we can still add that -- the salient point being that it's a wrapper, not a separate function to be implemented and tested.\r\n\r\n(This is independent of the question of whether we need `keep` or `force`; I agree that if you can achieve them simply by argument ordering, that would be -- much! -- preferable and we should absolutely drop the keywords.)",
            "created_at": "2024-09-08T09:43:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336619145",
            "id": 2336619145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRfqJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336619145/reactions"
            },
            "updated_at": "2024-09-08T09:45:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336619145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  `keep`: this one should not be needed, since `keep` is the same as `force` with a different order of the arguments\r\n\r\ngreat point.\r\n\r\n>  `error`: shouldn't exist. There's no single place this is used in the whole Neovim code-base\r\n\r\nwhat about an optional `on_conflict` callback?\r\n\r\n> vim.merge -> just a shorthand for the other function\r\n> vim.merge_with_opts (or any other name)\r\n\r\noverloads are not hard to do, as long as we don't support varargs (`...)`. varargs is not needed here because it's trivial to add `{}` around any args.",
            "created_at": "2024-09-08T09:52:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336621449",
            "id": 2336621449,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRgOJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336621449/reactions"
            },
            "updated_at": "2024-09-08T09:52:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336621449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> varargs is not needed here because it's trivial to add {} around any args.\r\n\r\n~~Careful; that creates a new table, which is not free (and you don't know how large the tables to be handled could be -- think LSP protocol or even payload).~~\r\n\r\nI stand corrected; creating a table of tables is cheap (with LuaJIT). Then, yes, `vim.merge({table1,table2},opts)` is the best signature (allowing ordered handling of the tables -- obviating the need for `keep` or `force` -- and sane defaults if `opts` is omitted).",
            "created_at": "2024-09-08T09:55:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336622280",
            "id": 2336622280,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRgbI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336622280/reactions"
            },
            "updated_at": "2024-09-08T10:08:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336622280",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Regarding `varargs`: How prevalent is the usecase of merging three or more tables? Do we really need to support that over asking users to simply merge the tables iteratively (that _is_ an associative operation given the order, no)?\r\n\r\n**EDIT: Seems that there's use cases for merging default, global, and local config tables. That seems useful enough to support if it comes with little enough code complexity.**",
            "created_at": "2024-09-08T11:15:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336645787",
            "id": 2336645787,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRmKb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336645787/reactions"
            },
            "updated_at": "2024-09-08T13:33:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336645787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "After thinking about it more, supporting the full generality of recursive merging behavior is a fool's errand. We should just support \r\n1. the old `tbl_deep_extend`;\r\n2. the new `tbl_deep_extend`.\r\n\r\nThe only question is\r\n1. naming;\r\n2. whether we still can subsume these two within a single (better) API.\r\n\r\n(Clearly we will revert the recent change for now in either case, but we might also wish to deprecate the function in favor of a new API if that has clear benefits.)",
            "created_at": "2024-09-08T12:22:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336665834",
            "id": 2336665834,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRrDq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336665834/reactions"
            },
            "updated_at": "2024-09-08T12:22:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336665834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Do we really need the new type of merging?\r\nHas this ever come up in a feature request? \r\nThat original issue had nothing to do with index based merging.\r\n\r\nAnd the same for `error`, or `on_conflict`. Who needs that?\r\n\r\nAlso `keep` vs `force`. Same thing.\r\n\r\nWould be much better to have a single `merge` function. The use-cases for the index-based list merging and `error` are just not strong enough to warrant additional code for that imo.",
            "created_at": "2024-09-08T12:44:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336672913",
            "id": 2336672913,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRsyR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336672913/reactions"
            },
            "updated_at": "2024-09-08T12:44:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336672913",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do we really need the new type of merging?\r\n\r\nYes, since you cannot assume that a list (which is an accidental property of a _concrete_ table) will correctly determine the desired outcome, so this should be an explicit user choice.\r\n\r\nTo steal an example from @mfussenegger : Imagine a table indexed by buffer numbers. The keys start at  `1`, then you add `2`, then you add `3`, then you _delete_ `1` -- what then? Should extending the buffer list suddenly behave differently?",
            "created_at": "2024-09-08T12:47:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336673876",
            "id": 2336673876,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRtBU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336673876/reactions"
            },
            "updated_at": "2024-09-08T12:47:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336673876",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Anyway, clearly there is no consensus for a new API, so let's just park this here. I will just leave (mostly as a note to my future self) my current idea for how a practical `vim.merge` could look like:\r\n\r\n`vim.merge(tables, opts)`\r\n  Merges two or more Lua tables.\r\n  Parameters:\r\n  * `tables`      (`table<table>`) List of two or more tables to merge. In case of common keys, the values that occur in tables later in the list are taken.\r\n  * `opts?`      (`table`) Options controlling the behavior. Valid keys are\r\n                   - `recursive?` (`boolean`, default `false`) whether common table values are merged instead of replaced\r\n                   - `listlike?` (`'merge'|'literal'|'concat'|'union'`) whether list-like tables should be treated specially:\r\n                           + `'merge'` (default) no special treatment (i.e., like the new `tbl_deep_extend`)\r\n                           + `'literal'` if all values are list-like, do not recurse but treat them as literals (i.e., later simply overwrite earlier lists, like the old `tbl_deep_extend`)\r\n                           + `'concat'` if all values are list-like, concatenate their elements (i.e., `list_extend` if `recursive=false`)\r\n                           + `'union'`, if all values are list-like, combine their elements, removing duplicates (which is arguably what you want most of the time -- but not always -- when dealing with lists in \"config tables\")\r\n\r\nReturn:\r\n  (`table`) merged table\r\n\r\nThis would cover/deprecate `tbl_extend`, `tbl_deep_extend` (old and new), and an improved `list_extend` (which I would still keep as an **in-place** two-table fast path, since it's used as such throughout our code base). A critical point is to decide and document what happens if only _some_ of the compared tables are list-like; we could either always default to `merge` (the safe and arguably correct option) or allow `literal` to still work (as, unlike the last two options, this actually makes sense for generic tables as well). Obviously, not all `listlike` options need to be implemented at first; this is just to demonstrate the potential (forward compatibility).\r\n                     \r\nIt would _not_ cover the general case where only some list-like tables are special-cased, but I would consider that an acceptable trade-off.\r\n",
            "created_at": "2024-09-08T13:24:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336685680",
            "id": 2336685680,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRv5w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336685680/reactions"
            },
            "updated_at": "2024-09-08T14:16:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336685680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I really like the API above, the only comment I would add is that the old `tbl_deep_extend` is not concatenation, it's simply treats them as unmergable. I like the addition of concatenation and union as those both can be very useful, but there should also be an `ignore` option that emulates the old `tbl_deep_extend` behavior ",
            "created_at": "2024-09-08T13:47:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336693627",
            "id": 2336693627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRx17",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336693627/reactions"
            },
            "updated_at": "2024-09-08T13:47:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336693627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1591837?v=4",
                "events_url": "https://api.github.com/users/mehalter/events{/privacy}",
                "followers_url": "https://api.github.com/users/mehalter/followers",
                "following_url": "https://api.github.com/users/mehalter/following{/other_user}",
                "gists_url": "https://api.github.com/users/mehalter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mehalter",
                "id": 1591837,
                "login": "mehalter",
                "node_id": "MDQ6VXNlcjE1OTE4Mzc=",
                "organizations_url": "https://api.github.com/users/mehalter/orgs",
                "received_events_url": "https://api.github.com/users/mehalter/received_events",
                "repos_url": "https://api.github.com/users/mehalter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mehalter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mehalter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mehalter"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think \"ignore\" is what you want here -- you want to treat them as literals, so overwrite instead of recursing into them? (Note that this only offers a single global option: either all lists are treated as literal, or all are extended, or all are combined; you can't mix-and-match.)",
            "created_at": "2024-09-08T14:04:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336698603",
            "id": 2336698603,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRzDr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 2,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336698603/reactions"
            },
            "updated_at": "2024-09-08T14:06:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336698603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "yeah true, I was thinking ignore in terms of performing \"merging\" but `overwrite` could be a more clear verb to use there or `literal` to treat them as literals. Thanks!",
            "created_at": "2024-09-08T14:06:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336699721",
            "id": 2336699721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LRzVJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336699721/reactions"
            },
            "updated_at": "2024-09-08T14:06:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336699721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1591837?v=4",
                "events_url": "https://api.github.com/users/mehalter/events{/privacy}",
                "followers_url": "https://api.github.com/users/mehalter/followers",
                "following_url": "https://api.github.com/users/mehalter/following{/other_user}",
                "gists_url": "https://api.github.com/users/mehalter/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mehalter",
                "id": 1591837,
                "login": "mehalter",
                "node_id": "MDQ6VXNlcjE1OTE4Mzc=",
                "organizations_url": "https://api.github.com/users/mehalter/orgs",
                "received_events_url": "https://api.github.com/users/mehalter/received_events",
                "repos_url": "https://api.github.com/users/mehalter/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mehalter/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mehalter/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mehalter"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, the issue with `literal` is that a config table is _itself_ a \"list\", so you'd _never_ recurse after the first tier. The old `tbl_deep_extend` had a more specific behavior (that I'm actually a bit confused that it worked for the \"config merging\" use case, at least for deeply nested configs). But I guess such a config table would be rare enough to just say \"just use a different table layout\" -- or use `union`, which may be expensive (needs `deep_equal`) but what you want 99% of the time anyway; might as well request `vim.merge` to handle it for you.",
            "created_at": "2024-09-08T14:36:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336710244",
            "id": 2336710244,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LR15k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336710244/reactions"
            },
            "updated_at": "2024-09-08T14:48:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336710244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "> `'union'`, if all values are list-like, combine their elements, removing duplicates (which is arguably what you want most of the time -- but not always -- when dealing with lists in \"config tables\")\n\n@clason maybe I'm not understanding the options correctly but I do not think this is true for \"most\" of the time for config tables. I'm thinking of plugin config default options and for user to override with their own options for a list option you would rarely want a union because that means you are always forced to use the default options PLUS any items the user set for the list option. For example, if a default plugin config was:\n\n{ some_option: { \"lua\", \"markdown\" } }\n\nand then you want to instead make it TypeScript and python by providing:\n\n{ some_option: { \"typescript\", \"python\" } }\n\nthe final merged result would end up being (with union flag):\n\n{ some_option: { \"lua\", \"markdown\", \"typescript\", \"python\" } }\n\nThat means users could not set their own config options for list items but could only \"add\" to the defaults. Or am I not understanding something here? Thanks for your hard work as usual!!",
            "created_at": "2024-09-08T17:02:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336754772",
            "id": 2336754772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSAxU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336754772/reactions"
            },
            "updated_at": "2024-09-08T17:02:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336754772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@GitMurf that would be the `concat` option that @clason documented above.",
            "created_at": "2024-09-08T18:55:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336788237",
            "id": 2336788237,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSI8N",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336788237/reactions"
            },
            "updated_at": "2024-09-08T18:55:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336788237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "One additinal thing I added in lazy's `merge`, is that you can have keys set to `vim.NIL` and that would set the value in the merged table to `nil`. Useful in some cases to unset some default options...",
            "created_at": "2024-09-08T18:59:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336789241",
            "id": 2336789241,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSJL5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336789241/reactions"
            },
            "updated_at": "2024-09-08T18:59:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336789241",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @GitMurf that would be the `concat` option that @clason documented above.\r\n\r\n@folke my point was to the comment in the `union` description of: `...(which is arguably what you want most of the time -- but not always -- when dealing with lists in \"config tables\")`\r\n\r\nI do not think this is accurate is it? Isn't this more accurate for the `literal` option?",
            "created_at": "2024-09-08T18:59:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336789491",
            "id": 2336789491,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSJPz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336789491/reactions"
            },
            "updated_at": "2024-09-08T18:59:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336789491",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "As long as it's an option, it's on the caller to use the best one for their use case. I don't see any grounds for premature panic here. ",
            "created_at": "2024-09-08T19:03:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336790553",
            "id": 2336790553,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSJgZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790553/reactions"
            },
            "updated_at": "2024-09-08T19:03:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "I guess as a follow-up as well, am I understanding it correctly that the only difference between `concat` and `union` is that union will remove the duplicates?",
            "created_at": "2024-09-08T19:03:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336790627",
            "id": 2336790627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSJhj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790627/reactions"
            },
            "updated_at": "2024-09-08T19:03:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah right, yes, I think the default should proably be `literal` indeed.\r\n\r\nWithin `lazy.nvim`, I added the option to specify a list of dotted keys whose values should use the `concat` stragegy instead of the `literal` strategy.",
            "created_at": "2024-09-08T19:03:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336790643",
            "id": 2336790643,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSJhz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790643/reactions"
            },
            "updated_at": "2024-09-08T19:03:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336790643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "NONE",
            "body": "> As long as it's an option, it's on the caller to use the best one for their use case. I don't see any grounds for premature panic here.\r\n\r\nMy comments are for proper understanding and making sure we are all \"speaking the same language\" :-) I certainly don't want to raise concerns or give opinions if I don't fully understand or feel like I am not grasping a concept deeply enough or that we are speaking different terms. Not meant to be criticism or panic :) Thanks for all the work you do @clason as I know it is not an easy job!\r\n\r\n**EDIT:** my participation in conversations like these is meant to be constructive from more of a \"end user\" perspective... I hope that is productive as opposed to counter-productive... I am always open to feedback.",
            "created_at": "2024-09-08T19:06:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336791684",
            "id": 2336791684,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSJyE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336791684/reactions"
            },
            "updated_at": "2024-09-08T19:09:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336791684",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Ah right, yes, I think the default should probably be `literal` indeed.\r\n\r\n@folke I agree the default should be `literal` given that is the \"old way\" and what people are use to (that is just my opinion). But to be clear, the proposal above (https://github.com/neovim/neovim/pull/15124#issuecomment-2336685680 - I know it isn't a final proposal or anything... but to memorialize where things are at right now) is that `merge` (the \"new\" way that is now being reverted) is proposed to be the default. Since we were talking about `concat` and `union` it seemed like you were responding to that and were implying that `literal` should be the default instead of concat/union (but none of those are the current proposed default).\r\n\r\nSorry I know I can be verbose but there is a lot of nuance here ;-)",
            "created_at": "2024-09-08T19:14:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336793813",
            "id": 2336793813,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSKTV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336793813/reactions"
            },
            "updated_at": "2024-09-08T19:15:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336793813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The default doesn't really matter here. ",
            "created_at": "2024-09-08T19:19:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336795108",
            "id": 2336795108,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSKnk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336795108/reactions"
            },
            "updated_at": "2024-09-08T19:19:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336795108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "> The default doesn't really matter here.\r\n\r\nWhat do you mean? To me the default is ~~one of the most~~ a very important piece when this gets implemented isn't it? Given the clear amount of ambiguous and subjective opinions/expectations that have presented themselves on how tbl_deep_extend should work.\r\n\r\nI just want to leave this thread of conversation clear and make sure we are all on the same page given we have all put a lot of time into thinking through and discussing this the last 12 hours. So that when you / folke pick this back up (whenever that may be) there are some clear understandings. I promise I am not trying to be difficult and only eager to help :)",
            "created_at": "2024-09-08T19:28:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336797542",
            "id": 2336797542,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSLNm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336797542/reactions"
            },
            "updated_at": "2024-09-08T19:29:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336797542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sigh. The default only determines which option you can omit. It does bot affect achievable behavior in any way. ",
            "created_at": "2024-09-08T19:31:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336798581",
            "id": 2336798581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSLd1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336798581/reactions"
            },
            "updated_at": "2024-09-08T19:31:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336798581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Sigh. The default only determines which option you can omit. It does bot affect achievable behavior in any way.\r\n\r\nFair enough...\r\n\r\nAlright I know I am starting to become too verbose and somewhat speaking in circles so I will leave it at my comments and opinions already posted above as I think it is clear ;-) I will hold off on commenting further until (if) either of you ask me for any feedback, suggestions or testing as this progresses going forward.\r\n\r\nThank you both @clason and @folke (and others) for all your hard work and for letting me participate in the conversation.",
            "created_at": "2024-09-08T19:34:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/15124#issuecomment-2336799315",
            "id": 2336799315,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
            "node_id": "IC_kwDOAPphoM6LSLpT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336799315/reactions"
            },
            "updated_at": "2024-09-08T19:34:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2336799315",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/64155612?v=4",
                "events_url": "https://api.github.com/users/GitMurf/events{/privacy}",
                "followers_url": "https://api.github.com/users/GitMurf/followers",
                "following_url": "https://api.github.com/users/GitMurf/following{/other_user}",
                "gists_url": "https://api.github.com/users/GitMurf/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/GitMurf",
                "id": 64155612,
                "login": "GitMurf",
                "node_id": "MDQ6VXNlcjY0MTU1NjEy",
                "organizations_url": "https://api.github.com/users/GitMurf/orgs",
                "received_events_url": "https://api.github.com/users/GitMurf/received_events",
                "repos_url": "https://api.github.com/users/GitMurf/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/GitMurf/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/GitMurf/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/GitMurf"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15124/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15124/commits",
    "created_at": "2021-07-18T10:13:06Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15124.diff",
    "draft": false,
    "head": {
        "label": "folke:vim_merge",
        "ref": "vim_merge",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/folke/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/folke/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/folke/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/folke/neovim/branches{/branch}",
            "clone_url": "https://github.com/folke/neovim.git",
            "collaborators_url": "https://api.github.com/repos/folke/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/folke/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/folke/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/folke/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/folke/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/folke/neovim/contributors",
            "created_at": "2021-05-20T08:16:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/folke/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/folke/neovim/downloads",
            "events_url": "https://api.github.com/repos/folke/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/folke/neovim/forks",
            "full_name": "folke/neovim",
            "git_commits_url": "https://api.github.com/repos/folke/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/folke/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/folke/neovim/git/tags{/sha}",
            "git_url": "git://github.com/folke/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/folke/neovim/hooks",
            "html_url": "https://github.com/folke/neovim",
            "id": 369133134,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/folke/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/folke/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/folke/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/folke/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/folke/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/folke/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/folke/neovim/merges",
            "milestones_url": "https://api.github.com/repos/folke/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNjkxMzMxMzQ=",
            "notifications_url": "https://api.github.com/repos/folke/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/folke/neovim/pulls{/number}",
            "pushed_at": "2024-09-09T05:15:08Z",
            "releases_url": "https://api.github.com/repos/folke/neovim/releases{/id}",
            "size": 257211,
            "ssh_url": "git@github.com:folke/neovim.git",
            "stargazers_count": 11,
            "stargazers_url": "https://api.github.com/repos/folke/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/folke/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/folke/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/folke/neovim/subscription",
            "svn_url": "https://github.com/folke/neovim",
            "tags_url": "https://api.github.com/repos/folke/neovim/tags",
            "teams_url": "https://api.github.com/repos/folke/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/folke/neovim/git/trees{/sha}",
            "updated_at": "2024-06-27T13:46:35Z",
            "url": "https://api.github.com/repos/folke/neovim",
            "visibility": "public",
            "watchers": 11,
            "watchers_count": 11,
            "web_commit_signoff_required": false
        },
        "sha": "eced096df674ad8fc4c1b503df45e2098362f447",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
            "events_url": "https://api.github.com/users/folke/events{/privacy}",
            "followers_url": "https://api.github.com/users/folke/followers",
            "following_url": "https://api.github.com/users/folke/following{/other_user}",
            "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/folke",
            "id": 292349,
            "login": "folke",
            "node_id": "MDQ6VXNlcjI5MjM0OQ==",
            "organizations_url": "https://api.github.com/users/folke/orgs",
            "received_events_url": "https://api.github.com/users/folke/received_events",
            "repos_url": "https://api.github.com/users/folke/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/folke"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15124",
    "id": 692064340,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15124",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "854fe415eeaec4c61bce881d23de05302f7a2d96",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjkyMDY0MzQw",
    "number": 15124,
    "patch_url": "https://github.com/neovim/neovim/pull/15124.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15124/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/eced096df674ad8fc4c1b503df45e2098362f447",
    "title": "feat: `vim.merge`",
    "updated_at": "2024-09-08T19:34:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15124",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
        "events_url": "https://api.github.com/users/folke/events{/privacy}",
        "followers_url": "https://api.github.com/users/folke/followers",
        "following_url": "https://api.github.com/users/folke/following{/other_user}",
        "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/folke",
        "id": 292349,
        "login": "folke",
        "node_id": "MDQ6VXNlcjI5MjM0OQ==",
        "organizations_url": "https://api.github.com/users/folke/orgs",
        "received_events_url": "https://api.github.com/users/folke/received_events",
        "repos_url": "https://api.github.com/users/folke/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/folke"
    }
}