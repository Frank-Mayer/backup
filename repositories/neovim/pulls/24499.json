{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24499/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24499/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24499"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24499"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24499/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24499"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/cb439b1cdac04882b229ee76c12fadda6de8cdd3"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5531,
            "forks_count": 5531,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1778,
            "open_issues_count": 1778,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-08-20T01:30:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 282327,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80980,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-08-20T00:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80980,
            "watchers_count": 80980,
            "web_commit_signoff_required": false
        },
        "sha": "42333ea98dfcd2994ee128a3467dfe68205154cd",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "vim.treesitter.goto_node() moves the cursor to the given node. Optional arguments include the window id in which to move the cursor (defaulting to the current window) and a (row, col) offset from the node's starting position.\r\n",
    "closed_at": "2023-07-31T13:19:20Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Can't that be used in `:InspectTree` (which also sets the cursor to the current node in the tree view)?",
            "created_at": "2023-07-27T14:21:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1653724929",
            "id": 1653724929,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5ikdcB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653724929/reactions"
            },
            "updated_at": "2023-07-27T14:21:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653724929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, because the playground object (or whatever we are calling it these days) does not store the node objects directly, just their metadata (e.g. `id`, position, etc.).",
            "created_at": "2023-07-27T14:25:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1653730492",
            "id": 1653730492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5ikey8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653730492/reactions"
            },
            "updated_at": "2023-07-27T14:25:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653730492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, this reduces the value of this new function somewhat... Do you have a concrete use case for it?",
            "created_at": "2023-07-27T14:30:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1653740251",
            "id": 1653740251,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5ikhLb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653740251/reactions"
            },
            "updated_at": "2023-07-27T14:30:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653740251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "To explain where I'm coming from: We put the brakes on upstreaming nvim-treesitter utility functions for a reason, as it was turning into something of a grab bag without a clear vision for an API. And I suspect this will just be the first of more to come (back) -- like `swap_nodes`. So I'd like to start with a plan for `vim.treesitter.util` before adding such functions (which I'm not against in principle; rather the opposite) one by one.",
            "created_at": "2023-07-27T14:32:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1653744461",
            "id": 1653744461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5ikiNN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653744461/reactions"
            },
            "updated_at": "2023-07-27T14:32:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653744461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do you have a concrete use case for it?\r\n\r\nAny Treesitter-based (re)implementation of something like matchit, or the builtin (and sub-par) `[[` or `[m` style motions, would be able to use this.\r\n\r\nFor myself, I have \"context\" Treesitter queries that I use to show the current function signature in a floating window (similar to `nvim-treesitter-context`, but homebrewed). I would use this to make a \"move to next/previous context\" mapping. I also use this in my own \"swap function arguments\" Treesitter plugin.\r\n\r\nI understand the concern about adding functions willy nilly with the justification \"maybe this could be useful\", but I do think that this function in particular passes the bar, since  cursor movement is such a fundamentally useful and common action.",
            "created_at": "2023-07-27T14:39:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1653757911",
            "id": 1653757911,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5iklfX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653757911/reactions"
            },
            "updated_at": "2023-07-27T14:39:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653757911",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "OK, a treesitter aware `matchit` replacement _is_ something that is in scope. But still, even given that this function is worth having, we could think about the best way of structuring these functions -- not necessarily as a submodule, but e.g. by better naming conventions. (The only better time than for this than \"now\" is \"yesterday\"...)",
            "created_at": "2023-07-27T14:45:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1653768167",
            "id": 1653768167,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5ikn_n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653768167/reactions"
            },
            "updated_at": "2023-07-27T14:45:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1653768167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Personally I do feel this is a bit too low value to be adding a specific function for and IMO doesn't really justify the additional surface area. The `offset` option also seems particularly weird to me.",
            "created_at": "2023-07-28T13:55:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655735761",
            "id": 1655735761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isIXR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655735761/reactions"
            },
            "updated_at": "2023-07-28T13:56:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655735761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Plenty of uses in the wild, it's not exactly a niche feature: https://github.com/search?q=goto_node%28+language%3ALua+&type=code\r\n\r\nIf we want Treesitter to stop using `nvim-treesitter` as a basic dependency for everything, we need to move some of these fundamental utilities into core.",
            "created_at": "2023-07-28T14:02:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655744352",
            "id": 1655744352,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isKdg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655744352/reactions"
            },
            "updated_at": "2023-07-28T14:02:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655744352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes, but hopefully in a more structured and sustainable manner ;)\r\n\r\nTo be clear: we definitely want (and have started work) to remove nvim-treesitter as a \"treesitter standard library\", so we need to put our money where our mouth is in some form. What's needed is \r\n\r\n1. a sort of triage process (does this need to be in core, or is it not too much to ask for plugins/users just to implement this themselves) -- ideally one that does _not_ boil down to \"I feel it should\" vs. \"I feel it shouldn't\";\r\n\r\n2. a sort of vision how we want that standard library to look long(ish)-term.\r\n\r\nI don't care whether the answer to 2. is a `vim.ts.utils` or not (although I personally prefer a smaller module to the whole namespace becoming a \"dustbin with little coherence\", but that's just me).\r\n\r\nOne step in this direction could be to make `node` a first class object like `query` and `language` and structure this (and related functions) around `node.verb()`.",
            "created_at": "2023-07-28T14:04:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655746933",
            "id": 1655746933,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isLF1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655746933/reactions"
            },
            "updated_at": "2023-07-28T14:15:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655746933",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Yes, but hopefully in a more structured and sustainable manner ;)\r\n\r\nI guess that's subjective, personally I don't want to see a `vim.treesitter.utils` appear. `utils` modules inevitably become dustbins with little to no coherency or thoughtfulness.\r\n\r\nHaving a large, flat module namespace doesn't bother me, so I don't really share your concerns here.",
            "created_at": "2023-07-28T14:06:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655749797",
            "id": 1655749797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isLyl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655749797/reactions"
            },
            "updated_at": "2023-07-28T14:06:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655749797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Plenty of uses in the wild, it's not exactly a niche feature: [github.com/search?q=goto_node%28+language%3ALua+&type=code](https://github.com/search?q=goto_node%28+language%3ALua+&type=code)\r\n\r\nThere are quite a lot of duplicates and false-positives out of the 115 matches. It's mostly nvim-treesitter, navigator.lua, neorg and splitjoin.nvim.\r\n\r\n> If we want Treesitter to stop using nvim-treesitter as a basic dependency for everything, we need to move some of these fundamental utilities into core.\r\n\r\nWe have been. I'm just not convinced this one should make the cut.",
            "created_at": "2023-07-28T14:09:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655753509",
            "id": 1655753509,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isMsl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655753509/reactions"
            },
            "updated_at": "2023-07-28T14:15:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655753509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">a sort of triage process (does this need to be in core, or is it not too much to ask for plugins/users just to implement this themselves) -- ideally one that does not boil down to \"I feel it should\" vs. \"I feel it shouldn't\";\r\n\r\nAgreed.\r\n\r\nThe argument in favor of `goto_node()` is that:\r\n\r\n1. Cursor movement is a fundamental operation in Neovim\r\n2. TS nodes are fundamental data types in Treesitter\r\n3. Therefore, the ability to move the cursor to a node is a fundamentally useful thing to do and should have first class support",
            "created_at": "2023-07-28T14:17:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655764477",
            "id": 1655764477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isPX9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655764477/reactions"
            },
            "updated_at": "2023-07-28T14:17:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655764477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ideally one that does not boil down to \"I feel it should\" vs. \"I feel it shouldn't\";\r\n\r\nI think two decent - although still somewhat subjective- metrics are:\r\n\r\n- depth (a deep and complex function)\r\n- composability with other functions\r\n\r\n> I don't want to see a vim.treesitter.utils appear. utils modules inevitably become dustbins with little to no coherency or thoughtfulness.\r\n\r\n+1\r\n\r\n--- \r\n\r\nRegarding the concrete `goto_node`. No strong opinion, just my 2 cents:\r\n\r\n- I also find the offset special case a bit odd.\r\n- I get the impression that we've in general a bit of poor composability in regards to functions that work with positions or ranges but I've no idea how to fix it. In the LSP area we've (0,0) indexed Position with line and character and Range with a start and end Position. window cursor is usually (1, 0) indexed. Some APIs have separate line and column parameters, others work with tuples. It's the wild west and a lot of logic is about going from one representation to another while avoiding the dreaded off by one error.  :/\r\nIf we add new convenience functions to go from one to another I think it might be worth zooming out a bit to see if there could be a more generalised solution that could cover non-treesitter cases as well\r\n\r\n",
            "created_at": "2023-07-28T14:34:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655796098",
            "id": 1655796098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isXGC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655796098/reactions"
            },
            "updated_at": "2023-07-28T14:34:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655796098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "By that argument, so would `highlight_node()`? (I guess what I'm saying is that non-triviality of the implementation needs to be part of the argument.)\r\n\r\nAnd 💯 on @mfussenegger's point on composability. That is precisely what I've been missing -- from nvim-treesitter already -- without being able to put my finger on it. A more full-featured `vim.range` with conversion functions would already go a long way. (Or an actual, first-class, `Range` object that is API-agnostic, which every API has input and output converters for -- and maybe overloads `+` to allow for offsets or somesuch.)\r\n\r\nAnother, related, point is discoverability: one reason people tend to request custom APIs is that they don't realize how simple they often are to implement, as they don't know what all is available and how -- or even that -- the different APIs (here: treesitter, nvim, basic Lua) interact.",
            "created_at": "2023-07-28T14:35:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655796816",
            "id": 1655796816,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isXRQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655796816/reactions"
            },
            "updated_at": "2023-07-28T15:03:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655796816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Once you remove the boilerplate you are effectively left with:\r\n\r\n```lua\r\nlocal buf = api.nvim_win_get_buf(winid)\r\nlocal row, col = unpack(vim.treesitter.get_range(node, buf, metadata))\r\napi.nvim_win_set_cursor(winid, { row + 1, col })\r\n```\r\n\r\nSo it isn't providing much technically or as an abstraction, and thus the value proposition is low.\r\n\r\nAdditionally, I could imagine variations of this where `goto_node` wouldn't fit, so using the lower level API's seems generally preferable IMO.\r\n",
            "created_at": "2023-07-28T14:36:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655798254",
            "id": 1655798254,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isXnu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655798254/reactions"
            },
            "updated_at": "2023-07-28T14:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655798254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If we add new convenience functions to go from one to another I think it might be worth zooming out a bit to see if there could be a more generalised solution that could cover non-treesitter cases as well\r\n\r\nJust to mention, treesitter has 2 different notations for a nodes location:\r\n- `row, col, end_row, end_col`\r\n- `row, col, byte, end_row, end_col, end_byte`.\r\n\r\nInternally we tend to use byte locations since that is more precise and what treesitter itself uses since parsing is generally `\\n` agnostic.",
            "created_at": "2023-07-28T14:41:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1655805348",
            "id": 1655805348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5isZWk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655805348/reactions"
            },
            "updated_at": "2023-07-28T14:41:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1655805348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">Why doesn't vim.fn.cursor(node:start()) (plus win_execute()) work, and what is needed to make something like that work?\r\n\r\nPartly the different position representations that have already been mentioned (1 based row vs 0 based row), but also because a node can contain metadata set by a directive in a query that can modify its position, so we also need a way to handle that (see @lewis6991's example above).\r\n\r\nClosing since we don't have agreement that this is worth having in core.",
            "created_at": "2023-07-31T13:19:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1658359562",
            "id": 1658359562,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i2I8K",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658359562/reactions"
            },
            "updated_at": "2023-07-31T13:19:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658359562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We don't have agreement (yet) because we haven't finished the discussion...\r\n\r\nI think there's agreement that this should be easy to do out-of-the-box, just not yet what the best way to do it is.",
            "created_at": "2023-07-31T13:36:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1658391053",
            "id": 1658391053,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i2QoN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658391053/reactions"
            },
            "updated_at": "2023-10-05T09:44:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658391053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "(In general, I'd hope for such discussions to be more constructive and solution-oriented and less dismissive and \"stone-walling\". The question should be \"what do we need to make this -- and similar functionality -- achievable in two lines?)",
            "created_at": "2023-07-31T13:39:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1658396699",
            "id": 1658396699,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i2SAb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658396699/reactions"
            },
            "updated_at": "2023-07-31T13:39:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658396699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'd be in favor of any of these directions:\r\n\r\n- add a function `vim.goto()` (`vim.cursor()`?) which accepts `TSNode` (and could later accept other \"position\" forms)\r\n    - this assumes that we will eventually need `vim.goto()` _anyways_. If we're sure that the existing `cursor()` is enough to avoid `vim.goto()` in the long term, then no objection to `vim.treesitter.goto()`.\r\n- add `TSNode` support to `cursor()` (weird, but avoids a new function)\r\n\r\nAt minimum, we should definitely document the current \"state of the art\", because it's not 100% obvious.",
            "created_at": "2023-07-31T16:43:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1658752117",
            "id": 1658752117,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i3ox1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658752117/reactions"
            },
            "updated_at": "2023-07-31T16:43:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658752117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I probably missed some, but I think these are the cursor/position related functions:\r\n\r\n- `vim.region(..., pos1, pos2, ...)`\r\n    - pos1 & pos2: `integer[] (line, column)` `(0,0)` indexed byte positions\r\n- `vim.inspect_pos(..., row, col, ...)` 0 based\r\n- `vim.show_pos(..., row, col, ...)` 0 based\r\n\r\n- `vim.highlight.range(... start, finish, ...)` - `{line, col}` tuple, doesn't mention if `(0, 0)` or something else?\r\n\r\n- `vim.treesitter.get_node_text(node, ...)`\r\n- `vim.fn.cursor(lnum, col, off)` `(1, 1)` - With `0` meaning stay in current line or column\r\n- `vim.fn.getpos(expr)` - result is `[bufnr, lnum, col, off]` (1, 1) based;\r\n- `vim.fn.getcurpos([{winid}])` like ^ but with an extra `curswant` in the result.\r\n- `vim.fn.getline(lnum, end)` - 1 based\r\n- `nvim_win_set_cursor(win, pos)` -  `pos` is `(row, col)` tuple  with `(1, 0)` indexing\r\n- `nvim_win_get_cursor(win)` - Mirrors `nvim_win_set_cursor`\r\n- `nvim_buf_get_lines(..., start, end, ...)` - 0 based, end-exclusive\r\n- `nvim_buf_get_lines(..., start_row, start_col, end_row, end_col...)` - 0 based, row indices end-inclusive, column indices end-exclusive\r\n\r\n\r\nLSP structures:\r\n\r\n```\r\nPosition\r\n   line: integer 0 based\r\n   character: integer 0 base  (but encoding dependent\r\n```\r\n\r\n```\r\nRange\r\n    start: Position\r\n    end: Position\r\n```\r\n\r\n---\r\n\r\nWhat would be the advantage of a `vim.cursor()` or `vim.goto()`? That it is also `(0, 0)` based?\r\n\r\nI kinda like the idea of the `Range` class @clason mentioned, but I don't see how we could integrate that with the existing functions.\r\n\r\n\r\n\r\n",
            "created_at": "2023-07-31T18:18:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1658916388",
            "id": 1658916388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i4Q4k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658916388/reactions"
            },
            "updated_at": "2023-07-31T18:18:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1658916388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@mfussenegger nice list, ~~let's put that in an issue!~~ (Edit: https://github.com/neovim/neovim/issues/25509 )\r\n\r\n> What would be the advantage of a `vim.cursor()` or `vim.goto()`? That it is also `(0, 0)` based?\r\n\r\nWhat are the current steps need to goto a position represented by TSNode? Shouldn't it be as easy as: `vim.cursor(node:pos())` ?\r\n\r\nAn intermediary `Position` (can `Range` represent a single point...?) object, can be interchanged amongst all the functions you listed, without the caller needing to patch things up. ",
            "created_at": "2023-07-31T19:29:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1659006873",
            "id": 1659006873,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i4m-Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1659006873/reactions"
            },
            "updated_at": "2023-10-05T09:43:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1659006873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Shouldn't it be as easy as: vim.cursor(node:pos()) ?\n\nA node has two positions, start and end, so this would need to be `vim.cursor(node:start_pos())` or `vim.cursor(node:end_pos())`",
            "created_at": "2023-07-31T20:31:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/24499#issuecomment-1659120029",
            "id": 1659120029,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
            "node_id": "IC_kwDOAPphoM5i5Cmd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1659120029/reactions"
            },
            "updated_at": "2023-07-31T20:32:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1659120029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24499/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24499/commits",
    "created_at": "2023-07-27T14:13:28Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24499.diff",
    "draft": false,
    "head": {
        "label": "gpanders:ts-goto-cursor",
        "ref": "ts-goto-cursor",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-08-19T11:43:09Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 276474,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "cb439b1cdac04882b229ee76c12fadda6de8cdd3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24499",
    "id": 1452086913,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24499",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2db864ed42abe9afd93b612b6dce56b2e3df1f18",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5WjRaB",
    "number": 24499,
    "patch_url": "https://github.com/neovim/neovim/pull/24499.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24499/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/cb439b1cdac04882b229ee76c12fadda6de8cdd3",
    "title": "feat(treesitter): implement goto_node()",
    "updated_at": "2024-08-18T02:21:28Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24499",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}