{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27252/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27252/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27252"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27252"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27252/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27252"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/08a8f9f2f506b9683fe6f07c03787ad3bc6e5c8c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5214,
            "forks_count": 5214,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1707,
            "open_issues_count": 1707,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-01T16:10:43Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 264055,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 75685,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-02T01:12:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 75685,
            "watchers_count": 75685,
            "web_commit_signoff_required": false
        },
        "sha": "170c890dca8f160bdcd41e4fdc6bf15ee0bdba49",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "The `get_indent_str_vtab()` function currently calls to `tabstop_padding()` every time a tab is encountered (unless tabstops aren't used). `tabstop_padding()` either does a division by `tabstop` If `vartabstop` is not set, or it iterates through the `vartabstop` list to find current tab width. \r\n\r\nSince the virtual column only increases, we can keep track of where the next tabstop would be, and update this information once it was reached.\r\n\r\n`get_indent_str_vtab()`  also depends on `listchars` 'tab1' value from the current window, even though it could be called for for a line from the buffer in a different window. In majority of cases, it is called with tabstops enabled (last argument was `false`), so I split the function into one that uses tabstops and the other that doesn't.\r\n\r\nI removed `get_indent_str()` since I couldn't find any calls to it, including outside 'src/'.",
    "closed_at": "2024-02-11T20:17:15Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27252#discussion_r1485027069"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27252"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485027069"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if (vts == NULL || vts[0] < 1) {  // tab has fixed width\r\n```",
            "commit_id": "08a8f9f2f506b9683fe6f07c03787ad3bc6e5c8c",
            "created_at": "2024-02-10T09:15:49Z",
            "diff_hunk": "@@ -349,83 +350,96 @@ int get_sts_value(void)\n   return result;\n }\n \n-// Count the size (in window cells) of the indent in the current line.\n+/// Count the size (in window cells) of the indent in the current line.\n int get_indent(void)\n {\n-  return get_indent_str_vtab(get_cursor_line_ptr(),\n-                             curbuf->b_p_ts,\n-                             curbuf->b_p_vts_array,\n-                             false);\n+  return indent_size_ts(get_cursor_line_ptr(), curbuf->b_p_ts, curbuf->b_p_vts_array);\n }\n \n-// Count the size (in window cells) of the indent in line \"lnum\".\n+/// Count the size (in window cells) of the indent in line \"lnum\".\n int get_indent_lnum(linenr_T lnum)\n {\n-  return get_indent_str_vtab(ml_get(lnum),\n-                             curbuf->b_p_ts,\n-                             curbuf->b_p_vts_array,\n-                             false);\n+  return indent_size_ts(ml_get(lnum), curbuf->b_p_ts, curbuf->b_p_vts_array);\n }\n \n-// Count the size (in window cells) of the indent in line \"lnum\" of buffer\n-// \"buf\".\n+/// Count the size (in window cells) of the indent in line \"lnum\" of buffer \"buf\".\n int get_indent_buf(buf_T *buf, linenr_T lnum)\n {\n-  return get_indent_str_vtab(ml_get_buf(buf, lnum), buf->b_p_ts, buf->b_p_vts_array, false);\n+  return indent_size_ts(ml_get_buf(buf, lnum), buf->b_p_ts, buf->b_p_vts_array);\n }\n \n-/// Count the size (in window cells) of the indent in line \"ptr\", with\n-/// 'tabstop' at \"ts\".\n-/// If @param list is true, count only screen size for tabs.\n-int get_indent_str(const char *ptr, int ts, bool list)\n-  FUNC_ATTR_NONNULL_ALL\n+/// Compute the size of the indent (in window cells) in line \"ptr\",\n+/// without tabstops (count tab as ^I or <09>).\n+int indent_size_no_ts(char const *ptr)\n+  FUNC_ATTR_NONNULL_ALL FUNC_ATTR_PURE\n {\n-  int count = 0;\n-\n-  for (; *ptr; ptr++) {\n-    // Count a tab for what it is worth.\n-    if (*ptr == TAB) {\n-      if (!list || curwin->w_p_lcs_chars.tab1) {\n-        // count a tab for what it is worth\n-        count += ts - (count % ts);\n-      } else {\n-        // In list mode, when tab is not set, count screen char width\n-        // for Tab, displays: ^I\n-        count += ptr2cells(ptr);\n-      }\n-    } else if (*ptr == ' ') {\n-      // Count a space for one.\n-      count++;\n+  int tab_size = byte2cells(TAB);\n+\n+  int vcol = 0;\n+  while (true) {\n+    char const c = *ptr++;\n+    if (c == ' ') {\n+      vcol++;\n+    } else if (c == TAB) {\n+      vcol += tab_size;\n     } else {\n-      break;\n+      return vcol;\n     }\n   }\n-  return count;\n }\n \n-/// Count the size (in window cells) of the indent in line \"ptr\", using\n-/// variable tabstops.\n-/// if \"list\" is true, count only screen size for tabs.\n-int get_indent_str_vtab(const char *ptr, OptInt ts, colnr_T *vts, bool list)\n+/// Compute the size of the indent (in window cells) in line \"ptr\",\n+/// using tabstops\n+int indent_size_ts(char const *ptr, OptInt ts, colnr_T *vts)\n+  FUNC_ATTR_NONNULL_ARG(1) FUNC_ATTR_PURE\n {\n-  int count = 0;\n+  assert(char2cells(' ') == 1);\n+\n+  int vcol = 0;\n+  int tabstop_width, next_tab_vcol;\n+\n+  if (vts == NULL || vts[0] < 1) {  // tab has same width",
            "html_url": "https://github.com/neovim/neovim/pull/27252#discussion_r1485027069",
            "id": 1485027069,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yg7b9",
            "original_commit_id": "083c8363522cbe8118f2e3b91a5e608bc7b80aa9",
            "original_line": 401,
            "original_position": 101,
            "original_start_line": null,
            "path": "src/nvim/indent.c",
            "position": null,
            "pull_request_review_id": 1873604602,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27252",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485027069/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-10T09:47:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485027069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27252#discussion_r1485036139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27252"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485036139"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      assert(cur_vcol < vcol);\r\n```",
            "commit_id": "08a8f9f2f506b9683fe6f07c03787ad3bc6e5c8c",
            "created_at": "2024-02-10T09:46:20Z",
            "diff_hunk": "@@ -349,83 +350,96 @@ int get_sts_value(void)\n   return result;\n }\n \n-// Count the size (in window cells) of the indent in the current line.\n+/// Count the size (in window cells) of the indent in the current line.\n int get_indent(void)\n {\n-  return get_indent_str_vtab(get_cursor_line_ptr(),\n-                             curbuf->b_p_ts,\n-                             curbuf->b_p_vts_array,\n-                             false);\n+  return indent_size_ts(get_cursor_line_ptr(), curbuf->b_p_ts, curbuf->b_p_vts_array);\n }\n \n-// Count the size (in window cells) of the indent in line \"lnum\".\n+/// Count the size (in window cells) of the indent in line \"lnum\".\n int get_indent_lnum(linenr_T lnum)\n {\n-  return get_indent_str_vtab(ml_get(lnum),\n-                             curbuf->b_p_ts,\n-                             curbuf->b_p_vts_array,\n-                             false);\n+  return indent_size_ts(ml_get(lnum), curbuf->b_p_ts, curbuf->b_p_vts_array);\n }\n \n-// Count the size (in window cells) of the indent in line \"lnum\" of buffer\n-// \"buf\".\n+/// Count the size (in window cells) of the indent in line \"lnum\" of buffer \"buf\".\n int get_indent_buf(buf_T *buf, linenr_T lnum)\n {\n-  return get_indent_str_vtab(ml_get_buf(buf, lnum), buf->b_p_ts, buf->b_p_vts_array, false);\n+  return indent_size_ts(ml_get_buf(buf, lnum), buf->b_p_ts, buf->b_p_vts_array);\n }\n \n-/// Count the size (in window cells) of the indent in line \"ptr\", with\n-/// 'tabstop' at \"ts\".\n-/// If @param list is true, count only screen size for tabs.\n-int get_indent_str(const char *ptr, int ts, bool list)\n-  FUNC_ATTR_NONNULL_ALL\n+/// Compute the size of the indent (in window cells) in line \"ptr\",\n+/// without tabstops (count tab as ^I or <09>).\n+int indent_size_no_ts(char const *ptr)\n+  FUNC_ATTR_NONNULL_ALL FUNC_ATTR_PURE\n {\n-  int count = 0;\n-\n-  for (; *ptr; ptr++) {\n-    // Count a tab for what it is worth.\n-    if (*ptr == TAB) {\n-      if (!list || curwin->w_p_lcs_chars.tab1) {\n-        // count a tab for what it is worth\n-        count += ts - (count % ts);\n-      } else {\n-        // In list mode, when tab is not set, count screen char width\n-        // for Tab, displays: ^I\n-        count += ptr2cells(ptr);\n-      }\n-    } else if (*ptr == ' ') {\n-      // Count a space for one.\n-      count++;\n+  int tab_size = byte2cells(TAB);\n+\n+  int vcol = 0;\n+  while (true) {\n+    char const c = *ptr++;\n+    if (c == ' ') {\n+      vcol++;\n+    } else if (c == TAB) {\n+      vcol += tab_size;\n     } else {\n-      break;\n+      return vcol;\n     }\n   }\n-  return count;\n }\n \n-/// Count the size (in window cells) of the indent in line \"ptr\", using\n-/// variable tabstops.\n-/// if \"list\" is true, count only screen size for tabs.\n-int get_indent_str_vtab(const char *ptr, OptInt ts, colnr_T *vts, bool list)\n+/// Compute the size of the indent (in window cells) in line \"ptr\",\n+/// using tabstops\n+int indent_size_ts(char const *ptr, OptInt ts, colnr_T *vts)\n+  FUNC_ATTR_NONNULL_ARG(1) FUNC_ATTR_PURE\n {\n-  int count = 0;\n+  assert(char2cells(' ') == 1);\n+\n+  int vcol = 0;\n+  int tabstop_width, next_tab_vcol;\n+\n+  if (vts == NULL || vts[0] < 1) {  // tab has same width\n+    // can ts be 0 ? This is from tabstop_padding().\n+    tabstop_width = (int)(ts == 0 ? 8 : ts);\n+    next_tab_vcol = tabstop_width;\n+  } else {  // tab has variable width\n+    colnr_T *cur_tabstop = vts + 1;\n+    colnr_T *const last_tabstop = vts + vts[0];\n+\n+    while (cur_tabstop != last_tabstop) {\n+      int cur_vcol = vcol;\n+      vcol += *cur_tabstop++;\n+      assert(cur_vcol != vcol);",
            "html_url": "https://github.com/neovim/neovim/pull/27252#discussion_r1485036139",
            "id": 1485036139,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yg9pr",
            "original_commit_id": "083c8363522cbe8118f2e3b91a5e608bc7b80aa9",
            "original_line": 412,
            "original_position": 112,
            "original_start_line": null,
            "path": "src/nvim/indent.c",
            "position": null,
            "pull_request_review_id": 1873607451,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27252",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485036139/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-10T09:46:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1485036139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27252/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27252/commits",
    "created_at": "2024-01-29T03:28:14Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27252.diff",
    "draft": false,
    "head": {
        "label": "vanaigr:indent-refactor",
        "ref": "indent-refactor",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/vanaigr/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/vanaigr/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/vanaigr/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/vanaigr/neovim/branches{/branch}",
            "clone_url": "https://github.com/vanaigr/neovim.git",
            "collaborators_url": "https://api.github.com/repos/vanaigr/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/vanaigr/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/vanaigr/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/vanaigr/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/vanaigr/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/vanaigr/neovim/contributors",
            "created_at": "2023-12-05T22:08:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/vanaigr/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/vanaigr/neovim/downloads",
            "events_url": "https://api.github.com/repos/vanaigr/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/vanaigr/neovim/forks",
            "full_name": "vanaigr/neovim",
            "git_commits_url": "https://api.github.com/repos/vanaigr/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/vanaigr/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/vanaigr/neovim/git/tags{/sha}",
            "git_url": "git://github.com/vanaigr/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/vanaigr/neovim/hooks",
            "html_url": "https://github.com/vanaigr/neovim",
            "id": 727936921,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/vanaigr/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/vanaigr/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/vanaigr/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/vanaigr/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/vanaigr/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/vanaigr/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/vanaigr/neovim/merges",
            "milestones_url": "https://api.github.com/repos/vanaigr/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK2NvmQ",
            "notifications_url": "https://api.github.com/repos/vanaigr/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
                "followers_url": "https://api.github.com/users/vanaigr/followers",
                "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
                "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vanaigr",
                "id": 65824523,
                "login": "vanaigr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/vanaigr/orgs",
                "received_events_url": "https://api.github.com/users/vanaigr/received_events",
                "repos_url": "https://api.github.com/users/vanaigr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vanaigr"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/vanaigr/neovim/pulls{/number}",
            "pushed_at": "2024-04-01T14:13:22Z",
            "releases_url": "https://api.github.com/repos/vanaigr/neovim/releases{/id}",
            "size": 257569,
            "ssh_url": "git@github.com:vanaigr/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/vanaigr/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/vanaigr/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/vanaigr/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/vanaigr/neovim/subscription",
            "svn_url": "https://github.com/vanaigr/neovim",
            "tags_url": "https://api.github.com/repos/vanaigr/neovim/tags",
            "teams_url": "https://api.github.com/repos/vanaigr/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/vanaigr/neovim/git/trees{/sha}",
            "updated_at": "2023-12-13T20:00:37Z",
            "url": "https://api.github.com/repos/vanaigr/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "08a8f9f2f506b9683fe6f07c03787ad3bc6e5c8c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
            "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
            "followers_url": "https://api.github.com/users/vanaigr/followers",
            "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vanaigr",
            "id": 65824523,
            "login": "vanaigr",
            "node_id": "MDQ6VXNlcjY1ODI0NTIz",
            "organizations_url": "https://api.github.com/users/vanaigr/orgs",
            "received_events_url": "https://api.github.com/users/vanaigr/received_events",
            "repos_url": "https://api.github.com/users/vanaigr/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vanaigr"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27252",
    "id": 1699130565,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27252",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        }
    ],
    "locked": false,
    "merge_commit_sha": "3faedb0509545a01d84a37bdadf4a9150cc03d5c",
    "merged_at": "2024-02-11T20:17:15Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5lRqzF",
    "number": 27252,
    "patch_url": "https://github.com/neovim/neovim/pull/27252.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27252/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/08a8f9f2f506b9683fe6f07c03787ad3bc6e5c8c",
    "title": "refactor(indent): refactor functions for computing indent size of a string ",
    "updated_at": "2024-03-29T21:16:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27252",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
        "events_url": "https://api.github.com/users/vanaigr/events{/privacy}",
        "followers_url": "https://api.github.com/users/vanaigr/followers",
        "following_url": "https://api.github.com/users/vanaigr/following{/other_user}",
        "gists_url": "https://api.github.com/users/vanaigr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vanaigr",
        "id": 65824523,
        "login": "vanaigr",
        "node_id": "MDQ6VXNlcjY1ODI0NTIz",
        "organizations_url": "https://api.github.com/users/vanaigr/orgs",
        "received_events_url": "https://api.github.com/users/vanaigr/received_events",
        "repos_url": "https://api.github.com/users/vanaigr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vanaigr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vanaigr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vanaigr"
    }
}