{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25495/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25495/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25495"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25495"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25495/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25495"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/502139d0ddaa64c2f8b22574cfe6bd234626b6dc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4909,
            "forks_count": 4909,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1654,
            "open_issues_count": 1654,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-10-04T23:48:38Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248909,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 69903,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-10-05T01:49:45Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 69903,
            "watchers_count": 69903,
            "web_commit_signoff_required": false
        },
        "sha": "e72b546354cd90bf0cd8ee6dd045538d713009ad",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Add an ability to provide a custom highlight group for a tree-sitter capture through metadata, in a similar fashion to conceal and priority.\r\nFeature as presented in the docs doesn't add much value since capture name can be set to match he hl group name, but it gives an ability to dynamically define hl groups via custom directives. Here's a trivial example:\r\n\r\nTo highlight a defined list of strings with the provided color that is defined through variable, we can now do something like this:\r\n\r\n```query\r\n; highlights.scm for lua\r\n(string (string_content) @my_string (#set-custom-colors! @my_string))\r\n```\r\n\r\n```lua\r\nlocal my_colors = {\r\n  yes = \"#00FF00\",\r\n  no = \"#FF0000\",\r\n  maybe = \"#FFFF00\"\r\n\r\n}\r\n\r\nfor name, color in pairs(my_colors) do\r\n  vim.cmd(string.format('hi MyColor%s guifg=%s', name:lower(), color))\r\nend\r\n\r\nvim.treesitter.query.add_directive(\"set-custom-colors!\", function(match, _, source, pred, metadata)\r\n  local node = match[pred[2]]\r\n  if node then\r\n    local text = vim.treesitter.get_node_text(node, source)\r\n    if my_colors[text:lower()] then\r\n      metadata.hl_group = string.format('MyColor%s', text:lower())\r\n    end\r\n  end\r\nend)\r\n```\r\n\r\nExample result:\r\n![screenshot_2023_10_03_23_43_12](https://github.com/neovim/neovim/assets/1782860/eb9df442-a5a1-49bd-82ea-33b39b680d6d)\r\n\r\n\r\nCreating draft PR for now. Once and if confirmed, I'll make it ready for review.\r\n",
    "closed_at": "2023-10-04T08:35:47Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think we want to mix levels like that: if you want to adjust colors, you adjust highlight groups; captures are abstract syntax information that should not be abused to hardcode colors. And highlighting arbitrary strings can (and should) be done directly via `set_extmarks`. I don't see this use case as nearly compelling enough to add yet another custom directive.\r\n\r\nThat being said, a more generic mechanism that allows runtime control over captures (including conceal and spell!) could be worth it. An actual, non-trivial use case may also change my mind.\r\n",
            "created_at": "2023-10-04T06:15:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746202899",
            "id": 1746202899,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oFPET",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746202899/reactions"
            },
            "updated_at": "2023-10-04T06:15:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746202899",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "As far as I can tell this doesn't add a new directive but just a new field in metadata which can then be used to create custom directives like in the pr description.\r\nThe first thing that came to my mind were custom text colors in markup formats (in my case norg but ig this could also be usefull for e.g. latex) without having to parse the document \"manually\" and add extmarks",
            "created_at": "2023-10-04T06:28:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746217343",
            "id": 1746217343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oFSl_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746217343/reactions"
            },
            "updated_at": "2023-10-04T06:28:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746217343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@clason as @max397574 pointed out, the directive in the description is just an example of usage.  I don't plan to add any custom directives to the core. This just adds the ability to set custom hl_group through the capture metadata.\r\n\r\nI would use this to configure custom colors for todo keywords in [nvim-orgmode](https://github.com/nvim-orgmode/orgmode). They are defined like this https://github.com/nvim-orgmode/orgmode/blob/master/DOCS.md#org_todo_keyword_faces, and currently, I'm reading the `highlights.scm` file and appending the custom capture https://github.com/nvim-orgmode/orgmode/blob/master/lua/orgmode/colors/todo_highlighter.lua#L16-L53 to achieve this. \r\n",
            "created_at": "2023-10-04T06:48:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746240881",
            "id": 1746240881,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oFYVx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746240881/reactions"
            },
            "updated_at": "2023-10-04T06:48:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746240881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry, but that looks like an XY problem to me. Why don't you just ship a query with `;; extends` in your plugin? Or a completely custom orgmode query?\r\n\r\nEvery feature, no matter how small, complicates reasoning about the code. In this case specifically, the capture will not determine the treesitter highlight anymore, and every code that relies on that will have to be changed -- for example, `:Inspect`.\r\n\r\nWe need a stronger rationale than just \"it's neat and can be done, and would simplify my plugin\" -- there's a reason we ask people to phrase their PR descriptions in a \"Problem -- Solution\" format.",
            "created_at": "2023-10-04T06:53:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746247345",
            "id": 1746247345,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oFZ6x",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746247345/reactions"
            },
            "updated_at": "2023-10-04T06:59:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746247345",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why don't you just ship a query with `;; extends` in your plugin?\r\n\r\nI'm not sure how would I do this. I already have defined highlights here https://github.com/nvim-orgmode/orgmode/blob/master/queries/org/highlights.scm. I'm assuming I would need to do something similar to what I do now where I append custom highlights, but I'm not sure. Sorry for my ignorance. \r\n\r\nI need to define TS highlights dynamically, in terms that each user can set their own highlights through the setup call, and I need to use that to highlight specific captures.\r\n\r\n> Or a completely custom orgmode query?\r\n\r\nBy this, do you mean setting custom extmarks via a decoration provider? I'm aware of this solution, but the suggested change allows leveraging the existing decoration provider and the hooks that are available, which simplifies a few things. I know it's not an excuse, but I believe it's worth considering.\r\n\r\n> Every feature, no matter how small, complicates reasoning about the code. In this case specifically, the capture will not determine the treesitter highlight anymore, and every code that relies on that will have to be changed -- for example, :Inspect.\r\n\r\nI fully understand this. I followed what's done for `priority` and `conceal`, since it applies to the same thing at the end. Highlights do cover more things as you pointed out, but I can look into those and address them where necessary.\r\n",
            "created_at": "2023-10-04T07:38:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746309663",
            "id": 1746309663,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oFpIf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746309663/reactions"
            },
            "updated_at": "2023-10-04T07:38:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746309663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> By this, do you mean setting custom extmarks via a decoration provider?\r\n\r\nYes. That is the correct solution for this; (ab)using the standard treesitter decoration provider is not, IMO.\r\n\r\n`priority` and `conceal` are very different things; they don't \"short-circuit\" the actual highlighting.\r\n\r\n> I need to define TS highlights dynamically, in terms that each user can set their own highlights through the setup call, and I need to use that to highlight specific captures.\r\n\r\nWhy? Why not define custom captures that users can assign highlights for in their color scheme, like everybody else? (We deliberately moved away from this `TSFoo` highlight group business for a reason...)\r\n\r\nAnd again, we _would_ be interested in a dynamic query mechanism, but that needs to be generic. ",
            "created_at": "2023-10-04T07:54:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746333856",
            "id": 1746333856,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oFvCg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746333856/reactions"
            },
            "updated_at": "2023-10-04T07:57:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746333856",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why? Why not define custom captures that users can assign highlights for in their color scheme, like everybody else? (We deliberately moved away from this TSFoo highlight group business for a reason...)\r\n\r\nI cannot define anything upfront because it's dynamic for both the highlights and the captures. \r\nBasically, you can define specific todo keywords in your configuration, and for each of the keywords, you can define specific highlights. Then these keywords get highlighted in your document. These can be whatever. For example:\r\n```\r\nsetup({\r\n  keywords = {'TODO', 'PROGRESS', 'WAITING', 'DONE' },\r\n  highlights = {\r\n    TODO = { background = 'red', bold = true },\r\n    DONE = { background = 'green', bold = true },\r\n    -- etc.\r\n  })\r\n```\r\n\r\nGiving the flexibility of defining it through the configuration complicates the implementation of it. It's a fairly specific issue.\r\n\r\n> And again, we would be interested in a dynamic query mechanism, but that needs to be generic.\r\n\r\nI'm hoping to see some solution to this. I don't have any other ideas on how to address it, so I just wanted to propose this.\r\n\r\n> Yes. That is the correct solution for this; (ab)using the standard treesitter decoration provider is not, IMO.\r\n\r\nThat's a fair point. Considering this, I'm closing the PR.\r\n\r\nThanks for your feedback!",
            "created_at": "2023-10-04T08:35:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746399546",
            "id": 1746399546,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oF_E6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746399546/reactions"
            },
            "updated_at": "2023-10-04T08:35:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746399546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'm hoping to see some solution to this. I don't have any other ideas on how to address it, so I just wanted to propose this.\r\n\r\nWe, too, but it's not trivial. My current thinking is either to extend the predicate handlers so you can refer to Lua variables (and not just literal strings) in, e.g., `#any-of?` or `#set!`, or allow `vim.query.set` (which takes queries as a string, which can be dynamically created) to extend (instead of replace) the active queries.\r\n\r\nFor now, the approach in https://github.com/echasnovski/mini.nvim/blob/main/lua/mini/hipatterns.lua is the best way. You can of course use treesitter queries to narrow down the candidates for highlighting, but you should do this independently of the main treesitter highlighter.",
            "created_at": "2023-10-04T08:51:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746425224",
            "id": 1746425224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oGFWI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746425224/reactions"
            },
            "updated_at": "2023-10-04T08:52:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746425224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> or allow vim.query.set (which takes queries as a string, which can be dynamically created) to extend (instead of replace) the active queries.\r\n\r\nThis is a good idea. Probably not that simple though. ",
            "created_at": "2023-10-04T09:50:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/25495#issuecomment-1746527559",
            "id": 1746527559,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
            "node_id": "IC_kwDOAPphoM5oGeVH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746527559/reactions"
            },
            "updated_at": "2023-10-04T09:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1746527559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25495/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25495/commits",
    "created_at": "2023-10-03T21:44:54Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25495.diff",
    "draft": true,
    "head": {
        "label": "kristijanhusak:feat/ts-metadata-custom-hl",
        "ref": "feat/ts-metadata-custom-hl",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/kristijanhusak/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/kristijanhusak/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/kristijanhusak/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/kristijanhusak/neovim/branches{/branch}",
            "clone_url": "https://github.com/kristijanhusak/neovim.git",
            "collaborators_url": "https://api.github.com/repos/kristijanhusak/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/kristijanhusak/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/kristijanhusak/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/kristijanhusak/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/kristijanhusak/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/kristijanhusak/neovim/contributors",
            "created_at": "2023-10-03T19:37:56Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/kristijanhusak/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/kristijanhusak/neovim/downloads",
            "events_url": "https://api.github.com/repos/kristijanhusak/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/kristijanhusak/neovim/forks",
            "full_name": "kristijanhusak/neovim",
            "git_commits_url": "https://api.github.com/repos/kristijanhusak/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/kristijanhusak/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/kristijanhusak/neovim/git/tags{/sha}",
            "git_url": "git://github.com/kristijanhusak/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/kristijanhusak/neovim/hooks",
            "html_url": "https://github.com/kristijanhusak/neovim",
            "id": 700019245,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/kristijanhusak/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/kristijanhusak/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/kristijanhusak/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/kristijanhusak/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/kristijanhusak/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/kristijanhusak/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/kristijanhusak/neovim/merges",
            "milestones_url": "https://api.github.com/repos/kristijanhusak/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKblyLQ",
            "notifications_url": "https://api.github.com/repos/kristijanhusak/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
                "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
                "followers_url": "https://api.github.com/users/kristijanhusak/followers",
                "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kristijanhusak",
                "id": 1782860,
                "login": "kristijanhusak",
                "node_id": "MDQ6VXNlcjE3ODI4NjA=",
                "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
                "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
                "repos_url": "https://api.github.com/users/kristijanhusak/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kristijanhusak"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/kristijanhusak/neovim/pulls{/number}",
            "pushed_at": "2023-10-03T21:17:01Z",
            "releases_url": "https://api.github.com/repos/kristijanhusak/neovim/releases{/id}",
            "size": 242672,
            "ssh_url": "git@github.com:kristijanhusak/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/kristijanhusak/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/kristijanhusak/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/kristijanhusak/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/kristijanhusak/neovim/subscription",
            "svn_url": "https://github.com/kristijanhusak/neovim",
            "tags_url": "https://api.github.com/repos/kristijanhusak/neovim/tags",
            "teams_url": "https://api.github.com/repos/kristijanhusak/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/kristijanhusak/neovim/git/trees{/sha}",
            "updated_at": "2023-10-03T19:37:57Z",
            "url": "https://api.github.com/repos/kristijanhusak/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "502139d0ddaa64c2f8b22574cfe6bd234626b6dc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
            "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
            "followers_url": "https://api.github.com/users/kristijanhusak/followers",
            "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
            "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/kristijanhusak",
            "id": 1782860,
            "login": "kristijanhusak",
            "node_id": "MDQ6VXNlcjE3ODI4NjA=",
            "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
            "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
            "repos_url": "https://api.github.com/users/kristijanhusak/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/kristijanhusak"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25495",
    "id": 1540763203,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25495",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "8e049cec08fabdc8393034918c1cef9fbf704cb5",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5b1i5D",
    "number": 25495,
    "patch_url": "https://github.com/neovim/neovim/pull/25495.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25495/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/502139d0ddaa64c2f8b22574cfe6bd234626b6dc",
    "title": "feat(treesitter): Allow setting custom hl group through metadata",
    "updated_at": "2023-10-04T09:50:49Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25495",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1782860?v=4",
        "events_url": "https://api.github.com/users/kristijanhusak/events{/privacy}",
        "followers_url": "https://api.github.com/users/kristijanhusak/followers",
        "following_url": "https://api.github.com/users/kristijanhusak/following{/other_user}",
        "gists_url": "https://api.github.com/users/kristijanhusak/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kristijanhusak",
        "id": 1782860,
        "login": "kristijanhusak",
        "node_id": "MDQ6VXNlcjE3ODI4NjA=",
        "organizations_url": "https://api.github.com/users/kristijanhusak/orgs",
        "received_events_url": "https://api.github.com/users/kristijanhusak/received_events",
        "repos_url": "https://api.github.com/users/kristijanhusak/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kristijanhusak/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kristijanhusak/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kristijanhusak"
    }
}