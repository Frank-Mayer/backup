{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26886/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26886/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26886"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26886"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26886/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d82ba45e839dff8b25fe068ace8a07ce9e485914"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5121,
            "forks_count": 5121,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1744,
            "open_issues_count": 1744,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-09T01:46:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248837,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72546,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-09T01:49:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72546,
            "watchers_count": 72546,
            "web_commit_signoff_required": false
        },
        "sha": "6635ec113fe69157001070e809bc5611e3d52014",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "tmux indicates its RGB support via setrgbb and setrgbf. In modern tmux\r\ncode, Tc and RGB just set setrgbb and setrgbf, so we can just check for\r\nthem.\r\n\r\nLink: https://github.com/tmux/tmux/commit/7eb496c00c313c2f8ab8debe6d154d5ac0db277b\r\nRef: https://github.com/neovim/neovim/pull/21839",
    "closed_at": "2024-01-04T21:51:52Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442228890"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442228890"
                }
            },
            "author_association": "MEMBER",
            "body": "Don't need `-J`\r\n\r\n```suggestion\r\n  local info = vim.fn.system({ 'tmux', 'show-messages', '-T' })\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T20:34:45Z",
            "diff_hunk": "@@ -324,24 +324,17 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442228890",
            "id": 1442228890,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9qqa",
            "original_commit_id": "ac1ed5760a4148dfce6df2f85277d5154c791e9e",
            "original_line": 327,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804934730,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442228890/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T20:38:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442228890",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442229296"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442229296"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      \"True color support could not be detected. True colors are disabled. |'termguicolors'| won't work properly.\",\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T20:35:19Z",
            "diff_hunk": "@@ -324,24 +324,17 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n+  local has_setrgbb = vim.fn.stridx(info, ' setrgbb: (string)') ~= -1\n+  local has_setrgbf = vim.fn.stridx(info, ' setrgbf: (string)') ~= -1\n+  if not has_setrgbb and not has_setrgbf then\n+    health.warn(\n+      \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442229296",
            "id": 1442229296,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9qww",
            "original_commit_id": "ac1ed5760a4148dfce6df2f85277d5154c791e9e",
            "original_line": 332,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804934730,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442229296/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T20:38:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442229296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442230288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442230288"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        \"None of the Tc, RGB, or setrgbf/setrgbb capabilities were found in the host terminal's terminfo\",\r\n        \"Add the following to your tmux configuration file, replacing XXX by the value of $TERM outside of tmux:\\nset-option -a terminal-features 'XXX:RGB'\",\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T20:36:43Z",
            "diff_hunk": "@@ -324,24 +324,17 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n+  local has_setrgbb = vim.fn.stridx(info, ' setrgbb: (string)') ~= -1\n+  local has_setrgbf = vim.fn.stridx(info, ' setrgbf: (string)') ~= -1\n+  if not has_setrgbb and not has_setrgbf then\n+    health.warn(\n+      \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n+      {\n+        \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-overrides ',XXX:RGB'\",",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442230288",
            "id": 1442230288,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9rAQ",
            "original_commit_id": "237b1990434fba5c451fcb5ee2ca45d01cc4f7fa",
            "original_line": 334,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804934730,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442230288/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T20:38:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442230288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442246317"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442246317"
                }
            },
            "author_association": "MEMBER",
            "body": "This line is too long. The second sentence is redundant:\r\n\r\n```suggestion\r\n      \"True color support could not be detected. |'termguicolors'| won't work properly.\",\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T20:57:34Z",
            "diff_hunk": "@@ -324,24 +324,18 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-T' })\n+  local has_setrgbb = vim.fn.stridx(info, ' setrgbb: (string)') ~= -1\n+  local has_setrgbf = vim.fn.stridx(info, ' setrgbf: (string)') ~= -1\n+  if not has_setrgbb and not has_setrgbf then\n+    health.warn(\n+      \"True color support could not be detected. True colors are disabled. |'termguicolors'| won't work properly.\",",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442246317",
            "id": 1442246317,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9u6t",
            "original_commit_id": "3469116265cf7886f87ce87e07e6eecfd6f77093",
            "original_line": 332,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804962276,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442246317/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T21:02:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442246317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442248785"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442248785"
                }
            },
            "author_association": "MEMBER",
            "body": "Commas aren't needed. Don't need `-g` for `terminal-overrides` because it's a server option.\r\n\r\n```suggestion\r\n        \"Add the following to your tmux configuration file, replacing XXX by the value of $TERM outside of tmux:\\nset-option -a terminal-features 'XXX:RGB'\",\r\n        \"For older tmux versions use this instead:\\nset-option -a terminal-overrides 'XXX:Tc'\",\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T21:01:03Z",
            "diff_hunk": "@@ -324,24 +324,18 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-T' })\n+  local has_setrgbb = vim.fn.stridx(info, ' setrgbb: (string)') ~= -1\n+  local has_setrgbf = vim.fn.stridx(info, ' setrgbf: (string)') ~= -1\n+  if not has_setrgbb and not has_setrgbf then\n+    health.warn(\n+      \"True color support could not be detected. True colors are disabled. |'termguicolors'| won't work properly.\",\n+      {\n+        \"None of the Tc, RGB, or setrgbb/setrgbf capabilities were found in the host terminal's terminfo.\",\n+        \"Add the following to your tmux configuration file, replacing XXX by the value of $TERM outside of tmux:\\nset-option -a terminal-features ',XXX:RGB'\",\n+        \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442248785",
            "id": 1442248785,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9vhR",
            "original_commit_id": "3469116265cf7886f87ce87e07e6eecfd6f77093",
            "original_line": 336,
            "original_position": 31,
            "original_start_line": 335,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804962276,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442248785/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-04T21:02:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442248785",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442249348"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442249348"
                }
            },
            "author_association": "MEMBER",
            "body": "Hm, this shows up in the ADVICE section, which isn't right. Maybe we don't need it.\r\n\r\n```suggestion\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T21:01:54Z",
            "diff_hunk": "@@ -324,24 +324,18 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-T' })\n+  local has_setrgbb = vim.fn.stridx(info, ' setrgbb: (string)') ~= -1\n+  local has_setrgbf = vim.fn.stridx(info, ' setrgbf: (string)') ~= -1\n+  if not has_setrgbb and not has_setrgbf then\n+    health.warn(\n+      \"True color support could not be detected. True colors are disabled. |'termguicolors'| won't work properly.\",\n+      {\n+        \"None of the Tc, RGB, or setrgbb/setrgbf capabilities were found in the host terminal's terminfo.\",",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442249348",
            "id": 1442249348,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9vqE",
            "original_commit_id": "3469116265cf7886f87ce87e07e6eecfd6f77093",
            "original_line": 334,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804962276,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442249348/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T21:02:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442249348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26886#discussion_r1442249990"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26886"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442249990"
                }
            },
            "author_association": "MEMBER",
            "body": "Both `setrgbf` and `setrgbb` are required:\r\n\r\n```suggestion\r\n  if not has_setrgbb or not has_setrgbf then\r\n```",
            "commit_id": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
            "created_at": "2024-01-04T21:02:49Z",
            "diff_hunk": "@@ -324,24 +324,18 @@ local function check_tmux()\n   end\n \n   -- check for RGB capabilities\n-  local info = vim.fn.system({ 'tmux', 'display-message', '-p', '#{client_termfeatures}' })\n-  info = vim.split(vim.trim(info), ',', { trimempty = true })\n-  if not vim.list_contains(info, 'RGB') then\n-    local has_rgb = false\n-    if #info == 0 then\n-      -- client_termfeatures may not be supported; fallback to checking show-messages\n-      info = vim.fn.system({ 'tmux', 'show-messages', '-JT' })\n-      has_rgb = info:find(' Tc: (flag) true', 1, true) or info:find(' RGB: (flag) true', 1, true)\n-    end\n-    if not has_rgb then\n-      health.warn(\n-        \"Neither Tc nor RGB capability set. True colors are disabled. |'termguicolors'| won't work properly.\",\n-        {\n-          \"Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:\\nset-option -sa terminal-features ',XXX:RGB'\",\n-          \"For older tmux versions use this instead:\\nset-option -ga terminal-overrides ',XXX:Tc'\",\n-        }\n-      )\n-    end\n+  local info = vim.fn.system({ 'tmux', 'show-messages', '-T' })\n+  local has_setrgbb = vim.fn.stridx(info, ' setrgbb: (string)') ~= -1\n+  local has_setrgbf = vim.fn.stridx(info, ' setrgbf: (string)') ~= -1\n+  if not has_setrgbb and not has_setrgbf then",
            "html_url": "https://github.com/neovim/neovim/pull/26886#discussion_r1442249990",
            "id": 1442249990,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V9v0G",
            "original_commit_id": "3469116265cf7886f87ce87e07e6eecfd6f77093",
            "original_line": 330,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/nvim/health.lua",
            "position": null,
            "pull_request_review_id": 1804968283,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442249990/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T21:02:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1442249990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I hope that this logic is correct.",
            "created_at": "2024-01-04T20:35:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/26886#issuecomment-1877726384",
            "id": 1877726384,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
            "node_id": "IC_kwDOAPphoM5v69Sw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877726384/reactions"
            },
            "updated_at": "2024-01-04T20:35:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877726384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
                "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
                "followers_url": "https://api.github.com/users/tristan957/followers",
                "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
                "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tristan957",
                "id": 11936772,
                "login": "tristan957",
                "node_id": "MDQ6VXNlcjExOTM2Nzcy",
                "organizations_url": "https://api.github.com/users/tristan957/orgs",
                "received_events_url": "https://api.github.com/users/tristan957/received_events",
                "repos_url": "https://api.github.com/users/tristan957/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tristan957"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Wait, does Tc imply RGB support? Seems like it doesn't. I will wait to make more changes however.",
            "created_at": "2024-01-04T20:38:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/26886#issuecomment-1877729564",
            "id": 1877729564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
            "node_id": "IC_kwDOAPphoM5v6-Ec",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877729564/reactions"
            },
            "updated_at": "2024-01-04T20:38:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877729564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
                "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
                "followers_url": "https://api.github.com/users/tristan957/followers",
                "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
                "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tristan957",
                "id": 11936772,
                "login": "tristan957",
                "node_id": "MDQ6VXNlcjExOTM2Nzcy",
                "organizations_url": "https://api.github.com/users/tristan957/orgs",
                "received_events_url": "https://api.github.com/users/tristan957/received_events",
                "repos_url": "https://api.github.com/users/tristan957/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tristan957"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">tmux indicates its RGB support via setrgbb and setrgbf OR Tc. RGB came later. This was causing a problem for the health check because by default in tmux-256color, the RGB or Tc terminal features are not set, so even though Neovim displayed with RGB support, it didn't think it did.\r\n\r\nThis is not quite right. Ultimately, the only thing tmux cares about are `setrgbf` and `setrgbb`. If the host terminal's terminfo entry contains **both** of these capabilities, tmux is done and doesn't care about `Tc` or `RGB`. But if either is missing, then `tmux` will check for `Tc` OR `RGB` in the host terminal's terminfo. If _either_ are found, then tmux enables the `RGB` terminal feature, which sets the `setrgbf` and `setrgbb` capabilities. But the RGB feature is only set if the host terminal does not define `setrgbf` and `setrgbb` itself (which is why https://github.com/neovim/neovim/pull/21839 is not 100% correct).\r\n\r\nSo ultimately the only reliable way to do determine whether or not tmux has detected truecolor support is via the `setrgbf` and `setrgbb` capabilities.",
            "created_at": "2024-01-04T20:40:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/26886#issuecomment-1877732130",
            "id": 1877732130,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
            "node_id": "IC_kwDOAPphoM5v6-si",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877732130/reactions"
            },
            "updated_at": "2024-01-04T20:41:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877732130",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Ok. I should have appropriately committed all your suggestions. I also reworded the commit. Thanks for the review.",
            "created_at": "2024-01-04T20:53:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/26886#issuecomment-1877745864",
            "id": 1877745864,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
            "node_id": "IC_kwDOAPphoM5v7CDI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877745864/reactions"
            },
            "updated_at": "2024-01-04T20:53:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877745864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
                "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
                "followers_url": "https://api.github.com/users/tristan957/followers",
                "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
                "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tristan957",
                "id": 11936772,
                "login": "tristan957",
                "node_id": "MDQ6VXNlcjExOTM2Nzcy",
                "organizations_url": "https://api.github.com/users/tristan957/orgs",
                "received_events_url": "https://api.github.com/users/tristan957/received_events",
                "repos_url": "https://api.github.com/users/tristan957/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tristan957"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks @gpanders for your help!",
            "created_at": "2024-01-04T21:28:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/26886#issuecomment-1877784361",
            "id": 1877784361,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
            "node_id": "IC_kwDOAPphoM5v7Lcp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877784361/reactions"
            },
            "updated_at": "2024-01-04T21:28:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877784361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
                "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
                "followers_url": "https://api.github.com/users/tristan957/followers",
                "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
                "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tristan957",
                "id": 11936772,
                "login": "tristan957",
                "node_id": "MDQ6VXNlcjExOTM2Nzcy",
                "organizations_url": "https://api.github.com/users/tristan957/orgs",
                "received_events_url": "https://api.github.com/users/tristan957/received_events",
                "repos_url": "https://api.github.com/users/tristan957/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tristan957"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Backport failed for `release-0.9`, because it was unable to cherry-pick the commit(s).\n\nPlease cherry-pick the changes locally and resolve any conflicts.\n```bash\ngit fetch origin release-0.9\ngit worktree add -d .worktree/backport-26886-to-release-0.9 origin/release-0.9\ncd .worktree/backport-26886-to-release-0.9\ngit switch --create backport-26886-to-release-0.9\ngit cherry-pick -x 88eb0ad149d353c475455e4013cafa6db2a3f9f1\n```",
            "created_at": "2024-01-04T21:52:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/26886#issuecomment-1877809426",
            "id": 1877809426,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
            "node_id": "IC_kwDOAPphoM5v7RkS",
            "performed_via_github_app": {
                "created_at": "2018-07-30T09:30:17Z",
                "description": "Automate your workflow from idea to production",
                "events": [
                    "branch_protection_rule",
                    "check_run",
                    "check_suite",
                    "create",
                    "delete",
                    "deployment",
                    "deployment_status",
                    "discussion",
                    "discussion_comment",
                    "fork",
                    "gollum",
                    "issues",
                    "issue_comment",
                    "label",
                    "merge_group",
                    "milestone",
                    "page_build",
                    "project",
                    "project_card",
                    "project_column",
                    "public",
                    "pull_request",
                    "pull_request_review",
                    "pull_request_review_comment",
                    "push",
                    "registry_package",
                    "release",
                    "repository",
                    "repository_dispatch",
                    "status",
                    "watch",
                    "workflow_dispatch",
                    "workflow_run"
                ],
                "external_url": "https://help.github.com/en/actions",
                "html_url": "https://github.com/apps/github-actions",
                "id": 15368,
                "name": "GitHub Actions",
                "node_id": "MDM6QXBwMTUzNjg=",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                    "events_url": "https://api.github.com/users/github/events{/privacy}",
                    "followers_url": "https://api.github.com/users/github/followers",
                    "following_url": "https://api.github.com/users/github/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/github",
                    "id": 9919,
                    "login": "github",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                    "organizations_url": "https://api.github.com/users/github/orgs",
                    "received_events_url": "https://api.github.com/users/github/received_events",
                    "repos_url": "https://api.github.com/users/github/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/github"
                },
                "permissions": {
                    "actions": "write",
                    "administration": "read",
                    "checks": "write",
                    "contents": "write",
                    "deployments": "write",
                    "discussions": "write",
                    "issues": "write",
                    "merge_queues": "write",
                    "metadata": "read",
                    "packages": "write",
                    "pages": "write",
                    "pull_requests": "write",
                    "repository_hooks": "write",
                    "repository_projects": "write",
                    "security_events": "write",
                    "statuses": "write",
                    "vulnerability_alerts": "read"
                },
                "slug": "github-actions",
                "updated_at": "2019-12-10T19:04:12Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877809426/reactions"
            },
            "updated_at": "2024-01-04T21:52:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1877809426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/github-actions",
                "id": 41898282,
                "login": "github-actions[bot]",
                "node_id": "MDM6Qm90NDE4OTgyODI=",
                "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/github-actions%5Bbot%5D"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26886/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26886/commits",
    "created_at": "2024-01-04T20:33:33Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26886.diff",
    "draft": false,
    "head": {
        "label": "tristan957:tmux",
        "ref": "tmux",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tristan957/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tristan957/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tristan957/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tristan957/neovim/branches{/branch}",
            "clone_url": "https://github.com/tristan957/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tristan957/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tristan957/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tristan957/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tristan957/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tristan957/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tristan957/neovim/contributors",
            "created_at": "2024-01-04T19:34:46Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tristan957/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tristan957/neovim/downloads",
            "events_url": "https://api.github.com/repos/tristan957/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tristan957/neovim/forks",
            "full_name": "tristan957/neovim",
            "git_commits_url": "https://api.github.com/repos/tristan957/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tristan957/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tristan957/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tristan957/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/tristan957/neovim/hooks",
            "html_url": "https://github.com/tristan957/neovim",
            "id": 739106490,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tristan957/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tristan957/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tristan957/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tristan957/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tristan957/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/tristan957/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tristan957/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tristan957/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOLA3eug",
            "notifications_url": "https://api.github.com/repos/tristan957/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
                "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
                "followers_url": "https://api.github.com/users/tristan957/followers",
                "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
                "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tristan957",
                "id": 11936772,
                "login": "tristan957",
                "node_id": "MDQ6VXNlcjExOTM2Nzcy",
                "organizations_url": "https://api.github.com/users/tristan957/orgs",
                "received_events_url": "https://api.github.com/users/tristan957/received_events",
                "repos_url": "https://api.github.com/users/tristan957/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tristan957"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tristan957/neovim/pulls{/number}",
            "pushed_at": "2024-01-04T22:12:59Z",
            "releases_url": "https://api.github.com/repos/tristan957/neovim/releases{/id}",
            "size": 240495,
            "ssh_url": "git@github.com:tristan957/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tristan957/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tristan957/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tristan957/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tristan957/neovim/subscription",
            "svn_url": "https://github.com/tristan957/neovim",
            "tags_url": "https://api.github.com/repos/tristan957/neovim/tags",
            "teams_url": "https://api.github.com/repos/tristan957/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tristan957/neovim/git/trees{/sha}",
            "updated_at": "2024-01-04T19:34:46Z",
            "url": "https://api.github.com/repos/tristan957/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d82ba45e839dff8b25fe068ace8a07ce9e485914",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
            "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
            "followers_url": "https://api.github.com/users/tristan957/followers",
            "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
            "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tristan957",
            "id": 11936772,
            "login": "tristan957",
            "node_id": "MDQ6VXNlcjExOTM2Nzcy",
            "organizations_url": "https://api.github.com/users/tristan957/orgs",
            "received_events_url": "https://api.github.com/users/tristan957/received_events",
            "repos_url": "https://api.github.com/users/tristan957/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tristan957"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26886",
    "id": 1665265058,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26886",
    "labels": [
        {
            "color": "fef2c0",
            "default": false,
            "description": "",
            "id": 5363823255,
            "name": "backport release-0.9",
            "node_id": "LA_kwDOAPphoM8AAAABP7Vylw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/backport%20release-0.9"
        }
    ],
    "locked": false,
    "merge_commit_sha": "88eb0ad149d353c475455e4013cafa6db2a3f9f1",
    "merged_at": "2024-01-04T21:51:52Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5jQe2i",
    "number": 26886,
    "patch_url": "https://github.com/neovim/neovim/pull/26886.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26886/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d82ba45e839dff8b25fe068ace8a07ce9e485914",
    "title": "fix(health): fix tmux RGB capability detection",
    "updated_at": "2024-01-04T22:12:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26886",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11936772?v=4",
        "events_url": "https://api.github.com/users/tristan957/events{/privacy}",
        "followers_url": "https://api.github.com/users/tristan957/followers",
        "following_url": "https://api.github.com/users/tristan957/following{/other_user}",
        "gists_url": "https://api.github.com/users/tristan957/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tristan957",
        "id": 11936772,
        "login": "tristan957",
        "node_id": "MDQ6VXNlcjExOTM2Nzcy",
        "organizations_url": "https://api.github.com/users/tristan957/orgs",
        "received_events_url": "https://api.github.com/users/tristan957/received_events",
        "repos_url": "https://api.github.com/users/tristan957/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tristan957/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tristan957/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tristan957"
    }
}