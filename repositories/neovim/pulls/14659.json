{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/14659/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14659/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/14659"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/14659"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14659/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/db6523cd130e239eea4cec4d3e60f2323bffe0fc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5250,
            "forks_count": 5250,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1713,
            "open_issues_count": 1713,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-09T01:48:31Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 266306,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 75972,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-09T00:12:02Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 75972,
            "watchers_count": 75972,
            "web_commit_signoff_required": false
        },
        "sha": "27c616d688c73c406726c949a3b664f52d4e4f04",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Had some spare time, so I thought I'd follow up with an initial implementation of https://github.com/neovim/neovim/pull/13664#issuecomment-838185499 to guage some feedback.\r\n\r\nCloses #14524, though plugin authors will need to update things.",
    "closed_at": "2021-06-01T08:05:58Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14659#discussion_r642057599"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/642057599"
                }
            },
            "author_association": "MEMBER",
            "body": "can use `api_object_to_bool`",
            "commit_id": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
            "created_at": "2021-05-30T10:52:49Z",
            "diff_hunk": "@@ -2015,6 +2015,16 @@ bool parse_float_config(Dictionary config, FloatConfig *fconfig, bool reconf,\n         api_set_error(err, kErrorTypeValidation,\n                       \"Invalid value of 'style' key\");\n       }\n+    } else if (strequal(key, \"noautocmd\") && new_win) {\n+      if (val.type == kObjectTypeInteger) {",
            "html_url": "https://github.com/neovim/neovim/pull/14659#discussion_r642057599",
            "id": 642057599,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjA1NzU5OQ==",
            "original_commit_id": "1d22861f3ff8e6810cb8b29615adda317c4a2961",
            "original_line": 2019,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/api/private/helpers.c",
            "position": null,
            "pull_request_review_id": 671816589,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642057599/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-30T10:52:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642057599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14659#discussion_r642058106"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/642058106"
                }
            },
            "author_association": "MEMBER",
            "body": "could use `switch_win_noblock` always and instead `if (noautocmd) { block_autocmds(); }` and same on the other side.",
            "commit_id": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
            "created_at": "2021-05-30T10:55:59Z",
            "diff_hunk": "@@ -570,6 +570,44 @@ static void cmd_with_count(char *cmd, char_u *bufp, size_t bufsize,\n   }\n }\n \n+void win_set_buf(Window window, Buffer buffer, bool noautocmd, Error *err)\n+{\n+  win_T *win = find_window_by_handle(window, err), *save_curwin = curwin;\n+  buf_T *buf = find_buffer_by_handle(buffer, err);\n+  tabpage_T *tab = win_find_tabpage(win), *save_curtab = curtab;\n+\n+  if (!win || !buf) {\n+    return;\n+  }\n+\n+  int result\n+      = noautocmd",
            "html_url": "https://github.com/neovim/neovim/pull/14659#discussion_r642058106",
            "id": 642058106,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjA1ODEwNg==",
            "original_commit_id": "1d22861f3ff8e6810cb8b29615adda317c4a2961",
            "original_line": 584,
            "original_position": 15,
            "original_start_line": null,
            "path": "src/nvim/window.c",
            "position": null,
            "pull_request_review_id": 671816904,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642058106/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-30T10:56:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642058106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14659#discussion_r642063076"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/642063076"
                }
            },
            "author_association": "MEMBER",
            "body": "Would you like me to update the other Boolean keys to use that in another commit?",
            "commit_id": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
            "created_at": "2021-05-30T11:37:54Z",
            "diff_hunk": "@@ -2015,6 +2015,16 @@ bool parse_float_config(Dictionary config, FloatConfig *fconfig, bool reconf,\n         api_set_error(err, kErrorTypeValidation,\n                       \"Invalid value of 'style' key\");\n       }\n+    } else if (strequal(key, \"noautocmd\") && new_win) {\n+      if (val.type == kObjectTypeInteger) {",
            "html_url": "https://github.com/neovim/neovim/pull/14659#discussion_r642063076",
            "id": 642063076,
            "in_reply_to_id": 642057599,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjA2MzA3Ng==",
            "original_commit_id": "1d22861f3ff8e6810cb8b29615adda317c4a2961",
            "original_line": 2019,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/api/private/helpers.c",
            "position": null,
            "pull_request_review_id": 671820516,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642063076/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-30T11:37:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642063076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14659#discussion_r642063782"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/642063782"
                }
            },
            "author_association": "MEMBER",
            "body": "yes if you want to :)",
            "commit_id": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
            "created_at": "2021-05-30T11:43:24Z",
            "diff_hunk": "@@ -2015,6 +2015,16 @@ bool parse_float_config(Dictionary config, FloatConfig *fconfig, bool reconf,\n         api_set_error(err, kErrorTypeValidation,\n                       \"Invalid value of 'style' key\");\n       }\n+    } else if (strequal(key, \"noautocmd\") && new_win) {\n+      if (val.type == kObjectTypeInteger) {",
            "html_url": "https://github.com/neovim/neovim/pull/14659#discussion_r642063782",
            "id": 642063782,
            "in_reply_to_id": 642057599,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjA2Mzc4Mg==",
            "original_commit_id": "1d22861f3ff8e6810cb8b29615adda317c4a2961",
            "original_line": 2019,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/api/private/helpers.c",
            "position": null,
            "pull_request_review_id": 671821015,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642063782/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-30T11:43:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642063782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14659#discussion_r642065521"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/642065521"
                }
            },
            "author_association": "MEMBER",
            "body": "As this defaults to `true`, should I pass `true` as the 3rd arg here?",
            "commit_id": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
            "created_at": "2021-05-30T11:56:55Z",
            "diff_hunk": "@@ -1968,26 +1968,11 @@ bool parse_float_config(Dictionary config, FloatConfig *fconfig, bool reconf,\n       }\n       has_bufpos = true;\n     } else if (!strcmp(key, \"external\")) {\n-      if (val.type == kObjectTypeInteger) {\n-        fconfig->external = val.data.integer;\n-      } else if (val.type == kObjectTypeBoolean) {\n-        fconfig->external = val.data.boolean;\n-      } else {\n-        api_set_error(err, kErrorTypeValidation,\n-                      \"'external' key must be Boolean\");\n-        return false;\n-      }\n-      has_external = fconfig->external;\n+      has_external = fconfig->external\n+          = api_object_to_bool(val, \"'external' key\", false, err);\n     } else if (!strcmp(key, \"focusable\")) {\n-      if (val.type == kObjectTypeInteger) {\n-        fconfig->focusable = val.data.integer;\n-      } else if (val.type == kObjectTypeBoolean) {\n-        fconfig->focusable = val.data.boolean;\n-      } else {\n-        api_set_error(err, kErrorTypeValidation,\n-                      \"'focusable' key must be Boolean\");\n-        return false;\n-      }\n+      fconfig->focusable\n+          = api_object_to_bool(val, \"'focusable' key\", false, err);",
            "html_url": "https://github.com/neovim/neovim/pull/14659#discussion_r642065521",
            "id": 642065521,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjA2NTUyMQ==",
            "original_commit_id": "5435e595880d8dd8c7ff3e2fe0f487d16a85a4a8",
            "original_line": 1975,
            "original_position": 36,
            "original_start_line": null,
            "path": "src/nvim/api/private/helpers.c",
            "position": null,
            "pull_request_review_id": 671822267,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642065521/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-30T11:56:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642065521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14659#discussion_r642066614"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14659"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/642066614"
                }
            },
            "author_association": "MEMBER",
            "body": "yes.",
            "commit_id": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
            "created_at": "2021-05-30T12:06:46Z",
            "diff_hunk": "@@ -1968,26 +1968,11 @@ bool parse_float_config(Dictionary config, FloatConfig *fconfig, bool reconf,\n       }\n       has_bufpos = true;\n     } else if (!strcmp(key, \"external\")) {\n-      if (val.type == kObjectTypeInteger) {\n-        fconfig->external = val.data.integer;\n-      } else if (val.type == kObjectTypeBoolean) {\n-        fconfig->external = val.data.boolean;\n-      } else {\n-        api_set_error(err, kErrorTypeValidation,\n-                      \"'external' key must be Boolean\");\n-        return false;\n-      }\n-      has_external = fconfig->external;\n+      has_external = fconfig->external\n+          = api_object_to_bool(val, \"'external' key\", false, err);\n     } else if (!strcmp(key, \"focusable\")) {\n-      if (val.type == kObjectTypeInteger) {\n-        fconfig->focusable = val.data.integer;\n-      } else if (val.type == kObjectTypeBoolean) {\n-        fconfig->focusable = val.data.boolean;\n-      } else {\n-        api_set_error(err, kErrorTypeValidation,\n-                      \"'focusable' key must be Boolean\");\n-        return false;\n-      }\n+      fconfig->focusable\n+          = api_object_to_bool(val, \"'focusable' key\", false, err);",
            "html_url": "https://github.com/neovim/neovim/pull/14659#discussion_r642066614",
            "id": 642066614,
            "in_reply_to_id": 642065521,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MjA2NjYxNA==",
            "original_commit_id": "5435e595880d8dd8c7ff3e2fe0f487d16a85a4a8",
            "original_line": 1975,
            "original_position": 36,
            "original_start_line": null,
            "path": "src/nvim/api/private/helpers.c",
            "position": null,
            "pull_request_review_id": 671823059,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642066614/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-05-30T12:06:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/642066614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I've rebased in case this is still wanted after #14531.\n\nIf the original behavior of `nvim_open_win` is preferred as to not break plugins, I could instead turn this into a (yes)`autocmd` option that unblocks autocommands instead? ",
            "created_at": "2021-06-01T02:32:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-851761413",
            "id": 851761413,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTc2MTQxMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/851761413/reactions"
            },
            "updated_at": "2021-06-01T02:33:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/851761413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@seandewar no the present state of this PR is correct. Floating windows should behave like ordinary windows by default, if a plugin expects a different behaviour it should explicitly opt-in to that. ",
            "created_at": "2021-06-01T07:56:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-851912799",
            "id": 851912799,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg1MTkxMjc5OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/851912799/reactions"
            },
            "updated_at": "2021-06-01T07:56:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/851912799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Note that this needed a change with jedi-vim's (WIP) call-signatures branch, where a floating window is used for displaying call signatures: https://github.com/davidhalter/jedi-vim/pull/652/commits/e38372ffa2ff64713f62ae233c4be01cf13cca43.\r\n\r\nThe error/issue showed itself however only when using https://github.com/numirias/semshi, since it was confused about the additional BufLeave autocommand that was triggered due to jedi-vim showing the call signatures.\r\n\r\nI think this is the expected behavior in general, and only wanted to leave this for reference.",
            "created_at": "2021-06-22T12:01:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-865923088",
            "id": 865923088,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "MDEyOklzc3VlQ29tbWVudDg2NTkyMzA4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/865923088/reactions"
            },
            "updated_at": "2021-06-22T12:01:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/865923088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@seandewar  Is it intended that `noautocmd=true` doesn't block `WinNew`? I was expecting it to behave like `:noautocmd split ...`, which blocks every autocmd, including `WinNew`.\r\n\r\nThe current version for quick reference:\r\nhttps://github.com/neovim/neovim/blob/15a2dd9e963784123273ec830e82e24ecea4ad0b/src/nvim/api/win_config.c#L294-L303",
            "created_at": "2024-04-05T15:00:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040029517",
            "id": 2040029517,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55mGFN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040029517/reactions"
            },
            "updated_at": "2024-04-05T15:00:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040029517",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yup, it's supposed to block only autocommands fired from setting the current buffer for the window (to address breakages in plugins after #13664).\r\n\r\n(I recently re-worded the documentation for that option to try and make that clearer, as there's been a bit of confusion in the past regarding it, like with how it was used to block `WinNew` in #25096.)",
            "created_at": "2024-04-05T15:03:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040035975",
            "id": 2040035975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55mHqH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040035975/reactions"
            },
            "updated_at": "2024-04-05T15:11:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040035975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think not blocking `WinNew` makes it difficult to use `WinNew`, and probably renders it useless.\r\n\r\nFor example, I want to highlight some stuff on window with `matchadd` (which is window-local) based on the state stored in a buffer variable. When `:split`-ing (without argument), I would like to duplicate the highlights for the new window. A natural choice would be to setup a `WinNew` autocmd that reads the buffer variable and calls `matchadd`.\r\n\r\nBut the problem is that since `WinNew` is fired before setting the buffer for the window, the `WinNew` autocmd cannot know what buffer the new window is meant for. In other words, `WinNew` can't distinguish `:split` and `:split another_buffer`. One solution would be to do `matchadd` in `WinNew` and clear it in the `BufEnter` event when the window displays another buffer. This works in most cases, but it won't work if the autocmd has some non-undoable side effect. But even worse, this suboptimal solution is not even possible for `nvim_open_win(another_buffer, false, {noautocmd=true})`, because it blocks the undoing `BufEnter`. I can't control `nvim_open_win`, because it is invoked by another plugin (nvim-cmp's custom popup menu, which is reasonable use case of `noautocmd=true`).\r\n\r\nAn alternative solution would be to use `WinEnter` instead of of `WinNew`. But this is suboptimal as it runs whenever the focus moves to another window, which is why (I believe) `WinNew` exists.\r\n\r\nSo I believe it would be better to block `WinNew` unless there is a reasonable use case for blocking `Buf*` but not `WinEnter`.\r\n",
            "created_at": "2024-04-05T15:34:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040109483",
            "id": 2040109483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55mZmr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040109483/reactions"
            },
            "updated_at": "2024-04-05T15:34:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040109483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah, thanks for letting me know about that use-case.\r\n\r\nMy concern is that blocking `WinNew` also implies that we _might_ want to block `WinEnter` too when `enter = true` (and `noautocmd = true`), as that event also fires before the buffer is set, which may also cause issues for `WinEnter` autocommands like your `WinNew` one that is similarly sensitive to which buffer is being shown in the window when `noautocmd = true`; however, #13664 did not affect the behaviour of `WinEnter`, which did trigger before that PR, so that behaviour ought not to change for `noautocmd`.\r\n\r\nI think the general problem here is that there's a mismatch between what's expected from `noautocmd`; the original intention here was a way to opt-in to the pre-#13664 behaviour, as that change broke a hefty amount of plugins at the time (looking back at it, maybe introducing `noautocmd` was a mistake :see_no_evil:). If plugins like cmp prefer to instead open a \"temporary\" window with minimal side-effects like a popup, something like #19832 would be better suited instead (that can be done today via saving/restoring `&eventignore`, or via `:noautocmd` if used from Vim script, but it's not very convenient).\r\n\r\nThat said, there may be an argument for blocking `WinNew` anyway given that it didn't fire at all before #25096 (which may imply blocking it is more compatible with the pre-#13664 behaviour); I don't have much of an opinion there. (Any thoughts @bfredl?)",
            "created_at": "2024-04-05T17:08:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040278882",
            "id": 2040278882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55nC9i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040278882/reactions"
            },
            "updated_at": "2024-04-05T17:11:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040278882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A lot of text here. The intention of `noautocmd` is indeed to block autocmds. The documentation might only mention some specific autocmds as only some autocmds was fired when the documentation was written.\r\n\r\nI do not know what about `WinNew` that makes is special so it should not be blocked while the others are. (I mean fundamentally, as a designed API, not as discourse about \"what plugins are we currently breaking by accident\")",
            "created_at": "2024-04-05T17:59:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040348712",
            "id": 2040348712,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55nUAo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040348712/reactions"
            },
            "updated_at": "2024-04-05T17:59:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040348712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks. I'm OK with opening a PR making `noautocmd` 100% consistent and blocking _all_ events from `nvim_open_win`, which would include `WinEnter` which wasn't blocked before (even if some existing scripts in the wild misbehave as a result of that :innocent:).",
            "created_at": "2024-04-05T18:31:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040403227",
            "id": 2040403227,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55nhUb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040403227/reactions"
            },
            "updated_at": "2024-04-05T18:31:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040403227",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "you could easily enter as a follow-up API call if you want that to happen outside of the `noautocmd`. ",
            "created_at": "2024-04-05T18:53:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040446761",
            "id": 2040446761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55nr8p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040446761/reactions"
            },
            "updated_at": "2024-04-05T18:53:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040446761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yup, and that has the added benefit of the target buffer being set at that point.",
            "created_at": "2024-04-05T18:55:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/14659#issuecomment-2040449012",
            "id": 2040449012,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
            "node_id": "IC_kwDOAPphoM55nsf0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040449012/reactions"
            },
            "updated_at": "2024-04-05T18:55:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2040449012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14659/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/14659/commits",
    "created_at": "2021-05-28T18:29:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/14659.diff",
    "draft": false,
    "head": {
        "label": "seandewar:api-win-buf-noautocmd",
        "ref": "api-win-buf-noautocmd",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/seandewar/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/seandewar/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/seandewar/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/seandewar/neovim/branches{/branch}",
            "clone_url": "https://github.com/seandewar/neovim.git",
            "collaborators_url": "https://api.github.com/repos/seandewar/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/seandewar/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/seandewar/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/seandewar/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/seandewar/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/seandewar/neovim/contributors",
            "created_at": "2020-10-20T16:45:01Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/seandewar/neovim/deployments",
            "description": "[Contribution Fork] Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/seandewar/neovim/downloads",
            "events_url": "https://api.github.com/repos/seandewar/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/seandewar/neovim/forks",
            "full_name": "seandewar/neovim",
            "git_commits_url": "https://api.github.com/repos/seandewar/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/seandewar/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/seandewar/neovim/git/tags{/sha}",
            "git_url": "git://github.com/seandewar/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/seandewar/neovim/hooks",
            "html_url": "https://github.com/seandewar/neovim",
            "id": 305773353,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/seandewar/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/seandewar/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/seandewar/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/seandewar/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/seandewar/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/seandewar/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/seandewar/neovim/merges",
            "milestones_url": "https://api.github.com/repos/seandewar/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMDU3NzMzNTM=",
            "notifications_url": "https://api.github.com/repos/seandewar/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
                "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
                "followers_url": "https://api.github.com/users/seandewar/followers",
                "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
                "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/seandewar",
                "id": 6256228,
                "login": "seandewar",
                "node_id": "MDQ6VXNlcjYyNTYyMjg=",
                "organizations_url": "https://api.github.com/users/seandewar/orgs",
                "received_events_url": "https://api.github.com/users/seandewar/received_events",
                "repos_url": "https://api.github.com/users/seandewar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/seandewar"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/seandewar/neovim/pulls{/number}",
            "pushed_at": "2024-04-05T20:55:18Z",
            "releases_url": "https://api.github.com/repos/seandewar/neovim/releases{/id}",
            "size": 260604,
            "ssh_url": "git@github.com:seandewar/neovim.git",
            "stargazers_count": 2,
            "stargazers_url": "https://api.github.com/repos/seandewar/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/seandewar/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/seandewar/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/seandewar/neovim/subscription",
            "svn_url": "https://github.com/seandewar/neovim",
            "tags_url": "https://api.github.com/repos/seandewar/neovim/tags",
            "teams_url": "https://api.github.com/repos/seandewar/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/seandewar/neovim/git/trees{/sha}",
            "updated_at": "2023-01-12T23:27:58Z",
            "url": "https://api.github.com/repos/seandewar/neovim",
            "visibility": "public",
            "watchers": 2,
            "watchers_count": 2,
            "web_commit_signoff_required": false
        },
        "sha": "db6523cd130e239eea4cec4d3e60f2323bffe0fc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
            "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
            "followers_url": "https://api.github.com/users/seandewar/followers",
            "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
            "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/seandewar",
            "id": 6256228,
            "login": "seandewar",
            "node_id": "MDQ6VXNlcjYyNTYyMjg=",
            "organizations_url": "https://api.github.com/users/seandewar/orgs",
            "received_events_url": "https://api.github.com/users/seandewar/received_events",
            "repos_url": "https://api.github.com/users/seandewar/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/seandewar"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/14659",
    "id": 656909409,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14659",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "2faa1c361ba54b3c1f20771397f7b48ac4386cdc",
    "merged_at": "2021-06-01T08:05:58Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjU2OTA5NDA5",
    "number": 14659,
    "patch_url": "https://github.com/neovim/neovim/pull/14659.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/14659/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/db6523cd130e239eea4cec4d3e60f2323bffe0fc",
    "title": "api(nvim_open_win): add \"noautocmd\" option",
    "updated_at": "2024-04-05T18:55:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/14659",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6256228?v=4",
        "events_url": "https://api.github.com/users/seandewar/events{/privacy}",
        "followers_url": "https://api.github.com/users/seandewar/followers",
        "following_url": "https://api.github.com/users/seandewar/following{/other_user}",
        "gists_url": "https://api.github.com/users/seandewar/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/seandewar",
        "id": 6256228,
        "login": "seandewar",
        "node_id": "MDQ6VXNlcjYyNTYyMjg=",
        "organizations_url": "https://api.github.com/users/seandewar/orgs",
        "received_events_url": "https://api.github.com/users/seandewar/received_events",
        "repos_url": "https://api.github.com/users/seandewar/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/seandewar/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/seandewar/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/seandewar"
    }
}