{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/14306/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14306/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/14306"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/14306"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14306/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14306"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d540c121e506dce4f371b76378fa4f5c99e3832b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5201,
            "forks_count": 5201,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1728,
            "open_issues_count": 1728,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-12T23:38:13Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 252813,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73720,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-13T01:34:21Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73720,
            "watchers_count": 73720,
            "web_commit_signoff_required": false
        },
        "sha": "470c450fd258ded6200305d28b35e7243520595f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Will resolve https://github.com/neovim/neovim/issues/12836. Ready for comments now.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14306#discussion_r780513591"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14306"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/780513591"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is out of date with the new handler signature.",
            "commit_id": "d540c121e506dce4f371b76378fa4f5c99e3832b",
            "created_at": "2022-01-07T20:33:16Z",
            "diff_hunk": "@@ -384,6 +384,12 @@ local make_call_hierarchy_handler = function(direction)\n   end\n end\n \n+--see https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_foldingRange\n+M['textDocument/foldingRange'] = function(_, _, result, _, bufnr, _)",
            "html_url": "https://github.com/neovim/neovim/pull/14306#discussion_r780513591",
            "id": 780513591,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4uhbE3",
            "original_commit_id": "c05e6438972f6b39fa811a69b3a18e5cb93cde99",
            "original_line": 388,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": null,
            "pull_request_review_id": 846973377,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14306",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/780513591/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-07T20:33:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/780513591",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/14306#discussion_r780527237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/14306"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/780527237"
                }
            },
            "author_association": "NONE",
            "body": "Should be fixed now.",
            "commit_id": "d540c121e506dce4f371b76378fa4f5c99e3832b",
            "created_at": "2022-01-07T21:02:09Z",
            "diff_hunk": "@@ -384,6 +384,12 @@ local make_call_hierarchy_handler = function(direction)\n   end\n end\n \n+--see https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_foldingRange\n+M['textDocument/foldingRange'] = function(_, _, result, _, bufnr, _)",
            "html_url": "https://github.com/neovim/neovim/pull/14306#discussion_r780527237",
            "id": 780527237,
            "in_reply_to_id": 780513591,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4uheaF",
            "original_commit_id": "c05e6438972f6b39fa811a69b3a18e5cb93cde99",
            "original_line": 388,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": null,
            "pull_request_review_id": 846992804,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/14306",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/780527237/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-07T21:02:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/780527237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "I have a few questions:\r\n\r\n1. What is the desired way in which the user should interact with this feature? Currently, `vim.lsp.buf.document_fold()` issues a `textDocument/foldingRange` request, which upon completion sets the `foldexpr` and `foldmethod` to update the folds. The function `vim.lsp.buf.foldexpr()` exposes the data from the last such request in the form required for `foldexpr`. This means that setting `foldexpr` to `vim.lsp.buf.foldexpr()` directly is relatively useless since it does not issue a request to receive the updated folds, and also `vim.lsp.buf.document_fold()` blindly overrides the window-local user settings of `foldexpr`/`foldmethod`. For me this leads to the experience I would expect, at least for `vim.lsp.buf.document_fold()`, but there might be better ways to handle this.\r\n2. https://github.com/prabirshrestha/vim-lsp/blob/master/autoload/lsp/ui/vim/folding.vim uses textprops to remember the locations of the lines at the time the request was issued, in case the user makes changes before the request is completed. I have not implemented this; should I? Personally I just bind `vim.lsp.buf.document_fold()` to an `autocmd InsertLeave` and don't care about temporarily incorrect folds since they are inevitable anyways.\r\n3. Is it necessary to deal with the possibility that the request is used on multiple servers, returning different fold ranges?",
            "created_at": "2021-04-07T10:00:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-814782974",
            "id": 814782974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDc4Mjk3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814782974/reactions"
            },
            "updated_at": "2021-04-07T10:00:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814782974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just out of curiosity, doesn't this have the same problem as we at nvim-treesitter have with tree-sitter folding, that we can only fold on LSP/tree-sitter buffers but foldexpr/foldmethod is a window option and the window might switch to a non-LSP/tree-sitter buffer.",
            "created_at": "2021-04-07T10:39:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-814806855",
            "id": 814806855,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDgwNjg1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814806855/reactions"
            },
            "updated_at": "2021-04-07T10:39:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814806855",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "NONE",
            "body": "The fold information is stored with the buffer number of the buffer the `document_fold` method was called on. The options are then set for all windows associated with the buffer, but the `foldexpr` only returns non-zero values if there are entries for the current buffer. Unless I'm missing something, the only problem arising from this is that when the user switches to a different buffer, the `foldmethod` is still set to `\"expr\"` rather than what it was before. Or can it happen somehow that `vim.lsp.buf` is not available for some newly opened buffer?",
            "created_at": "2021-04-07T11:26:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-814834484",
            "id": 814834484,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDgzNDQ4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814834484/reactions"
            },
            "updated_at": "2021-04-07T11:26:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814834484",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> foldmethod is still set to \"expr\" rather than what it was before.\r\n\r\nThis is the issue I was referring to. But this is rather an inherent problem of `foldmethod`",
            "created_at": "2021-04-07T11:29:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-814837186",
            "id": 814837186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNDgzNzE4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814837186/reactions"
            },
            "updated_at": "2021-04-07T11:29:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/814837186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Couldn't we add an autocommand or something to change the fold method based on buffer id? I guess the solution would be to make foldmethod buffer local in the long term.",
            "created_at": "2021-04-07T16:28:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-815051752",
            "id": 815051752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTA1MTc1Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/815051752/reactions"
            },
            "updated_at": "2021-04-07T16:28:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/815051752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "What should that look like exactly? One possibility would be to add an option for the user to make these options generally window local or buffer local. This would be compatible and keep the behavior consistent, but also a somewhat strange option to have. Or do you mean that it should only be buffer local if LSP folding is used? One could also add \"lsp\" as a possible value to `foldmethod`, in which case `foldexpr` should be ignored (and therefore the user setting of `foldexpr` is preserved) and the user would trigger folding by `setlocal foldmethod=lsp`, so that control over the locality of these options is again in their hand. It would also eliminate the need to expose the LSP `foldexpr`, which should not be used directly anyways, and one could integrate the invocations of the LSP folding procedure more tightly.",
            "created_at": "2021-04-08T10:02:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-815630838",
            "id": 815630838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNTYzMDgzOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/815630838/reactions"
            },
            "updated_at": "2021-04-08T10:02:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/815630838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "NONE",
            "body": "So what should I do next; should I explicitly request a review and if so, how?",
            "created_at": "2021-04-10T07:04:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-817091310",
            "id": 817091310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzA5MTMxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/817091310/reactions"
            },
            "updated_at": "2021-04-10T07:04:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/817091310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "NONE",
            "body": "Maybe since @tjdevries is assigned to the issue, can you review my code or otherwise direct me?",
            "created_at": "2021-04-15T10:11:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-820306842",
            "id": 820306842,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgyMDMwNjg0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/820306842/reactions"
            },
            "updated_at": "2021-04-15T10:11:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/820306842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm ok merging this with the limitations of foldmethod in mind, but I think we should create a new tracking issue for a buffer local implementation of foldmethod. We could hypothetically unmap foldexpr on BufLeave. Basically the logic would be:\r\n\r\nif BufLeave, set up an autocmd on BufEnter that unmaps the foldexpr for the window if the same language server is not attached to the window.",
            "created_at": "2022-01-07T20:43:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1007728088",
            "id": 1007728088,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM48ELXY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007728088/reactions"
            },
            "updated_at": "2022-01-07T20:43:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007728088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "@mjlbach I'm done then, could you merge it please? I've been happily using this feature for almost a year now but it would be great if I could have this without having to keep maintaining my fork.",
            "created_at": "2022-01-07T21:37:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1007758142",
            "id": 1007758142,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM48ESs-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007758142/reactions"
            },
            "updated_at": "2022-01-07T21:37:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007758142",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Let me tag Mathias for review, I think the logic looks ok. I'm a little bit concerned about:\r\n* the aforementioned conflict between windows, buffers, foldexpr (and my possible workaround)\r\n* multi-server conflicts\r\n* the caching mechanism that reset foldexpr on each evaluation",
            "created_at": "2022-01-07T21:39:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1007759065",
            "id": 1007759065,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM48ES7Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007759065/reactions"
            },
            "updated_at": "2022-01-07T21:39:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1007759065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Let me tag Mathias for review, I think the logic looks ok. I'm a little bit concerned about:\r\n> \r\n> * the aforementioned conflict between windows, buffers, foldexpr (and my possible workaround)\r\n\r\nCouldn't the user put your workaround into their `init.vim` for now if they are unhappy with a window-local `foldmethod`? And what would be the benefit of solving this conflict before integrating this feature given that the conflict persists without the feature?\r\n> * multi-server conflicts\r\n\r\nIs there a preferred way for how I should deal with such conflicts? \r\n> * the caching mechanism that reset foldexpr on each evaluation\r\n\r\nDo you have an alternative suggestion for how to achieve the folds being updated once the response is received? How would you feel about the aforementioned possibility of an `lsp` option to `foldmethod`, which would ignore `foldexpr` and continuously and asynchronously update the folds? ",
            "created_at": "2022-01-15T15:44:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1013703862",
            "id": 1013703862,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM48a-S2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013703862/reactions"
            },
            "updated_at": "2022-01-15T15:44:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013703862",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I think at the very least this would require some tests.\r\n\r\nCould you point me to where I would implement such tests? I can't find the tests for the other LSP handlers in the codebase.\r\n> But I'm also not sure if it is good to add 4 new public methods to the API. Ideally it would only expose the foldexpr and keep the remainder private.\r\n\r\nI think the user should be able to explicitly trigger document folding requests via `vim.lsp.buf.document_fold()`—I'd rather keep `vim.lsp.buf.foldexpr()` private since it's not automatically updated. I was also under the impression that `vim.lsp.util` contains many public functions that would be considered implementation details, so I didn't think providing those utilities would be problematic. Are you suggesting I move the logic from there into `vim.lsp.handlers`, from where I am currently calling these functions?\r\n\r\n> Not entirely sure how to make that happen. `foldexpr` could keep a cache internally and make a sync request the first time + register some autocmds to keep it updated async afterwards. Or depending on how often the foldexpr gets evaluated maybe it is even feasible to make sync requests all the time if the buffer got dirty inbetween?\r\n\r\nIn my experience making sync requests with `foldexpr` is way too slow for large files. I will look into implementing your first suggestion though.\r\n> And I think we should consider adding a buflocal foldexpr first to solve the mentioned issues with the window based foldexpr.\r\n\r\nSee my previous comment. Does this mean no extensions or changes to any part of neovim's folding mechanisms should be suggested before this issue is solved or in what way is this PR particularly affected by it?",
            "created_at": "2022-01-15T16:09:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1013708122",
            "id": 1013708122,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM48a_Va",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013708122/reactions"
            },
            "updated_at": "2022-01-15T16:09:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013708122",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Could you point me to where I would implement such tests? I can't find the tests for the other LSP handlers in the codebase.\r\n\r\nMost of the tests for the lsp module are in `./test/functional/plugin/lsp_spec.lua `\r\n\r\n> I think the user should be able to explicitly trigger document folding requests via vim.lsp.buf.document_fold()—I'd rather keep vim.lsp.buf.foldexpr() private since it's not automatically updated\r\n\r\nI'm not sure if it wouldn't be surprising that  `document_fold()` implicitly changes the foldexpr as a side effect.\r\n\r\n>  I was also under the impression that vim.lsp.util contains many public functions that would be considered implementation details, so I didn't think providing those utilities would be problematic\r\n\r\nThis is currently the case to some degree, but we're trying to reduce that as people end up using this functions and are then unhappy if we later change them.\r\n\r\n\r\n> In my experience making sync requests with foldexpr is way too slow for large files. I will look into implementing your first suggestion though.\r\n\r\nI suspected as much. That was the reason why I mentioned the caching.\r\n\r\n> Does this mean no extensions or changes to any part of neovim's folding mechanisms should be suggested before this issue is solved or in what way is this PR particularly affected by it?\r\n\r\nNo it doesn't mean that - but it means that we shouldn't merge something that we know has flaws which in the worst case may require breaking changes later on.\r\nWe should first lay the groundwork to solve these flaws.\r\n",
            "created_at": "2022-02-04T16:00:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1030122018",
            "id": 1030122018,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM49Zmoi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1030122018/reactions"
            },
            "updated_at": "2022-02-04T16:00:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1030122018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there a tracking issue for making foldexpr/foldmethod buffer-local? I'd possibly be interested in trying to implement this. Seems like it is the main blocker for this PR",
            "created_at": "2024-02-02T22:03:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1924770210",
            "id": 1924770210,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM5yuami",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1924770210/reactions"
            },
            "updated_at": "2024-02-02T22:04:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1924770210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13141438?v=4",
                "events_url": "https://api.github.com/users/tom-anders/events{/privacy}",
                "followers_url": "https://api.github.com/users/tom-anders/followers",
                "following_url": "https://api.github.com/users/tom-anders/following{/other_user}",
                "gists_url": "https://api.github.com/users/tom-anders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tom-anders",
                "id": 13141438,
                "login": "tom-anders",
                "node_id": "MDQ6VXNlcjEzMTQxNDM4",
                "organizations_url": "https://api.github.com/users/tom-anders/orgs",
                "received_events_url": "https://api.github.com/users/tom-anders/received_events",
                "repos_url": "https://api.github.com/users/tom-anders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tom-anders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tom-anders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tom-anders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "foldexpr is already window local and there are no plans to change this. Note window local options can be local to a specific buffer in a specific window (via `setlocal`) so they are already buffer local.",
            "created_at": "2024-02-02T23:47:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1924912607",
            "id": 1924912607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM5yu9Xf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1924912607/reactions"
            },
            "updated_at": "2024-02-02T23:47:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1924912607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> foldexpr is already window local and there are no plans to change this. Note window local options can be local to a specific buffer in a specific window (via `setlocal`) so they are already buffer local.\r\n\r\nAh okay, then I misunderstood @mjlbach's comment here:\r\n\r\n> I'm ok merging this with the limitations of foldmethod in mind, but I think we should create a new tracking issue for a buffer local implementation of foldmethod.\r\n\r\n@w4v3 are you still working on this PR? Or should someone else take over possibly? ",
            "created_at": "2024-02-03T08:03:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1925205780",
            "id": 1925205780,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM5ywE8U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925205780/reactions"
            },
            "updated_at": "2024-02-03T08:03:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925205780",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13141438?v=4",
                "events_url": "https://api.github.com/users/tom-anders/events{/privacy}",
                "followers_url": "https://api.github.com/users/tom-anders/followers",
                "following_url": "https://api.github.com/users/tom-anders/following{/other_user}",
                "gists_url": "https://api.github.com/users/tom-anders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tom-anders",
                "id": 13141438,
                "login": "tom-anders",
                "node_id": "MDQ6VXNlcjEzMTQxNDM4",
                "organizations_url": "https://api.github.com/users/tom-anders/orgs",
                "received_events_url": "https://api.github.com/users/tom-anders/received_events",
                "repos_url": "https://api.github.com/users/tom-anders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tom-anders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tom-anders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tom-anders"
            }
        },
        {
            "author_association": "NONE",
            "body": "> @w4v3 are you still working on this PR? Or should someone else take over possibly?\r\n\r\nI'm happy to work on getting this merged (i.e. resolving conflicts, writing tests, and a bit of restructuring) but I also thought that the window-local nature of foldexpr would stand in the way of this PR. I suppose I'll finish it up and then see what the maintainers decide.",
            "created_at": "2024-02-03T08:34:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1925217477",
            "id": 1925217477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM5ywHzF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925217477/reactions"
            },
            "updated_at": "2024-02-03T08:34:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925217477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        },
        {
            "author_association": "NONE",
            "body": "As a reference, the plugin nvim-ufo [implements](https://github.com/kevinhwang91/nvim-ufo/blob/main/lua/ufo/provider/lsp/init.lua) support for this capability.",
            "created_at": "2024-02-03T14:29:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1925343049",
            "id": 1925343049,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM5ywmdJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925343049/reactions"
            },
            "updated_at": "2024-02-03T14:29:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1925343049",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/84649544?v=4",
                "events_url": "https://api.github.com/users/igorlfs/events{/privacy}",
                "followers_url": "https://api.github.com/users/igorlfs/followers",
                "following_url": "https://api.github.com/users/igorlfs/following{/other_user}",
                "gists_url": "https://api.github.com/users/igorlfs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/igorlfs",
                "id": 84649544,
                "login": "igorlfs",
                "node_id": "MDQ6VXNlcjg0NjQ5NTQ0",
                "organizations_url": "https://api.github.com/users/igorlfs/orgs",
                "received_events_url": "https://api.github.com/users/igorlfs/received_events",
                "repos_url": "https://api.github.com/users/igorlfs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/igorlfs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/igorlfs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/igorlfs"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm once again ready for comments. I've implemented the following changes:\r\n* only `foldexpr()` and `refresh_folds()` are now public; `foldexpr()` only returns the cashed fold levels, and `refresh_folds()` issues the requests to the server\r\n* the response handler does not change `foldmethod`/`foldexpr`\r\n* the logic calculating the foldlevels is quite different now and tries to do what `:fold`/`zf` do in case of overlapping folds (note that this makes the outcome dependent on the order of the FoldingRange entries in the server response)\r\n* added tests, let me know if they're in the right place and sufficient (`test/functional/plugin/lsp/utils_spec.lua`)\r\n\r\nSince the implementation does not touch `foldmethod`/`foldexpr`, updating the folds may require forcing the recomputation of the `foldexpr` using `zx`. I think this is as unobtrusive as it gets. `foldexpr()` does not have side-effects and `refresh_fold()` can be bound by the user to autocmds. Of course, we could also have `foldexpr()` set up those autocmds as @mfussenegger suggested, although this removes control over how often requests are issued from the user, which I personally find undesirable.\r\n\r\nWe could also issue the request inside `foldexpr()`, but this seems to perform quite poorly. The nvim-ufo plugin pointed out by @igorlfs implements this functionality using `foldmethod=manual` and issuing `:fold` commands from the server responses. This way one can avoid the quirks coming with `foldexpr`. Should we do it like this as well perhaps?\r\n",
            "created_at": "2024-02-10T20:09:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/14306#issuecomment-1937109946",
            "id": 1937109946,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
            "node_id": "IC_kwDOAPphoM5zdfO6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937109946/reactions"
            },
            "updated_at": "2024-02-10T20:09:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937109946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14306/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/14306/commits",
    "created_at": "2021-04-06T21:45:27Z",
    "diff_url": "https://github.com/neovim/neovim/pull/14306.diff",
    "draft": false,
    "head": {
        "label": "w4v3:lsp-folding",
        "ref": "lsp-folding",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/w4v3/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/w4v3/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/w4v3/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/w4v3/neovim/branches{/branch}",
            "clone_url": "https://github.com/w4v3/neovim.git",
            "collaborators_url": "https://api.github.com/repos/w4v3/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/w4v3/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/w4v3/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/w4v3/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/w4v3/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/w4v3/neovim/contributors",
            "created_at": "2021-04-06T18:30:39Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/w4v3/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/w4v3/neovim/downloads",
            "events_url": "https://api.github.com/repos/w4v3/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/w4v3/neovim/forks",
            "full_name": "w4v3/neovim",
            "git_commits_url": "https://api.github.com/repos/w4v3/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/w4v3/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/w4v3/neovim/git/tags{/sha}",
            "git_url": "git://github.com/w4v3/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/w4v3/neovim/hooks",
            "html_url": "https://github.com/w4v3/neovim",
            "id": 355292239,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/w4v3/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/w4v3/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/w4v3/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/w4v3/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/w4v3/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/w4v3/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/w4v3/neovim/merges",
            "milestones_url": "https://api.github.com/repos/w4v3/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTUyOTIyMzk=",
            "notifications_url": "https://api.github.com/repos/w4v3/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
                "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
                "followers_url": "https://api.github.com/users/w4v3/followers",
                "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
                "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/w4v3",
                "id": 27856735,
                "login": "w4v3",
                "node_id": "MDQ6VXNlcjI3ODU2NzM1",
                "organizations_url": "https://api.github.com/users/w4v3/orgs",
                "received_events_url": "https://api.github.com/users/w4v3/received_events",
                "repos_url": "https://api.github.com/users/w4v3/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/w4v3"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/w4v3/neovim/pulls{/number}",
            "pushed_at": "2024-02-10T19:52:13Z",
            "releases_url": "https://api.github.com/repos/w4v3/neovim/releases{/id}",
            "size": 246520,
            "ssh_url": "git@github.com:w4v3/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/w4v3/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/w4v3/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/w4v3/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/w4v3/neovim/subscription",
            "svn_url": "https://github.com/w4v3/neovim",
            "tags_url": "https://api.github.com/repos/w4v3/neovim/tags",
            "teams_url": "https://api.github.com/repos/w4v3/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/w4v3/neovim/git/trees{/sha}",
            "updated_at": "2021-04-06T18:30:40Z",
            "url": "https://api.github.com/repos/w4v3/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d540c121e506dce4f371b76378fa4f5c99e3832b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
            "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
            "followers_url": "https://api.github.com/users/w4v3/followers",
            "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
            "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/w4v3",
            "id": 27856735,
            "login": "w4v3",
            "node_id": "MDQ6VXNlcjI3ODU2NzM1",
            "organizations_url": "https://api.github.com/users/w4v3/orgs",
            "received_events_url": "https://api.github.com/users/w4v3/received_events",
            "repos_url": "https://api.github.com/users/w4v3/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/w4v3"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/14306",
    "id": 610188488,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14306",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e4be51442591a7fe821cccf24c4c94601c639225",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjEwMTg4NDg4",
    "number": 14306,
    "patch_url": "https://github.com/neovim/neovim/pull/14306.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
            "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
            "followers_url": "https://api.github.com/users/mjlbach/followers",
            "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
            "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mjlbach",
            "id": 13316262,
            "login": "mjlbach",
            "node_id": "MDQ6VXNlcjEzMzE2MjYy",
            "organizations_url": "https://api.github.com/users/mjlbach/orgs",
            "received_events_url": "https://api.github.com/users/mjlbach/received_events",
            "repos_url": "https://api.github.com/users/mjlbach/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mjlbach"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/14306/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d540c121e506dce4f371b76378fa4f5c99e3832b",
    "title": "Add textDocument/foldingRange capability to LSP client",
    "updated_at": "2024-02-11T19:06:19Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/14306",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/27856735?v=4",
        "events_url": "https://api.github.com/users/w4v3/events{/privacy}",
        "followers_url": "https://api.github.com/users/w4v3/followers",
        "following_url": "https://api.github.com/users/w4v3/following{/other_user}",
        "gists_url": "https://api.github.com/users/w4v3/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/w4v3",
        "id": 27856735,
        "login": "w4v3",
        "node_id": "MDQ6VXNlcjI3ODU2NzM1",
        "organizations_url": "https://api.github.com/users/w4v3/orgs",
        "received_events_url": "https://api.github.com/users/w4v3/received_events",
        "repos_url": "https://api.github.com/users/w4v3/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/w4v3/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/w4v3/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/w4v3"
    }
}