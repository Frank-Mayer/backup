{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31066/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31066/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31066"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31066"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31066/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/bdd6e200ffa8037acc13ba0458232b92d4891dfa"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5704,
            "forks_count": 5704,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1834,
            "open_issues_count": 1834,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-18T23:26:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 295086,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83399,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-19T02:35:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83399,
            "watchers_count": 83399,
            "web_commit_signoff_required": false
        },
        "sha": "be8648f345aed5e403251990721918c8302be760",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: The way option scopes currently work is inflexible and does not allow for nested option scopes or easily finding the value of an option at any arbitrary scope without having to do long handwritten switch-case statements like in `get_varp()`. `.indir` is also confusing and redundant since option indices for each scope can be autogenerated.\r\n\r\nSolution: Expand option scopes in such a way that an option can support any amount of scopes using a set of scope flags, similarly to how it's already done for option types. Also make options contain information about its index at each scope it supports. This allows for massively simplifying `get_varp()` and `get_varp_scope()` in the future by just using a struct for options at each scope. This would be done by creating a table that stores the offset of an option's variable at a scope by using the option's index at that scope as a key. This PR also autogenerates enums for option indices at each scope to remove the need for `.indir` entirely, and also to allow easily iterating over options all options that support any scope.\r\n\r\nRef: #29314",
    "closed_at": "2024-11-16T20:56:17Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1844869978"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844869978"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  return opt_idx != kOptInvalid && !is_power_of_two(options[opt_idx].scope_flags);\r\n```",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T02:26:43Z",
            "diff_hunk": "@@ -3299,9 +3296,71 @@ bool is_option_hidden(OptIndex opt_idx)\n          : (options[opt_idx].immutable && options[opt_idx].var == &options[opt_idx].def_val.data);\n }\n \n+/// Check if option is multitype (supports multiple types).\n+static bool option_is_multitype(OptIndex opt_idx)\n+{\n+  const OptTypeFlags type_flags = get_option(opt_idx)->type_flags;\n+  assert(type_flags != 0);\n+  return !is_power_of_two(type_flags);\n+}\n+\n+/// Check if option supports a specific type.\n+bool option_has_type(OptIndex opt_idx, OptValType type)\n+{\n+  // Ensure that type flags variable can hold all types.\n+  STATIC_ASSERT(kOptValTypeSize <= sizeof(OptTypeFlags) * 8,\n+                \"Option type_flags cannot fit all option types\");\n+  // Ensure that the type is valid before accessing type_flags.\n+  assert(type > kOptValTypeNil && type < kOptValTypeSize);\n+  // Bitshift 1 by the value of type to get the type's corresponding flag, and check if it's set in\n+  // the type_flags bit field.\n+  return get_option(opt_idx)->type_flags & (1 << type);\n+}\n+\n+/// Check if option supports a specific scope.\n+bool option_has_scope(OptIndex opt_idx, OptScope scope)\n+{\n+  // Ensure that scope flags variable can hold all scopes.\n+  STATIC_ASSERT(kOptScopeSize <= sizeof(OptScopeFlags) * 8,\n+                \"Option scope_flags cannot fit all option scopes\");\n+  // Ensure that the scope is valid before accessing scope_flags.\n+  assert(scope >= kOptScopeGlobal && scope < kOptScopeSize);\n+  // Bitshift 1 by the value of scope to get the scope's corresponding flag, and check if it's set\n+  // in the scope_flags bit field.\n+  return get_option(opt_idx)->scope_flags & (1 << scope);\n+}\n+\n+/// Check if option is global-local.\n static inline bool option_is_global_local(OptIndex opt_idx)\n {\n-  return opt_idx == kOptInvalid ? false : (options[opt_idx].indir & PV_BOTH);\n+  // Global-local options have at least two types, so their type flag cannot be a power of two.\n+  return opt_idx == kOptInvalid ? false : !is_power_of_two(options[opt_idx].scope_flags);",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1844869978",
            "id": 1844869978,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t9nta",
            "original_commit_id": "a2c4b59e432fa031efa079c441524b87da4e9272",
            "original_line": 3337,
            "original_position": 235,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2440241094,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844869978/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-16T02:27:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844869978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1844870203"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844870203"
                }
            },
            "author_association": "MEMBER",
            "body": "ditto",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T02:26:51Z",
            "diff_hunk": "@@ -3299,9 +3296,71 @@ bool is_option_hidden(OptIndex opt_idx)\n          : (options[opt_idx].immutable && options[opt_idx].var == &options[opt_idx].def_val.data);\n }\n \n+/// Check if option is multitype (supports multiple types).\n+static bool option_is_multitype(OptIndex opt_idx)\n+{\n+  const OptTypeFlags type_flags = get_option(opt_idx)->type_flags;\n+  assert(type_flags != 0);\n+  return !is_power_of_two(type_flags);\n+}\n+\n+/// Check if option supports a specific type.\n+bool option_has_type(OptIndex opt_idx, OptValType type)\n+{\n+  // Ensure that type flags variable can hold all types.\n+  STATIC_ASSERT(kOptValTypeSize <= sizeof(OptTypeFlags) * 8,\n+                \"Option type_flags cannot fit all option types\");\n+  // Ensure that the type is valid before accessing type_flags.\n+  assert(type > kOptValTypeNil && type < kOptValTypeSize);\n+  // Bitshift 1 by the value of type to get the type's corresponding flag, and check if it's set in\n+  // the type_flags bit field.\n+  return get_option(opt_idx)->type_flags & (1 << type);\n+}\n+\n+/// Check if option supports a specific scope.\n+bool option_has_scope(OptIndex opt_idx, OptScope scope)\n+{\n+  // Ensure that scope flags variable can hold all scopes.\n+  STATIC_ASSERT(kOptScopeSize <= sizeof(OptScopeFlags) * 8,\n+                \"Option scope_flags cannot fit all option scopes\");\n+  // Ensure that the scope is valid before accessing scope_flags.\n+  assert(scope >= kOptScopeGlobal && scope < kOptScopeSize);\n+  // Bitshift 1 by the value of scope to get the scope's corresponding flag, and check if it's set\n+  // in the scope_flags bit field.\n+  return get_option(opt_idx)->scope_flags & (1 << scope);\n+}\n+\n+/// Check if option is global-local.\n static inline bool option_is_global_local(OptIndex opt_idx)\n {\n-  return opt_idx == kOptInvalid ? false : (options[opt_idx].indir & PV_BOTH);\n+  // Global-local options have at least two types, so their type flag cannot be a power of two.\n+  return opt_idx == kOptInvalid ? false : !is_power_of_two(options[opt_idx].scope_flags);\n+}\n+\n+/// Check if option only supports global scope.\n+static inline bool option_is_global_only(OptIndex opt_idx)\n+{\n+  // For an option to be global-only, it has to only have a single scope, which means the scope\n+  // flags must be a power of two, and it must have the global scope.\n+  return opt_idx == kOptInvalid ? false\n+                                : (is_power_of_two(options[opt_idx].scope_flags)\n+                                   && option_has_scope(opt_idx, kOptScopeGlobal));",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1844870203",
            "id": 1844870203,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t9nw7",
            "original_commit_id": "a2c4b59e432fa031efa079c441524b87da4e9272",
            "original_line": 3347,
            "original_position": 245,
            "original_start_line": 3345,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2440241094,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844870203/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-16T02:27:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844870203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1844870372"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844870372"
                }
            },
            "author_association": "MEMBER",
            "body": "ditto",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T02:27:00Z",
            "diff_hunk": "@@ -3299,9 +3296,71 @@ bool is_option_hidden(OptIndex opt_idx)\n          : (options[opt_idx].immutable && options[opt_idx].var == &options[opt_idx].def_val.data);\n }\n \n+/// Check if option is multitype (supports multiple types).\n+static bool option_is_multitype(OptIndex opt_idx)\n+{\n+  const OptTypeFlags type_flags = get_option(opt_idx)->type_flags;\n+  assert(type_flags != 0);\n+  return !is_power_of_two(type_flags);\n+}\n+\n+/// Check if option supports a specific type.\n+bool option_has_type(OptIndex opt_idx, OptValType type)\n+{\n+  // Ensure that type flags variable can hold all types.\n+  STATIC_ASSERT(kOptValTypeSize <= sizeof(OptTypeFlags) * 8,\n+                \"Option type_flags cannot fit all option types\");\n+  // Ensure that the type is valid before accessing type_flags.\n+  assert(type > kOptValTypeNil && type < kOptValTypeSize);\n+  // Bitshift 1 by the value of type to get the type's corresponding flag, and check if it's set in\n+  // the type_flags bit field.\n+  return get_option(opt_idx)->type_flags & (1 << type);\n+}\n+\n+/// Check if option supports a specific scope.\n+bool option_has_scope(OptIndex opt_idx, OptScope scope)\n+{\n+  // Ensure that scope flags variable can hold all scopes.\n+  STATIC_ASSERT(kOptScopeSize <= sizeof(OptScopeFlags) * 8,\n+                \"Option scope_flags cannot fit all option scopes\");\n+  // Ensure that the scope is valid before accessing scope_flags.\n+  assert(scope >= kOptScopeGlobal && scope < kOptScopeSize);\n+  // Bitshift 1 by the value of scope to get the scope's corresponding flag, and check if it's set\n+  // in the scope_flags bit field.\n+  return get_option(opt_idx)->scope_flags & (1 << scope);\n+}\n+\n+/// Check if option is global-local.\n static inline bool option_is_global_local(OptIndex opt_idx)\n {\n-  return opt_idx == kOptInvalid ? false : (options[opt_idx].indir & PV_BOTH);\n+  // Global-local options have at least two types, so their type flag cannot be a power of two.\n+  return opt_idx == kOptInvalid ? false : !is_power_of_two(options[opt_idx].scope_flags);\n+}\n+\n+/// Check if option only supports global scope.\n+static inline bool option_is_global_only(OptIndex opt_idx)\n+{\n+  // For an option to be global-only, it has to only have a single scope, which means the scope\n+  // flags must be a power of two, and it must have the global scope.\n+  return opt_idx == kOptInvalid ? false\n+                                : (is_power_of_two(options[opt_idx].scope_flags)\n+                                   && option_has_scope(opt_idx, kOptScopeGlobal));\n+}\n+\n+/// Check if option only supports window scope.\n+static inline bool option_is_window_local(OptIndex opt_idx)\n+{\n+  // For an option to be window-local it has to only have a single scope, which means the scope\n+  // flags must be a power of two, and it must have the window scope.\n+  return opt_idx == kOptInvalid ? false\n+                                : (is_power_of_two(options[opt_idx].scope_flags)\n+                                   && option_has_scope(opt_idx, kOptScopeWindow));",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1844870372",
            "id": 1844870372,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t9nzk",
            "original_commit_id": "a2c4b59e432fa031efa079c441524b87da4e9272",
            "original_line": 3357,
            "original_position": 255,
            "original_start_line": 3355,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2440241094,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844870372/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-16T02:27:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1844870372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1845176699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845176699"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                          kOptScopeBuf, buf);\r\n```",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T18:23:44Z",
            "diff_hunk": "@@ -1004,10 +1004,10 @@ Buffer nvim_create_buf(Boolean listed, Boolean scratch, Error *err)\n   buf_copy_options(buf, BCO_ENTER | BCO_NOHELP);\n \n   if (scratch) {\n-    set_option_direct_for(kOptBufhidden, STATIC_CSTR_AS_OPTVAL(\"hide\"), OPT_LOCAL, 0, kOptReqBuf,\n-                          buf);\n-    set_option_direct_for(kOptBuftype, STATIC_CSTR_AS_OPTVAL(\"nofile\"), OPT_LOCAL, 0, kOptReqBuf,\n-                          buf);\n+    set_option_direct_for(kOptBufhidden, STATIC_CSTR_AS_OPTVAL(\"hide\"), OPT_LOCAL, 0,\n+                          kOptScopeBuffer, buf);",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1845176699",
            "id": 1845176699,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t-yl7",
            "original_commit_id": "11df907513088ea9e14b7b9fe1465f92f274a966",
            "original_line": 1008,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/api/vim.c",
            "position": null,
            "pull_request_review_id": 2440784301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845176699/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-16T18:23:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845176699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1845177151"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177151"
                }
            },
            "author_association": "MEMBER",
            "body": "`:help dev-naming`\r\n\r\n```suggestion\r\n    *req_scope = kOptScopeWin;\r\n```",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T18:24:05Z",
            "diff_hunk": "@@ -39,14 +39,14 @@ static int validate_option_value_args(Dict(option) *opts, char *name, OptIndex *\n     }\n   }\n \n-  *req_scope = kOptReqGlobal;\n+  *req_scope = kOptScopeGlobal;\n \n   if (filetype != NULL && HAS_KEY_X(opts, filetype)) {\n     *filetype = opts->filetype.data;\n   }\n \n   if (HAS_KEY_X(opts, win)) {\n-    *req_scope = kOptReqWin;\n+    *req_scope = kOptScopeWindow;",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1845177151",
            "id": 1845177151,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t-ys_",
            "original_commit_id": "11df907513088ea9e14b7b9fe1465f92f274a966",
            "original_line": 49,
            "original_position": 24,
            "original_start_line": null,
            "path": "src/nvim/api/options.c",
            "position": null,
            "pull_request_review_id": 2440784571,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177151/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-16T18:24:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177151",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1845177272"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177272"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  LastSet wo_script_ctx[kWinOptCount];  // SCTXs for window-local options\r\n```",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T18:24:19Z",
            "diff_hunk": "@@ -206,7 +206,7 @@ typedef struct {\n   OptInt wo_winbl;\n #define w_p_winbl w_onebuf_opt.wo_winbl  // 'winblend'\n \n-  LastSet wo_script_ctx[WV_COUNT];        // SCTXs for window-local options\n+  LastSet wo_script_ctx[kWindowOptCount];  // SCTXs for window-local options",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1845177272",
            "id": 1845177272,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t-yu4",
            "original_commit_id": "11df907513088ea9e14b7b9fe1465f92f274a966",
            "original_line": 209,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer_defs.h",
            "position": null,
            "pull_request_review_id": 2440784596,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177272/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-16T18:24:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177272",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1845177367"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177367"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  LastSet b_p_script_ctx[kBufOptCount];  // SCTXs for buffer-local options\r\n```",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T18:24:30Z",
            "diff_hunk": "@@ -512,7 +512,7 @@ struct file_buffer {\n   // or contents of the file being edited.\n   bool b_p_initialized;                 // set when options initialized\n \n-  LastSet b_p_script_ctx[BV_COUNT];     // SCTXs for buffer-local options\n+  LastSet b_p_script_ctx[kBufferOptCount];  // SCTXs for buffer-local options",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1845177367",
            "id": 1845177367,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t-ywX",
            "original_commit_id": "11df907513088ea9e14b7b9fe1465f92f274a966",
            "original_line": 515,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/buffer_defs.h",
            "position": null,
            "pull_request_review_id": 2440784617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177367/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-16T18:24:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845177367",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31066#discussion_r1845180068"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31066"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845180068"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  valid_scopes = { 'global', 'buf', 'win' },\r\n```",
            "commit_id": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
            "created_at": "2024-11-16T18:28:40Z",
            "diff_hunk": "@@ -81,6 +80,8 @@ end\n -- luacheck: ignore 621\n return {\n   cstr = cstr,\n+  --- @type string[]\n+  valid_scopes = { 'global', 'buffer', 'window' },",
            "html_url": "https://github.com/neovim/neovim/pull/31066#discussion_r1845180068",
            "id": 1845180068,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5t-zak",
            "original_commit_id": "11df907513088ea9e14b7b9fe1465f92f274a966",
            "original_line": 84,
            "original_position": 13,
            "original_start_line": null,
            "path": "src/nvim/options.lua",
            "position": null,
            "pull_request_review_id": 2440785075,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845180068/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-16T18:28:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1845180068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31066/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31066/commits",
    "created_at": "2024-11-03T17:29:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31066.diff",
    "draft": false,
    "head": {
        "label": "famiu:refactor/options/scope",
        "ref": "refactor/options/scope",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/famiu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/famiu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/famiu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/famiu/neovim/branches{/branch}",
            "clone_url": "https://github.com/famiu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/famiu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/famiu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/famiu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/famiu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/famiu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/famiu/neovim/contributors",
            "created_at": "2021-10-11T04:58:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/famiu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/famiu/neovim/downloads",
            "events_url": "https://api.github.com/repos/famiu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/famiu/neovim/forks",
            "full_name": "famiu/neovim",
            "git_commits_url": "https://api.github.com/repos/famiu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/famiu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/famiu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/famiu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/famiu/neovim/hooks",
            "html_url": "https://github.com/famiu/neovim",
            "id": 415783665,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/famiu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/famiu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/famiu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/famiu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/famiu/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/famiu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/famiu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/famiu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGMha8Q",
            "notifications_url": "https://api.github.com/repos/famiu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/famiu/neovim/pulls{/number}",
            "pushed_at": "2024-11-16T21:14:09Z",
            "releases_url": "https://api.github.com/repos/famiu/neovim/releases{/id}",
            "size": 289272,
            "ssh_url": "git@github.com:famiu/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/famiu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/famiu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/famiu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/famiu/neovim/subscription",
            "svn_url": "https://github.com/famiu/neovim",
            "tags_url": "https://api.github.com/repos/famiu/neovim/tags",
            "teams_url": "https://api.github.com/repos/famiu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/famiu/neovim/git/trees{/sha}",
            "updated_at": "2024-11-16T20:55:06Z",
            "url": "https://api.github.com/repos/famiu/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "bdd6e200ffa8037acc13ba0458232b92d4891dfa",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31066",
    "id": 2159725071,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31066",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 3010934759,
            "name": "diff",
            "node_id": "MDU6TGFiZWwzMDEwOTM0NzU5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diff"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "locked": false,
    "merge_commit_sha": "29ded889579a9d590e8ea885a9a402ff4bae87be",
    "merged_at": "2024-11-16T20:56:17Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6AusoP",
    "number": 31066,
    "patch_url": "https://github.com/neovim/neovim/pull/31066.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31066/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/bdd6e200ffa8037acc13ba0458232b92d4891dfa",
    "title": "refactor(options): remove `.indir` and redesign option scopes ",
    "updated_at": "2024-11-16T20:56:54Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31066",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu",
        "user_view_type": "public"
    }
}