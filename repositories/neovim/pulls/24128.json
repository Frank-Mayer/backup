{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24128/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24128/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24128"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24128"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24128/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a18dfda4a296f8a5887339818b929ffe8ae6d05a"
        }
    },
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5142,
            "forks_count": 5142,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1740,
            "open_issues_count": 1740,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T01:33:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247954,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72793,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-16T01:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72793,
            "watchers_count": 72793,
            "web_commit_signoff_required": false
        },
        "sha": "be74807eef13ff8c90d55cf8b22b01d6d33b1641",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "I'm trying to implement the textDocument/diagnostic capability introduced in LSP 3.17.0 (https://github.com/neovim/neovim/issues/22838)\r\n\r\nThe client initiates a request for diagnostics to the server, instead of having the server push diagnostics to the client.\r\n\r\nI took a lot of the code from the inlayHints implementation since that also seemed to poll the server in similar way.\r\n\r\nCurrent status:\r\n* pull diagnostics are enabled when servers advertise the `diagnosticProvider` capability\r\n\r\nTODO:\r\n- [x] Tests\r\n- [x] Refactor common code (e.g. timer related stuff) between inlay_hints and diagnostic\r\n- [x] Docs\r\n- [x] Should it be enabled by default? Figure out how to get it enabled when `ruby-lsp` attaches. Does this go into lspconfig?\r\n- [x] Not sure if the clear function is doing the right thing. I couldn't figure out how to get a client id.\r\n- [ ] File issues for follow-up:\r\n  - [x] Support dynamic registration, and using identifier from `[DiagnosticRegistrationOptions](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticRegistrationOptions)` for namespace determination - https://github.com/neovim/neovim/issues/24412\r\n  - [x] Switch `inlay_hint` to use `LspNotify` - https://github.com/neovim/neovim/pull/24411\r\n  - [ ] Expose namespaces under `lsp.Client` as per [this comment](https://github.com/neovim/neovim/pull/24128#discussion_r1253360435)  below.",
    "closed_at": "2023-07-20T07:03:48Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1239362075"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1239362075"
                }
            },
            "author_association": "MEMBER",
            "body": "Given that `vim.lsp.diagnostic` is already public I don't think we'll want to have this here in `buf` with 3 new additional public functions in `vim.lsp.diagnostic` (enable, disable, toggle).\r\n\r\nI think diagnostic should be enabled by default given that current push diagnostics already are.\r\nThat means we may not need a new public entry point at all, but let users do the (display) toggle via `vim.diagnostic`\r\n\r\n(Downside is that users won't be able to prevent the requests from happening if they really do not want diagnostic, but diagnostic are required for other functionality like code-actions, so I think they'll just have to pay the costs - if the server isn't pushing diagnostics anyways)",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-23T06:16:06Z",
            "diff_hunk": "@@ -811,4 +811,19 @@ function M.inlay_hint(bufnr, enable)\n   end\n end\n \n+--- Enable/disable/toggle diagnostics for a buffer\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.diagnostic(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1239362075",
            "id": 1239362075,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5J3yob",
            "original_commit_id": "2d622f739e16a504753b679093d25d614d571211",
            "original_line": 817,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 1494458493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1239362075/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-23T06:20:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1239362075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1239364111"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1239364111"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we'll need to use the `identifier` from [DiagnosticOption](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticOptions) as an additional distinction.\r\n\r\nSee also https://github.com/microsoft/language-server-protocol/issues/1743\r\nOtherwise this may conflict with the pushed diagnostics",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-23T06:19:11Z",
            "diff_hunk": "@@ -236,6 +262,96 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n end\n \n+---@private\n+local function resolve_bufnr(bufnr)\n+  return bufnr > 0 and bufnr or api.nvim_get_current_buf()\n+end\n+\n+--- Refresh diagnostics for a buffer\n+---\n+---@param opts (nil|table) Optional arguments\n+---  - bufnr (integer, default: 0): Buffer whose hints to refresh\n+---  - only_visible (boolean, default: false): Whether to only refresh hints for the visible regions of the buffer\n+---\n+---@private\n+function M.refresh(opts)\n+  opts = opts or {}\n+  local bufnr = resolve_bufnr(opts.bufnr or 0)\n+  local bufstate = bufstates[bufnr]\n+  if not (bufstate and bufstate.enabled) then\n+    return\n+  end\n+  local only_visible = opts.only_visible or false\n+  local buffer_windows = {}\n+  for _, winid in ipairs(api.nvim_list_wins()) do\n+    if api.nvim_win_get_buf(winid) == bufnr then\n+      table.insert(buffer_windows, winid)\n+    end\n+  end\n+  for _, window in ipairs(buffer_windows) do\n+    local first = vim.fn.line('w0', window)\n+    local last = vim.fn.line('w$', window)\n+    local params = {\n+      textDocument = util.make_text_document_params(bufnr),\n+      range = {\n+        start = { line = first - 1, character = 0 },\n+        ['end'] = { line = last, character = 0 },\n+      },\n+    }\n+    vim.lsp.buf_request(bufnr, 'textDocument/diagnostic', params)\n+  end\n+  if not only_visible then\n+    local params = {\n+      textDocument = util.make_text_document_params(bufnr),\n+      range = {\n+        start = { line = 0, character = 0 },\n+        ['end'] = { line = api.nvim_buf_line_count(bufnr), character = 0 },\n+      },\n+    }\n+    vim.lsp.buf_request(bufnr, 'textDocument/diagnostic', params)\n+  end\n+end\n+\n+function M.on_diagnostic(_, result, ctx, config)\n+  local client_id = ctx.client_id\n+  local uri = ctx.params.textDocument.uri\n+  local fname = vim.uri_to_fname(uri)\n+  if result.kind == \"unchanged\" then\n+    return\n+  end\n+\n+  local diagnostics = result.items\n+  if #diagnostics == 0 and vim.fn.bufexists(fname) == 0 then\n+    return\n+  end\n+  local bufnr = vim.fn.bufadd(fname)\n+\n+  if not bufnr then\n+    return\n+  end\n+\n+  client_id = get_client_id(client_id)\n+\n+  local namespace = M.get_namespace(client_id)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1239364111",
            "id": 1239364111,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5J3zIP",
            "original_commit_id": "2d622f739e16a504753b679093d25d614d571211",
            "original_line": 342,
            "original_position": 110,
            "original_start_line": 333,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1494458493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1239364111/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-06-23T06:20:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1239364111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1240796577"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1240796577"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In this case, would it make sense to set up the the textDocument/diagnostic handlers within `vim.lsp.buf_attach_client` ?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-24T13:59:26Z",
            "diff_hunk": "@@ -811,4 +811,19 @@ function M.inlay_hint(bufnr, enable)\n   end\n end\n \n+--- Enable/disable/toggle diagnostics for a buffer\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@param enable (boolean|nil) true/false to enable/disable, nil to toggle\n+function M.diagnostic(bufnr, enable)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1240796577",
            "id": 1240796577,
            "in_reply_to_id": 1239362075,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5J9Q2h",
            "original_commit_id": "2d622f739e16a504753b679093d25d614d571211",
            "original_line": 817,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": null,
            "pull_request_review_id": 1496634175,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1240796577/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-24T13:59:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1240796577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1247984666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247984666"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks too specialized. Why can't the existing `vim.lsp.diagnostic.get_namespace()` be enhanced , e.g.\r\n\r\n    get_namespace({client_id}, {lspmethod}) \r\n\r\nSee also https://github.com/neovim/neovim/pull/24128#discussion_r1239364111",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T15:15:39Z",
            "diff_hunk": "@@ -1306,11 +1307,48 @@ Lua module: vim.lsp.diagnostic                                *lsp-diagnostic*\n \n get_namespace({client_id})                *vim.lsp.diagnostic.get_namespace()*\n     Get the diagnostic namespace associated with an LSP client\n-    |vim.diagnostic|.\n+    |vim.diagnostic| for publishDiagnostics\n \n     Parameters: ~\n       • {client_id}  (integer) The id of the LSP client\n \n+                                     *vim.lsp.diagnostic.get_pull_namespace()*\n+get_pull_namespace({client_id})\n+    Get the diagnostic namespace associated with an LSP client\n+    |vim.diagnostic| for pull diagnostics",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1247984666",
            "id": 1247984666,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KYrwa",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1318,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1507392477,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247984666/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-02T08:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247984666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1247989542"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247989542"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We could make it accept a flag to choose between the push / pull namespaces? Would that be better?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T15:20:17Z",
            "diff_hunk": "@@ -1306,11 +1307,48 @@ Lua module: vim.lsp.diagnostic                                *lsp-diagnostic*\n \n get_namespace({client_id})                *vim.lsp.diagnostic.get_namespace()*\n     Get the diagnostic namespace associated with an LSP client\n-    |vim.diagnostic|.\n+    |vim.diagnostic| for publishDiagnostics\n \n     Parameters: ~\n       • {client_id}  (integer) The id of the LSP client\n \n+                                     *vim.lsp.diagnostic.get_pull_namespace()*\n+get_pull_namespace({client_id})\n+    Get the diagnostic namespace associated with an LSP client\n+    |vim.diagnostic| for pull diagnostics",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1247989542",
            "id": 1247989542,
            "in_reply_to_id": 1247984666,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KYs8m",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1318,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1507400592,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247989542/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-30T15:20:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247989542",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1247992050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247992050"
                }
            },
            "author_association": "MEMBER",
            "body": "is there at typo? also please start a LSP root item,\r\n\r\n```\r\n• LSP\r\n  • Implemented LSP inlay hints...\r\n  • Implemented LSP pull diag...",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T15:22:30Z",
            "diff_hunk": "@@ -101,6 +101,9 @@ The following new APIs and features were added.\n • Implemented LSP inlay hints: |vim.lsp.buf.inlay_hint()|\n   https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_inlayHint\n \n+• Implemented pull diagnostic textDocument/diagnos: |vim.lsp.diagnostic.on_diagnostic()|",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1247992050",
            "id": 1247992050,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KYtjy",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 104,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1507405173,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247992050/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-30T15:22:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1247992050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248044901"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248044901"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```\r\n\r\nI think this would be misleading. Most servers send diagnostics via push.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T16:05:41Z",
            "diff_hunk": "@@ -1704,6 +1705,14 @@ function lsp.start_client(config)\n       end\n     end)\n \n+    -- Enable pull diagnostics for the buffer if the server supports it.\n+    if vim.tbl_get(client.server_capabilities, 'diagnosticProvider') then\n+      log.debug('Enabling diagnostics for buffer', bufnr, client.name)\n+      lsp.diagnostic.enable(bufnr)\n+    else\n+      log.debug('Server does not support diagnostics', client.name)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248044901",
            "id": 1248044901,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KY6dl",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1713,
            "original_position": 17,
            "original_start_line": 1712,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1507488400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248044901/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-06-30T16:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248044901",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248045941"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248045941"
                }
            },
            "author_association": "MEMBER",
            "body": "This should probably use `supports_method` instead, to cover the dynamic capability.\r\nAnd maybe run this within `lsp._set_defaults`, because that's already called when dynamic capabilities are updated. ",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T16:06:44Z",
            "diff_hunk": "@@ -1704,6 +1705,14 @@ function lsp.start_client(config)\n       end\n     end)\n \n+    -- Enable pull diagnostics for the buffer if the server supports it.\n+    if vim.tbl_get(client.server_capabilities, 'diagnosticProvider') then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248045941",
            "id": 1248045941,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KY6t1",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1709,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1507488400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248045941/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-30T16:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248045941",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248046320"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248046320"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction M._refresh(opts)\r\n```\r\n\r\nOr `local function`, does it need to be exposed?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T16:07:13Z",
            "diff_hunk": "@@ -236,6 +281,126 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n end\n \n+---@private\n+local function resolve_bufnr(bufnr)\n+  return bufnr > 0 and bufnr or api.nvim_get_current_buf()\n+end\n+\n+--- Refresh diagnostics for a buffer\n+---\n+---@param opts (nil|table) Optional arguments\n+---  - bufnr (integer, default: 0): Buffer whose hints to refresh\n+---  - only_visible (boolean, default: false): Whether to only refresh diagnostics for the visible regions of the buffer\n+---\n+---@private\n+function M.refresh(opts)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248046320",
            "id": 1248046320,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KY6zw",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 296,
            "original_position": 88,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1507488400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248046320/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-30T16:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248046320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248047145"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248047145"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction M._enable(bufnr)\r\n```",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T16:08:08Z",
            "diff_hunk": "@@ -294,4 +459,57 @@ function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)\n   return diagnostic_vim_to_lsp(vim.diagnostic.get(bufnr, opts))\n end\n \n+---@private\n+local function make_request(request_bufnr)\n+  reset_timer(request_bufnr)\n+  M.refresh({ bufnr = request_bufnr })\n+end\n+\n+--@private\n+local function clear(bufnr)\n+  local namespaces = vim.tbl_keys(_client_pull_namespaces)\n+  for _, namespace in ipairs(namespaces) do\n+    vim.diagnostic.reset(namespace, bufnr)\n+  end\n+end\n+\n+--- Enable diagnostics for a buffer\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@private\n+function M.enable(bufnr)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248047145",
            "id": 1248047145,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KY7Ap",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 479,
            "original_position": 220,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1507488400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248047145/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-30T16:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248047145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248047869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248047869"
                }
            },
            "author_association": "MEMBER",
            "body": "Would be nice if you could revert the unrelated changes. Makes it easier to review and avoids conflicts on rebase/merge\r\n\r\n(We should probably enable lualint & luaformat for the test files here at some point)",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T16:08:54Z",
            "diff_hunk": "@@ -1,20 +1,25 @@\n local helpers = require('test.functional.helpers')(after_each)\n+local lsp_helpers = require('test.functional.plugin.lsp.helpers')\n \n local clear = helpers.clear\n local exec_lua = helpers.exec_lua\n local eq = helpers.eq\n local neq = require('test.helpers').neq\n \n+local create_server_definition = lsp_helpers.create_server_definition\n+\n describe('vim.lsp.diagnostic', function()\n   local fake_uri\n \n   before_each(function()\n-    clear {env={\n-      NVIM_LUA_NOTRACK=\"1\";\n-      VIMRUNTIME=os.getenv\"VIMRUNTIME\";\n-    }}\n+    clear({\n+      env = {\n+        NVIM_LUA_NOTRACK = '1',\n+        VIMRUNTIME = os.getenv('VIMRUNTIME'),\n+      },\n+    })\n \n-    exec_lua [[\n+    exec_lua([[",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248047869",
            "id": 1248047869,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KY7L9",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 22,
            "original_position": 27,
            "original_start_line": 17,
            "path": "test/functional/plugin/lsp/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 1507488400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248047869/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2023-06-30T16:09:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248047869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248179904"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248179904"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sorry about that. I was struggling to get formatting working for the non-test files, so I set up neovim to format with `stylua` on write.\r\n\r\nIt does make the PR harder to review. I'll revert the unrelated changes here.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-06-30T18:46:01Z",
            "diff_hunk": "@@ -1,20 +1,25 @@\n local helpers = require('test.functional.helpers')(after_each)\n+local lsp_helpers = require('test.functional.plugin.lsp.helpers')\n \n local clear = helpers.clear\n local exec_lua = helpers.exec_lua\n local eq = helpers.eq\n local neq = require('test.helpers').neq\n \n+local create_server_definition = lsp_helpers.create_server_definition\n+\n describe('vim.lsp.diagnostic', function()\n   local fake_uri\n \n   before_each(function()\n-    clear {env={\n-      NVIM_LUA_NOTRACK=\"1\";\n-      VIMRUNTIME=os.getenv\"VIMRUNTIME\";\n-    }}\n+    clear({\n+      env = {\n+        NVIM_LUA_NOTRACK = '1',\n+        VIMRUNTIME = os.getenv('VIMRUNTIME'),\n+      },\n+    })\n \n-    exec_lua [[\n+    exec_lua([[",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248179904",
            "id": 1248179904,
            "in_reply_to_id": 1248047869,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KZbbA",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 22,
            "original_position": 27,
            "original_start_line": 17,
            "path": "test/functional/plugin/lsp/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 1507725055,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248179904/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2023-06-30T18:46:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248179904",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1248986841"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248986841"
                }
            },
            "author_association": "MEMBER",
            "body": "That would be better, but would like to hear @gpanders comments",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-01T21:51:39Z",
            "diff_hunk": "@@ -1306,11 +1307,48 @@ Lua module: vim.lsp.diagnostic                                *lsp-diagnostic*\n \n get_namespace({client_id})                *vim.lsp.diagnostic.get_namespace()*\n     Get the diagnostic namespace associated with an LSP client\n-    |vim.diagnostic|.\n+    |vim.diagnostic| for publishDiagnostics\n \n     Parameters: ~\n       • {client_id}  (integer) The id of the LSP client\n \n+                                     *vim.lsp.diagnostic.get_pull_namespace()*\n+get_pull_namespace({client_id})\n+    Get the diagnostic namespace associated with an LSP client\n+    |vim.diagnostic| for pull diagnostics",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1248986841",
            "id": 1248986841,
            "in_reply_to_id": 1247984666,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KcgbZ",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1318,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1509125222,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248986841/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-01T21:51:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1248986841",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1249034670"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1249034670"
                }
            },
            "author_association": "MEMBER",
            "body": "Haven’t had a chance to do thorough code review yet, but why is it not possible to use a single namespace?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-02T00:32:35Z",
            "diff_hunk": "@@ -1306,11 +1307,48 @@ Lua module: vim.lsp.diagnostic                                *lsp-diagnostic*\n \n get_namespace({client_id})                *vim.lsp.diagnostic.get_namespace()*\n     Get the diagnostic namespace associated with an LSP client\n-    |vim.diagnostic|.\n+    |vim.diagnostic| for publishDiagnostics\n \n     Parameters: ~\n       • {client_id}  (integer) The id of the LSP client\n \n+                                     *vim.lsp.diagnostic.get_pull_namespace()*\n+get_pull_namespace({client_id})\n+    Get the diagnostic namespace associated with an LSP client\n+    |vim.diagnostic| for pull diagnostics",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1249034670",
            "id": 1249034670,
            "in_reply_to_id": 1247984666,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KcsGu",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1318,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1509391772,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1249034670/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-02T00:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1249034670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1249311119"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1249311119"
                }
            },
            "author_association": "MEMBER",
            "body": "> but why is it not possible to use a single namespace?\r\n\r\nSee https://github.com/neovim/neovim/pull/24128#discussion_r1239364111",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-02T07:26:09Z",
            "diff_hunk": "@@ -1306,11 +1307,48 @@ Lua module: vim.lsp.diagnostic                                *lsp-diagnostic*\n \n get_namespace({client_id})                *vim.lsp.diagnostic.get_namespace()*\n     Get the diagnostic namespace associated with an LSP client\n-    |vim.diagnostic|.\n+    |vim.diagnostic| for publishDiagnostics\n \n     Parameters: ~\n       • {client_id}  (integer) The id of the LSP client\n \n+                                     *vim.lsp.diagnostic.get_pull_namespace()*\n+get_pull_namespace({client_id})\n+    Get the diagnostic namespace associated with an LSP client\n+    |vim.diagnostic| for pull diagnostics",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1249311119",
            "id": 1249311119,
            "in_reply_to_id": 1247984666,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KdvmP",
            "original_commit_id": "959385cd05f20034e80020aa592d675f0f594970",
            "original_line": 1318,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 1509489141,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1249311119/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-02T07:26:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1249311119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1250025216"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1250025216"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If this isn't wrapped in a deferred callback, then any `LspDidChange` autocmds aren't executed when changes are undone in normal mode.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-03T01:54:21Z",
            "diff_hunk": "@@ -607,6 +608,12 @@ do\n         })\n       end\n     end\n+    vim.schedule(function()",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1250025216",
            "id": 1250025216,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Kgd8A",
            "original_commit_id": "d1a5679a525f90d779ee12ca9743c87f23f7de91",
            "original_line": 612,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1510196589,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1250025216/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-03T01:54:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1250025216",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253285368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253285368"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I need to trigger `LspRequest` manually here, since `client.notify` doesn't trigger `LspRequest` autocmds.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T15:30:02Z",
            "diff_hunk": "@@ -607,6 +608,20 @@ do\n         })\n       end\n     end\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspRequest', {",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253285368",
            "id": 1253285368,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ks534",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 613,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1514803270,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253285368/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T15:30:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253285368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253349784"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253349784"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  api.nvim_buf_attach(bufnr, false, {\r\n```\r\n\r\nFull buffer contents are not needed/ used",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:21:08Z",
            "diff_hunk": "@@ -294,4 +439,74 @@ function M.get_line_diagnostics(bufnr, line_nr, opts, client_id)\n   return diagnostic_vim_to_lsp(vim.diagnostic.get(bufnr, opts))\n end\n \n+--- Clear diagnostics from pull based clients\n+--- @private\n+local function clear(bufnr)\n+  for _, namespace in pairs(_client_pull_namespaces) do\n+    vim.diagnostic.reset(namespace, bufnr)\n+  end\n+end\n+\n+--- autocmd ids for LspRequest handlers per buffer\n+--- @private\n+--- @type table<integer,integer>\n+local _autocmd_ids = {}\n+\n+--- Disable pull diagnostics for a buffer\n+--- @private\n+local function disable(bufnr)\n+  if not _autocmd_ids[bufnr] then\n+    return\n+  end\n+  api.nvim_del_autocmd(_autocmd_ids[bufnr])\n+  _autocmd_ids[bufnr] = nil\n+  clear(bufnr)\n+end\n+\n+--- Enable pull diagnostics for a buffer\n+---@param bufnr (integer) Buffer handle, or 0 for current\n+---@private\n+function M._enable(bufnr)\n+  bufnr = resolve_bufnr(bufnr)\n+\n+  if _autocmd_ids[bufnr] then\n+    return\n+  end\n+\n+  _autocmd_ids[bufnr] = api.nvim_create_autocmd('LspRequest', {\n+    buffer = bufnr,\n+    callback = function(opts)\n+      if not opts.data.request then\n+        return\n+      end\n+      if opts.data.request.type ~= 'complete' then\n+        return\n+      end\n+      if opts.data.request.method ~= 'textDocument/didChange' then\n+        return\n+      end\n+      refresh({ bufnr = bufnr, only_visible = true })\n+    end,\n+    group = augroup,\n+  })\n+\n+  api.nvim_buf_attach(bufnr, true, {",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253349784",
            "id": 1253349784,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KtJmY",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 493,
            "original_position": 274,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1514904617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253349784/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T16:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253349784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253354256"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253354256"
                }
            },
            "author_association": "MEMBER",
            "body": "That's definitely contrary to the semantics of notifications. Should at least be documented.\r\n\r\nAlso should call out `data.request.method` in the docs, if it isn't already, especially the docs related to this PR.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:25:08Z",
            "diff_hunk": "@@ -607,6 +608,20 @@ do\n         })\n       end\n     end\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspRequest', {",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253354256",
            "id": 1253354256,
            "in_reply_to_id": 1253285368,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KtKsQ",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 613,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1514911264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253354256/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T16:25:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253354256",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253358124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253358124"
                }
            },
            "author_association": "MEMBER",
            "body": "If notifications currently don't emit a `LspRequest` event I'd be inclined to introduce a new `LspNotify` or `LspNotification` autocmd. Requests and notifications are semantically different in the protocol and I guess in how the events behave as well. Notifications don't have the state transition because you cannot cancel a notification, so by adding a new trigger here we'd invalidate part of the documented `LspRequest` behavior. \r\n\r\nThat would then happen in https://github.com/neovim/neovim/blob/f771d6247147b393238fe57065a96fb5e9635358/runtime/lua/vim/lsp.lua#L1572-L1577\r\n\r\n\r\n@justinmk is that okay with you?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:28:32Z",
            "diff_hunk": "@@ -607,6 +608,20 @@ do\n         })\n       end\n     end\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspRequest', {",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253358124",
            "id": 1253358124,
            "in_reply_to_id": 1253285368,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KtLos",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 613,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1514904617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253358124/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T16:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253358124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253360435"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253360435"
                }
            },
            "author_association": "MEMBER",
            "body": "I think if the server uses dynamic capabilities, this won't be within the `server_capabilities.diagnosticProvider` but instead will be part of `client.dynamic_capabilities`. See https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticRegistrationOptions - it extends [DiagnosticOptions](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticOptions)\r\n\r\n\r\n---\r\n\r\n\r\nI also wonder if we should expose the namespaces via the `lsp.Client` object.\r\nE.g. it could have `namespaces` table has has optional keys per module/feature.\r\n\r\n`client.namespaces.diagnostic.{push,pull}`\r\nor `client.namespaces.diagnostic_{push,pull}`, not sure how much nesting we want.\r\n\r\nWe'd then move away from the `vim.lsp.with` configuration approach, and instead could tell users to use `vim.diagnostic.config(opts, client.namespaces.diagnostic.pull)` in an `LspAttach` autocmd callback.\r\n\r\n\r\nBut then we'll also have to figure out a way to deal with capability changes via the dynamic registration. (Maybe we have to introduce another `LspCapability` event, that is fired _per_ capability during the initialization to normalize between dynamic capability registration, and static registration, but that's another topic - related to https://github.com/neovim/neovim/issues/24229)\r\n\r\n\r\n(Please wait for other inputs before acting on this)\r\n",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:30:54Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253360435",
            "id": 1253360435,
            "line": 180,
            "node_id": "PRRC_kwDOAPphoM5KtMMz",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 180,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 44,
            "pull_request_review_id": 1514904617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253360435/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T16:57:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253360435",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253371946"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253371946"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  for _, winid in ipairs(api.nvim_list_wins()) do\r\n    if api.nvim_win_get_buf(winid) == bufnr then\r\n      local first = vim.fn.line('w0', window)\r\n      local last = vim.fn.line('w$', window)\r\n      local params = {\r\n        textDocument = util.make_text_document_params(bufnr),\r\n        range = {\r\n          start = { line = first - 1, character = 0 },\r\n          ['end'] = { line = last, character = 0 },\r\n        },\r\n      }\r\n      vim.lsp.buf_request(bufnr, 'textDocument/diagnostic', params)\r\n    end\r\n  end\r\n```\r\n\r\nLooks like the intermediate `buffer_windows` table is not needed?\r\n",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:42:52Z",
            "diff_hunk": "@@ -216,7 +245,123 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   end\n \n   client_id = get_client_id(client_id)\n-  local namespace = M.get_namespace(client_id)\n+  local namespace = M.get_namespace(client_id, false)\n+\n+  if config then\n+    for _, opt in pairs(config) do\n+      if type(opt) == 'table' then\n+        if not opt.severity and opt.severity_limit then\n+          opt.severity = { min = severity_lsp_to_vim(opt.severity_limit) }\n+        end\n+      end\n+    end\n+\n+    -- Persist configuration to ensure buffer reloads use the same\n+    -- configuration. To make lsp.with configuration work (See :help\n+    -- lsp-handler-configuration)\n+    vim.diagnostic.config(config, namespace)\n+  end\n+\n+  vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n+end\n+\n+---@private\n+local function resolve_bufnr(bufnr)\n+  return bufnr > 0 and bufnr or api.nvim_get_current_buf()\n+end\n+\n+--- Refresh diagnostics for a buffer\n+---\n+---@param opts (nil|table) Optional arguments\n+---  - bufnr (integer, default: 0): Buffer whose hints to refresh\n+---  - only_visible (boolean, default: false): Whether to only refresh diagnostics for the visible regions of the buffer\n+---\n+---@private\n+local function refresh(opts)\n+  opts = opts or {}\n+  local bufnr = resolve_bufnr(opts.bufnr or 0)\n+  local only_visible = opts.only_visible or false\n+  local buffer_windows = {}\n+  for _, winid in ipairs(api.nvim_list_wins()) do\n+    if api.nvim_win_get_buf(winid) == bufnr then\n+      table.insert(buffer_windows, winid)\n+    end\n+  end\n+  for _, window in ipairs(buffer_windows) do\n+    local first = vim.fn.line('w0', window)\n+    local last = vim.fn.line('w$', window)\n+    local params = {\n+      textDocument = util.make_text_document_params(bufnr),\n+      range = {\n+        start = { line = first - 1, character = 0 },\n+        ['end'] = { line = last, character = 0 },\n+      },\n+    }\n+    vim.lsp.buf_request(bufnr, 'textDocument/diagnostic', params)\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253371946",
            "id": 1253371946,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KtPAq",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 301,
            "original_position": 125,
            "original_start_line": 284,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1514904617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253371946/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-05T16:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253371946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253376232"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253376232"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems unavoidable :/",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:47:12Z",
            "diff_hunk": "@@ -607,6 +608,20 @@ do\n         })\n       end\n     end\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspRequest', {",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253376232",
            "id": 1253376232,
            "in_reply_to_id": 1253285368,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5KtQDo",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 613,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1514944482,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253376232/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T16:47:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253376232",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253381332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253381332"
                }
            },
            "author_association": "MEMBER",
            "body": ">I also wonder if we should expose the namespaces via the lsp.Client object.\r\nE.g. it could have namespaces table has has optional keys per module/feature.\r\n\r\nI like this, and strongly prefer this to the existing `vim.lsp.diagnostic.get_namespace()`.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T16:52:22Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253381332",
            "id": 1253381332,
            "in_reply_to_id": 1253360435,
            "line": 180,
            "node_id": "PRRC_kwDOAPphoM5KtRTU",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 180,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 44,
            "pull_request_review_id": 1514952332,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253381332/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T16:52:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253381332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253465399"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253465399"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "good point. we should clean up `inlay_hint.lua` as well, that's where I stole this code from.\r\nor refactor this kind of function out, since they're doing the same thing except for the LSP request method.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T18:13:34Z",
            "diff_hunk": "@@ -216,7 +245,123 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   end\n \n   client_id = get_client_id(client_id)\n-  local namespace = M.get_namespace(client_id)\n+  local namespace = M.get_namespace(client_id, false)\n+\n+  if config then\n+    for _, opt in pairs(config) do\n+      if type(opt) == 'table' then\n+        if not opt.severity and opt.severity_limit then\n+          opt.severity = { min = severity_lsp_to_vim(opt.severity_limit) }\n+        end\n+      end\n+    end\n+\n+    -- Persist configuration to ensure buffer reloads use the same\n+    -- configuration. To make lsp.with configuration work (See :help\n+    -- lsp-handler-configuration)\n+    vim.diagnostic.config(config, namespace)\n+  end\n+\n+  vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n+end\n+\n+---@private\n+local function resolve_bufnr(bufnr)\n+  return bufnr > 0 and bufnr or api.nvim_get_current_buf()\n+end\n+\n+--- Refresh diagnostics for a buffer\n+---\n+---@param opts (nil|table) Optional arguments\n+---  - bufnr (integer, default: 0): Buffer whose hints to refresh\n+---  - only_visible (boolean, default: false): Whether to only refresh diagnostics for the visible regions of the buffer\n+---\n+---@private\n+local function refresh(opts)\n+  opts = opts or {}\n+  local bufnr = resolve_bufnr(opts.bufnr or 0)\n+  local only_visible = opts.only_visible or false\n+  local buffer_windows = {}\n+  for _, winid in ipairs(api.nvim_list_wins()) do\n+    if api.nvim_win_get_buf(winid) == bufnr then\n+      table.insert(buffer_windows, winid)\n+    end\n+  end\n+  for _, window in ipairs(buffer_windows) do\n+    local first = vim.fn.line('w0', window)\n+    local last = vim.fn.line('w$', window)\n+    local params = {\n+      textDocument = util.make_text_document_params(bufnr),\n+      range = {\n+        start = { line = first - 1, character = 0 },\n+        ['end'] = { line = last, character = 0 },\n+      },\n+    }\n+    vim.lsp.buf_request(bufnr, 'textDocument/diagnostic', params)\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253465399",
            "id": 1253465399,
            "in_reply_to_id": 1253371946,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ktl03",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 301,
            "original_position": 125,
            "original_start_line": 284,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1515080834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253465399/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-05T18:13:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253465399",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1253541080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253541080"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> I think if the server uses dynamic capabilities, this won't be within the `server_capabilities.diagnosticProvider` but instead will be part of `client.dynamic_capabilities`. See https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticRegistrationOptions - it extends [DiagnosticOptions](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#diagnosticOptions)\r\n\r\nHmmm....I had some problems understanding this part of the spec, and wasn't able to figure out how to test it.\r\n\r\nThe way I understood this was that `DiagnosticOptions` is the type of the `diagnosticProvider` field of `ServerCapabilities` here - https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#serverCapabilities",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-05T19:31:06Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1253541080",
            "id": 1253541080,
            "in_reply_to_id": 1253360435,
            "line": 180,
            "node_id": "PRRC_kwDOAPphoM5Kt4TY",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 180,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 44,
            "pull_request_review_id": 1515196729,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253541080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-05T19:31:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1253541080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1258953387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1258953387"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Indeed, when I inspect `client.server_capabilities` here, I do see `diagnosticProvider`:\r\n```lua\r\nclient.server_capabilities = {\r\n  ...\r\n  diagnosticProvider = { interFileDependencies = false, workspaceDiagnostics = false },\r\n  ...\r\n}\r\n```\r\n",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-10T21:58:27Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1258953387",
            "id": 1258953387,
            "in_reply_to_id": 1253360435,
            "line": 180,
            "node_id": "PRRC_kwDOAPphoM5LChqr",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 180,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 44,
            "pull_request_review_id": 1523104275,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1258953387/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-10T21:58:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1258953387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1258957730"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1258957730"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> > I also wonder if we should expose the namespaces via the lsp.Client object.\r\n> > E.g. it could have namespaces table has has optional keys per module/feature.\r\n> \r\n> I like this, and strongly prefer this to the existing `vim.lsp.diagnostic.get_namespace()`.\r\n\r\nCan we do this in a separate PR?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-10T22:05:05Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1258957730",
            "id": 1258957730,
            "in_reply_to_id": 1253360435,
            "line": 180,
            "node_id": "PRRC_kwDOAPphoM5LCiui",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 180,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 44,
            "pull_request_review_id": 1523110402,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1258957730/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-10T22:05:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1258957730",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259207523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259207523"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm aware this is modelled after `LspRequest` but I'm not sure if there's much value in the extra `request` nesting.\r\n\r\nWhat do you think of having `method`, `params` and `result` directly under `data` ?\r\n\r\nActually, I'd probably remove `result` and instead only invoke the autocmd if it's true (false indicates the client stopped, so in a way there was no notification)\r\n`result` is also a bit missleading, as notifications themselves have no result.\r\n\r\nThis will also need docs similar to how `LspRequest` is documented",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T05:33:17Z",
            "diff_hunk": "@@ -1573,7 +1591,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspNotify', {\n+        modeline = false,\n+        data = {\n+          request = {\n+            method = method,\n+            params = params,\n+            result = result,\n+          },\n+        },",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259207523",
            "id": 1259207523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LDftj",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 1606,
            "original_position": 56,
            "original_start_line": 1600,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1523450740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259207523/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T05:40:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259207523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259209437"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259209437"
                }
            },
            "author_association": "MEMBER",
            "body": "> Can we do this in a separate PR?\r\n\r\nYes that's okay\r\n\r\n> Indeed, when I inspect client.server_capabilities here, I do see diagnosticProvider:\r\n\r\nYes, but it could instead also be within the dynamic capabilities if the server is using them instead of static capabilities.\r\nWe can also set `dynamicRegistration = false` in the capability for now, and follow up on this later.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T05:36:28Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259209437",
            "id": 1259209437,
            "in_reply_to_id": 1253360435,
            "line": 180,
            "node_id": "PRRC_kwDOAPphoM5LDgLd",
            "original_commit_id": "5f15819fa23e93d95e11e8f400b1ac2f9a7f5459",
            "original_line": 180,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 44,
            "pull_request_review_id": 1523450740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259209437/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-11T05:40:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259209437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259211028"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259211028"
                }
            },
            "author_association": "MEMBER",
            "body": "I wouldn't share this, it is a trivial function. \r\n\r\n(Or if more people think this is valuable to have, I think it should go elsewhere, e.g. `vim.` top-level as it's  not exclusive to lsp)",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T05:38:33Z",
            "diff_hunk": "@@ -2207,6 +2207,50 @@ function M.lookup_section(settings, section)\n   return settings\n end\n \n+--- Helper function to resolve buffer number.\n+--- Returns current buffer if bufnr is not valid\n+---@param bufnr integer buffer number\n+---@return integer buffer number\n+function M.resolve_bufnr(bufnr)\n+  return bufnr > 0 and bufnr or api.nvim_get_current_buf()\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259211028",
            "id": 1259211028,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LDgkU",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 2216,
            "original_position": 10,
            "original_start_line": 2210,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 1523450740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259211028/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T06:06:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259211028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259212055"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259212055"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\r\n---@private\r\n--- Request updated LSP information for a buffer.\r\n---\r\n---@param method string LSP method to call\r\n---@param opts (nil|table) Optional arguments\r\n---  - bufnr (integer, default: 0): Buffer to refresh\r\n---  - only_visible (boolean, default: false): Whether to only refresh for the visible regions of the buffer\r\nfunction M._refresh(method, opts)\r\n```\r\n\r\nI don't want to commit to this as public API. It's likely going to change with what I have in mind for a `vim.lsp.request`\r\n",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T05:40:09Z",
            "diff_hunk": "@@ -2207,6 +2207,50 @@ function M.lookup_section(settings, section)\n   return settings\n end\n \n+--- Helper function to resolve buffer number.\n+--- Returns current buffer if bufnr is not valid\n+---@param bufnr integer buffer number\n+---@return integer buffer number\n+function M.resolve_bufnr(bufnr)\n+  return bufnr > 0 and bufnr or api.nvim_get_current_buf()\n+end\n+\n+--- Request updated LSP information for a buffer.\n+---\n+---@param method string LSP method to call\n+---@param opts (nil|table) Optional arguments\n+---  - bufnr (integer, default: 0): Buffer to refresh\n+---  - only_visible (boolean, default: false): Whether to only refresh for the visible regions of the buffer\n+function M.refresh(method, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259212055",
            "id": 1259212055,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LDg0X",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 2224,
            "original_position": 18,
            "original_start_line": 2217,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": null,
            "pull_request_review_id": 1523450740,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259212055/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T05:40:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259212055",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259467590"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259467590"
                }
            },
            "author_association": "MEMBER",
            "body": "does there can use `api.nvim_buf_is_valid` ?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T09:26:35Z",
            "diff_hunk": "@@ -236,7 +265,77 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n end\n \n---- Clear diagnostics and diagnostic cache.\n+--- |lsp-handler| for the method \"textDocument/diagnostic\"\n+---\n+--- See |vim.diagnostic.config()| for configuration options. Handler-specific\n+--- configuration can be set using |vim.lsp.with()|:\n+--- <pre>lua\n+--- vim.lsp.handlers[\"textDocument/diagnostic\"] = vim.lsp.with(\n+---   vim.lsp.diagnostic.on_diagnostic, {\n+---     -- Enable underline, use default values\n+---     underline = true,\n+---     -- Enable virtual text, override spacing to 4\n+---     virtual_text = {\n+---       spacing = 4,\n+---     },\n+---     -- Use a function to dynamically turn signs off\n+---     -- and on, using buffer local variables\n+---     signs = function(namespace, bufnr)\n+---       return vim.b[bufnr].show_signs == true\n+---     end,\n+---     -- Disable a feature\n+---     update_in_insert = false,\n+---   }\n+--- )\n+--- </pre>\n+---\n+---@param config table Configuration table (see |vim.diagnostic.config()|).\n+function M.on_diagnostic(_, result, ctx, config)\n+  local client_id = ctx.client_id\n+  local uri = ctx.params.textDocument.uri\n+  local fname = vim.uri_to_fname(uri)\n+\n+  if result == nil then\n+    return\n+  end\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  local diagnostics = result.items\n+  if #diagnostics == 0 and vim.fn.bufexists(fname) == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259467590",
            "id": 1259467590,
            "line": 300,
            "node_id": "PRRC_kwDOAPphoM5LEfNG",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 300,
            "original_position": 120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 120,
            "pull_request_review_id": 1523846886,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259467590/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-11T09:28:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259467590",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259468615"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259468615"
                }
            },
            "author_association": "MEMBER",
            "body": "these nested if can write one line ",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T09:27:25Z",
            "diff_hunk": "@@ -236,7 +265,77 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n end\n \n---- Clear diagnostics and diagnostic cache.\n+--- |lsp-handler| for the method \"textDocument/diagnostic\"\n+---\n+--- See |vim.diagnostic.config()| for configuration options. Handler-specific\n+--- configuration can be set using |vim.lsp.with()|:\n+--- <pre>lua\n+--- vim.lsp.handlers[\"textDocument/diagnostic\"] = vim.lsp.with(\n+---   vim.lsp.diagnostic.on_diagnostic, {\n+---     -- Enable underline, use default values\n+---     underline = true,\n+---     -- Enable virtual text, override spacing to 4\n+---     virtual_text = {\n+---       spacing = 4,\n+---     },\n+---     -- Use a function to dynamically turn signs off\n+---     -- and on, using buffer local variables\n+---     signs = function(namespace, bufnr)\n+---       return vim.b[bufnr].show_signs == true\n+---     end,\n+---     -- Disable a feature\n+---     update_in_insert = false,\n+---   }\n+--- )\n+--- </pre>\n+---\n+---@param config table Configuration table (see |vim.diagnostic.config()|).\n+function M.on_diagnostic(_, result, ctx, config)\n+  local client_id = ctx.client_id\n+  local uri = ctx.params.textDocument.uri\n+  local fname = vim.uri_to_fname(uri)\n+\n+  if result == nil then\n+    return\n+  end\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  local diagnostics = result.items\n+  if #diagnostics == 0 and vim.fn.bufexists(fname) == 0 then\n+    return\n+  end\n+  local bufnr = vim.fn.bufadd(fname)\n+\n+  if not bufnr then\n+    return\n+  end\n+\n+  client_id = get_client_id(client_id)\n+\n+  local namespace = M.get_namespace(client_id, true)\n+\n+  if config then\n+    for _, opt in pairs(config) do\n+      if type(opt) == 'table' then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259468615",
            "id": 1259468615,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LEfdH",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 322,
            "original_position": 135,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1523846886,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259468615/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-11T09:28:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259468615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1259470062"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259470062"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    namespace_table[key] = api.nvim_create_namespace(name)\r\n```",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T09:28:39Z",
            "diff_hunk": "@@ -161,19 +166,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table\n+  local key\n+  local name\n+  local client = vim.lsp.get_client_by_id(client_id)\n+\n+  if is_pull then\n+    namespace_table = _client_pull_namespaces\n+    local server_id = vim.tbl_get(client.server_capabilities, 'diagnosticProvider', 'identifier')\n+    key = string.format('%d:%s', client_id, server_id or 'nil')\n+    name = string.format(\n+      'vim.lsp.%s.%d.%s',\n+      client and client.name or 'unknown',\n+      client_id,\n+      server_id or 'nil'\n+    )\n+  else\n+    namespace_table = _client_push_namespaces\n+    key = client_id\n+    name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n   end\n-  return _client_namespaces[client_id]\n+\n+  if not namespace_table[key] then\n+    namespace_table[key] = vim.api.nvim_create_namespace(name)",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1259470062",
            "id": 1259470062,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LEfzu",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 202,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1523846886,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259470062/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-11T09:28:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1259470062",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260011455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260011455"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sounds good.\r\n\r\nHow does this look?\r\n\r\n```lua\r\ndata = {\r\n  client_id = client.id,\r\n  method = method,\r\n  params = params,\r\n}\r\n```\r\n",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T16:56:19Z",
            "diff_hunk": "@@ -1573,7 +1591,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspNotify', {\n+        modeline = false,\n+        data = {\n+          request = {\n+            method = method,\n+            params = params,\n+            result = result,\n+          },\n+        },",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260011455",
            "id": 1260011455,
            "in_reply_to_id": 1259207523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LGj-_",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 1606,
            "original_position": 56,
            "original_start_line": 1600,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1524721124,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260011455/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T16:56:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260011455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260110931"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260110931"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks good to me. Would passing along the full client also work?\r\n\r\n```\r\ndata = {\r\n  client = client,\r\n  method = method,\r\n  params = params,\r\n}\r\n```\r\n\r\nIf it's limited to primitive value it's also fine to go with the client_id. In case the client works it's probably more convenient to have access to it.  ",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T18:16:10Z",
            "diff_hunk": "@@ -1573,7 +1591,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspNotify', {\n+        modeline = false,\n+        data = {\n+          request = {\n+            method = method,\n+            params = params,\n+            result = result,\n+          },\n+        },",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260110931",
            "id": 1260110931,
            "in_reply_to_id": 1259207523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LG8RT",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 1606,
            "original_position": 56,
            "original_start_line": 1600,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1524894688,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260110931/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T18:16:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260110931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260153593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260153593"
                }
            },
            "author_association": "MEMBER",
            "body": "I think passing `client` does work. But `LspAttach` currently passes `client_id`. There was a PR to change that, but the author vanished.\r\n\r\nI'm in favor of passing the full `client`. Just keep in mind that will introduce inconsistency with `LspAttach` (but that inconsistency can, and should, be fixed).",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T18:56:29Z",
            "diff_hunk": "@@ -1573,7 +1591,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspNotify', {\n+        modeline = false,\n+        data = {\n+          request = {\n+            method = method,\n+            params = params,\n+            result = result,\n+          },\n+        },",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260153593",
            "id": 1260153593,
            "in_reply_to_id": 1259207523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LHGr5",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 1606,
            "original_position": 56,
            "original_start_line": 1600,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1524980859,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260153593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T18:56:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260153593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260209288"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260209288"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Trying to pass `client` is giving me errors:\r\n```lua\r\nError executing vim.schedule lua callback: /home/catlee/src/neovim/runtime/lua/vim/lsp.lua:1599: Cannot convert given lua table\r\nstack traceback:\r\n        [C]: in function 'nvim_exec_autocmds'\r\n        /home/catlee/src/neovim/runtime/lua/vim/lsp.lua:1599: in function </home/catlee/src/neovim/runtime/lua/vim/lsp.lua:1598>\r\n```",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T19:50:21Z",
            "diff_hunk": "@@ -1573,7 +1591,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspNotify', {\n+        modeline = false,\n+        data = {\n+          request = {\n+            method = method,\n+            params = params,\n+            result = result,\n+          },\n+        },",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260209288",
            "id": 1260209288,
            "in_reply_to_id": 1259207523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LHUSI",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 1606,
            "original_position": 56,
            "original_start_line": 1600,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1525055766,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260209288/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T19:50:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260209288",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260211440"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260211440"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, ok, maybe there _were_ reasons we couldn't pass the full client. I remember it had something to do with not being able to serialize the client table since it contains a `userdata` type. But for some reason I thought that had either been resolved or was a non-issue (apparently that is not the case).",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T19:52:43Z",
            "diff_hunk": "@@ -1573,7 +1591,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspNotify', {\n+        modeline = false,\n+        data = {\n+          request = {\n+            method = method,\n+            params = params,\n+            result = result,\n+          },\n+        },",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260211440",
            "id": 1260211440,
            "in_reply_to_id": 1259207523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LHUzw",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 1606,
            "original_position": 56,
            "original_start_line": 1600,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1525059000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260211440/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-07-11T19:52:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260211440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260230990"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260230990"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "hmm, I'm not sure.\r\n\r\nwe don't get back a buffer number from the server, we get back the filename, so we need a way to map that back to a buffer number.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T20:12:03Z",
            "diff_hunk": "@@ -236,7 +265,77 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n end\n \n---- Clear diagnostics and diagnostic cache.\n+--- |lsp-handler| for the method \"textDocument/diagnostic\"\n+---\n+--- See |vim.diagnostic.config()| for configuration options. Handler-specific\n+--- configuration can be set using |vim.lsp.with()|:\n+--- <pre>lua\n+--- vim.lsp.handlers[\"textDocument/diagnostic\"] = vim.lsp.with(\n+---   vim.lsp.diagnostic.on_diagnostic, {\n+---     -- Enable underline, use default values\n+---     underline = true,\n+---     -- Enable virtual text, override spacing to 4\n+---     virtual_text = {\n+---       spacing = 4,\n+---     },\n+---     -- Use a function to dynamically turn signs off\n+---     -- and on, using buffer local variables\n+---     signs = function(namespace, bufnr)\n+---       return vim.b[bufnr].show_signs == true\n+---     end,\n+---     -- Disable a feature\n+---     update_in_insert = false,\n+---   }\n+--- )\n+--- </pre>\n+---\n+---@param config table Configuration table (see |vim.diagnostic.config()|).\n+function M.on_diagnostic(_, result, ctx, config)\n+  local client_id = ctx.client_id\n+  local uri = ctx.params.textDocument.uri\n+  local fname = vim.uri_to_fname(uri)\n+\n+  if result == nil then\n+    return\n+  end\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  local diagnostics = result.items\n+  if #diagnostics == 0 and vim.fn.bufexists(fname) == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260230990",
            "id": 1260230990,
            "in_reply_to_id": 1259467590,
            "line": 300,
            "node_id": "PRRC_kwDOAPphoM5LHZlO",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 300,
            "original_position": 120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 120,
            "pull_request_review_id": 1525086562,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260230990/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-11T20:12:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260230990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1260283402"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260283402"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "should we sort these entries alphabetically?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-11T21:07:12Z",
            "diff_hunk": "@@ -550,6 +551,27 @@ to the callback in the \"data\" table. The token fields are documented in\n Note: doing anything other than calling\n |vim.lsp.semantic_tokens.highlight_token()| is considered experimental.\n \n+LspNotify                                                          *LspNotify*",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1260283402",
            "id": 1260283402,
            "line": 557,
            "node_id": "PRRC_kwDOAPphoM5LHmYK",
            "original_commit_id": "e65e764a0d49852c4023ac21a8d024863cde3d95",
            "original_line": 557,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 12,
            "pull_request_review_id": 1525160303,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260283402/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-11T21:07:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1260283402",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1261178851"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261178851"
                }
            },
            "author_association": "MEMBER",
            "body": "I think with LspNotify this can now be removed again? ",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-12T13:26:03Z",
            "diff_hunk": "@@ -607,6 +608,20 @@ do\n         })\n       end\n     end\n+\n+    vim.schedule(function()\n+      nvim_exec_autocmds('LspRequest', {",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1261178851",
            "id": 1261178851,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LLA_j",
            "original_commit_id": "2d43f8337982a170d947f3ba64b418b21964ac7d",
            "original_line": 613,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 1526360529,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261178851/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-12T13:34:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261178851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1261187582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261187582"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this is fine as it is. \r\n\r\nThere's `vim.uri_to_bufnr` but it creates an unloaded buffer if none exists.  That's not what we want here and adding an additional uri - buffer mapping is not justified to avoid a vim.fn.bufexists call",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-12T13:32:39Z",
            "diff_hunk": "@@ -236,7 +265,77 @@ function M.on_publish_diagnostics(_, result, ctx, config)\n   vim.diagnostic.set(namespace, bufnr, diagnostic_lsp_to_vim(diagnostics, bufnr, client_id))\n end\n \n---- Clear diagnostics and diagnostic cache.\n+--- |lsp-handler| for the method \"textDocument/diagnostic\"\n+---\n+--- See |vim.diagnostic.config()| for configuration options. Handler-specific\n+--- configuration can be set using |vim.lsp.with()|:\n+--- <pre>lua\n+--- vim.lsp.handlers[\"textDocument/diagnostic\"] = vim.lsp.with(\n+---   vim.lsp.diagnostic.on_diagnostic, {\n+---     -- Enable underline, use default values\n+---     underline = true,\n+---     -- Enable virtual text, override spacing to 4\n+---     virtual_text = {\n+---       spacing = 4,\n+---     },\n+---     -- Use a function to dynamically turn signs off\n+---     -- and on, using buffer local variables\n+---     signs = function(namespace, bufnr)\n+---       return vim.b[bufnr].show_signs == true\n+---     end,\n+---     -- Disable a feature\n+---     update_in_insert = false,\n+---   }\n+--- )\n+--- </pre>\n+---\n+---@param config table Configuration table (see |vim.diagnostic.config()|).\n+function M.on_diagnostic(_, result, ctx, config)\n+  local client_id = ctx.client_id\n+  local uri = ctx.params.textDocument.uri\n+  local fname = vim.uri_to_fname(uri)\n+\n+  if result == nil then\n+    return\n+  end\n+\n+  if result.kind == 'unchanged' then\n+    return\n+  end\n+\n+  local diagnostics = result.items\n+  if #diagnostics == 0 and vim.fn.bufexists(fname) == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1261187582",
            "id": 1261187582,
            "in_reply_to_id": 1259467590,
            "line": 300,
            "node_id": "PRRC_kwDOAPphoM5LLDH-",
            "original_commit_id": "f1317557f4297bced634eecfad0bd7648805bba6",
            "original_line": 300,
            "original_position": 120,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 120,
            "pull_request_review_id": 1526360529,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261187582/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-12T13:34:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261187582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1261190004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261190004"
                }
            },
            "author_association": "MEMBER",
            "body": "These changes also change semantics as they don't handle the bufnr = 0 case. I suspect that's not intentional? ",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-12T13:34:26Z",
            "diff_hunk": "@@ -161,7 +111,7 @@ end\n ---@param bufnr (integer) Buffer handle, or 0 for current\n ---@private\n local function clear(bufnr)\n-  bufnr = resolve_bufnr(bufnr)\n+  bufnr = bufnr or api.nvim_get_current_buf()",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1261190004",
            "id": 1261190004,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LLDt0",
            "original_commit_id": "2d43f8337982a170d947f3ba64b418b21964ac7d",
            "original_line": 114,
            "original_position": 71,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1526360529,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261190004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-12T13:34:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261190004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1261463045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261463045"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah, sorry, I didn't realize that 0 is truthy in lua. This definitely changes what was intended here.",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-12T16:57:27Z",
            "diff_hunk": "@@ -161,7 +111,7 @@ end\n ---@param bufnr (integer) Buffer handle, or 0 for current\n ---@private\n local function clear(bufnr)\n-  bufnr = resolve_bufnr(bufnr)\n+  bufnr = bufnr or api.nvim_get_current_buf()",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1261463045",
            "id": 1261463045,
            "in_reply_to_id": 1261190004,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5LMGYF",
            "original_commit_id": "2d43f8337982a170d947f3ba64b418b21964ac7d",
            "original_line": 114,
            "original_position": 71,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 1526811440,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261463045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-12T16:57:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1261463045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1268963453"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1268963453"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  local namespace_table, key, name\r\n```",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-20T05:52:00Z",
            "diff_hunk": "@@ -154,19 +159,43 @@ local function diagnostic_vim_to_lsp(diagnostics)\n end\n \n ---@type table<integer,integer>\n-local _client_namespaces = {}\n+local _client_push_namespaces = {}\n+---@type table<integer,integer>\n+local _client_pull_namespaces = {}\n \n---- Get the diagnostic namespace associated with an LSP client |vim.diagnostic|.\n+--- Get the diagnostic namespace associated with an LSP client |vim.diagnostic| for diagnostics\n ---\n ---@param client_id integer The id of the LSP client\n-function M.get_namespace(client_id)\n+---@param is_pull boolean Whether the namespace is for a pull or push client\n+function M.get_namespace(client_id, is_pull)\n   vim.validate({ client_id = { client_id, 'n' } })\n-  if not _client_namespaces[client_id] then\n-    local client = vim.lsp.get_client_by_id(client_id)\n-    local name = string.format('vim.lsp.%s.%d', client and client.name or 'unknown', client_id)\n-    _client_namespaces[client_id] = vim.api.nvim_create_namespace(name)\n+\n+  local namespace_table",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1268963453",
            "id": 1268963453,
            "line": 173,
            "node_id": "PRRC_kwDOAPphoM5Loth9",
            "original_commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "original_line": 173,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/diagnostic.lua",
            "position": 37,
            "pull_request_review_id": 1538471368,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1268963453/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-20T05:53:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1268963453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1269425026"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269425026"
                }
            },
            "author_association": "MEMBER",
            "body": "If result is falsy (i.e. rpc.notify failed?) is that reflected in the logs somehow? If not, should it be?",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-20T12:58:47Z",
            "diff_hunk": "@@ -1567,7 +1571,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    if result then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1269425026",
            "id": 1269425026,
            "line": 1577,
            "node_id": "PRRC_kwDOAPphoM5LqeOC",
            "original_commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "original_line": 1577,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 26,
            "pull_request_review_id": 1539209331,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269425026/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-20T12:58:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269425026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1269440105"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269440105"
                }
            },
            "author_association": "MEMBER",
            "body": "The result is false if the client stopped. In that case no notification is sent.\r\n\r\nOther failures would point to client bugs and probably bubble up, or if the payload is wrong, hopefully get handled in a decent way on the server side - since there are no responses to notifications the client probably won't receive an error",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-20T13:11:00Z",
            "diff_hunk": "@@ -1567,7 +1571,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    if result then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1269440105",
            "id": 1269440105,
            "in_reply_to_id": 1269425026,
            "line": 1577,
            "node_id": "PRRC_kwDOAPphoM5Lqh5p",
            "original_commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "original_line": 1577,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 26,
            "pull_request_review_id": 1539233506,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269440105/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-20T13:14:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269440105",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1269483747"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269483747"
                }
            },
            "author_association": "MEMBER",
            "body": "maybe `client_active` is a better name for this variable\r\n\r\n```suggestion\r\n    if client_active then\r\n```",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-20T13:43:36Z",
            "diff_hunk": "@@ -1567,7 +1571,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    if result then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1269483747",
            "id": 1269483747,
            "in_reply_to_id": 1269425026,
            "line": 1577,
            "node_id": "PRRC_kwDOAPphoM5Lqsjj",
            "original_commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "original_line": 1577,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 26,
            "pull_request_review_id": 1539304075,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269483747/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-20T13:43:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1269483747",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24128#discussion_r1270160599"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24128"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1270160599"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I applied that suggestion in the PR here: https://github.com/neovim/neovim/pull/24411",
            "commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "created_at": "2023-07-21T02:10:48Z",
            "diff_hunk": "@@ -1567,7 +1571,23 @@ function lsp.start_client(config)\n     if method ~= 'textDocument/didChange' then\n       changetracking.flush(client)\n     end\n-    return rpc.notify(method, params)\n+\n+    local result = rpc.notify(method, params)\n+\n+    if result then",
            "html_url": "https://github.com/neovim/neovim/pull/24128#discussion_r1270160599",
            "id": 1270160599,
            "in_reply_to_id": 1269425026,
            "line": 1577,
            "node_id": "PRRC_kwDOAPphoM5LtRzX",
            "original_commit_id": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
            "original_line": 1577,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 26,
            "pull_request_review_id": 1540367715,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1270160599/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-21T02:10:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1270160599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I wonder if the requests for diagnostics is better done within the changetracking functionality in `lua.lsp`?",
            "created_at": "2023-06-29T14:40:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1613304769",
            "id": 1613304769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gKRPB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1613304769/reactions"
            },
            "updated_at": "2023-06-29T14:40:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1613304769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Refactor common code (e.g. timer related stuff) between inlay_hints and diagnostic\r\n\r\nI would consider this a blocker. We can't keep duplicating non-trivial caching/debounce/timer logic.",
            "created_at": "2023-06-30T15:25:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1614816426",
            "id": 1614816426,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gQCSq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1614816426/reactions"
            },
            "updated_at": "2023-06-30T15:25:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1614816426",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Refactor common code (e.g. timer related stuff) between inlay_hints and diagnostic\r\n> \r\n> I would consider this a blocker. We can't keep duplicating non-trivial caching/debounce/timer logic.\r\n\r\nI was thinking that we could trigger a autocmd when the client sends a `didChange` to the server. That's already debounced and is the moment when the server gets updated about the document state.\r\nIdeally we'd be able to re-use `LspRequest`, and have pattern = lsp-method. But I think bufnr and pattern can't be specified at the same time?\r\n",
            "created_at": "2023-06-30T16:04:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1614868644",
            "id": 1614868644,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gQPCk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1614868644/reactions"
            },
            "updated_at": "2023-06-30T16:04:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1614868644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ideally we'd be able to re-use `LspRequest`, and have pattern = lsp-method. But I think bufnr and pattern can't be specified at the same time?\r\n\r\nCould add a `v:event` field.",
            "created_at": "2023-07-01T21:53:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1616149921",
            "id": 1616149921,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gVH2h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616149921/reactions"
            },
            "updated_at": "2023-07-01T21:53:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1616149921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > > Refactor common code (e.g. timer related stuff) between inlay_hints and diagnostic\r\n> > \r\n> > \r\n> > I would consider this a blocker. We can't keep duplicating non-trivial caching/debounce/timer logic.\r\n> \r\n> I was thinking that we could trigger a autocmd when the client sends a `didChange` to the server. That's already debounced and is the moment when the server gets updated about the document state. \r\n\r\nI've been trying to get this working but have hit some problems with the autocmds not getting run when undo is used.\r\n\r\nI started by setting up an autocmd in _enable:\r\n```lua\r\n  api.nvim_create_autocmd('LspDidChange', {\r\n    buffer = bufnr,\r\n    callback = function(opts)\r\n      clear(bufnr)\r\n      refresh({ bufnr = bufnr, only_visible = true })\r\n      return false\r\n    end,\r\n  })\r\n```\r\n\r\nAnd triggering it at the bottom of from `send_changes` in `lsp.lua` after the clients have been notified:\r\n```lua\r\n    nvim_exec_autocmds('LspDidChange', {\r\n      modeline = false,\r\n      buffer = bufnr,\r\n    })\r\n```\r\n\r\nThis works for some updates, but for some reason not for undo's. I can see that the we do execute `nvim_exec_autocmds`  from `send_changes`, but the autocmd in `diagnostic.lua` is never run.\r\n",
            "created_at": "2023-07-03T01:40:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1617098654",
            "id": 1617098654,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gYvee",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1617098654/reactions"
            },
            "updated_at": "2023-07-04T23:49:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1617098654",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Does this approach of using `LspDidChange` look good? If so, I can tackle porting `inlay_hint.lua` over as well.",
            "created_at": "2023-07-05T00:48:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1620868443",
            "id": 1620868443,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gnH1b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1620868443/reactions"
            },
            "updated_at": "2023-07-05T00:48:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1620868443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > Ideally we'd be able to re-use `LspRequest`, and have pattern = lsp-method. But I think bufnr and pattern can't be specified at the same time?\r\n> \r\n> Could add a `v:event` field.\r\n\r\nIs there a way to set something like `v:event.scope` from lua?",
            "created_at": "2023-07-05T01:07:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1620880443",
            "id": 1620880443,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gnKw7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1620880443/reactions"
            },
            "updated_at": "2023-07-05T01:07:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1620880443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does this approach of using `LspDidChange` look good?\r\n\r\nNot really. Why can't `LspRequest` be re-used? \r\n\r\n> Is there a way to set something like `v:event.scope` from lua?\r\n\r\nNot currently. But we already are attaching stuff in the `data` field: https://github.com/neovim/neovim/blob/8a788e2daa5c62201f2bb278522eddd42f315d41/runtime/lua/vim/lsp.lua#L1506 , so we could add another `data` field instead of bothering with `v:event`.",
            "created_at": "2023-07-05T13:07:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1621723815",
            "id": 1621723815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gqYqn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621723815/reactions"
            },
            "updated_at": "2023-07-05T13:08:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621723815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > Does this approach of using `LspDidChange` look good?\r\n> \r\n> Not really. Why can't `LspRequest` be re-used?\r\n> \r\n> > Is there a way to set something like `v:event.scope` from lua?\r\n> \r\n> Not currently. But we already are attaching stuff in the `data` field:\r\n> \r\n> https://github.com/neovim/neovim/blob/8a788e2daa5c62201f2bb278522eddd42f315d41/runtime/lua/vim/lsp.lua#L1506\r\n> \r\n> , so we could add another `data` field instead of bothering with `v:event`.\r\n\r\nWould that mean that any autocmds created for `LspRequest` would have to manually filter out invocations based on e.g. `data.method`? They would be triggered for all completed LSP requests on the buffer, and then need to ignore any except for ones with `data.method == 'didChange'`. Is that ok? ",
            "created_at": "2023-07-05T13:36:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1621775132",
            "id": 1621775132,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gqlMc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621775132/reactions"
            },
            "updated_at": "2023-07-05T13:36:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621775132",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> any autocmds created for `LspRequest` would have to manually filter out invocations based on e.g. `data.method`?\r\n\r\nThat seems fine to me. `LspRequest` after all is a very generic (noisy/expensive) event.\r\n\r\nIdeally the event system would allow subscribers to opt-in more granularly, but that's a bigger topic.",
            "created_at": "2023-07-05T13:45:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1621792008",
            "id": 1621792008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gqpUI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621792008/reactions"
            },
            "updated_at": "2023-07-05T13:45:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621792008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a way to set something like v:event.scope from lua?\r\n\r\n> Not currently. But we already are attaching stuff in the data field:\r\n\r\n+1 for adding the `method` to the `data` field\r\n\r\n\r\n\r\n> Would that mean that any autocmds created for LspRequest would have to manually filter out invocations based on e.g. data.method?\r\n\r\nAlso keep in mind that `LspRequest` is triggered multiple times for the same request (for state changes from `pending` to either `canceled` or `done`)\r\n\r\n>  If so, I can tackle porting inlay_hint.lua over as well.\r\n\r\nI think that can also happen in a separate PR to keep the scope of this one smaller. Helps with review and getting it merged faster. ",
            "created_at": "2023-07-05T13:52:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1621808070",
            "id": 1621808070,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gqtPG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621808070/reactions"
            },
            "updated_at": "2023-07-05T13:53:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621808070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > Is there a way to set something like v:event.scope from lua?\r\n> \r\n> > Not currently. But we already are attaching stuff in the data field:\r\n> \r\n> +1 for adding the `method` to the `data` field\r\n\r\nI think `data.request.method` already has what we want?",
            "created_at": "2023-07-05T14:07:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1621833406",
            "id": 1621833406,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gqza-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621833406/reactions"
            },
            "updated_at": "2023-07-05T14:07:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621833406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think data.request.method already has what we want?\r\n\r\nRight, my bad\r\n",
            "created_at": "2023-07-05T14:25:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1621871589",
            "id": 1621871589,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5gq8vl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621871589/reactions"
            },
            "updated_at": "2023-07-05T14:25:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1621871589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like this breaks inlay hints, (even) if not enabled:\r\n\r\n```\r\nError executing vim.schedule lua callback: .../dev/neovim/neovim/runtime/lua/vim/lsp/inlay_hint.lua:49:\r\n attempt to index local 'bufstate' (a nil value)\r\nstack traceback:\r\n        .../dev/neovim/neovim/runtime/lua/vim/lsp/inlay_hint.lua:49: in function 'handler'\r\n        /dev/neovim/neovim/runtime/lua/vim/lsp.lua:1518: in function ''\r\n        vim/_editor.lua: in function <vim/_editor.lua:0>\r\nError executing vim.schedule lua callback: .../dev/neovim/neovim/runtime/lua/vim/lsp/inlay_hint.lua:49:\r\n attempt to index local 'bufstate' (a nil value)\r\nstack traceback:\r\n        .../dev/neovim/neovim/runtime/lua/vim/lsp/inlay_hint.lua:49: in function 'handler'\r\n        /dev/neovim/neovim/runtime/lua/vim/lsp.lua:1518: in function ''\r\n        vim/_editor.lua: in function <vim/_editor.lua:0>\r\n```\r\n",
            "created_at": "2023-07-17T14:19:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1638250649",
            "id": 1638250649,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5hpbiZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1638250649/reactions"
            },
            "updated_at": "2023-07-17T14:19:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1638250649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Looks like this breaks inlay hints, (even) if not enabled\r\n\r\nOk, I think I fixed that up, and tested it with rust-analyzer.\r\n\r\nThe problem was that `on_refresh` was always calling into the new `util._refresh` function, whether or not the buffer had inlayHints enabled or not.\r\n\r\n",
            "created_at": "2023-07-17T16:43:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1638501172",
            "id": 1638501172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5hqYs0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1638501172/reactions"
            },
            "updated_at": "2023-07-17T16:43:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1638501172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there anything left to do before we can merge this in?",
            "created_at": "2023-07-19T12:56:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1642035595",
            "id": 1642035595,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5h33mL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642035595/reactions"
            },
            "updated_at": "2023-07-19T12:56:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1642035595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        },
        {
            "author_association": "NONE",
            "body": "https://github.com/echasnovski/mini.nvim/issues/429\r\n\r\nLately keep getting this kind issues.",
            "created_at": "2023-08-02T03:36:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1661439615",
            "id": 1661439615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5jB45_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1661439615/reactions"
            },
            "updated_at": "2023-08-02T13:38:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1661439615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8279858?v=4",
                "events_url": "https://api.github.com/users/towry/events{/privacy}",
                "followers_url": "https://api.github.com/users/towry/followers",
                "following_url": "https://api.github.com/users/towry/following{/other_user}",
                "gists_url": "https://api.github.com/users/towry/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/towry",
                "id": 8279858,
                "login": "towry",
                "node_id": "MDQ6VXNlcjgyNzk4NTg=",
                "organizations_url": "https://api.github.com/users/towry/orgs",
                "received_events_url": "https://api.github.com/users/towry/received_events",
                "repos_url": "https://api.github.com/users/towry/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/towry/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/towry/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/towry"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> [echasnovski/mini.nvim#429](https://github.com/echasnovski/mini.nvim/issues/429)\r\n> \r\n> Lately keep getting this kind issues.\r\n\r\nThis should be fixed by https://github.com/neovim/neovim/pull/24469",
            "created_at": "2023-08-02T13:34:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/24128#issuecomment-1662225795",
            "id": 1662225795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
            "node_id": "IC_kwDOAPphoM5jE42D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1662225795/reactions"
            },
            "updated_at": "2023-08-02T13:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1662225795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24128/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24128/commits",
    "created_at": "2023-06-23T02:33:37Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24128.diff",
    "draft": false,
    "head": {
        "label": "catlee:catlee/diagnostic",
        "ref": "catlee/diagnostic",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/catlee/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/catlee/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/catlee/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/catlee/neovim/branches{/branch}",
            "clone_url": "https://github.com/catlee/neovim.git",
            "collaborators_url": "https://api.github.com/repos/catlee/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/catlee/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/catlee/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/catlee/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/catlee/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/catlee/neovim/contributors",
            "created_at": "2018-04-24T00:20:13Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/catlee/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/catlee/neovim/downloads",
            "events_url": "https://api.github.com/repos/catlee/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/catlee/neovim/forks",
            "full_name": "catlee/neovim",
            "git_commits_url": "https://api.github.com/repos/catlee/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/catlee/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/catlee/neovim/git/tags{/sha}",
            "git_url": "git://github.com/catlee/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/catlee/neovim/hooks",
            "html_url": "https://github.com/catlee/neovim",
            "id": 130772562,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/catlee/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/catlee/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/catlee/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/catlee/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/catlee/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/catlee/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/catlee/neovim/merges",
            "milestones_url": "https://api.github.com/repos/catlee/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMzA3NzI1NjI=",
            "notifications_url": "https://api.github.com/repos/catlee/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
                "events_url": "https://api.github.com/users/catlee/events{/privacy}",
                "followers_url": "https://api.github.com/users/catlee/followers",
                "following_url": "https://api.github.com/users/catlee/following{/other_user}",
                "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/catlee",
                "id": 54458,
                "login": "catlee",
                "node_id": "MDQ6VXNlcjU0NDU4",
                "organizations_url": "https://api.github.com/users/catlee/orgs",
                "received_events_url": "https://api.github.com/users/catlee/received_events",
                "repos_url": "https://api.github.com/users/catlee/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/catlee"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/catlee/neovim/pulls{/number}",
            "pushed_at": "2024-01-13T03:12:17Z",
            "releases_url": "https://api.github.com/repos/catlee/neovim/releases{/id}",
            "size": 244021,
            "ssh_url": "git@github.com:catlee/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/catlee/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/catlee/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/catlee/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/catlee/neovim/subscription",
            "svn_url": "https://github.com/catlee/neovim",
            "tags_url": "https://api.github.com/repos/catlee/neovim/tags",
            "teams_url": "https://api.github.com/repos/catlee/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/catlee/neovim/git/trees{/sha}",
            "updated_at": "2023-06-23T02:21:01Z",
            "url": "https://api.github.com/repos/catlee/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a18dfda4a296f8a5887339818b929ffe8ae6d05a",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
            "events_url": "https://api.github.com/users/catlee/events{/privacy}",
            "followers_url": "https://api.github.com/users/catlee/followers",
            "following_url": "https://api.github.com/users/catlee/following{/other_user}",
            "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/catlee",
            "id": 54458,
            "login": "catlee",
            "node_id": "MDQ6VXNlcjU0NDU4",
            "organizations_url": "https://api.github.com/users/catlee/orgs",
            "received_events_url": "https://api.github.com/users/catlee/received_events",
            "repos_url": "https://api.github.com/users/catlee/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/catlee"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24128",
    "id": 1404392509,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24128",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": true,
    "merge_commit_sha": "63b3408551561127f7845470eb51404bcd6f547b",
    "merged_at": "2023-07-20T07:03:48Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 235,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 141,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-15T23:44:03Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5TtVQ9",
    "number": 24128,
    "patch_url": "https://github.com/neovim/neovim/pull/24128.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24128/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a18dfda4a296f8a5887339818b929ffe8ae6d05a",
    "title": "feat(lsp): implement textDocument/diagnostic",
    "updated_at": "2024-01-09T03:14:06Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24128",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/54458?v=4",
        "events_url": "https://api.github.com/users/catlee/events{/privacy}",
        "followers_url": "https://api.github.com/users/catlee/followers",
        "following_url": "https://api.github.com/users/catlee/following{/other_user}",
        "gists_url": "https://api.github.com/users/catlee/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/catlee",
        "id": 54458,
        "login": "catlee",
        "node_id": "MDQ6VXNlcjU0NDU4",
        "organizations_url": "https://api.github.com/users/catlee/orgs",
        "received_events_url": "https://api.github.com/users/catlee/received_events",
        "repos_url": "https://api.github.com/users/catlee/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/catlee/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/catlee/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/catlee"
    }
}