{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/18506/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18506/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/18506"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/18506"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18506/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/18506"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e4df9ef51ed4fc3d37d7cebd464dbcb47c6703b0"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5099,
            "forks_count": 5099,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1723,
            "open_issues_count": 1723,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-27T00:47:43Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 257650,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 74318,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-27T01:34:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 74318,
            "watchers_count": 74318,
            "web_commit_signoff_required": false
        },
        "sha": "c55867b46d6758c4ff2e55d1bfb4cfc163182a12",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Add a configuration frontend to easily configure LSP servers on a\r\nper-filetype basis. This is essentially a thin wrapper around the\r\nfollowing process:\r\n\r\n1. Create a FileType autocommand for the given filetype\r\n2. When the autocommand fires, determine the \"root\" for the given buffer\r\n   using the root markers passed to vim.lsp.config()\r\n3. If a client already exists for this filetype and root directory,\r\n   attach the buffer to that client\r\n4. If no client exists, create a new client configuration table using\r\n   the options passed to `vim.lsp.config()` and start a new client with\r\n   `vim.lsp.start_client()`\r\n\r\nThis also exposes a new `vim.lsp.buf_start()` function that can be used to\r\nmanually start LSP clients for servers configured with vim.lsp.config()\r\nwhen the \"autostart\" option is false.\r\n\r\nEssentially this upstreams a subset of `nvim-lspconfig`'s functionality into Neovim core and allows users to easily use the builtin LSP without any plugin dependencies. The tradeoff is that user's must specify the server configurations themselves.\r\n\r\nThis is a **non-breaking change**. Existing LSP setups (e.g. those using `nvim-lspconfig`) will continue to work just fine. None of the LSP internals are modified. \r\n\r\nIf this PR is accepted, users would set up LSP in Nvim like so:\r\n\r\n```lua\r\nvim.lsp.config({\r\n  defaults = {\r\n    flags = {\r\n      allow_incremental_sync = true,\r\n      debounce_text_changes = 80,\r\n    },\r\n    on_attach = function(client, bufnr)\r\n      -- configure the buffer with the given client\r\n    end,\r\n  },\r\n  servers = {\r\n    clangd = {\r\n      filetypes = { \"c\", \"cpp\" },\r\n      cmd = {\"clangd\", \"--background-index\"},\r\n      root_markers = {\"compile_commands.json\", \"compile_flags.txt\"},\r\n      flags = {\r\n        debounce_text_changes = 20,\r\n      },\r\n      offset_encoding = \"utf-16\",\r\n    },\r\n    [\"lua-language-server\"] = {\r\n      filetypes = { \"lua\" },\r\n      cmd = {\"lua-language-server\"},\r\n      root_markers = {\".luarc.json\", \"luarc.json\"},\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18506#discussion_r868428562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18506"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/868428562"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe something should be done so these autocommands don't stack up when this function is called multiple times, like either clearing the augroup on line 43, or putting the autocmd id in a table of server name -> autocmd id?",
            "commit_id": "e4df9ef51ed4fc3d37d7cebd464dbcb47c6703b0",
            "created_at": "2022-05-09T20:31:51Z",
            "diff_hunk": "@@ -0,0 +1,74 @@\n+local a = vim.api\n+local F = vim.F\n+local lsp = vim.lsp\n+\n+local config = {\n+  defaults = {\n+    autostart = true,\n+    root_markers = { '.git', '.hg', '.svn' },\n+  },\n+}\n+\n+---@private\n+local function validate(opts)\n+  if not opts.filetypes or #opts.filetypes == 0 then\n+    return false, 'missing filetypes'\n+  end\n+\n+  if not opts.cmd or #opts.cmd == 0 then\n+    return false, 'missing cmd'\n+  end\n+\n+  if opts.root_markers and opts.root_dir then\n+    return false, 'only one of root_markers and root_dir should be specified'\n+  end\n+\n+  return true\n+end\n+\n+return function(opts)\n+  if not opts then\n+    -- Return current config\n+    return vim.deepcopy(config)\n+  end\n+\n+  for k, v in pairs(opts.defaults or {}) do\n+    config.defaults[k] = v\n+  end\n+\n+  if not opts.servers then\n+    return\n+  end\n+\n+  a.nvim_create_augroup('nvim_lsp', { clear = false })\n+\n+  if not config.servers then\n+    config.servers = {}\n+  end\n+\n+  for k, v in pairs(opts.servers) do\n+    local ok, err = validate(v)\n+    if not ok then\n+      a.nvim_echo({ { string.format('Configuration for server %s is invalid: %s', k, err), 'WarningMsg' } }, true, {})\n+    else\n+      config.servers[k] = v\n+      a.nvim_create_autocmd('FileType', {",
            "html_url": "https://github.com/neovim/neovim/pull/18506#discussion_r868428562",
            "id": 868428562,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zwysS",
            "original_commit_id": "e4872b008c00182f918a99bcc888f5ed2bd27ec1",
            "original_line": 55,
            "original_position": 55,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/config.lua",
            "position": null,
            "pull_request_review_id": 966799757,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18506",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/868428562/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-09T20:31:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/868428562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/18506#discussion_r868453269"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/18506"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/868453269"
                }
            },
            "author_association": "MEMBER",
            "body": "Here's a bikeshedding opportunity: right now the way this works is that `root_markers` overrides the values in the `defaults` table (the same as every other option). So if you want to use a common set of root markers (e.g. `.git`, `.hg`, etc.) you need to add those explicitly to each server configuration.\r\n\r\nThis is obviously tedious and annoying, so I'm open to suggestions. Possible solutions:\r\n\r\n1. Make `root_markers` a special case that combines with the value in `defaults` (not a fan of this, because special cases are confusing and then there's no way to *disable* the default root markers)\r\n2. Add a separate option like `common_root_markers` or `use_vcs_root` that is separate from the `root_markers` option. I think this is much better than (1), but still not great\r\n3. Just live with it and tell people to do this:\r\n\r\n   ```lua\r\n   local vcs = { \".git\", \".hg\", \".svn\"}\r\n   vim.lsp.config({ servers = {\r\n     clangd = {\r\n       root_markers = { \"compile_commands.json\", \"compile_flags.txt\", unpack(vcs) },\r\n     },\r\n   }})\r\n   ```",
            "commit_id": "e4df9ef51ed4fc3d37d7cebd464dbcb47c6703b0",
            "created_at": "2022-05-09T20:55:59Z",
            "diff_hunk": "@@ -663,6 +676,119 @@ client_is_stopped({client_id})                   *vim.lsp.client_is_stopped()*\n                 Return: ~\n                     true if client is stopped, false otherwise.\n \n+config({config})                                            *vim.lsp.config()*\n+                Frontend for LSP configuration.\n+\n+                This is a high-level configuration function that creates the\n+                necessary plumbing for automatically creating and configuring\n+                LSP clients for a given filetype.\n+\n+                When called without arguments, this function returns a copy of\n+                the current LSP configuration table.\n+\n+                This function can be called more than once and each call will\n+                modify the options given in prior calls. The exception is the\n+                \"servers\" option (see below), which is always additive. The\n+                Nvim LSP subsystem uses a concept of \"root directories\" that\n+                group together related files. Two buffers with the same\n+                filetype that fall under the same root directory will attach\n+                to the same client. Root directories are determined in one of\n+                two ways:\n+\n+                1. Explicitly by specifying a \"root_dir\" parameter to a server\n+                   configuration. This can be useful in project local\n+                   configuration files when all buffers of a given filetype\n+                   should use the same root directory.\n+                2. Passing a list of root markers to the \"root_markers\"\n+                   parameter in a server configuration. When a buffer is\n+                   opened Nvim will recursively ascend the filesystem starting\n+                   from the buffer's directory. The first directory found that\n+                   contains any of the file or directory names listed in\n+                   \"root_markers\" is considered the root directory.\n+\n+                Example: >\n+\n+                 vim.lsp.config({\n+                   defaults = {\n+                     autostart = false,\n+                     flags = { allow_incremental_sync = true },\n+                   },\n+                   servers = {\n+                     clangd = {\n+                       filetypes = { 'c', 'cpp' },\n+                       autostart = true,\n+                       cmd = { 'clangd', '--background-index' },\n+                       root_markers = { 'compile_commands.json', 'compile_flags.txt' },\n+                     },\n+                     ['lua-language-server'] = {\n+                       filetypes = { 'lua' },\n+                       cmd = { 'lua-language-server' },\n+                       root_markers = { '.luarc.json', 'luarc.json' },\n+                       single_file_support = true,\n+                     },\n+                     gopls = {\n+                       filetypes = { 'go', 'gomod' },\n+                       cmd = { 'gopls' },\n+                       root_markers = { 'go.mod' },\n+                       settings = {\n+                         gopls = {\n+                           analyses = {\n+                             unusedparams = true,\n+                           },\n+                         },\n+                       },\n+                     },\n+                   }\n+                 })\n+<\n+\n+                Parameters: ~\n+                    {config}  (table|nil) Configuration table with two keys:\n+                              \"defaults\" and \"servers\". The \"servers\" table\n+                              takes a list of key-value pairs mapping\n+                              (arbitrary) server names to server\n+                              configurations. Both the \"defaults\" table as\n+                              well as the individual server configuration\n+                              tables accept any of the keys listed in\n+                              |vim.lsp.start_client()|. The keys specified in\n+                              \"defaults\" will act as default values for all\n+                              servers unless overriden by a configuration in\n+                              \"servers\". The \"root_dir\" option can also be a\n+                              function, in which case it is passed the file\n+                              path and buffer number of the buffer and should\n+                              return the root directory to use. In addition to\n+                              the keys listed in |vim.lsp.start_client()| the\n+                              following keys are recognized:\n+                              • filetypes (table): This option is only valid\n+                                for server configurations in \"servers\". A list\n+                                of filetypes for which this server\n+                                configuration should map to.\n+                              • autostart (boolean or function, default true):\n+                                Automatically start or attach an LSP client\n+                                for new buffers. When a function, it is called\n+                                with the file name and buffer number of the\n+                                buffer and should return a boolean indicating\n+                                if the client should autostart. When autostart\n+                                is false, a configured LSP server can be\n+                                started manually using |vim.lsp.buf_start()|.\n+                              • root_markers (table): A list of file or",
            "html_url": "https://github.com/neovim/neovim/pull/18506#discussion_r868453269",
            "id": 868453269,
            "line": 774,
            "node_id": "PRRC_kwDOAPphoM4zw4uV",
            "original_commit_id": "e4872b008c00182f918a99bcc888f5ed2bd27ec1",
            "original_line": 774,
            "original_position": 119,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 119,
            "pull_request_review_id": 966823320,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/18506",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/868453269/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-09T20:55:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/868453269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Can `root_markers` optionally be a function that takes in the cwd and returns the root directory?",
            "created_at": "2022-05-09T19:54:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1121514029",
            "id": 1121514029,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5C2PIt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121514029/reactions"
            },
            "updated_at": "2022-05-09T21:49:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121514029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Can `root_markers` optionally be a function that takes in the cwd and returns the root directory?\r\n\r\nThe `root_dir` option can do this. It accepts either a string or a function, and the function accepts the buffer's directory and buffer number as parameters and can return the root dir to use.",
            "created_at": "2022-05-09T19:59:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1121518201",
            "id": 1121518201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5C2QJ5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121518201/reactions"
            },
            "updated_at": "2022-05-09T19:59:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121518201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wonder, maybe values set with `vim.lsp.config` should be somehow accessible. For example by making `vim.lsp.config` a metatable with `__call` metamethod, and making the values from the table read only.",
            "created_at": "2022-05-09T20:04:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1121522713",
            "id": 1121522713,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5C2RQZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121522713/reactions"
            },
            "updated_at": "2022-05-09T21:49:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121522713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`vim.lsp.config()` (with no arguments) returns a deepcopy of the full configuration table.",
            "created_at": "2022-05-09T20:05:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1121524269",
            "id": 1121524269,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5C2Rot",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121524269/reactions"
            },
            "updated_at": "2022-05-09T20:05:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121524269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I really don't think this is the way to go.\r\n\r\n I think we should move away from servers \"owning\" (and thus overwriting each other's on_attach even with autocommands) the configuration state, towards a system which emphasizes multi-server setups front and center (projects). \r\n\r\nProjects should be multiroot, and capable of sharing language servers via the workspaceFolder feature. The paradigm in this PR is significantly too rigid.\r\n\r\nI don't like the lspconfig design and this basically solidifies the approach in core, and I don't think lspconfig should be upstreamed only to fundamentally be replaced down the line with something better.\r\n\r\nA project based model solves many issues with how to delegate features to which server (or to some plugin, like null-ls).\r\n\r\nAlso, root_markers as a list of strings should not be a baked in concept like this, there are too many special cases that require more complicated logic (nested git projects, rust, etc). I don't think it's good design to have essentially duplicate overlap with root_dir (which should be removed IMO in favor of the more generic workspaceFolders adopted by the spec)\r\n\r\nI don't like the approach of shoving all configuration for servers inside a nested table inside a generic vim.lsp.config.\r\n\r\nI would look at what I started with https://github.com/mjlbach/projects.nvim instead which although unfinished gives an idea of what I was thinking about, or the lspconfig roadmap. I did spend a lot of time putting thought into this, so I hope that you take the time to read through it.\r\n\r\nI'm busy for the next 2 weeks due to a conference, but I will unretire myself to implement projects as an alternative to this PR.",
            "created_at": "2022-05-10T05:50:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1121958744",
            "id": 1121958744,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5C37tY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 18,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 18,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121958744/reactions"
            },
            "updated_at": "2022-05-10T06:17:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1121958744",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> towards a system which emphasizes multi-server setups front and center (projects) ... Projects should be multiroot,\r\n\r\n@mjlbach this is a great callout. As a low-risk step, any objection to moving these parts into core?:\r\n\r\n1. root-finder (`vim.path.find_root()` ?)\r\n2. `lsp.config.validate` (I assume we'll still need a `lsp.config` namespace once we have a \"project\" concept)\r\n\r\n\r\n",
            "created_at": "2022-05-11T15:59:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1123963832",
            "id": 1123963832,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5C_lO4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1123963832/reactions"
            },
            "updated_at": "2022-05-11T16:01:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1123963832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> root-finder (vim.path.find_root() ?)\r\n\r\nI would keep it as a higher level utility function generically for running callbacks on path traversal, rather than having any harcoded string based method (like root_dir(`pyproject.toml`), etc.), as for nomenclature vscode/the lsp specification has moved away from root and now calls it workspace folders, which I think we should follow.\r\n\r\n> lsp.config.validate (I assume we'll still need a lsp.config namespace once we have a \"project\" concept)\r\n\r\nI'm not sure this is super necessary as the arguments to start_client themselves should be validated, but it could make sense if we have a project configuration to have a similar validation to start_client.",
            "created_at": "2022-05-15T17:18:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1126981752",
            "id": 1126981752,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5DLGB4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1126981752/reactions"
            },
            "updated_at": "2022-05-15T17:18:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1126981752",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I would keep it as a higher level utility function generically for running callbacks on path traversal, rather than having any harcoded string based method\r\n\r\nPerfect, totally agree.",
            "created_at": "2022-05-15T18:24:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1126991360",
            "id": 1126991360,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5DLIYA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1126991360/reactions"
            },
            "updated_at": "2022-05-15T18:24:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1126991360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Also, root_markers as a list of strings should not be a baked in ... essentially duplicate overlap with root_dir (which should be removed IMO in favor of the more generic workspaceFolders adopted by the spec)\r\n\r\nThis seems like a reasonably solvable problem (in this PR), am I wrong?\r\n\r\n> towards a system which emphasizes multi-server setups front and center (projects) ... Projects should be multiroot,\r\n\r\nHow far can we get with the \"obvious\" approach of per-server config? Most pain is coming from the lack of a good [config interface for Nvim LSP](https://github.com/neovim/neovim/issues/24054). I suspect that multi-server is something we can solve later, without much interface churn.",
            "created_at": "2023-06-17T23:41:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1595888569",
            "id": 1595888569,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5fH1O5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1595888569/reactions"
            },
            "updated_at": "2023-06-17T23:42:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1595888569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Just a random passerby (please feel free to minimize this comment if you'd like), but I'm curious if moving to a higher level multi-root \"projects\" design for LSP configuration still an active goal for Neovim? If so, is there a ticket tracking this effort for the future, if it doesn't land as part of this PR?",
            "created_at": "2024-02-24T14:41:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/18506#issuecomment-1962390705",
            "id": 1962390705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
            "node_id": "IC_kwDOAPphoM5097Sx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962390705/reactions"
            },
            "updated_at": "2024-02-24T14:41:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1962390705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322831?v=4",
                "events_url": "https://api.github.com/users/ebkalderon/events{/privacy}",
                "followers_url": "https://api.github.com/users/ebkalderon/followers",
                "following_url": "https://api.github.com/users/ebkalderon/following{/other_user}",
                "gists_url": "https://api.github.com/users/ebkalderon/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ebkalderon",
                "id": 322831,
                "login": "ebkalderon",
                "node_id": "MDQ6VXNlcjMyMjgzMQ==",
                "organizations_url": "https://api.github.com/users/ebkalderon/orgs",
                "received_events_url": "https://api.github.com/users/ebkalderon/received_events",
                "repos_url": "https://api.github.com/users/ebkalderon/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ebkalderon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ebkalderon/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ebkalderon"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/18506/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/18506/commits",
    "created_at": "2022-05-09T19:48:59Z",
    "diff_url": "https://github.com/neovim/neovim/pull/18506.diff",
    "draft": false,
    "head": {
        "label": "gpanders:lsp-config",
        "ref": "lsp-config",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-02-26T17:33:19Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 251599,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e4df9ef51ed4fc3d37d7cebd464dbcb47c6703b0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/18506",
    "id": 931578517,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/18506",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "216bac4002ad829e8eb813ae93b1623a71d9fa2b",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 301,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-04-01T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 132,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-02-26T17:33:18Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM43hsKV",
    "number": 18506,
    "patch_url": "https://github.com/neovim/neovim/pull/18506.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/18506/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e4df9ef51ed4fc3d37d7cebd464dbcb47c6703b0",
    "title": "feat(lsp): add vim.lsp.config",
    "updated_at": "2024-02-24T14:41:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/18506",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}