{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27067/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27067/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27067"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27067"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27067/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1de9810ead0459618b1d3711236185428f02a02f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5156,
            "forks_count": 5156,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1738,
            "open_issues_count": 1738,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-23T01:27:16Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 251208,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72998,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-23T01:05:36Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72998,
            "watchers_count": 72998,
            "web_commit_signoff_required": false
        },
        "sha": "fa9a85ae468b9df30ae9e5c05a08c0f124e267df",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem: Sharing queries with upstream tree-sitter and Helix is difficult. Also, queries look funky.\r\n\r\nSolution: Use treesitter standard captures and Helix (Sublime-style) captures where reasonable. Document them to make them official. Also, format queries with formatting tool. Sync queries with nvim-treesitter.\r\n\r\nThis essentially defines a **full** set of canonical capture names and is a step toward declaring treesitter highlighting as stable. (It also effectively transfers ownership of the \"canonical list\" to Neovim core.)\r\n\r\nSee https://github.com/nvim-treesitter/nvim-treesitter/pull/5831\r\n\r\n@echasnovski I defined all treesitter highlight groups from the \"standard set\" by linking to default captures (unless the standard fallback looked reasonable); I expect you'll fine tune this based on the default colorscheme. Nevertheless, if you notice a group where a different link would be better, let me know.\r\n",
    "closed_at": "2024-01-21T09:41:19Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1455971159"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455971159"
                }
            },
            "author_association": "MEMBER",
            "body": "Personally, I'd prefer `Constant` for this.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:13:06Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1455971159",
            "id": 1455971159,
            "line": 240,
            "node_id": "PRRC_kwDOAPphoM5WyFtX",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 240,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 24,
            "pull_request_review_id": 1827668301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455971159/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:13:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455971159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1455972643"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455972643"
                }
            },
            "author_association": "MEMBER",
            "body": "These are docstrings as in Python or Julia; not 100% happy with this link and open to better suggestions.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:13:43Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1455972643",
            "id": 1455972643,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WyGEj",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 247,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827669569,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455972643/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:13:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455972643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1455975758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455975758"
                }
            },
            "author_association": "MEMBER",
            "body": "In my own colorscheme, I have defined new \"standard groups\" `Bold`, `Italic`, and `Strikethrough` to link here, in analogy to `Underlined`. Maybe that would be useful here as well?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:15:02Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1455975758",
            "id": 1455975758,
            "line": 303,
            "node_id": "PRRC_kwDOAPphoM5WyG1O",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 303,
            "original_position": 76,
            "original_start_line": 301,
            "path": "src/nvim/highlight_group.c",
            "position": 125,
            "pull_request_review_id": 1827672303,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455975758/reactions"
            },
            "side": "RIGHT",
            "start_line": 300,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-17T16:16:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455975758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1455976622"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455976622"
                }
            },
            "author_association": "MEMBER",
            "body": "Open to better suggestions.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:15:23Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1455976622",
            "id": 1455976622,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WyHCu",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 310,
            "original_position": 82,
            "original_start_line": 309,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827672303,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455976622/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-17T16:16:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455976622",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1455977001"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455977001"
                }
            },
            "author_association": "MEMBER",
            "body": "Open to better suggestions.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:15:33Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",\n+\n+  \"default link @markup.raw  Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1455977001",
            "id": 1455977001,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WyHIp",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 316,
            "original_position": 88,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827672303,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455977001/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:16:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455977001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1455977634"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455977634"
                }
            },
            "author_association": "MEMBER",
            "body": "Note",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:15:48Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",\n+\n+  \"default link @markup.raw  Comment\",\n+\n+  \"default link @markup.list            Special\",\n+  \"default link @markup.list.checked    DiagnosticOk\",\n+  \"default link @markup.list.unchecked  DiagnosticWarn\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1455977634",
            "id": 1455977634,
            "line": 317,
            "node_id": "PRRC_kwDOAPphoM5WyHSi",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 317,
            "original_position": 92,
            "original_start_line": 318,
            "path": "src/nvim/highlight_group.c",
            "position": 139,
            "pull_request_review_id": 1827672303,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455977634/reactions"
            },
            "side": "RIGHT",
            "start_line": 315,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-17T16:16:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1455977634",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1456072427"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456072427"
                }
            },
            "author_association": "MEMBER",
            "body": "Should link to `String`, imo.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:55:00Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1456072427",
            "id": 1456072427,
            "in_reply_to_id": 1455972643,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Wyebr",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 247,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827757432,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456072427/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:55:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456072427",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1456074984"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456074984"
                }
            },
            "author_association": "MEMBER",
            "body": "What is `@markup.raw`?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:56:07Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",\n+\n+  \"default link @markup.raw  Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1456074984",
            "id": 1456074984,
            "in_reply_to_id": 1455977001,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WyfDo",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 316,
            "original_position": 88,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827759585,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456074984/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:56:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456074984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1456076939"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456076939"
                }
            },
            "author_association": "MEMBER",
            "body": "Then I can just drop this (default link `@spam.ham` -> `@spam`).",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:56:55Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1456076939",
            "id": 1456076939,
            "in_reply_to_id": 1455972643,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WyfiL",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 247,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827761153,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456076939/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:56:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456076939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1456081816"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456081816"
                }
            },
            "author_association": "MEMBER",
            "body": "See the updated `:h treesitter-highlight-groups` (inline codeblocks).",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-17T16:59:05Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",\n+\n+  \"default link @markup.raw  Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1456081816",
            "id": 1456081816,
            "in_reply_to_id": 1455977001,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WyguY",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 316,
            "original_position": 88,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1827765317,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456081816/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-17T16:59:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456081816",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1456721897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456721897"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In nvim-treesitter this section is as follows:\r\n```scheme\r\n((identifier) @type.builtin\r\n  ; format-ignore\r\n  (#any-of? @type.builtin\r\n    ; https://docs.python.org/3/library/exceptions.html\r\n    \"BaseException\" \"Exception\" \"ArithmeticError\" \"BufferError\" \"LookupError\" \"AssertionError\" \"AttributeError\"\r\n    \"EOFError\" \"FloatingPointError\" \"GeneratorExit\" \"ImportError\" \"ModuleNotFoundError\" \"IndexError\" \"KeyError\"\r\n    \"KeyboardInterrupt\" \"MemoryError\" \"NameError\" \"NotImplementedError\" \"OSError\" \"OverflowError\" \"RecursionError\"\r\n    \"ReferenceError\" \"RuntimeError\" \"StopIteration\" \"StopAsyncIteration\" \"SyntaxError\" \"IndentationError\" \"TabError\"\r\n    \"SystemError\" \"SystemExit\" \"TypeError\" \"UnboundLocalError\" \"UnicodeError\" \"UnicodeEncodeError\" \"UnicodeDecodeError\"\r\n    \"UnicodeTranslateError\" \"ValueError\" \"ZeroDivisionError\" \"EnvironmentError\" \"IOError\" \"WindowsError\"\r\n    \"BlockingIOError\" \"ChildProcessError\" \"ConnectionError\" \"BrokenPipeError\" \"ConnectionAbortedError\"\r\n    \"ConnectionRefusedError\" \"ConnectionResetError\" \"FileExistsError\" \"FileNotFoundError\" \"InterruptedError\"\r\n    \"IsADirectoryError\" \"NotADirectoryError\" \"PermissionError\" \"ProcessLookupError\" \"TimeoutError\" \"Warning\"\r\n    \"UserWarning\" \"DeprecationWarning\" \"PendingDeprecationWarning\" \"SyntaxWarning\" \"RuntimeWarning\"\r\n    \"FutureWarning\" \"ImportWarning\" \"UnicodeWarning\" \"BytesWarning\" \"ResourceWarning\"\r\n    ; https://docs.python.org/3/library/stdtypes.html\r\n    \"bool\" \"int\" \"float\" \"complex\" \"list\" \"tuple\" \"range\" \"str\"\r\n    \"bytes\" \"bytearray\" \"memoryview\" \"set\" \"frozenset\" \"dict\" \"type\" \"object\"))\r\n```\r\nI think it should look similar to that, or should it not matter",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T01:50:47Z",
            "diff_hunk": "@@ -280,72 +313,79 @@\n   \"finally\"\n ] @exception\n \n-(raise_statement \"from\" @exception)\n+(raise_statement\n+  \"from\" @exception)\n \n (try_statement\n   (else_clause\n     \"else\" @exception))\n \n-[\"(\" \")\" \"[\" \"]\" \"{\" \"}\"] @punctuation.bracket\n+[\n+  \"(\"\n+  \")\"\n+  \"[\"\n+  \"]\"\n+  \"{\"\n+  \"}\"\n+] @punctuation.bracket\n \n (interpolation\n   \"{\" @punctuation.special\n   \"}\" @punctuation.special)\n \n (type_conversion) @function.macro\n \n-[\",\" \".\" \":\" \";\" (ellipsis)] @punctuation.delimiter\n-\n-;; Class definitions\n-\n-(class_definition name: (identifier) @type)\n+[\n+  \",\"\n+  \".\"\n+  \":\"\n+  \";\"\n+  (ellipsis)\n+] @punctuation.delimiter\n+\n+; Class definitions\n+(class_definition\n+  name: (identifier) @type)\n \n (class_definition\n-  body: (block\n-          (function_definition\n-            name: (identifier) @method)))\n+  body:\n+    (block\n+      (function_definition\n+        name: (identifier) @method)))\n \n (class_definition\n-  superclasses: (argument_list\n-                  (identifier) @type))\n+  superclasses:\n+    (argument_list\n+      (identifier) @type))\n \n ((class_definition\n-  body: (block\n-          (expression_statement\n-            (assignment\n-              left: (identifier) @field))))\n- (#lua-match? @field \"^%l.*$\"))\n+  body:\n+    (block\n+      (expression_statement\n+        (assignment\n+          left: (identifier) @field))))\n+  (#lua-match? @field \"^%l.*$\"))\n+\n ((class_definition\n-  body: (block\n-          (expression_statement\n-            (assignment\n-              left: (_\n-                     (identifier) @field)))))\n- (#lua-match? @field \"^%l.*$\"))\n+  body:\n+    (block\n+      (expression_statement\n+        (assignment\n+          left:\n+            (_\n+              (identifier) @field)))))\n+  (#lua-match? @field \"^%l.*$\"))\n \n ((class_definition\n   (block\n     (function_definition\n       name: (identifier) @constructor)))\n- (#any-of? @constructor \"__new__\" \"__init__\"))\n+  (#any-of? @constructor \"__new__\" \"__init__\"))\n \n ((identifier) @type.builtin\n- (#any-of? @type.builtin\n-              ;; https://docs.python.org/3/library/exceptions.html\n-              \"BaseException\" \"Exception\" \"ArithmeticError\" \"BufferError\" \"LookupError\" \"AssertionError\" \"AttributeError\"\n-              \"EOFError\" \"FloatingPointError\" \"GeneratorExit\" \"ImportError\" \"ModuleNotFoundError\" \"IndexError\" \"KeyError\"\n-              \"KeyboardInterrupt\" \"MemoryError\" \"NameError\" \"NotImplementedError\" \"OSError\" \"OverflowError\" \"RecursionError\"\n-              \"ReferenceError\" \"RuntimeError\" \"StopIteration\" \"StopAsyncIteration\" \"SyntaxError\" \"IndentationError\" \"TabError\"\n-              \"SystemError\" \"SystemExit\" \"TypeError\" \"UnboundLocalError\" \"UnicodeError\" \"UnicodeEncodeError\" \"UnicodeDecodeError\"\n-              \"UnicodeTranslateError\" \"ValueError\" \"ZeroDivisionError\" \"EnvironmentError\" \"IOError\" \"WindowsError\"\n-              \"BlockingIOError\" \"ChildProcessError\" \"ConnectionError\" \"BrokenPipeError\" \"ConnectionAbortedError\"\n-              \"ConnectionRefusedError\" \"ConnectionResetError\" \"FileExistsError\" \"FileNotFoundError\" \"InterruptedError\"\n-              \"IsADirectoryError\" \"NotADirectoryError\" \"PermissionError\" \"ProcessLookupError\" \"TimeoutError\" \"Warning\"\n-              \"UserWarning\" \"DeprecationWarning\" \"PendingDeprecationWarning\" \"SyntaxWarning\" \"RuntimeWarning\"\n-              \"FutureWarning\" \"ImportWarning\" \"UnicodeWarning\" \"BytesWarning\" \"ResourceWarning\"\n-              ;; https://docs.python.org/3/library/stdtypes.html\n-              \"bool\" \"int\" \"float\" \"complex\" \"list\" \"tuple\" \"range\" \"str\"\n-              \"bytes\" \"bytearray\" \"memoryview\" \"set\" \"frozenset\" \"dict\" \"type\" \"object\"))\n-\n-;; Error\n+  (#any-of? @type.builtin ; https://docs.python.org/3/library/exceptions.html",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1456721897",
            "id": 1456721897,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W08_p",
            "original_commit_id": "cbbafb5992d0031b7e898f849966e6c568b2bd49",
            "original_line": 386,
            "original_position": 434,
            "original_start_line": null,
            "path": "runtime/queries/python/highlights.scm",
            "position": null,
            "pull_request_review_id": 1828560123,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456721897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T01:50:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1456721897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457032622"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457032622"
                }
            },
            "author_association": "MEMBER",
            "body": "That's exactly what it looks like here?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T07:29:02Z",
            "diff_hunk": "@@ -280,72 +313,79 @@\n   \"finally\"\n ] @exception\n \n-(raise_statement \"from\" @exception)\n+(raise_statement\n+  \"from\" @exception)\n \n (try_statement\n   (else_clause\n     \"else\" @exception))\n \n-[\"(\" \")\" \"[\" \"]\" \"{\" \"}\"] @punctuation.bracket\n+[\n+  \"(\"\n+  \")\"\n+  \"[\"\n+  \"]\"\n+  \"{\"\n+  \"}\"\n+] @punctuation.bracket\n \n (interpolation\n   \"{\" @punctuation.special\n   \"}\" @punctuation.special)\n \n (type_conversion) @function.macro\n \n-[\",\" \".\" \":\" \";\" (ellipsis)] @punctuation.delimiter\n-\n-;; Class definitions\n-\n-(class_definition name: (identifier) @type)\n+[\n+  \",\"\n+  \".\"\n+  \":\"\n+  \";\"\n+  (ellipsis)\n+] @punctuation.delimiter\n+\n+; Class definitions\n+(class_definition\n+  name: (identifier) @type)\n \n (class_definition\n-  body: (block\n-          (function_definition\n-            name: (identifier) @method)))\n+  body:\n+    (block\n+      (function_definition\n+        name: (identifier) @method)))\n \n (class_definition\n-  superclasses: (argument_list\n-                  (identifier) @type))\n+  superclasses:\n+    (argument_list\n+      (identifier) @type))\n \n ((class_definition\n-  body: (block\n-          (expression_statement\n-            (assignment\n-              left: (identifier) @field))))\n- (#lua-match? @field \"^%l.*$\"))\n+  body:\n+    (block\n+      (expression_statement\n+        (assignment\n+          left: (identifier) @field))))\n+  (#lua-match? @field \"^%l.*$\"))\n+\n ((class_definition\n-  body: (block\n-          (expression_statement\n-            (assignment\n-              left: (_\n-                     (identifier) @field)))))\n- (#lua-match? @field \"^%l.*$\"))\n+  body:\n+    (block\n+      (expression_statement\n+        (assignment\n+          left:\n+            (_\n+              (identifier) @field)))))\n+  (#lua-match? @field \"^%l.*$\"))\n \n ((class_definition\n   (block\n     (function_definition\n       name: (identifier) @constructor)))\n- (#any-of? @constructor \"__new__\" \"__init__\"))\n+  (#any-of? @constructor \"__new__\" \"__init__\"))\n \n ((identifier) @type.builtin\n- (#any-of? @type.builtin\n-              ;; https://docs.python.org/3/library/exceptions.html\n-              \"BaseException\" \"Exception\" \"ArithmeticError\" \"BufferError\" \"LookupError\" \"AssertionError\" \"AttributeError\"\n-              \"EOFError\" \"FloatingPointError\" \"GeneratorExit\" \"ImportError\" \"ModuleNotFoundError\" \"IndexError\" \"KeyError\"\n-              \"KeyboardInterrupt\" \"MemoryError\" \"NameError\" \"NotImplementedError\" \"OSError\" \"OverflowError\" \"RecursionError\"\n-              \"ReferenceError\" \"RuntimeError\" \"StopIteration\" \"StopAsyncIteration\" \"SyntaxError\" \"IndentationError\" \"TabError\"\n-              \"SystemError\" \"SystemExit\" \"TypeError\" \"UnboundLocalError\" \"UnicodeError\" \"UnicodeEncodeError\" \"UnicodeDecodeError\"\n-              \"UnicodeTranslateError\" \"ValueError\" \"ZeroDivisionError\" \"EnvironmentError\" \"IOError\" \"WindowsError\"\n-              \"BlockingIOError\" \"ChildProcessError\" \"ConnectionError\" \"BrokenPipeError\" \"ConnectionAbortedError\"\n-              \"ConnectionRefusedError\" \"ConnectionResetError\" \"FileExistsError\" \"FileNotFoundError\" \"InterruptedError\"\n-              \"IsADirectoryError\" \"NotADirectoryError\" \"PermissionError\" \"ProcessLookupError\" \"TimeoutError\" \"Warning\"\n-              \"UserWarning\" \"DeprecationWarning\" \"PendingDeprecationWarning\" \"SyntaxWarning\" \"RuntimeWarning\"\n-              \"FutureWarning\" \"ImportWarning\" \"UnicodeWarning\" \"BytesWarning\" \"ResourceWarning\"\n-              ;; https://docs.python.org/3/library/stdtypes.html\n-              \"bool\" \"int\" \"float\" \"complex\" \"list\" \"tuple\" \"range\" \"str\"\n-              \"bytes\" \"bytearray\" \"memoryview\" \"set\" \"frozenset\" \"dict\" \"type\" \"object\"))\n-\n-;; Error\n+  (#any-of? @type.builtin ; https://docs.python.org/3/library/exceptions.html",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457032622",
            "id": 1457032622,
            "in_reply_to_id": 1456721897,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W2I2u",
            "original_commit_id": "cbbafb5992d0031b7e898f849966e6c568b2bd49",
            "original_line": 386,
            "original_position": 434,
            "original_start_line": null,
            "path": "runtime/queries/python/highlights.scm",
            "position": null,
            "pull_request_review_id": 1829025090,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457032622/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T07:29:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457032622",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457180214"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457180214"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Other instances of `.builtin` link to `Special`. Is it reasonable to also have here?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T09:42:00Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457180214",
            "id": 1457180214,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W2s42",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 235,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457180214/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457180214",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457182921"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457182921"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Description of `@variable.member` says that it is \"object and struct fields\". Is `Structure` highlight group closer semantically here?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T09:44:05Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457182921",
            "id": 1457182921,
            "line": 237,
            "node_id": "PRRC_kwDOAPphoM5W2tjJ",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 237,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 21,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457182921/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457182921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457186927"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457186927"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "To be sure, are you talking about `@constant.builtin`? I find having all `.builtin` groups link to `Special` a nice property. It also work well with default color scheme (being `Special` is one of the few actually colored groups).",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T09:47:18Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457186927",
            "id": 1457186927,
            "in_reply_to_id": 1455971159,
            "line": 240,
            "node_id": "PRRC_kwDOAPphoM5W2uhv",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 240,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 24,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457186927/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457186927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457189313"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457189313"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There is no `Module` highlight group by default. Maybe `Structure`? Previously `@namespace` was `Identifier`, so this is also a possibility.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T09:49:03Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457189313",
            "id": 1457189313,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W2vHB",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 243,
            "original_position": 65,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457189313/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457189313",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457189898"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457189898"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Should link to `String`, imo.\r\n\r\nI think I agree.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T09:49:27Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457189898",
            "id": 1457189898,
            "in_reply_to_id": 1455972643,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W2vQK",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 247,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457189898/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457189898",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457222708"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457222708"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'd add `@type.builtin` with link to `Special`.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T10:15:35Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457222708",
            "id": 1457222708,
            "line": 262,
            "node_id": "PRRC_kwDOAPphoM5W23Q0",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 262,
            "original_position": 84,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 84,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457222708/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457222708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457228315"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457228315"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Judging by \"attribute annotations (e.g. Python decorators)\" description, maybe `Macro` is semantically closer? Not exactly same, but just closer.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T10:18:38Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457228315",
            "id": 1457228315,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W24ob",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 265,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457228315/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457228315",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457321200"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457321200"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Judging by quick reading on LaTeX environments, they are somewhat similar to a `@namespace`, which is `@module` after this PR. So maybe the same which will be used for it?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:39:35Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457321200",
            "id": 1457321200,
            "in_reply_to_id": 1455976622,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3PTw",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 310,
            "original_position": 82,
            "original_start_line": 309,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457321200/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457321200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457323621"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457323621"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If you mean define those three groups here, then this looks like the thing better to first try to do in 'vim/vim'.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:41:54Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457323621",
            "id": 1457323621,
            "in_reply_to_id": 1455975758,
            "line": 303,
            "node_id": "PRRC_kwDOAPphoM5W3P5l",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 303,
            "original_position": 76,
            "original_start_line": 301,
            "path": "src/nvim/highlight_group.c",
            "position": 125,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457323621/reactions"
            },
            "side": "RIGHT",
            "start_line": 300,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457323621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457324551"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457324551"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "As `@markup.link.url` is same as `@markup.link`, maybe it is not needed to be defined here?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:42:45Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457324551",
            "id": 1457324551,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3QIH",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 314,
            "original_position": 136,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457324551/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457324551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457329927"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457329927"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've seen couple of times that for people working with frontend having `@tag.delimiter` be different to what is inside tag is important for usability. So maybe add `@tag.delimiter` that links to `Delimiter`? It will be less noticeable with default color scheme (`Delimiter` is cleared for now), but semantically might be better?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:48:01Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",\n+\n+  \"default link @markup.raw  Comment\",\n+\n+  \"default link @markup.list            Special\",\n+  \"default link @markup.list.checked    DiagnosticOk\",\n+  \"default link @markup.list.unchecked  DiagnosticWarn\",\n+\n+  \"default link @diff.plus   Added\",\n+  \"default link @diff.minus  Removed\",\n+  \"default link @diff.delta  Changed\",\n+\n+  \"default link @tag  Tag\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457329927",
            "id": 1457329927,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3RcH",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 326,
            "original_position": 148,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829264042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457329927/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457329927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457337837"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457337837"
                }
            },
            "author_association": "MEMBER",
            "body": "It's the fields _in_ a structure, so I don't think so (`Structure` is the itself)?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:55:48Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457337837",
            "id": 1457337837,
            "in_reply_to_id": 1457182921,
            "line": 237,
            "node_id": "PRRC_kwDOAPphoM5W3TXt",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 237,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 21,
            "pull_request_review_id": 1829513815,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457337837/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:55:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457337837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457338847"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457338847"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, my bad. Must have gotten distract... (\"look, a bird!\")",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:56:38Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457338847",
            "id": 1457338847,
            "in_reply_to_id": 1457189313,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3Tnf",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 243,
            "original_position": 65,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829515234,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457338847/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:56:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457338847",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457339036"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457339036"
                }
            },
            "author_association": "MEMBER",
            "body": "I think every \"builtin\" is different, but can be swayed. The links I set are supposed to replicate the links @gpanders made for the groups we already had.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:56:49Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457339036",
            "id": 1457339036,
            "in_reply_to_id": 1457180214,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3Tqc",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 235,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829515534,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457339036/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T11:56:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457339036",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457341360"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457341360"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think _any_ standard programming language concept is a good fit for LaTeX...\r\n\r\nI'm actually not happy about them being here at all, but here we are. I am fine just not defining them in the default scheme.\r\n\r\nAlternative: treat them like codeblocks and use the same link as for `@markup.raw`. I think that's my preference atm.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T11:59:02Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457341360",
            "id": 1457341360,
            "in_reply_to_id": 1455976622,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3UOw",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 310,
            "original_position": 82,
            "original_start_line": 309,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829519309,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457341360/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-18T11:59:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457341360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457344083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457344083"
                }
            },
            "author_association": "MEMBER",
            "body": "You are right; I think I wanted to be explicit, but that may not be needed here.\r\n\r\nHaving it _does_ make a difference: `link.url` will stay underlined if someone redefines `link`. That may be desirable in this(!) case?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:01:46Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457344083",
            "id": 1457344083,
            "in_reply_to_id": 1457324551,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3U5T",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 314,
            "original_position": 136,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829523824,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457344083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T12:01:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457344083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457351383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457351383"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Having it _does_ make a difference: `link.url` will stay underlined if someone redefines `link`. That may be desirable in this(!) case?\r\n\r\nMy personal opinion is that any link should be highlighted the same. Don't really see the use case for having URLs be intentionally highlighted separately by defining `@markup.link` but not `@markup.link.url`.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:08:36Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457351383",
            "id": 1457351383,
            "in_reply_to_id": 1457324551,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3WrX",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 314,
            "original_position": 136,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829535643,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457351383/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T12:08:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457351383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457352650"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457352650"
                }
            },
            "author_association": "MEMBER",
            "body": "> Previously @namespace was Identifier, so this is also a possibility.\r\n\r\nThen let's go with that for now. I think this is actually a sufficiently distinctive concept that it deserves its own \"top-level\" group; colorwise I'd suggest matching `Structure`?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:09:52Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457352650",
            "id": 1457352650,
            "in_reply_to_id": 1457189313,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3W_K",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 243,
            "original_position": 65,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829537766,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457352650/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T12:09:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457352650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457354513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457354513"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I don't know. To me highlighting everything semantically defined as `builtin` with same color has certain appeal. To a reasonable extent, of course. Not sure if there is a big use case here for the exception, though.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:11:33Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457354513",
            "id": 1457354513,
            "in_reply_to_id": 1457180214,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3XcR",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 235,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829540471,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457354513/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T12:11:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457354513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457356008"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457356008"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Alternative: treat them like codeblocks and use the same link as for `@markup.raw`. I think that's my preference atm.\r\n\r\nDon't have strong opinions here.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:12:58Z",
            "diff_hunk": "@@ -230,61 +230,108 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n+  \"default link @constant          Constant\",\n+  \"default link @constant.builtin  Special\",\n+  \"default link @constant.macro    Define\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457356008",
            "id": 1457356008,
            "in_reply_to_id": 1455976622,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3Xzo",
            "original_commit_id": "703377606d99bf89ff417082aed9bcb30fa7e168",
            "original_line": 310,
            "original_position": 82,
            "original_start_line": 309,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829542779,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457356008/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-18T12:12:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457356008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457361873"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457361873"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ok, so judging by [LSP spec](https://code.visualstudio.com/api/language-extensions/semantic-highlight-guide#standard-token-types-and-modifiers) (at least *some* outside source), a `@property` is what is the closest here: \"For identifiers that declare or reference a member property, member field, or member variable.\". So having `@variable.member` be same as `@property` (in future - link to it) seems more reasonable.\r\n\r\nAs `@property` is `Identifier` now, I withdraw my comment.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:18:16Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457361873",
            "id": 1457361873,
            "in_reply_to_id": 1457182921,
            "line": 237,
            "node_id": "PRRC_kwDOAPphoM5W3ZPR",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 237,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 21,
            "pull_request_review_id": 1829551457,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457361873/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T12:18:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457361873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457365551"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457365551"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Then let's go with that for now. I think this is actually a sufficiently distinctive concept that it deserves its own \"top-level\" group; colorwise I'd suggest matching `Structure`?\r\n\r\nYeah, I agree that `@module` is quite significant. But for now it should link to *something*. Either `Structure` or `Identifier` is fine for me. If pressured to choose, I'd choose `Structure`.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T12:21:43Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457365551",
            "id": 1457365551,
            "in_reply_to_id": 1457189313,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3aIv",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 243,
            "original_position": 65,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829557282,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457365551/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T12:21:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457365551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457431485"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457431485"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n; by a different node (e.g. block_continuation) we can safely read these\r\n```",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:21:15Z",
            "diff_hunk": "@@ -1,71 +1,119 @@\n ;From MDeiml/tree-sitter-markdown & Helix\n-(setext_heading (paragraph) @text.title.1 (setext_h1_underline) @text.title.1.marker)\n-(setext_heading (paragraph) @text.title.2 (setext_h2_underline) @text.title.2.marker)\n+(setext_heading\n+  (paragraph) @markup.heading.1\n+  (setext_h1_underline) @markup.heading.1.marker)\n \n-(atx_heading (atx_h1_marker) @text.title.1.marker (inline) @text.title.1)\n-(atx_heading (atx_h2_marker) @text.title.2.marker (inline) @text.title.2)\n-(atx_heading (atx_h3_marker) @text.title.3.marker (inline) @text.title.3)\n-(atx_heading (atx_h4_marker) @text.title.4.marker (inline) @text.title.4)\n-(atx_heading (atx_h5_marker) @text.title.5.marker (inline) @text.title.5)\n-(atx_heading (atx_h6_marker) @text.title.6.marker (inline) @text.title.6)\n+(setext_heading\n+  (paragraph) @markup.heading.2\n+  (setext_h2_underline) @markup.heading.2.marker)\n \n-(link_title) @text.literal\n-(indented_code_block) @text.literal.block\n-((fenced_code_block) @text.literal.block (#set! \"priority\" 90))\n+(atx_heading\n+  (atx_h1_marker) @markup.heading.1.marker\n+  (inline) @markup.heading.1)\n+\n+(atx_heading\n+  (atx_h2_marker) @markup.heading.2.marker\n+  (inline) @markup.heading.2)\n+\n+(atx_heading\n+  (atx_h3_marker) @markup.heading.3.marker\n+  (inline) @markup.heading.3)\n+\n+(atx_heading\n+  (atx_h4_marker) @markup.heading.4.marker\n+  (inline) @markup.heading.4)\n+\n+(atx_heading\n+  (atx_h5_marker) @markup.heading.5.marker\n+  (inline) @markup.heading.5)\n+\n+(atx_heading\n+  (atx_h6_marker) @markup.heading.6.marker\n+  (inline) @markup.heading.6)\n \n (info_string) @label\n \n-(pipe_table_header (pipe_table_cell) @text.title)\n+(pipe_table_header\n+  (pipe_table_cell) @markup.heading)\n+\n+(pipe_table_header\n+  \"|\" @punctuation.special)\n+\n+(pipe_table_row\n+  \"|\" @punctuation.special)\n+\n+(pipe_table_delimiter_row\n+  \"|\" @punctuation.special)\n \n-(pipe_table_header \"|\" @punctuation.special)\n-(pipe_table_row \"|\" @punctuation.special)\n-(pipe_table_delimiter_row \"|\" @punctuation.special)\n (pipe_table_delimiter_cell) @punctuation.special\n \n-[\n-  (fenced_code_block_delimiter)\n-] @punctuation.delimiter\n+; Code blocks (conceal backticks and language annotation)\n+(indented_code_block) @markup.raw.block\n \n-(code_fence_content) @none\n+((fenced_code_block) @markup.raw.block\n+  (#set! \"priority\" 90))\n \n-[\n-  (link_destination)\n-] @text.uri\n+(fenced_code_block\n+  (fenced_code_block_delimiter) @conceal\n+  (#set! conceal \"\"))\n+\n+(fenced_code_block\n+  (info_string\n+    (language) @conceal\n+    (#set! conceal \"\")))\n+\n+(link_destination) @markup.link.url\n \n [\n+  (link_title)\n   (link_label)\n-] @text.reference\n+] @markup.link.label\n \n [\n   (list_marker_plus)\n   (list_marker_minus)\n   (list_marker_star)\n   (list_marker_dot)\n   (list_marker_parenthesis)\n-  (thematic_break)\n-] @punctuation.special\n+] @markup.list\n+\n+; NOTE: The following has been commented out due to issues with spaces in the\n+; list marker nodes generated by the parser. If those spaces ever get captured\n+; by a different node (e.g. block_continuation) we can safely readd these",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457431485",
            "id": 1457431485,
            "line": 82,
            "node_id": "PRRC_kwDOAPphoM5W3qO9",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 82,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/queries/markdown/highlights.scm",
            "position": 113,
            "pull_request_review_id": 1829664099,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457431485/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:21:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457431485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/151598?v=4",
                "events_url": "https://api.github.com/users/noahfrederick/events{/privacy}",
                "followers_url": "https://api.github.com/users/noahfrederick/followers",
                "following_url": "https://api.github.com/users/noahfrederick/following{/other_user}",
                "gists_url": "https://api.github.com/users/noahfrederick/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noahfrederick",
                "id": 151598,
                "login": "noahfrederick",
                "node_id": "MDQ6VXNlcjE1MTU5OA==",
                "organizations_url": "https://api.github.com/users/noahfrederick/orgs",
                "received_events_url": "https://api.github.com/users/noahfrederick/received_events",
                "repos_url": "https://api.github.com/users/noahfrederick/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noahfrederick/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noahfrederick/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noahfrederick"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457433319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457433319"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n@comment.todo           todo-type comments (e.g., `TODO:`, `WIP:`)\r\n```",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:22:51Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives & shebangs\n+@keyword.directive.define    preprocessor definition directives\n+\n+@punctuation.delimiter  delimiters (e.g. `;` / `.` / `,`)\n+@punctuation.bracket    brackets (e.g. `()` / `{}` / `[]`)\n+@punctuation.special    special symbols (e.g. `{}` in string interpolation)\n+\n+@comment                line and block comments\n+@comment.documentation  comments documenting code\n+\n+@comment.error          error-type comments (e.g., `DEPRECATED:`)\n+@comment.warning        warning-type comments (e.g., `WARNING:`, `FIX:`)\n+@comment.hint           note-type comments (e.g., `NOTE:`)\n+@comment.info           info-type comments\n+@comment.todo           todo-type comments (e.g-, `TODO:`, `WIP:`)",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457433319",
            "id": 1457433319,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3qrn",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 482,
            "original_position": 135,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1829667466,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457433319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:22:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457433319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/151598?v=4",
                "events_url": "https://api.github.com/users/noahfrederick/events{/privacy}",
                "followers_url": "https://api.github.com/users/noahfrederick/followers",
                "following_url": "https://api.github.com/users/noahfrederick/following{/other_user}",
                "gists_url": "https://api.github.com/users/noahfrederick/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noahfrederick",
                "id": 151598,
                "login": "noahfrederick",
                "node_id": "MDQ6VXNlcjE1MTU5OA==",
                "organizations_url": "https://api.github.com/users/noahfrederick/orgs",
                "received_events_url": "https://api.github.com/users/noahfrederick/received_events",
                "repos_url": "https://api.github.com/users/noahfrederick/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noahfrederick/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noahfrederick/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noahfrederick"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457435387"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457435387"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Here and following items:\r\n\r\n```suggestion\r\n@variable.builtin       built-in variable names (e.g., `this`)\r\n```",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:24:06Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457435387",
            "id": 1457435387,
            "line": 407,
            "node_id": "PRRC_kwDOAPphoM5W3rL7",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 407,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": 60,
            "pull_request_review_id": 1829670147,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457435387/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:24:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457435387",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/151598?v=4",
                "events_url": "https://api.github.com/users/noahfrederick/events{/privacy}",
                "followers_url": "https://api.github.com/users/noahfrederick/followers",
                "following_url": "https://api.github.com/users/noahfrederick/following{/other_user}",
                "gists_url": "https://api.github.com/users/noahfrederick/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noahfrederick",
                "id": 151598,
                "login": "noahfrederick",
                "node_id": "MDQ6VXNlcjE1MTU5OA==",
                "organizations_url": "https://api.github.com/users/noahfrederick/orgs",
                "received_events_url": "https://api.github.com/users/noahfrederick/received_events",
                "repos_url": "https://api.github.com/users/noahfrederick/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noahfrederick/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noahfrederick/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noahfrederick"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457437952"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457437952"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n@keyword.directive           various preprocessor directives and shebangs\r\n```",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:26:01Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives & shebangs",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457437952",
            "id": 1457437952,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3r0A",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 468,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1829674004,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457437952/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:26:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457437952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/151598?v=4",
                "events_url": "https://api.github.com/users/noahfrederick/events{/privacy}",
                "followers_url": "https://api.github.com/users/noahfrederick/followers",
                "following_url": "https://api.github.com/users/noahfrederick/following{/other_user}",
                "gists_url": "https://api.github.com/users/noahfrederick/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noahfrederick",
                "id": 151598,
                "login": "noahfrederick",
                "node_id": "MDQ6VXNlcjE1MTU5OA==",
                "organizations_url": "https://api.github.com/users/noahfrederick/orgs",
                "received_events_url": "https://api.github.com/users/noahfrederick/received_events",
                "repos_url": "https://api.github.com/users/noahfrederick/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noahfrederick/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noahfrederick/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noahfrederick"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457471305"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457471305"
                }
            },
            "author_association": "MEMBER",
            "body": "Makes sense; I'll change that then.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:51:27Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457471305",
            "id": 1457471305,
            "in_reply_to_id": 1457180214,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W3z9J",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 235,
            "original_position": 19,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829727928,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457471305/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:51:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457471305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457471779"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457471779"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, that was exactly the reasoning.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:51:51Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457471779",
            "id": 1457471779,
            "in_reply_to_id": 1457182921,
            "line": 237,
            "node_id": "PRRC_kwDOAPphoM5W30Ej",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 237,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": 21,
            "pull_request_review_id": 1829728812,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457471779/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:51:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457471779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457473942"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457473942"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't, but that doesn't mean that it can happen (maybe people don't want _internal_ links to be underlined and reserve this for actual URLs?)\r\n\r\nAs it doesn't make any difference out of the box, I'm fine with either (with a small preference for keeping it this way, as it doesn't cost us anything).",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:53:38Z",
            "diff_hunk": "@@ -230,60 +230,100 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Identifier\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Module\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.documentation   Comment\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Function\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.hint     DiagnosticHint\",\n+  \"default link @comment.info     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Identifier\",\n+  \"default link @markup.environment  Identifier\",\n+\n+  \"default link @markup.link        Underlined\",\n+  \"default link @markup.link.label  Identifier\",\n+  \"default link @markup.link.url    Underlined\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457473942",
            "id": 1457473942,
            "in_reply_to_id": 1457324551,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5W30mW",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 314,
            "original_position": 136,
            "original_start_line": null,
            "path": "src/nvim/highlight_group.c",
            "position": null,
            "pull_request_review_id": 1829732416,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457473942/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:53:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457473942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457474902"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457474902"
                }
            },
            "author_association": "MEMBER",
            "body": "These are taken verbatim from nvim-treesitter; please make a PR there.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:54:19Z",
            "diff_hunk": "@@ -1,71 +1,119 @@\n ;From MDeiml/tree-sitter-markdown & Helix\n-(setext_heading (paragraph) @text.title.1 (setext_h1_underline) @text.title.1.marker)\n-(setext_heading (paragraph) @text.title.2 (setext_h2_underline) @text.title.2.marker)\n+(setext_heading\n+  (paragraph) @markup.heading.1\n+  (setext_h1_underline) @markup.heading.1.marker)\n \n-(atx_heading (atx_h1_marker) @text.title.1.marker (inline) @text.title.1)\n-(atx_heading (atx_h2_marker) @text.title.2.marker (inline) @text.title.2)\n-(atx_heading (atx_h3_marker) @text.title.3.marker (inline) @text.title.3)\n-(atx_heading (atx_h4_marker) @text.title.4.marker (inline) @text.title.4)\n-(atx_heading (atx_h5_marker) @text.title.5.marker (inline) @text.title.5)\n-(atx_heading (atx_h6_marker) @text.title.6.marker (inline) @text.title.6)\n+(setext_heading\n+  (paragraph) @markup.heading.2\n+  (setext_h2_underline) @markup.heading.2.marker)\n \n-(link_title) @text.literal\n-(indented_code_block) @text.literal.block\n-((fenced_code_block) @text.literal.block (#set! \"priority\" 90))\n+(atx_heading\n+  (atx_h1_marker) @markup.heading.1.marker\n+  (inline) @markup.heading.1)\n+\n+(atx_heading\n+  (atx_h2_marker) @markup.heading.2.marker\n+  (inline) @markup.heading.2)\n+\n+(atx_heading\n+  (atx_h3_marker) @markup.heading.3.marker\n+  (inline) @markup.heading.3)\n+\n+(atx_heading\n+  (atx_h4_marker) @markup.heading.4.marker\n+  (inline) @markup.heading.4)\n+\n+(atx_heading\n+  (atx_h5_marker) @markup.heading.5.marker\n+  (inline) @markup.heading.5)\n+\n+(atx_heading\n+  (atx_h6_marker) @markup.heading.6.marker\n+  (inline) @markup.heading.6)\n \n (info_string) @label\n \n-(pipe_table_header (pipe_table_cell) @text.title)\n+(pipe_table_header\n+  (pipe_table_cell) @markup.heading)\n+\n+(pipe_table_header\n+  \"|\" @punctuation.special)\n+\n+(pipe_table_row\n+  \"|\" @punctuation.special)\n+\n+(pipe_table_delimiter_row\n+  \"|\" @punctuation.special)\n \n-(pipe_table_header \"|\" @punctuation.special)\n-(pipe_table_row \"|\" @punctuation.special)\n-(pipe_table_delimiter_row \"|\" @punctuation.special)\n (pipe_table_delimiter_cell) @punctuation.special\n \n-[\n-  (fenced_code_block_delimiter)\n-] @punctuation.delimiter\n+; Code blocks (conceal backticks and language annotation)\n+(indented_code_block) @markup.raw.block\n \n-(code_fence_content) @none\n+((fenced_code_block) @markup.raw.block\n+  (#set! \"priority\" 90))\n \n-[\n-  (link_destination)\n-] @text.uri\n+(fenced_code_block\n+  (fenced_code_block_delimiter) @conceal\n+  (#set! conceal \"\"))\n+\n+(fenced_code_block\n+  (info_string\n+    (language) @conceal\n+    (#set! conceal \"\")))\n+\n+(link_destination) @markup.link.url\n \n [\n+  (link_title)\n   (link_label)\n-] @text.reference\n+] @markup.link.label\n \n [\n   (list_marker_plus)\n   (list_marker_minus)\n   (list_marker_star)\n   (list_marker_dot)\n   (list_marker_parenthesis)\n-  (thematic_break)\n-] @punctuation.special\n+] @markup.list\n+\n+; NOTE: The following has been commented out due to issues with spaces in the\n+; list marker nodes generated by the parser. If those spaces ever get captured\n+; by a different node (e.g. block_continuation) we can safely readd these",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457474902",
            "id": 1457474902,
            "in_reply_to_id": 1457431485,
            "line": 82,
            "node_id": "PRRC_kwDOAPphoM5W301W",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 82,
            "original_position": 107,
            "original_start_line": null,
            "path": "runtime/queries/markdown/highlights.scm",
            "position": 113,
            "pull_request_review_id": 1829733865,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457474902/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:54:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457474902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457475657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457475657"
                }
            },
            "author_association": "MEMBER",
            "body": "That's a style question; our docs predominantly omit the comma.\r\n",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T13:54:55Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457475657",
            "id": 1457475657,
            "in_reply_to_id": 1457435387,
            "line": 407,
            "node_id": "PRRC_kwDOAPphoM5W31BJ",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 407,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": 60,
            "pull_request_review_id": 1829735080,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457475657/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T13:54:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457475657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1457529891"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457529891"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Then the comma should be removed from other instances in this list.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-18T14:34:13Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1457529891",
            "id": 1457529891,
            "in_reply_to_id": 1457435387,
            "line": 407,
            "node_id": "PRRC_kwDOAPphoM5W4CQj",
            "original_commit_id": "7890c035f640fe04d1a92b35e6f62a4c07ccb472",
            "original_line": 407,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": 60,
            "pull_request_review_id": 1829827362,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457529891/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-18T14:34:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1457529891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/151598?v=4",
                "events_url": "https://api.github.com/users/noahfrederick/events{/privacy}",
                "followers_url": "https://api.github.com/users/noahfrederick/followers",
                "following_url": "https://api.github.com/users/noahfrederick/following{/other_user}",
                "gists_url": "https://api.github.com/users/noahfrederick/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/noahfrederick",
                "id": 151598,
                "login": "noahfrederick",
                "node_id": "MDQ6VXNlcjE1MTU5OA==",
                "organizations_url": "https://api.github.com/users/noahfrederick/orgs",
                "received_events_url": "https://api.github.com/users/noahfrederick/received_events",
                "repos_url": "https://api.github.com/users/noahfrederick/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/noahfrederick/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/noahfrederick/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/noahfrederick"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460166348"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460166348"
                }
            },
            "author_association": "MEMBER",
            "body": "Super nit and silly, but the lack of a naming convention is starting to annoy me: Is it Treesitter, treesitter, Tree-sitter, 3-sitter, ninja-gardener??\r\n\r\nTo be serious here, using both \"Treesitter\" and \"tree-sitter\" in the same documentation sentence looks quite confusing to me.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T03:26:20Z",
            "diff_hunk": "@@ -112,6 +112,11 @@ The following changes may require adaptations in user config or plugins.\n • 'termguicolors' is enabled by default when Nvim is able to determine that\n   the host terminal emulator supports 24-bit color.\n \n+• Treesitter highlight groups have been renamed to be more in line with",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460166348",
            "id": 1460166348,
            "line": 115,
            "node_id": "PRRC_kwDOAPphoM5XCF7M",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 115,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 1834476848,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460166348/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T03:48:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460166348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460172436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460172436"
                }
            },
            "author_association": "MEMBER",
            "body": "IDK how clear we were about this before, but what this makes me think as a vanilla Neovim user that has no advanced context/knowledge of these changes is: \"Ok I don't need to worry about `@tag` in my color theme bc I don't use XML at all\", yet a seemingly unrelated language like `yuck` [uses it in its queries](https://github.com/nvim-treesitter/nvim-treesitter/blob/4a4dbe1cb1da34d87fc42a40aaf8e218af4cfe0f/queries/yuck/highlights.scm#L4).\r\n\r\nMaybe it would be worth it to document such a gotcha here?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T03:44:13Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives and shebangs\n+@keyword.directive.define    preprocessor definition directives\n+\n+@punctuation.delimiter  delimiters (e.g. `;` / `.` / `,`)\n+@punctuation.bracket    brackets (e.g. `()` / `{}` / `[]`)\n+@punctuation.special    special symbols (e.g. `{}` in string interpolation)\n+\n+@comment                line and block comments\n+@comment.documentation  comments documenting code\n+\n+@comment.error          error-type comments (e.g. `DEPRECATED:`)\n+@comment.warning        warning-type comments (e.g. `WARNING:`, `FIX:`)\n+@comment.hint           note-type comments (e.g. `NOTE:`)\n+@comment.info           info-type comments\n+@comment.todo           todo-type comments (e.g. `TODO:`, `WIP:`)\n+\n+@markup.strong          bold text\n+@markup.italic          text with emphasis\n+@markup.strikethrough   strikethrough text\n+@markup.underline       underlined text (only for literal underline markup!)\n+\n+@markup.heading         headings, titles (including markers)\n+\n+@markup.quote           block quotes\n+@markup.math            math environments (e.g. `$ ... $` in LaTeX)\n+@markup.environment     environments (e.g. in LaTeX)\n+\n+@markup.link            text references, footnotes, citations, etc.\n+@markup.link.label      link, reference descriptions\n+@markup.link.url        URL-style links\n+\n+@markup.raw             literal or verbatim text (e.g. inline code)\n+@markup.raw.block       literal or verbatim text as a stand-alone block\n+\n+@markup.list            list markers\n+@markup.list.checked    checked todo-style list markers\n+@markup.list.unchecked  unchecked todo-style list markers\n+\n+@diff.plus              added text (for diff files)\n+@diff.minus             deleted text (for diff files)\n+@diff.delta             changed text (for diff files)\n+\n+@tag                    XML tag names",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460172436",
            "id": 1460172436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XCHaU",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 510,
            "original_position": 163,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1834476848,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460172436/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T03:48:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460172436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460173729"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460173729"
                }
            },
            "author_association": "MEMBER",
            "body": "Since we're directly upstreaming these queries (including their comments and whitespace) perhaps it would be worth it to document that here.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T03:47:55Z",
            "diff_hunk": "@@ -1,110 +1,157 @@\n-(simple_expansion) @none\n-(expansion\n-  \"${\" @punctuation.special\n-  \"}\" @punctuation.special) @none\n [\n- \"(\"\n- \")\"\n- \"((\"\n- \"))\"\n- \"{\"\n- \"}\"\n- \"[\"\n- \"]\"\n- \"[[\"\n- \"]]\"\n- ] @punctuation.bracket\n+  \"(\"",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460173729",
            "id": 1460173729,
            "line": 2,
            "node_id": "PRRC_kwDOAPphoM5XCHuh",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 2,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/queries/bash/highlights.scm",
            "position": 17,
            "pull_request_review_id": 1834476848,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460173729/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T03:48:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460173729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460177202"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460177202"
                }
            },
            "author_association": "MEMBER",
            "body": "It should be \"Tree-sitter\" in prose (that is how they [describe themselves](https://tree-sitter.github.io/tree-sitter/)) and `treesitter` in code.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T03:52:51Z",
            "diff_hunk": "@@ -112,6 +112,11 @@ The following changes may require adaptations in user config or plugins.\n • 'termguicolors' is enabled by default when Nvim is able to determine that\n   the host terminal emulator supports 24-bit color.\n \n+• Treesitter highlight groups have been renamed to be more in line with",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460177202",
            "id": 1460177202,
            "in_reply_to_id": 1460166348,
            "line": 115,
            "node_id": "PRRC_kwDOAPphoM5XCIky",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 115,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 1834528623,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460177202/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T03:52:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460177202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460178861"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460178861"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Shouldn't that be on yuck query maintainers to document that :? :thinking: I tried a \r\n\r\n```yuck\r\n(button :onclick \"notify-send Left\"\r\n  :onrightclick \"notify-send Right\"\r\n  \"Click Me!\") ;; this is a label nested within a button\r\n```\r\nWhere button is the `symbol`, and the syntax have some similarities to XML",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T03:57:25Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives and shebangs\n+@keyword.directive.define    preprocessor definition directives\n+\n+@punctuation.delimiter  delimiters (e.g. `;` / `.` / `,`)\n+@punctuation.bracket    brackets (e.g. `()` / `{}` / `[]`)\n+@punctuation.special    special symbols (e.g. `{}` in string interpolation)\n+\n+@comment                line and block comments\n+@comment.documentation  comments documenting code\n+\n+@comment.error          error-type comments (e.g. `DEPRECATED:`)\n+@comment.warning        warning-type comments (e.g. `WARNING:`, `FIX:`)\n+@comment.hint           note-type comments (e.g. `NOTE:`)\n+@comment.info           info-type comments\n+@comment.todo           todo-type comments (e.g. `TODO:`, `WIP:`)\n+\n+@markup.strong          bold text\n+@markup.italic          text with emphasis\n+@markup.strikethrough   strikethrough text\n+@markup.underline       underlined text (only for literal underline markup!)\n+\n+@markup.heading         headings, titles (including markers)\n+\n+@markup.quote           block quotes\n+@markup.math            math environments (e.g. `$ ... $` in LaTeX)\n+@markup.environment     environments (e.g. in LaTeX)\n+\n+@markup.link            text references, footnotes, citations, etc.\n+@markup.link.label      link, reference descriptions\n+@markup.link.url        URL-style links\n+\n+@markup.raw             literal or verbatim text (e.g. inline code)\n+@markup.raw.block       literal or verbatim text as a stand-alone block\n+\n+@markup.list            list markers\n+@markup.list.checked    checked todo-style list markers\n+@markup.list.unchecked  unchecked todo-style list markers\n+\n+@diff.plus              added text (for diff files)\n+@diff.minus             deleted text (for diff files)\n+@diff.delta             changed text (for diff files)\n+\n+@tag                    XML tag names",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460178861",
            "id": 1460178861,
            "in_reply_to_id": 1460172436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XCI-t",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 510,
            "original_position": 163,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1834536801,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460178861/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T03:57:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460178861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460183329"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460183329"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair point, but I'm bringing this up from the perspective of a Neovim user that's updating their TS queries to satisfy their colorful desires: If I find a query that at first glance look language/file extension exclusive, I might forget to consider which other languages might be affected.\r\n\r\nI highlight these capture groups in particular because XML is included in the name, instead of an example as in previous groups.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T04:05:22Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives and shebangs\n+@keyword.directive.define    preprocessor definition directives\n+\n+@punctuation.delimiter  delimiters (e.g. `;` / `.` / `,`)\n+@punctuation.bracket    brackets (e.g. `()` / `{}` / `[]`)\n+@punctuation.special    special symbols (e.g. `{}` in string interpolation)\n+\n+@comment                line and block comments\n+@comment.documentation  comments documenting code\n+\n+@comment.error          error-type comments (e.g. `DEPRECATED:`)\n+@comment.warning        warning-type comments (e.g. `WARNING:`, `FIX:`)\n+@comment.hint           note-type comments (e.g. `NOTE:`)\n+@comment.info           info-type comments\n+@comment.todo           todo-type comments (e.g. `TODO:`, `WIP:`)\n+\n+@markup.strong          bold text\n+@markup.italic          text with emphasis\n+@markup.strikethrough   strikethrough text\n+@markup.underline       underlined text (only for literal underline markup!)\n+\n+@markup.heading         headings, titles (including markers)\n+\n+@markup.quote           block quotes\n+@markup.math            math environments (e.g. `$ ... $` in LaTeX)\n+@markup.environment     environments (e.g. in LaTeX)\n+\n+@markup.link            text references, footnotes, citations, etc.\n+@markup.link.label      link, reference descriptions\n+@markup.link.url        URL-style links\n+\n+@markup.raw             literal or verbatim text (e.g. inline code)\n+@markup.raw.block       literal or verbatim text as a stand-alone block\n+\n+@markup.list            list markers\n+@markup.list.checked    checked todo-style list markers\n+@markup.list.unchecked  unchecked todo-style list markers\n+\n+@diff.plus              added text (for diff files)\n+@diff.minus             deleted text (for diff files)\n+@diff.delta             changed text (for diff files)\n+\n+@tag                    XML tag names",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460183329",
            "id": 1460183329,
            "in_reply_to_id": 1460172436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XCKEh",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 510,
            "original_position": 163,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1834553298,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460183329/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T04:05:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460183329",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460320632"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460320632"
                }
            },
            "author_association": "MEMBER",
            "body": "Justin disagrees: it's the \"tree-sitter\" project, but \"treesitter\" in _our_ code. This is how we enforce commit messages, for example. If there's a `tree-sitter`, _that_ one needs to be changed.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T09:22:11Z",
            "diff_hunk": "@@ -112,6 +112,11 @@ The following changes may require adaptations in user config or plugins.\n • 'termguicolors' is enabled by default when Nvim is able to determine that\n   the host terminal emulator supports 24-bit color.\n \n+• Treesitter highlight groups have been renamed to be more in line with",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460320632",
            "id": 1460320632,
            "in_reply_to_id": 1460166348,
            "line": 115,
            "node_id": "PRRC_kwDOAPphoM5XCrl4",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 115,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 1834649599,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460320632/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T09:22:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460320632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460320946"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460320946"
                }
            },
            "author_association": "MEMBER",
            "body": "That's fine, feel free to suggest a better description. (I don't do weebdev.)",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T09:22:50Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives and shebangs\n+@keyword.directive.define    preprocessor definition directives\n+\n+@punctuation.delimiter  delimiters (e.g. `;` / `.` / `,`)\n+@punctuation.bracket    brackets (e.g. `()` / `{}` / `[]`)\n+@punctuation.special    special symbols (e.g. `{}` in string interpolation)\n+\n+@comment                line and block comments\n+@comment.documentation  comments documenting code\n+\n+@comment.error          error-type comments (e.g. `DEPRECATED:`)\n+@comment.warning        warning-type comments (e.g. `WARNING:`, `FIX:`)\n+@comment.hint           note-type comments (e.g. `NOTE:`)\n+@comment.info           info-type comments\n+@comment.todo           todo-type comments (e.g. `TODO:`, `WIP:`)\n+\n+@markup.strong          bold text\n+@markup.italic          text with emphasis\n+@markup.strikethrough   strikethrough text\n+@markup.underline       underlined text (only for literal underline markup!)\n+\n+@markup.heading         headings, titles (including markers)\n+\n+@markup.quote           block quotes\n+@markup.math            math environments (e.g. `$ ... $` in LaTeX)\n+@markup.environment     environments (e.g. in LaTeX)\n+\n+@markup.link            text references, footnotes, citations, etc.\n+@markup.link.label      link, reference descriptions\n+@markup.link.url        URL-style links\n+\n+@markup.raw             literal or verbatim text (e.g. inline code)\n+@markup.raw.block       literal or verbatim text as a stand-alone block\n+\n+@markup.list            list markers\n+@markup.list.checked    checked todo-style list markers\n+@markup.list.unchecked  unchecked todo-style list markers\n+\n+@diff.plus              added text (for diff files)\n+@diff.minus             deleted text (for diff files)\n+@diff.delta             changed text (for diff files)\n+\n+@tag                    XML tag names",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460320946",
            "id": 1460320946,
            "in_reply_to_id": 1460172436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XCrqy",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 510,
            "original_position": 163,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1834649660,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460320946/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T09:22:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460320946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460321150"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460321150"
                }
            },
            "author_association": "MEMBER",
            "body": "What exactly would you like to see documented, and where?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T09:23:27Z",
            "diff_hunk": "@@ -1,110 +1,157 @@\n-(simple_expansion) @none\n-(expansion\n-  \"${\" @punctuation.special\n-  \"}\" @punctuation.special) @none\n [\n- \"(\"\n- \")\"\n- \"((\"\n- \"))\"\n- \"{\"\n- \"}\"\n- \"[\"\n- \"]\"\n- \"[[\"\n- \"]]\"\n- ] @punctuation.bracket\n+  \"(\"",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460321150",
            "id": 1460321150,
            "in_reply_to_id": 1460173729,
            "line": 2,
            "node_id": "PRRC_kwDOAPphoM5XCrt-",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 2,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/queries/bash/highlights.scm",
            "position": 17,
            "pull_request_review_id": 1834649706,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460321150/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T09:23:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460321150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460330626"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460330626"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's continue the discussion in #27099, as it's a bit off-topic for this PR.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T09:41:00Z",
            "diff_hunk": "@@ -112,6 +112,11 @@ The following changes may require adaptations in user config or plugins.\n • 'termguicolors' is enabled by default when Nvim is able to determine that\n   the host terminal emulator supports 24-bit color.\n \n+• Treesitter highlight groups have been renamed to be more in line with",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460330626",
            "id": 1460330626,
            "in_reply_to_id": 1460166348,
            "line": 115,
            "node_id": "PRRC_kwDOAPphoM5XCuCC",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 115,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 1834651444,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460330626/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T09:41:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460330626",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460455777"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460455777"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We can clean up improperly used `@tag` highlights in nvim-treesitter later (probably should have handled it in my consistency PR tbh), but yuck (and other?) widgets are similar to XML tags and can maybe also use it.\r\n\r\nUpdate: https://github.com/nvim-treesitter/nvim-treesitter/pull/5942",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T14:01:10Z",
            "diff_hunk": "@@ -400,58 +400,116 @@ instance, to highlight comments differently per language: >vim\n     hi @comment.lua guifg=DarkBlue\n     hi link @comment.doc.java String\n <\n-The following captures are linked by default to standard |group-name|s:\n-\n-@text.literal       Comment\n-@text.reference     Identifier\n-@text.title         Title\n-@text.uri           Underlined\n-@text.underline     Underlined\n-@text.todo          Todo\n-\n-@comment            Comment\n-@punctuation        Delimiter\n-\n-@constant           Constant\n-@constant.builtin   Special\n-@constant.macro     Define\n-@define             Define\n-@macro              Macro\n-@string             String\n-@string.escape      SpecialChar\n-@string.special     SpecialChar\n-@character          Character\n-@character.special  SpecialChar\n-@number             Number\n-@boolean            Boolean\n-@float              Float\n-\n-@function           Function\n-@function.builtin   Special\n-@function.macro     Macro\n-@parameter          Identifier\n-@method             Function\n-@field              Identifier\n-@property           Identifier\n-@constructor        Special\n-\n-@conditional        Conditional\n-@repeat             Repeat\n-@label              Label\n-@operator           Operator\n-@keyword            Keyword\n-@exception          Exception\n-\n-@variable           Identifier\n-@type               Type\n-@type.definition    Typedef\n-@storageclass       StorageClass\n-@structure          Structure\n-@namespace          Identifier\n-@include            Include\n-@preproc            PreProc\n-@debug              Debug\n-@tag                Tag\n+The following captures are linked by default to standard |group-name|s (use\n+|:Inspect| on a group to see the current link):\n+\n+@variable               various variable names\n+@variable.builtin       built-in variable names (e.g. `this`)\n+@variable.parameter     parameters of a function\n+@variable.member        object and struct fields\n+\n+@constant               constant identifiers\n+@constant.builtin       built-in constant values\n+@constant.macro         constants defined by the preprocessor\n+\n+@module                 modules or namespaces\n+@module.builtin         built-in modules or namespaces\n+@label                  GOTO and other labels (e.g. `label:` in C), including heredoc labels\n+\n+@string                 string literals\n+@string.documentation   string documenting code (e.g. Python docstrings)\n+@string.regexp          regular expressions\n+@string.escape          escape sequences\n+@string.special         other special strings (e.g. dates)\n+@string.special.symbol  symbols or atoms\n+@string.special.path    filenames\n+@string.special.url     URIs (e.g. hyperlinks)\n+\n+@character              character literals\n+@character.special      special characters (e.g. wildcards)\n+\n+@boolean                boolean literals\n+@number                 numeric literals\n+@number.float           floating-point number literals\n+\n+@type                   type or class definitions and annotations\n+@type.builtin           built-in types\n+@type.definition        identifiers in type definitions (e.g. `typedef <type> <identifier>` in C)\n+@type.qualifier         type qualifiers (e.g. `const`)\n+\n+@attribute              attribute annotations (e.g. Python decorators)\n+@property               the key in key/value pairs\n+\n+@function               function definitions\n+@function.builtin       built-in functions\n+@function.call          function calls\n+@function.macro         preprocessor macros\n+\n+@function.method        method definitions\n+@function.method.call   method calls\n+\n+@constructor            constructor calls and definitions\n+@operator               symbolic operators (e.g. `+` / `*`)\n+\n+@keyword                keywords not fitting into specific categories\n+@keyword.coroutine      keywords related to coroutines (e.g. `go` in Go, `async/await` in Python)\n+@keyword.function       keywords that define a function (e.g. `func` in Go, `def` in Python)\n+@keyword.operator       operators that are English words (e.g. `and` / `or`)\n+@keyword.import         keywords for including modules (e.g. `import` / `from` in Python)\n+@keyword.storage        modifiers that affect storage in memory or life-time\n+@keyword.repeat         keywords related to loops (e.g. `for` / `while`)\n+@keyword.return         keywords like `return` and `yield`\n+@keyword.debug          keywords related to debugging\n+@keyword.exception      keywords related to exceptions (e.g. `throw` / `catch`)\n+\n+@keyword.conditional         keywords related to conditionals (e.g. `if` / `else`)\n+@keyword.conditional.ternary ternary operator (e.g. `?` / `:`)\n+\n+@keyword.directive           various preprocessor directives and shebangs\n+@keyword.directive.define    preprocessor definition directives\n+\n+@punctuation.delimiter  delimiters (e.g. `;` / `.` / `,`)\n+@punctuation.bracket    brackets (e.g. `()` / `{}` / `[]`)\n+@punctuation.special    special symbols (e.g. `{}` in string interpolation)\n+\n+@comment                line and block comments\n+@comment.documentation  comments documenting code\n+\n+@comment.error          error-type comments (e.g. `DEPRECATED:`)\n+@comment.warning        warning-type comments (e.g. `WARNING:`, `FIX:`)\n+@comment.hint           note-type comments (e.g. `NOTE:`)\n+@comment.info           info-type comments\n+@comment.todo           todo-type comments (e.g. `TODO:`, `WIP:`)\n+\n+@markup.strong          bold text\n+@markup.italic          text with emphasis\n+@markup.strikethrough   strikethrough text\n+@markup.underline       underlined text (only for literal underline markup!)\n+\n+@markup.heading         headings, titles (including markers)\n+\n+@markup.quote           block quotes\n+@markup.math            math environments (e.g. `$ ... $` in LaTeX)\n+@markup.environment     environments (e.g. in LaTeX)\n+\n+@markup.link            text references, footnotes, citations, etc.\n+@markup.link.label      link, reference descriptions\n+@markup.link.url        URL-style links\n+\n+@markup.raw             literal or verbatim text (e.g. inline code)\n+@markup.raw.block       literal or verbatim text as a stand-alone block\n+\n+@markup.list            list markers\n+@markup.list.checked    checked todo-style list markers\n+@markup.list.unchecked  unchecked todo-style list markers\n+\n+@diff.plus              added text (for diff files)\n+@diff.minus             deleted text (for diff files)\n+@diff.delta             changed text (for diff files)\n+\n+@tag                    XML tag names",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460455777",
            "id": 1460455777,
            "in_reply_to_id": 1460172436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5XDMlh",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 510,
            "original_position": 163,
            "original_start_line": null,
            "path": "runtime/doc/treesitter.txt",
            "position": null,
            "pull_request_review_id": 1834679463,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460455777/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T14:18:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460455777",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24971970?v=4",
                "events_url": "https://api.github.com/users/ObserverOfTime/events{/privacy}",
                "followers_url": "https://api.github.com/users/ObserverOfTime/followers",
                "following_url": "https://api.github.com/users/ObserverOfTime/following{/other_user}",
                "gists_url": "https://api.github.com/users/ObserverOfTime/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ObserverOfTime",
                "id": 24971970,
                "login": "ObserverOfTime",
                "node_id": "MDQ6VXNlcjI0OTcxOTcw",
                "organizations_url": "https://api.github.com/users/ObserverOfTime/orgs",
                "received_events_url": "https://api.github.com/users/ObserverOfTime/received_events",
                "repos_url": "https://api.github.com/users/ObserverOfTime/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ObserverOfTime/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ObserverOfTime/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ObserverOfTime"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460575186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460575186"
                }
            },
            "author_association": "MEMBER",
            "body": "At the beginning of the file, [similar to what we do with vendored types](https://github.com/neovim/neovim/blob/fa9a85ae468b9df30ae9e5c05a08c0f124e267df/runtime/lua/vim/_meta/lpeg.lua#L4-L5).",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T17:49:54Z",
            "diff_hunk": "@@ -1,110 +1,157 @@\n-(simple_expansion) @none\n-(expansion\n-  \"${\" @punctuation.special\n-  \"}\" @punctuation.special) @none\n [\n- \"(\"\n- \")\"\n- \"((\"\n- \"))\"\n- \"{\"\n- \"}\"\n- \"[\"\n- \"]\"\n- \"[[\"\n- \"]]\"\n- ] @punctuation.bracket\n+  \"(\"",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460575186",
            "id": 1460575186,
            "in_reply_to_id": 1460173729,
            "line": 2,
            "node_id": "PRRC_kwDOAPphoM5XDpvS",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 2,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/queries/bash/highlights.scm",
            "position": 17,
            "pull_request_review_id": 1834711724,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460575186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T17:49:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460575186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460575849"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460575849"
                }
            },
            "author_association": "MEMBER",
            "body": "That would defeat the purpose of copying them verbatim, including comments and whitespace ;)",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T17:51:12Z",
            "diff_hunk": "@@ -1,110 +1,157 @@\n-(simple_expansion) @none\n-(expansion\n-  \"${\" @punctuation.special\n-  \"}\" @punctuation.special) @none\n [\n- \"(\"\n- \")\"\n- \"((\"\n- \"))\"\n- \"{\"\n- \"}\"\n- \"[\"\n- \"]\"\n- \"[[\"\n- \"]]\"\n- ] @punctuation.bracket\n+  \"(\"",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460575849",
            "id": 1460575849,
            "in_reply_to_id": 1460173729,
            "line": 2,
            "node_id": "PRRC_kwDOAPphoM5XDp5p",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 2,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/queries/bash/highlights.scm",
            "position": 17,
            "pull_request_review_id": 1834711856,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460575849/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T17:51:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460575849",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460576342"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460576342"
                }
            },
            "author_association": "MEMBER",
            "body": "(These are not vendored in the same sense; rather nvim-treesitter is the integration project preparing these files for us.)",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T17:51:59Z",
            "diff_hunk": "@@ -1,110 +1,157 @@\n-(simple_expansion) @none\n-(expansion\n-  \"${\" @punctuation.special\n-  \"}\" @punctuation.special) @none\n [\n- \"(\"\n- \")\"\n- \"((\"\n- \"))\"\n- \"{\"\n- \"}\"\n- \"[\"\n- \"]\"\n- \"[[\"\n- \"]]\"\n- ] @punctuation.bracket\n+  \"(\"",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460576342",
            "id": 1460576342,
            "in_reply_to_id": 1460173729,
            "line": 2,
            "node_id": "PRRC_kwDOAPphoM5XDqBW",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 2,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/queries/bash/highlights.scm",
            "position": 17,
            "pull_request_review_id": 1834711953,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460576342/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T17:52:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460576342",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460589375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460589375"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair enough.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-20T18:15:48Z",
            "diff_hunk": "@@ -1,110 +1,157 @@\n-(simple_expansion) @none\n-(expansion\n-  \"${\" @punctuation.special\n-  \"}\" @punctuation.special) @none\n [\n- \"(\"\n- \")\"\n- \"((\"\n- \"))\"\n- \"{\"\n- \"}\"\n- \"[\"\n- \"]\"\n- \"[[\"\n- \"]]\"\n- ] @punctuation.bracket\n+  \"(\"",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460589375",
            "id": 1460589375,
            "in_reply_to_id": 1460173729,
            "line": 2,
            "node_id": "PRRC_kwDOAPphoM5XDtM_",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 2,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/queries/bash/highlights.scm",
            "position": 17,
            "pull_request_review_id": 1834714573,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460589375/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-20T18:15:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460589375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460789892"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460789892"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, not sure I agree with this anymore -- I inherited from the old links, but it seems wrong. `Special` seems much better (and making the other three derive from `raw`).\r\n\r\n@echasnovski ?",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-21T10:08:53Z",
            "diff_hunk": "@@ -230,60 +230,98 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Special\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Structure\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.builtin     Special\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Macro\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.note     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.raw          Comment\",\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Comment\",\n+  \"default link @markup.environment  Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460789892",
            "id": 1460789892,
            "line": 310,
            "node_id": "PRRC_kwDOAPphoM5XEeKE",
            "original_commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "original_line": 310,
            "original_position": 132,
            "original_start_line": 307,
            "path": "src/nvim/highlight_group.c",
            "position": 132,
            "pull_request_review_id": 1835305385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460789892/reactions"
            },
            "side": "RIGHT",
            "start_line": 307,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-21T10:08:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460789892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460792852"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460792852"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "If this is about only `@markup.environment`, then I don't have any particular opinion on this one. Judging purely by the meaning, I'd say that it should link to `@module`.\r\nMaking other link to `@markup.raw` is reasonable.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-21T10:15:07Z",
            "diff_hunk": "@@ -230,60 +230,98 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Special\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Structure\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.builtin     Special\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Macro\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.note     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.raw          Comment\",\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Comment\",\n+  \"default link @markup.environment  Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460792852",
            "id": 1460792852,
            "in_reply_to_id": 1460789892,
            "line": 310,
            "node_id": "PRRC_kwDOAPphoM5XEe4U",
            "original_commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "original_line": 310,
            "original_position": 132,
            "original_start_line": 307,
            "path": "src/nvim/highlight_group.c",
            "position": 132,
            "pull_request_review_id": 1835311434,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460792852/reactions"
            },
            "side": "RIGHT",
            "start_line": 307,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-21T10:15:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460792852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1460793499"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460793499"
                }
            },
            "author_association": "MEMBER",
            "body": "...and `@module` links to `Structure` ;)",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-21T10:16:37Z",
            "diff_hunk": "@@ -230,60 +230,98 @@ static const char *highlight_init_both[] = {\n   \"default link DiagnosticSignOk           DiagnosticOk\",\n   \"default link DiagnosticUnnecessary      Comment\",\n \n-  // Text\n-  \"default link @text.literal   Comment\",\n-  \"default link @text.reference Identifier\",\n-  \"default link @text.title     Title\",\n-  \"default link @text.uri       Underlined\",\n-  \"default link @text.underline Underlined\",\n-  \"default link @text.todo      Todo\",\n-\n-  // Miscs\n-  \"default link @comment     Comment\",\n-  \"default link @punctuation Delimiter\",\n-\n-  // Constants\n+  // Treesitter standard groups\n+  \"default link @variable            NONE\",  // don't highlight to reduce visual overload\n+  \"default link @variable.builtin    Special\",\n+  \"default link @variable.parameter  Identifier\",\n+  \"default link @variable.member     Identifier\",\n+\n   \"default link @constant          Constant\",\n   \"default link @constant.builtin  Special\",\n   \"default link @constant.macro    Define\",\n-  \"default link @define            Define\",\n-  \"default link @macro             Macro\",\n-  \"default link @string            String\",\n-  \"default link @string.escape     SpecialChar\",\n-  \"default link @string.special    SpecialChar\",\n-  \"default link @character         Character\",\n-  \"default link @character.special SpecialChar\",\n-  \"default link @number            Number\",\n-  \"default link @boolean           Boolean\",\n-  \"default link @float             Float\",\n-\n-  // Functions\n-  \"default link @function         Function\",\n-  \"default link @function.builtin Special\",\n-  \"default link @function.macro   Macro\",\n-  \"default link @parameter        Identifier\",\n-  \"default link @method           Function\",\n-  \"default link @field            Identifier\",\n-  \"default link @property         Identifier\",\n-  \"default link @constructor      Special\",\n-\n-  // Keywords\n-  \"default link @conditional Conditional\",\n-  \"default link @repeat      Repeat\",\n-  \"default link @label       Label\",\n-  \"default link @operator    Operator\",\n-  \"default link @keyword     Keyword\",\n-  \"default link @exception   Exception\",\n-\n-  \"default link @variable        NONE\",  // don't highlight to reduce visual overload\n-  \"default link @type            Type\",\n-  \"default link @type.definition Typedef\",\n-  \"default link @storageclass    StorageClass\",\n-  \"default link @namespace       Identifier\",\n-  \"default link @include         Include\",\n-  \"default link @preproc         PreProc\",\n-  \"default link @debug           Debug\",\n-  \"default link @tag             Tag\",\n+\n+  \"default link @module  Structure\",\n+  \"default link @label   Label\",\n+\n+  \"default link @string                 String\",\n+  \"default link @string.regexp          SpecialChar\",\n+  \"default link @string.escape          SpecialChar\",\n+  \"default link @string.special         SpecialChar\",\n+  \"default link @string.special.symbol  Constant\",\n+  \"default link @string.special.url     Underlined\",\n+\n+  \"default link @character          Character\",\n+  \"default link @character.special  SpecialChar\",\n+\n+  \"default link @boolean       Boolean\",\n+  \"default link @number        Number\",\n+  \"default link @number.float  Float\",\n+\n+  \"default link @type             Type\",\n+  \"default link @type.builtin     Special\",\n+  \"default link @type.definition  Typedef\",\n+  \"default link @type.qualifier   StorageClass\",\n+\n+  \"default link @attribute  Macro\",\n+  \"default link @property   Identifier\",\n+\n+  \"default link @function          Function\",\n+  \"default link @function.builtin  Special\",\n+  \"default link @function.macro    Macro\",\n+\n+  \"default link @constructor   Special\",\n+  \"default link @operator      Operator\",\n+\n+  \"default link @keyword            Keyword\",\n+  \"default link @keyword.function   Statement\",\n+  \"default link @keyword.operator   Operator\",\n+  \"default link @keyword.import     Include\",\n+  \"default link @keyword.storage    StorageClass\",\n+  \"default link @keyword.repeat     Repeat\",\n+  \"default link @keyword.debug      Debug\",\n+  \"default link @keyword.exception  Exception\",\n+\n+  \"default link @keyword.conditional    Conditional\",\n+\n+  \"default link @keyword.directive         Preproc\",\n+  \"default link @keyword.directive.define  Define\",\n+\n+  \"default link @punctuation.delimiter  Delimiter\",\n+  \"default link @punctuation.bracket    Delimiter\",\n+  \"default link @punctuation.special    Special\",\n+\n+  \"default link @comment   Comment\",\n+\n+  \"default link @comment.error    DiagnosticError\",\n+  \"default link @comment.warning  DiagnosticWarn\",\n+  \"default link @comment.note     DiagnosticInfo\",\n+  \"default link @comment.todo     Todo\",\n+\n+  \"@markup.strong         gui=bold           cterm=bold\",\n+  \"@markup.italic         gui=italic         cterm=italic\",\n+  \"@markup.strikethrough  gui=strikethrough, cterm=strikethrough\",\n+  \"@markup.underline      gui=underline,     cterm=underline\",\n+\n+  \"default link @markup.heading  Title\",\n+\n+  \"default link @markup.raw          Comment\",\n+  \"default link @markup.quote        Comment\",\n+  \"default link @markup.math         Comment\",\n+  \"default link @markup.environment  Comment\",",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1460793499",
            "id": 1460793499,
            "in_reply_to_id": 1460789892,
            "line": 310,
            "node_id": "PRRC_kwDOAPphoM5XEfCb",
            "original_commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "original_line": 310,
            "original_position": 132,
            "original_start_line": 307,
            "path": "src/nvim/highlight_group.c",
            "position": 132,
            "pull_request_review_id": 1835312166,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460793499/reactions"
            },
            "side": "RIGHT",
            "start_line": 307,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-21T10:16:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1460793499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27067#discussion_r1461184620"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27067"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461184620"
                }
            },
            "author_association": "MEMBER",
            "body": "> the lack of a naming convention is starting to annoy me: Is it Treesitter, treesitter, Tree-sitter, 3-sitter, ninja-gardener??\r\n\r\nThat's exactly why I suggest \"treesitter\". Multi-word names are horrible for this reason, it results in different spellings for symbols, filenames, etc. Even if we agreed on \"tree-sitter\", that leaves more questions where hypens aren't supported.",
            "commit_id": "1de9810ead0459618b1d3711236185428f02a02f",
            "created_at": "2024-01-21T22:42:06Z",
            "diff_hunk": "@@ -112,6 +112,11 @@ The following changes may require adaptations in user config or plugins.\n • 'termguicolors' is enabled by default when Nvim is able to determine that\n   the host terminal emulator supports 24-bit color.\n \n+• Treesitter highlight groups have been renamed to be more in line with",
            "html_url": "https://github.com/neovim/neovim/pull/27067#discussion_r1461184620",
            "id": 1461184620,
            "in_reply_to_id": 1460166348,
            "line": 115,
            "node_id": "PRRC_kwDOAPphoM5XF-hs",
            "original_commit_id": "54e33e6cf09ca3fb974d63143d06335195815c88",
            "original_line": 115,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 4,
            "pull_request_review_id": 1835470731,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461184620/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-21T22:43:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1461184620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Changing capture names will break user defined queries so this should be marked as a breaking change.",
            "created_at": "2024-01-17T16:57:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1896218564",
            "id": 1896218564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xBf_E",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896218564/reactions"
            },
            "updated_at": "2024-01-17T16:57:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896218564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Changing capture names will break user defined queries so this should be marked as a breaking change.\r\n\r\nNo, it won't break queries; it _will_ break colorschemes, though.",
            "created_at": "2024-01-17T16:58:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1896220869",
            "id": 1896220869,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xBgjF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896220869/reactions"
            },
            "updated_at": "2024-01-18T14:32:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896220869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Changing capture names will break user defined queries so this should be marked as a breaking change.\r\n> \r\n> No, it won't break queries; it _will_ break colorschemes, though.\r\n\r\nHow does changing e.g. `@repeat` to `@keyword.repeat` _not_ break queries?\r\n\r\nTo clarify, it doesn't \"break\" the query in the sense that there will be an error or anything, but it will not do what the user expects and the query will need to be updated.",
            "created_at": "2024-01-17T17:00:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1896225196",
            "id": 1896225196,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xBhms",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896225196/reactions"
            },
            "updated_at": "2024-01-18T14:32:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896225196",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How does changing e.g. @repeat to @keyword.repeat not break queries?\r\n\r\nBecause that is defined _by_ the query. The query won't have to be updated if the user's colorscheme explicitly defined the corresponding highlight groups. So the only thing that's being broken is the colorscheme.\r\n\r\n(We probably mean the same, but I want to be extra clear -- also to the audience -- what's happening here.)",
            "created_at": "2024-01-17T17:01:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1896227018",
            "id": 1896227018,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xBiDK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896227018/reactions"
            },
            "updated_at": "2024-01-18T14:32:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1896227018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "With the reviews from @echasnovski, doesn't this mean nvim-treesitter should adapt to the reviews first :thinking: ",
            "created_at": "2024-01-18T12:33:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1898397026",
            "id": 1898397026,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xJz1i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898397026/reactions"
            },
            "updated_at": "2024-01-18T13:55:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898397026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> With the reviews from @echasnovski, doesn't this mean nvim-treesitter should adapt to the reviews first 🤔\r\n\r\nAll my comments are about how tree-sitter `@` groups should be highlighted by default in Neovim. Not sure if this has anything to do with 'nvim-treesitter' itself.",
            "created_at": "2024-01-18T12:49:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1898421188",
            "id": 1898421188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xJ5vE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898421188/reactions"
            },
            "updated_at": "2024-01-18T13:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898421188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Example is the review of `@markup.link.url`. If the capture is not going to be used, then nvim-treesitter/nvim-treesitter#5895 should remove the usage of the capture as well.",
            "created_at": "2024-01-18T12:55:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1898429296",
            "id": 1898429296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xJ7tw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898429296/reactions"
            },
            "updated_at": "2024-01-18T13:55:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898429296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Example is the review of `@markup.link.url`. If the capture is not going to be used, then [nvim-treesitter/nvim-treesitter#5895](https://github.com/nvim-treesitter/nvim-treesitter/pull/5895) should remove the usage of the capture as well.\r\n\r\nDifferent `@markup.link.url` can be useful, so I don't see a major reason to remove it.\r\n\r\nMy comment was more about not explicitly linking it to the same group as its `@markup.link` fallback. The only reason to do so is to preserve its `Identifer` highlighting if `@markup.link` is changed. But if user wants to have them separate, then suggesting defining `@markup.link.url` to be explicitly different is a better approach here. Thus no need to have `hi link @markup.link.url Identifier` in default color scheme.",
            "created_at": "2024-01-18T13:06:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1898446740",
            "id": 1898446740,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xJ_-U",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898446740/reactions"
            },
            "updated_at": "2024-01-18T13:55:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1898446740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "These changes are now live on nvim-treesitter, so marking as ready for review.",
            "created_at": "2024-01-19T16:32:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/27067#issuecomment-1900729286",
            "id": 1900729286,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
            "node_id": "IC_kwDOAPphoM5xStPG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 3,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900729286/reactions"
            },
            "updated_at": "2024-01-19T16:32:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1900729286",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27067/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27067/commits",
    "created_at": "2024-01-17T16:12:06Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27067.diff",
    "draft": false,
    "head": {
        "label": "clason:ts-captures",
        "ref": "ts-captures",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/clason/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/clason/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/clason/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/clason/neovim/branches{/branch}",
            "clone_url": "https://github.com/clason/neovim.git",
            "collaborators_url": "https://api.github.com/repos/clason/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/clason/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/clason/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/clason/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/clason/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/clason/neovim/contributors",
            "created_at": "2022-06-19T14:32:07Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/clason/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/clason/neovim/downloads",
            "events_url": "https://api.github.com/repos/clason/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/clason/neovim/forks",
            "full_name": "clason/neovim",
            "git_commits_url": "https://api.github.com/repos/clason/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/clason/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/clason/neovim/git/tags{/sha}",
            "git_url": "git://github.com/clason/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/clason/neovim/hooks",
            "html_url": "https://github.com/clason/neovim",
            "id": 505133677,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/clason/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/clason/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/clason/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/clason/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/clason/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/clason/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/clason/neovim/merges",
            "milestones_url": "https://api.github.com/repos/clason/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHhu6bQ",
            "notifications_url": "https://api.github.com/repos/clason/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/clason/neovim/pulls{/number}",
            "pushed_at": "2024-01-22T22:47:48Z",
            "releases_url": "https://api.github.com/repos/clason/neovim/releases{/id}",
            "size": 246601,
            "ssh_url": "git@github.com:clason/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/clason/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/clason/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/clason/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/clason/neovim/subscription",
            "svn_url": "https://github.com/clason/neovim",
            "tags_url": "https://api.github.com/repos/clason/neovim/tags",
            "teams_url": "https://api.github.com/repos/clason/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/clason/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T19:57:54Z",
            "url": "https://api.github.com/repos/clason/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1de9810ead0459618b1d3711236185428f02a02f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27067",
    "id": 1683263048,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27067",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1786207367,
            "name": "highlight",
            "node_id": "MDU6TGFiZWwxNzg2MjA3MzY3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/highlight"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "",
            "id": 3968935075,
            "name": "breaking-change",
            "node_id": "LA_kwDOAPphoM7skSSj",
            "url": "https://api.github.com/repos/neovim/neovim/labels/breaking-change"
        }
    ],
    "locked": false,
    "merge_commit_sha": "f5dc45310941dff6efc02d955fc0c110190e9b85",
    "merged_at": "2024-01-21T09:41:19Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 252,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 134,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-22T22:15:07Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5kVI5I",
    "number": 27067,
    "patch_url": "https://github.com/neovim/neovim/pull/27067.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27067/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1de9810ead0459618b1d3711236185428f02a02f",
    "title": "feat(treesitter)!: use new standard captures",
    "updated_at": "2024-01-21T22:42:07Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27067",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
        "events_url": "https://api.github.com/users/clason/events{/privacy}",
        "followers_url": "https://api.github.com/users/clason/followers",
        "following_url": "https://api.github.com/users/clason/following{/other_user}",
        "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/clason",
        "id": 2361214,
        "login": "clason",
        "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
        "organizations_url": "https://api.github.com/users/clason/orgs",
        "received_events_url": "https://api.github.com/users/clason/received_events",
        "repos_url": "https://api.github.com/users/clason/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/clason"
    }
}