{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20883/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20883/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20883"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20883"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20883/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b0cc2bd4c26864246c7d09ccabcf1194728dd3fe"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5066,
            "forks_count": 5066,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1721,
            "open_issues_count": 1721,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-19T00:15:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 246400,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71892,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-19T01:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71892,
            "watchers_count": 71892,
            "web_commit_signoff_required": false
        },
        "sha": "65f603f72c387cfac7955d8dfe51b42d35caa0f8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "The previous behavior of `vim.ui.input()` when typing <CR> with no text\r\ninput (with an intention of having the empty string as input)\r\nwas to execute `on_confirm(nil)`.\r\n\r\nInputting an empty string now should correctly execute `on_confirm('')`.\r\nThis should be clearly distinguished from cancelling or aborting the\r\ninput UI, in which case `on_confirm(nil)` is executed as before.\r\n\r\nFixes #18144.",
    "closed_at": "2022-11-08T00:15:15Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20883#discussion_r1010063396"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010063396"
                }
            },
            "author_association": "MEMBER",
            "body": "This seems always true.",
            "commit_id": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
            "created_at": "2022-11-01T04:38:28Z",
            "diff_hunk": "@@ -88,11 +88,15 @@ function M.input(opts, on_confirm)\n   })\n \n   opts = (opts and not vim.tbl_isempty(opts)) and opts or vim.empty_dict()\n+  opts = vim.tbl_extend('keep', opts, { cancelreturn = vim.NIL })\n+\n   local input = vim.fn.input(opts)\n-  if #input > 0 then\n+  if input == vim.NIL then\n+    on_confirm(opts.cancelreturn) -- canceled\n+  elseif #input >= 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/20883#discussion_r1010063396",
            "id": 1010063396,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48NFgk",
            "original_commit_id": "0053bab8dc002810fdb4a7f36adf3b569d72b8a0",
            "original_line": 96,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui.lua",
            "position": null,
            "pull_request_review_id": 1162819012,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010063396/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-01T04:38:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010063396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20883#discussion_r1010081078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010081078"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm you are right. I think I no longer need the else statement below. A corner case is that if a user specifies `cancelreturn = nil`, it will throw an error. Let me fix this.",
            "commit_id": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
            "created_at": "2022-11-01T05:21:50Z",
            "diff_hunk": "@@ -88,11 +88,15 @@ function M.input(opts, on_confirm)\n   })\n \n   opts = (opts and not vim.tbl_isempty(opts)) and opts or vim.empty_dict()\n+  opts = vim.tbl_extend('keep', opts, { cancelreturn = vim.NIL })\n+\n   local input = vim.fn.input(opts)\n-  if #input > 0 then\n+  if input == vim.NIL then\n+    on_confirm(opts.cancelreturn) -- canceled\n+  elseif #input >= 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/20883#discussion_r1010081078",
            "id": 1010081078,
            "in_reply_to_id": 1010063396,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48NJ02",
            "original_commit_id": "0053bab8dc002810fdb4a7f36adf3b569d72b8a0",
            "original_line": 96,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui.lua",
            "position": null,
            "pull_request_review_id": 1162841640,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010081078/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-01T05:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010081078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20883#discussion_r1010087389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010087389"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh wait. This will throw an error whenever something that does not have a length and is not `nil` or `vim.NIL` as `cancelreturn`.",
            "commit_id": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
            "created_at": "2022-11-01T05:38:42Z",
            "diff_hunk": "@@ -88,11 +88,15 @@ function M.input(opts, on_confirm)\n   })\n \n   opts = (opts and not vim.tbl_isempty(opts)) and opts or vim.empty_dict()\n+  opts = vim.tbl_extend('keep', opts, { cancelreturn = vim.NIL })\n+\n   local input = vim.fn.input(opts)\n-  if #input > 0 then\n+  if input == vim.NIL then\n+    on_confirm(opts.cancelreturn) -- canceled\n+  elseif #input >= 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/20883#discussion_r1010087389",
            "id": 1010087389,
            "in_reply_to_id": 1010063396,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48NLXd",
            "original_commit_id": "0053bab8dc002810fdb4a7f36adf3b569d72b8a0",
            "original_line": 96,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui.lua",
            "position": null,
            "pull_request_review_id": 1162850478,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010087389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-01T05:38:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010087389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20883#discussion_r1010967974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010967974"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed it, and made test cases more precise.",
            "commit_id": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
            "created_at": "2022-11-01T22:42:25Z",
            "diff_hunk": "@@ -88,11 +88,15 @@ function M.input(opts, on_confirm)\n   })\n \n   opts = (opts and not vim.tbl_isempty(opts)) and opts or vim.empty_dict()\n+  opts = vim.tbl_extend('keep', opts, { cancelreturn = vim.NIL })\n+\n   local input = vim.fn.input(opts)\n-  if #input > 0 then\n+  if input == vim.NIL then\n+    on_confirm(opts.cancelreturn) -- canceled\n+  elseif #input >= 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/20883#discussion_r1010967974",
            "id": 1010967974,
            "in_reply_to_id": 1010063396,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48QiWm",
            "original_commit_id": "0053bab8dc002810fdb4a7f36adf3b569d72b8a0",
            "original_line": 96,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/ui.lua",
            "position": null,
            "pull_request_review_id": 1164141908,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010967974/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-01T22:43:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1010967974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20883#discussion_r1015997704"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1015997704"
                }
            },
            "author_association": "MEMBER",
            "body": "This test seems unnecessary.",
            "commit_id": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
            "created_at": "2022-11-07T23:30:49Z",
            "diff_hunk": "@@ -83,5 +83,61 @@ describe('vim.ui', function()\n       feed('abcdefg<cr>')\n       eq('abcdefg', exec_lua('return result'))\n     end)\n+\n+    it('can input empty text #18144', function()\n+      feed(':lua vim.ui.input({}, function(input) result = input end)<cr>')\n+      feed('<cr>')\n+      eq('', exec_lua('return result'))\n+    end)\n+\n+    it('can input empty text with cancelreturn opt #18144', function()\n+      feed(':lua vim.ui.input({ cancelreturn = \"CANCEL\" }, function(input) result = input end)<cr>')\n+      feed('<cr>')\n+      eq('', exec_lua('return result'))\n+    end)\n+\n+    it('can return nil when aborted with ESC #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      feed(':lua vim.ui.input({}, function(input) result = input end)<cr>')\n+      feed('Inputted Text<esc>')\n+      -- Note: When `result == nil`, exec_lua('returns result') returns vim.NIL\n+      eq(true, exec_lua('return (nil == result)'))\n+    end)\n+\n+    it('can return opts.cacelreturn when aborted with ESC with cancelreturn opt #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      feed(':lua vim.ui.input({ cancelreturn = \"CANCEL\" }, function(input) result = input end)<cr>')\n+      feed('Inputted Text<esc>')\n+      eq('CANCEL', exec_lua('return result'))\n+    end)\n+\n+    it('does not call on_confirm when interrupted with Ctrl-C #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      eq('on_confirm not called', exec_lua('return result'))\n+      feed(':lua vim.ui.input({}, function(input) result = input end)<cr>')\n+      feed('Inputted Text<c-c>')\n+      -- Ctrl-C would make vim.ui.input() throw, so `result = input` won't be executed\n+      eq('on_confirm not called', exec_lua('return result'))\n+    end)\n+\n+    it('does not call on_confirm when interrupted with cancelreturn opt #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      eq('on_confirm not called', exec_lua('return result'))\n+      feed(':lua vim.ui.input({ cancelreturn = \"CANCEL\" }, function(input) result = input end)<cr>')\n+      feed('Inputted Text<c-c>')\n+      -- Ctrl-C would make vim.ui.input() throw, so `result = input` won't be executed\n+      -- Note that the control flow logic is slightly different from the behavior with ESC\n+      eq('on_confirm not called', exec_lua('return result'))\n+    end)",
            "html_url": "https://github.com/neovim/neovim/pull/20883#discussion_r1015997704",
            "id": 1015997704,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48juUI",
            "original_commit_id": "656da405a0ed8611c97850f4d9a019d57fafef40",
            "original_line": 131,
            "original_position": 49,
            "original_start_line": 122,
            "path": "test/functional/lua/ui_spec.lua",
            "position": null,
            "pull_request_review_id": 1171232959,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1015997704/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-11-07T23:30:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1015997704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20883#discussion_r1016001779"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20883"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016001779"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n```",
            "commit_id": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
            "created_at": "2022-11-07T23:37:48Z",
            "diff_hunk": "@@ -83,5 +83,61 @@ describe('vim.ui', function()\n       feed('abcdefg<cr>')\n       eq('abcdefg', exec_lua('return result'))\n     end)\n+\n+    it('can input empty text #18144', function()\n+      feed(':lua vim.ui.input({}, function(input) result = input end)<cr>')\n+      feed('<cr>')\n+      eq('', exec_lua('return result'))\n+    end)\n+\n+    it('can input empty text with cancelreturn opt #18144', function()\n+      feed(':lua vim.ui.input({ cancelreturn = \"CANCEL\" }, function(input) result = input end)<cr>')\n+      feed('<cr>')\n+      eq('', exec_lua('return result'))\n+    end)\n+\n+    it('can return nil when aborted with ESC #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      feed(':lua vim.ui.input({}, function(input) result = input end)<cr>')\n+      feed('Inputted Text<esc>')\n+      -- Note: When `result == nil`, exec_lua('returns result') returns vim.NIL\n+      eq(true, exec_lua('return (nil == result)'))\n+    end)\n+\n+    it('can return opts.cacelreturn when aborted with ESC with cancelreturn opt #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      feed(':lua vim.ui.input({ cancelreturn = \"CANCEL\" }, function(input) result = input end)<cr>')\n+      feed('Inputted Text<esc>')\n+      eq('CANCEL', exec_lua('return result'))\n+    end)\n+\n+    it('does not call on_confirm when interrupted with Ctrl-C #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      eq('on_confirm not called', exec_lua('return result'))\n+      feed(':lua vim.ui.input({}, function(input) result = input end)<cr>')\n+      feed('Inputted Text<c-c>')\n+      -- Ctrl-C would make vim.ui.input() throw, so `result = input` won't be executed\n+      eq('on_confirm not called', exec_lua('return result'))\n+    end)\n+\n+    it('does not call on_confirm when interrupted with cancelreturn opt #18144', function()\n+      feed(':lua result = \"on_confirm not called\"<cr>')\n+      eq('on_confirm not called', exec_lua('return result'))\n+      feed(':lua vim.ui.input({ cancelreturn = \"CANCEL\" }, function(input) result = input end)<cr>')\n+      feed('Inputted Text<c-c>')\n+      -- Ctrl-C would make vim.ui.input() throw, so `result = input` won't be executed\n+      -- Note that the control flow logic is slightly different from the behavior with ESC\n+      eq('on_confirm not called', exec_lua('return result'))\n+    end)",
            "html_url": "https://github.com/neovim/neovim/pull/20883#discussion_r1016001779",
            "id": 1016001779,
            "in_reply_to_id": 1015997704,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48jvTz",
            "original_commit_id": "656da405a0ed8611c97850f4d9a019d57fafef40",
            "original_line": 131,
            "original_position": 49,
            "original_start_line": 122,
            "path": "test/functional/lua/ui_spec.lua",
            "position": null,
            "pull_request_review_id": 1171238821,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016001779/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-11-07T23:37:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016001779",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This PR is based on #18144 but has been slightly modified due to #18143 being already fixed.\r\n\r\nI have added a few more missing test cases:\r\n\r\n- 1. Input nothing + `<CR>` => returns `\"\"`\r\n- 2. Press `<Esc>` to abort => returns `nil`  (actually `opts.cancelreturn`)\r\n- 3. Press `<Ctrl-C>` to abort => `on_confirm` does not executed (interrupted)\r\n\r\nwith and without `cancelreturn`. Although `vim.ui.input` does not document the use of `cancelreturn` (actually it is meant to be used in `vim.fn.input`), but I did not want to change the behavior.\r\n\r\nThe case (i) and (ii) are obvious but the scenario (iii) is bit confusing for me. Actually the behavior was previously undefined. I believe not calling `on_confirm` would be the most reasonable behavior, but happy to discuss if there's any objections.\r\n\r\n/cc @zeertzjq @echasnovski (author of #18144) @bfredl ",
            "created_at": "2022-10-30T20:11:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/20883#issuecomment-1296340974",
            "id": 1296340974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20883",
            "node_id": "IC_kwDOAPphoM5NRJfu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1296340974/reactions"
            },
            "updated_at": "2022-10-30T20:11:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1296340974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looking at the code it seems that `on_confirm` is called with `vim.NIL` on cancel, not `nil`.",
            "created_at": "2022-11-01T04:41:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/20883#issuecomment-1298019685",
            "id": 1298019685,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20883",
            "node_id": "IC_kwDOAPphoM5NXjVl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1298019685/reactions"
            },
            "updated_at": "2022-11-01T04:41:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1298019685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Looking at the code it seems that on_confirm is called with vim.NIL on cancel, not nil.\r\n\r\nYou are right, my bad. Thanks for the catch. In the test helpers `nil` and `vim.NIL` are not clearly distinguished; somehow `exec_lua('return nil')` gives `vim.NIL` (`mpack.NIL`).\r\n\r\nIn the updated version I see `on_confirm(nil)` is called correctly. To ensure `on_confirm(vim.NIL)` is NOT called, we should avoid calling `eq` with `helpers.NIL` but instead do an inline evaluation like: `eq(false, exec_lua('return (nil == vim.NIL)'))`.",
            "created_at": "2022-11-01T22:41:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/20883#issuecomment-1299318411",
            "id": 1299318411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20883",
            "node_id": "IC_kwDOAPphoM5NcgaL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1299318411/reactions"
            },
            "updated_at": "2022-11-01T23:16:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1299318411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A minor note:\r\n\r\nAlthough not documented, `vim.ui.input({ cancelreturn = ... }, on_confirm)` will respond with `on_confirm(cancelreturn)` as before, with the exception when `cancelreturn == vim.NIL` in which case it will invoke `on_confirm(vim.NIL)`.\r\n\r\nI believe this change of behavior should be fine, because the previous behavior of `vim.ui.input({cancelreturn = vim.NIL}, on_confirm)` was to raise an error `attempt to get length of local 'input' (a userdata value)`.",
            "created_at": "2022-11-01T22:48:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/20883#issuecomment-1299323268",
            "id": 1299323268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20883",
            "node_id": "IC_kwDOAPphoM5NchmE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1299323268/reactions"
            },
            "updated_at": "2022-11-01T22:48:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1299323268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "TBH I don't think one should be using `cancelreturn` as if `vim.ui.input()` is overridden by a custom handler it may not work.",
            "created_at": "2022-11-07T23:37:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/20883#issuecomment-1306376373",
            "id": 1306376373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20883",
            "node_id": "IC_kwDOAPphoM5N3bi1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1306376373/reactions"
            },
            "updated_at": "2022-11-07T23:37:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1306376373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20883/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20883/commits",
    "created_at": "2022-10-30T19:40:32Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20883.diff",
    "draft": false,
    "head": {
        "label": "wookayin:ui-input-cancel",
        "ref": "ui-input-cancel",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/wookayin/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/wookayin/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/wookayin/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/wookayin/neovim/branches{/branch}",
            "clone_url": "https://github.com/wookayin/neovim.git",
            "collaborators_url": "https://api.github.com/repos/wookayin/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/wookayin/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/wookayin/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/wookayin/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/wookayin/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/wookayin/neovim/contributors",
            "created_at": "2022-10-30T19:40:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/wookayin/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/wookayin/neovim/downloads",
            "events_url": "https://api.github.com/repos/wookayin/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/wookayin/neovim/forks",
            "full_name": "wookayin/neovim",
            "git_commits_url": "https://api.github.com/repos/wookayin/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/wookayin/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/wookayin/neovim/git/tags{/sha}",
            "git_url": "git://github.com/wookayin/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/wookayin/neovim/hooks",
            "html_url": "https://github.com/wookayin/neovim",
            "id": 559659867,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/wookayin/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/wookayin/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/wookayin/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/wookayin/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/wookayin/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/wookayin/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/wookayin/neovim/merges",
            "milestones_url": "https://api.github.com/repos/wookayin/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIVu7Ww",
            "notifications_url": "https://api.github.com/repos/wookayin/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/wookayin/neovim/pulls{/number}",
            "pushed_at": "2023-12-18T12:34:25Z",
            "releases_url": "https://api.github.com/repos/wookayin/neovim/releases{/id}",
            "size": 242516,
            "ssh_url": "git@github.com:wookayin/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/wookayin/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/wookayin/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/wookayin/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/wookayin/neovim/subscription",
            "svn_url": "https://github.com/wookayin/neovim",
            "tags_url": "https://api.github.com/repos/wookayin/neovim/tags",
            "teams_url": "https://api.github.com/repos/wookayin/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/wookayin/neovim/git/trees{/sha}",
            "updated_at": "2022-10-30T19:25:41Z",
            "url": "https://api.github.com/repos/wookayin/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20883",
    "id": 1104609806,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20883",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "59ff4691f67fc1ddd3d1b7240a2f2eb095e58281",
    "merged_at": "2022-11-08T00:15:15Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5B1wIO",
    "number": 20883,
    "patch_url": "https://github.com/neovim/neovim/pull/20883.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20883/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b0cc2bd4c26864246c7d09ccabcf1194728dd3fe",
    "title": "fix(vim.ui.input): return empty string when inputs nothing",
    "updated_at": "2023-12-18T01:49:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20883",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin"
    }
}