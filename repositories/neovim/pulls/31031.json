{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31031/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31031/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31031"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31031"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31031/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31031"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2cfdd5a188b4227fdef5f26e75a9dde04754e81c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5688,
            "forks_count": 5688,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1831,
            "open_issues_count": 1831,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-04T23:26:33Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 292457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83048,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-05T01:27:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83048,
            "watchers_count": 83048,
            "web_commit_signoff_required": false
        },
        "sha": "0da4d89558a05fb86186253e778510cfd859caea",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Alternative/rehash of #18506\r\n\r\nThere were comments in #18506 that this approach is too rigid and\r\ndoesn't encourage multi-root setups. However since then, nothing in\r\nthat area has progressed. Therefore I'm reproposing something\r\nsimilar.\r\n\r\nUnlike #18506, the config passed to this function adds only three\r\nadditional fields to vim.lsp.ClientConfig: filetypes and\r\nroot_dir_markers, and reuse_client (all optional), and overall\r\nis a very light wrapper around `vim.lsp.start()`.\r\n\r\nExamples:\r\n\r\n```lua\r\n\r\n  vim.lsp.setup({\r\n    cmd = { 'clangd', '--clang-tidy' },\r\n    root_dir_markers = { '.git', '.clangd', 'compile_commands.json' },\r\n    filetypes = { 'c', 'cpp' },\r\n  })\r\n\r\n  vim.lsp.setup({\r\n    name = 'lua_ls',\r\n    cmd = { 'lua-language-server' },\r\n    filetypes = { 'lua' },\r\n    root_dir_markers = { '.git', '.luarc.json', '.luacheckrc', '.stylua.toml' },\r\n    on_init = function(client)\r\n      if has_no_luarc_json(client) then\r\n        client.settings = vim.tbl_deep_extend('force', client.settings, default_lua_settings())\r\n        client.notify('workspace/didChangeConfiguration', { settings = client.settings })\r\n      end\r\n    end,\r\n    settings = {\r\n      Lua = {\r\n        hint = {\r\n          enable = true,\r\n          paramName = 'Literal',\r\n          setType = true,\r\n        },\r\n      },\r\n    },\r\n  })\r\n\r\n```\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31031#discussion_r1827771633"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31031"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827771633"
                }
            },
            "author_association": "MEMBER",
            "body": "I think config fits just fine here. Let's not introduce \"setup\".",
            "commit_id": "2cfdd5a188b4227fdef5f26e75a9dde04754e81c",
            "created_at": "2024-11-04T13:54:49Z",
            "diff_hunk": "@@ -782,6 +782,56 @@ set_log_level({level})                               *vim.lsp.set_log_level()*\n     See also: ~\n       • |vim.lsp.log_levels|\n \n+setup({config})                                              *vim.lsp.setup()*",
            "html_url": "https://github.com/neovim/neovim/pull/31031#discussion_r1827771633",
            "id": 1827771633,
            "line": 785,
            "node_id": "PRRC_kwDOAPphoM5s8ZTx",
            "original_commit_id": "2cfdd5a188b4227fdef5f26e75a9dde04754e81c",
            "original_line": 785,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 4,
            "pull_request_review_id": 2413134929,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31031",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827771633/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-04T13:54:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827771633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Correct me if I'm wrong, but this seems to be missing the (in my view) important bit of `vim.lsp.config`, which is the server-independent `default`?",
            "created_at": "2024-11-01T16:51:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2452215658",
            "id": 2452215658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SKddq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452215658/reactions"
            },
            "updated_at": "2024-11-01T16:51:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452215658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What I'm proposing here is not that. This is purely for setting up individual servers with the aim of making lspconfig mostly redundant.",
            "created_at": "2024-11-01T16:56:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2452223004",
            "id": 2452223004,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SKfQc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452223004/reactions"
            },
            "updated_at": "2024-11-01T16:56:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452223004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm happy to hear the sorts of stuff you want to configure. From my config there isn't much. From the work I've done on the handlers recently, there isn't a huge amount other than floating borders which can be done with something like `vim.go.float_border`.\r\n\r\nIs there anything else we need to consider?\r\n\r\nFor reference this is all I have in my config:\r\n\r\n```lua\r\nlocal function with(f, config)\r\n  return function(c)\r\n    return f(vim.tbl_deep_extend('force', config, c or {}))\r\n  end\r\nend\r\n\r\nvim.lsp.buf.signature_help = with(vim.lsp.buf.signature_help, {\r\n  border = 'rounded',\r\n  title_pos = 'left',\r\n})\r\n\r\nlocal have_cmp, cmp_nvim_lsp = pcall(require, 'cmp_nvim_lsp')\r\nif have_cmp then\r\n  local f = lsp.protocol.make_client_capabilities\r\n  lsp.protocol.make_client_capabilities = function()\r\n    return vim.tbl_deep_extend(\r\n      'force',\r\n      f(),\r\n      cmp_nvim_lsp.default_capabilities()\r\n    )\r\n  end\r\nend\r\n```",
            "created_at": "2024-11-01T17:00:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2452229172",
            "id": 2452229172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SKgw0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452229172/reactions"
            },
            "updated_at": "2024-11-01T17:00:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452229172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ah yes, I do recall that. At least with this, markers are optional so it leaves room to retrofit a buffer option in the future. \n\nI can draft up a PR to at least see what such an option could look like.",
            "created_at": "2024-11-01T19:04:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2452434688",
            "id": 2452434688,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SLS8A",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452434688/reactions"
            },
            "updated_at": "2024-11-01T19:04:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2452434688",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "How would this work if I wanted to configure my LSP client differently for a single project? I would want to have a \"main\" `vim.lsp.setup()` that sets the options that I will use as the default for most projects, but if I want to configure my LSP differently for just one project, how would I do that?\r\n\r\nSince each call to `vim.lsp.setup()` creates a new FileType autocommand, calling `vim.lsp.setup()` in a `.nvimrc` file (with project-specific configuration) wouldn't work because that would end up creating two autocommands. This would create two clients (or perhaps the second autocommand would re-use the client from the first autocommand?).\r\n\r\nI mentioned in chat a while ago that I've been using my own implementation of \"user-friendly LSP configuration\" that uses \"passive discovery\" (by finding files on the user's runtimepath) rather than \"active registration\" (i.e. explicitly calling `vim.lsp.setup` or similar). But frankly I'm happy to see _any_ movement towards making LSP configuration easier so I'm supportive of this, if there's consensus among the team. I just want to make sure we're thinking about all possible use cases.",
            "created_at": "2024-11-03T16:00:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2453476908",
            "id": 2453476908,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SPRYs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453476908/reactions"
            },
            "updated_at": "2024-11-03T16:00:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453476908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> How would this work if I wanted to configure my LSP client differently for a single project? I would want to have a \"main\" vim.lsp.setup() that sets the options that I will use as the default for most projects, but if I want to configure my LSP differently for just one project, how would I do that?\r\n\r\nFair question. What would you want to configure that isn't possible via `vim.lsp.ClientConfig`? Generally I lean towards providing my LSP configuration via editor agnostic methods, e.g. `.luarc.json`, `.clangd`, rather than implementing that with Nvim logic.\r\n\r\nAnother way would to to use something like:\r\n\r\n```lua\r\n        client.notify('workspace/didChangeConfiguration', { settings = client.settings })\r\n```\r\n\r\nin a LspAttach autocmd.\r\n\r\nSo I guess the details matter.\r\n\r\nNote that currently the client name is used as a sort of key to prevent multiple clients attaching to the same buffer. I can't quite figure where the exact logic for this is, but the way I've been testing my multi-client handler changes is by calling `lsp.setup` multiple times but by providing an explicit client.name (e.g. `luals` and `luals2`). It's not an exact solution, but it might lead to something.\r\n\r\n> I mentioned in chat a while ago that I've been using my own implementation of \"user-friendly LSP configuration\" that uses \"passive discovery\" (by finding files on the user's runtimepath) rather than \"active registration\" (i.e. explicitly calling vim.lsp.setup or similar). But frankly I'm happy to see any movement towards making LSP configuration easier so I'm supportive of this, if there's consensus among the team. I just want to make sure we're thinking about all possible use cases.\r\n\r\nI don't think this means we can't also have and rtp based approach as well. Just like we have `FileType` autocmds in addition to `ftplugin/`.\r\n\r\nDoes your rtp based approach have any significant differences to having something like `plugin/luals.lua` which just calls `vim.lsp.setup`?",
            "created_at": "2024-11-03T16:23:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2453484991",
            "id": 2453484991,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SPTW_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453484991/reactions"
            },
            "updated_at": "2024-11-03T16:26:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453484991",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  I can't quite figure where the exact logic for this is\r\n\r\nDo you mean https://github.com/neovim/neovim/blob/0da4d89558a05fb86186253e778510cfd859caea/runtime/lua/vim/lsp.lua#L265 ?\r\n\r\n*Update*: Nevermind, that's already there\r\n\r\n\r\n--- \r\n\r\n\r\n> I mentioned in chat a while ago that I've been using my own implementation of \"user-friendly LSP configuration\" that uses \"passive discovery\" (by finding files on the user's runtimepath) rather than \"active registration\" \r\n\r\n\r\nDo you have a small example how that would look like?\r\nThere was also an issue lately in the lsp repo about servers creating a .lsp entry to make them discoverable. See https://github.com/microsoft/language-server-protocol/issues/2051, which might be related?\r\n",
            "created_at": "2024-11-03T16:34:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2453488476",
            "id": 2453488476,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SPUNc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453488476/reactions"
            },
            "updated_at": "2024-11-03T16:40:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453488476",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">What would you want to configure that isn't possible via vim.lsp.ClientConfig?\r\n\r\n`gopls` doesn't have any sort of configuration file so all configuration has to be done through the `settings` field in the initialization request. One example of a project-specific configuration setting is the [`local`](https://cs.opensource.google/go/x/tools/+/refs/tags/gopls/v0.16.2:gopls/doc/settings.md) setting, which doesn't make sense to use globally/for all projects. For one project at work, I also explicitly set the root directory for both `gopls` and `rust-analyzer` (rather than relying on root markers).\r\n\r\nMaybe this is possible using only `vim.lsp.ClientConfig` though.\r\n\r\n>Does your rtp based approach have any significant differences to having something like plugin/luals.lua which just calls vim.lsp.setup?\r\n\r\nI think the only significant difference is the fact that the rtp approach \"merges\" all of the files found in the rtp for a given server before calling `vim.lsp.start`. This allows a \"hierarchy\" of configuration settings (e.g. project-local -> plugin -> user).\r\n\r\n>Do you have a small example how that would look like?\r\n\r\nThe user creates Lua files under an `lsp/` directory on the runtimepath. Examples: https://github.com/gpanders/dotfiles/tree/master/.config/nvim/lsp. The implementation itself is [here](https://github.com/gpanders/dotfiles/blob/master/.config/nvim/lua/lsp.lua) (it's only about 100 lines of Lua).\r\n\r\nThis extends well to project-local configuration. A user can create a `.nvimrc` file which adds any directory to the runtimepath. In my case, I have `set runtimepath+=$PWD/.nvim` in `.nvimrc` and create overrides in e.g. `.nvim/lsp/gopls.lua`.",
            "created_at": "2024-11-03T18:04:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2453514200",
            "id": 2453514200,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SPafY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453514200/reactions"
            },
            "updated_at": "2024-11-03T18:04:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453514200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> For reference this is all I have in my config:\r\n\r\nThanks to overriding `vim.lsp.protocol.make_client_capabilities` I reduced lots of manual setting `capabilities` to the same value :+1:. I just had to make sure I did it before creating client configurations. ",
            "created_at": "2024-11-03T21:49:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2453588667",
            "id": 2453588667,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SPsq7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453588667/reactions"
            },
            "updated_at": "2024-11-03T21:49:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2453588667",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can we avoid introducing \"setup\" as a new name/concept, and stick with \"config\"?",
            "created_at": "2024-11-04T13:02:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2454661801",
            "id": 2454661801,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6STyqp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454661801/reactions"
            },
            "updated_at": "2024-11-04T13:02:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454661801",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This isn't quite config as it is setting up autocmds to start specific servers; exactly one level above `vim.lsp.start()`. AFAIK there isn't anything existing in Nvim that maps closely to this. I'm not married to \"setup\", despite it not being new to users, but I'm not sure \"config\" is a good fit.\r\n\r\nIt would also be nice to keep `vim.lsp.config` open for non-server specific configuration, similar to `vim.diagnostic.config`, though maybe most of that can be gobbled up by more agnostic methods `vim.ui.config`, `vim.diagnostic.config`, etc.",
            "created_at": "2024-11-04T13:50:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2454770599",
            "id": 2454770599,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SUNOn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454770599/reactions"
            },
            "updated_at": "2024-11-04T13:50:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454770599",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It would also be nice to keep `vim.lsp.config` open for non-server specific configuration,\r\n\r\nWhy couldn't we keep that door open, while still using `vim.lsp.config()` for this initial purpose?",
            "created_at": "2024-11-04T13:53:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2454776276",
            "id": 2454776276,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SUOnU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454776276/reactions"
            },
            "updated_at": "2024-11-04T13:54:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454776276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Because a function for non server specific configuration would have a different signature, and I don't want to combine these two things into a single function.\r\n\r\nWhat about `vim.lsp.add()`? This is the wording I used in my dotfiles.",
            "created_at": "2024-11-04T13:55:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2454782396",
            "id": 2454782396,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SUQG8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454782396/reactions"
            },
            "updated_at": "2024-11-04T13:55:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454782396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> Because a function for non server specific configuration would have a different signature, and I don't want to combine these two things into a single function.\r\n\r\n\"Non-server specific\" means something like \"global defaults\"? I don't see why they would have different interfaces, in fact it would be strange if they did.",
            "created_at": "2024-11-04T14:10:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2454818552",
            "id": 2454818552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SUY74",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454818552/reactions"
            },
            "updated_at": "2024-11-04T14:10:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454818552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> \"Non-server specific\" means something like \"global defaults\"?\r\n\r\nNo it does not. It means things like border hovers, quickfix handling and settings that have nothing to do with a server. Basically defaults for configs that may pass to `vim.lsp.buf` which are designed to handle multiple servers/clients, and thus their configs are not specific to any one server/client.",
            "created_at": "2024-11-04T14:13:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/31031#issuecomment-2454825487",
            "id": 2454825487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
            "node_id": "IC_kwDOAPphoM6SUaoP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454825487/reactions"
            },
            "updated_at": "2024-11-04T14:24:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454825487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31031/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31031/commits",
    "created_at": "2024-11-01T16:45:14Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31031.diff",
    "draft": true,
    "head": {
        "label": "lewis6991:feat/lspsetup",
        "ref": "feat/lspsetup",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-11-04T16:22:18Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 286207,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "2cfdd5a188b4227fdef5f26e75a9dde04754e81c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31031",
    "id": 2158409627,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31031",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "09d5a65e069f074750f98c0df4a2b3ea8e69429d",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6Apreb",
    "number": 31031,
    "patch_url": "https://github.com/neovim/neovim/pull/31031.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31031/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2cfdd5a188b4227fdef5f26e75a9dde04754e81c",
    "title": "feat(lsp): add vim.lsp.setup",
    "updated_at": "2024-11-04T14:24:04Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31031",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    }
}