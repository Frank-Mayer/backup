{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26962/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26962/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26962"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26962"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26962/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/abab12d392e27b56b92680d5575272df531a0248"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5142,
            "forks_count": 5142,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1740,
            "open_issues_count": 1740,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T01:33:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247954,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72793,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-16T01:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72793,
            "watchers_count": 72793,
            "web_commit_signoff_required": false
        },
        "sha": "ae48d965d70cc721a3165c40ba0c34d95408e229",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Resolved 148/150 type errors. Also found some potential bugs.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446054250"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446054250"
                }
            },
            "author_association": "MEMBER",
            "body": "note this",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T12:50:19Z",
            "diff_hunk": "@@ -217,6 +355,8 @@ local function make_highlight_map(base_name)\n   return result\n end\n \n+-- TODO(lewis6991): these highlight maps can only be indexed with an integer, however there usage\n+-- implies they can be indexed with any vim.diagnostic.Severity",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446054250",
            "id": 1446054250,
            "line": 357,
            "node_id": "PRRC_kwDOAPphoM5WMQlq",
            "original_commit_id": "8a480140184a415da24fb80dabbf8994dfd62f71",
            "original_line": 357,
            "original_position": 339,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 336,
            "pull_request_review_id": 1811093285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446054250/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T12:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446054250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446056717"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446056717"
                }
            },
            "author_association": "MEMBER",
            "body": "note this",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T12:52:56Z",
            "diff_hunk": "@@ -689,18 +870,19 @@ function M.set(namespace, bufnr, diagnostics, opts)\n   api.nvim_exec_autocmds('DiagnosticChanged', {\n     modeline = false,\n     buffer = bufnr,\n+    -- TODO(lewis6991): should this be deepcopy()'d like they are in vim.diagnostic.get()",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446056717",
            "id": 1446056717,
            "line": 874,
            "node_id": "PRRC_kwDOAPphoM5WMRMN",
            "original_commit_id": "8a480140184a415da24fb80dabbf8994dfd62f71",
            "original_line": 874,
            "original_position": 601,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 608,
            "pull_request_review_id": 1811093285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446056717/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T12:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446056717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446057129"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446057129"
                }
            },
            "author_association": "MEMBER",
            "body": "note this",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T12:53:18Z",
            "diff_hunk": "@@ -1015,10 +1199,12 @@ M.handlers.underline = {\n \n     local underline_ns = ns.user_data.underline_ns\n     for _, diagnostic in ipairs(diagnostics) do\n-      local higroup = underline_highlight_map[diagnostic.severity]\n+      --- @type string?\n+      local higroup = underline_highlight_map[assert(diagnostic.severity)]\n \n       if higroup == nil then\n         -- Default to error if we don't have a highlight associated\n+        -- TODO(lewis6991): this is always nil since underline_highlight_map only has integer keys",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446057129",
            "id": 1446057129,
            "line": 1207,
            "node_id": "PRRC_kwDOAPphoM5WMRSp",
            "original_commit_id": "8a480140184a415da24fb80dabbf8994dfd62f71",
            "original_line": 1207,
            "original_position": 749,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 824,
            "pull_request_review_id": 1811093285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446057129/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T12:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446057129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446058676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446058676"
                }
            },
            "author_association": "MEMBER",
            "body": "Note I've changed this since LuaLS doesn't type check the element being added in `table.insert`.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T12:54:58Z",
            "diff_hunk": "@@ -1805,23 +2017,23 @@ function M.fromqflist(list)\n     },\n   })\n \n-  local diagnostics = {}\n+  local diagnostics = {} --- @type vim.Diagnostic[]\n   for _, item in ipairs(list) do\n     if item.valid == 1 then\n       local lnum = math.max(0, item.lnum - 1)\n       local col = math.max(0, item.col - 1)\n       local end_lnum = item.end_lnum > 0 and (item.end_lnum - 1) or lnum\n       local end_col = item.end_col > 0 and (item.end_col - 1) or col\n       local severity = item.type ~= '' and M.severity[item.type] or M.severity.ERROR\n-      table.insert(diagnostics, {\n+      diagnostics[#diagnostics+1] = {",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446058676",
            "id": 1446058676,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMRq0",
            "original_commit_id": "8a480140184a415da24fb80dabbf8994dfd62f71",
            "original_line": 2025,
            "original_position": 1060,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1811093285,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446058676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T12:55:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446058676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446059302"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446059302"
                }
            },
            "author_association": "MEMBER",
            "body": "This pollutes `vim.diagnostic.Severity` enum typing. Probably need to set after declared (like E, W, I, N).",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T12:55:34Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts\n+--- @field float? boolean|vim.diagnostic.Opts.Float\n+--- @field update_in_insert? boolean\n+--- @field underline? boolean|vim.diagnostic.Opts.Underline\n+--- @field virtual_text? boolean|vim.diagnostic.Opts.VirtualText\n+--- @field signs? boolean|vim.diagnostic.Opts.Signs\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+\n+--- @class vim.diagnostic.OptsResolved\n+--- @field float vim.diagnostic.Opts.Float\n+--- @field update_in_insert boolean\n+--- @field underline vim.diagnostic.Opts.Underline\n+--- @field virtual_text vim.diagnostic.Opts.VirtualText\n+--- @field signs vim.diagnostic.Opts.Signs\n+--- @field severity_sort {reverse?:boolean}\n+\n+--- @class vim.diagnostic.Opts.Float\n+--- @field bufnr? integer\n+--- @field namespace? integer\n+--- @field scope? 'line'|'buffer'|'cursor'|'c'|'l'|'b'\n+--- @field pos? integer|{[1]:integer,[2]:integer}\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+--- @field severity? vim.diagnostic.Severity\n+--- @field header? string|{[1]:string,[2]:any}\n+--- @field source? boolean|string\n+--- @field format? fun(diagnostic:vim.Diagnostic): string\n+--- @field prefix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field suffix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field focus_id? string\n+\n+--- @class vim.diagnostic.Opts.Underline\n+--- @field severity? vim.diagnostic.Severity\n+\n+--- @class vim.diagnostic.Opts.VirtualText\n+--- @field severity? vim.diagnostic.Severity\n+--- @field source? boolean|string\n+--- @field prefix? string|function\n+--- @field suffix? string|function\n+--- @field spacing? integer\n+--- @field format? function\n+--- @field hl_mode? 'replace'|'combine'|'blend'\n+--- @field virt_text? {[1]:string,[2]:any}[]\n+--- @field virt_text_pos? 'eol'|'overlay'|'right_align'|'inline'\n+--- @field virt_text_win_col? integer\n+--- @field virt_text_hide? boolean\n+\n+--- @class vim.diagnostic.Opts.Signs\n+--- @field severity? vim.diagnostic.Severity\n+--- @field priority? integer\n+--- @field text? table<vim.diagnostic.Severity,string>\n+--- @field numhl? table<vim.diagnostic.Severity,string>\n+--- @field linehl? table<vim.diagnostic.Severity,string>\n+--- @field texthl? table<vim.diagnostic.Severity,string>\n+\n+--- @alias DiagnosticSeverity vim.diagnostic.Severity\n+--- @enum vim.diagnostic.Severity\n M.severity = {\n   ERROR = 1,\n   WARN = 2,\n   INFO = 3,\n   HINT = 4,\n+  [1] = 'ERROR',\n+  [2] = 'WARN',\n+  [3] = 'INFO',\n+  [4] = 'HINT',",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446059302",
            "id": 1446059302,
            "line": 82,
            "node_id": "PRRC_kwDOAPphoM5WMR0m",
            "original_commit_id": "8a480140184a415da24fb80dabbf8994dfd62f71",
            "original_line": 82,
            "original_position": 84,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 82,
            "pull_request_review_id": 1811101742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446059302/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446059302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446062147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446062147"
                }
            },
            "author_association": "MEMBER",
            "body": "This could be defined in proximity of `vim.diagnostic.Severity` above.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T12:58:27Z",
            "diff_hunk": "@@ -205,9 +339,13 @@ local diagnostic_severities = {\n   [M.severity.HINT] = { ctermfg = 7, guifg = 'LightGrey' },\n }\n \n--- Make a map from DiagnosticSeverity -> Highlight Name\n+--- @alias vim.diagnostic.SeverityInt 1|2|3|4",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446062147",
            "id": 1446062147,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMShD",
            "original_commit_id": "5541439cf46c9cbf242f80a6d7defae82b5d6ccc",
            "original_line": 342,
            "original_position": 323,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1811101742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446062147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446062147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446065060"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446065060"
                }
            },
            "author_association": "MEMBER",
            "body": "(line overflow)\r\n\r\n```suggestion\r\n---@param opts vim.diagnostic.Opts|nil When omitted or \"nil\", retrieve the current configuration.\r\n---                      Otherwise, a configuration table with the following keys:\r\n```",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T13:01:38Z",
            "diff_hunk": "@@ -549,7 +730,7 @@ end\n ---         - `table`: Enable this feature with overrides. Use an empty table to use default values.\n ---         - `function`: Function with signature (namespace, bufnr) that returns any of the above.\n ---\n----@param opts table|nil When omitted or \"nil\", retrieve the current configuration. Otherwise, a\n+---@param opts vim.diagnostic.Opts|nil When omitted or \"nil\", retrieve the current configuration. Otherwise, a\n ---                      configuration table with the following keys:",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446065060",
            "id": 1446065060,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMTOk",
            "original_commit_id": "5541439cf46c9cbf242f80a6d7defae82b5d6ccc",
            "original_line": 735,
            "original_position": 557,
            "original_start_line": 733,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1811101742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446065060/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-12T12:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446065060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1446068820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446068820"
                }
            },
            "author_association": "MEMBER",
            "body": "Consider adding `-- stylua: ignore start`..`end`? For me, Stylua 0.19.1 transforms this to an ugly one (into three lines). Or simply `---@diagnostic disable-next-line: no-unknown`",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-09T13:05:52Z",
            "diff_hunk": "@@ -639,7 +820,7 @@ function M.config(opts, namespace)\n     return vim.deepcopy(t, true)\n   end\n \n-  for k, v in pairs(opts) do\n+  for k, v in pairs(opts --[[@as table<any,any>]]) do",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1446068820",
            "id": 1446068820,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMUJU",
            "original_commit_id": "5541439cf46c9cbf242f80a6d7defae82b5d6ccc",
            "original_line": 823,
            "original_position": 582,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1811101742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446068820/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T13:00:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446068820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1450389203"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450389203"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@param opts vim.diagnostic.Opts.Float? Configuration table with the same keys\r\n```",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-12T12:46:04Z",
            "diff_hunk": "@@ -1306,15 +1496,15 @@ function M.show(namespace, bufnr, diagnostics, opts)\n   end\n \n   for handler_name, handler in pairs(M.handlers) do\n-    if handler.show and opts[handler_name] then\n-      handler.show(namespace, bufnr, diagnostics, opts)\n+    if handler.show and opts_res[handler_name] then\n+      handler.show(namespace, bufnr, diagnostics, opts_res)\n     end\n   end\n end\n \n --- Show diagnostics in a floating window.\n ---\n----@param opts table|nil Configuration table with the same keys\n+---@param opts table? Configuration table with the same keys",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1450389203",
            "id": 1450389203,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Wcy7T",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 1507,
            "original_position": 951,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1811101742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450389203/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450389203",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1450393258"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450393258"
                }
            },
            "author_association": "MEMBER",
            "body": "Please consider defining this `@class` annotation closer to `M.open_float` function (near L1505), since `M.open_float` owns this type.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-12T12:49:26Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts\n+--- @field float? boolean|vim.diagnostic.Opts.Float\n+--- @field update_in_insert? boolean\n+--- @field underline? boolean|vim.diagnostic.Opts.Underline\n+--- @field virtual_text? boolean|vim.diagnostic.Opts.VirtualText\n+--- @field signs? boolean|vim.diagnostic.Opts.Signs\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+\n+--- @class vim.diagnostic.OptsResolved\n+--- @field float vim.diagnostic.Opts.Float\n+--- @field update_in_insert boolean\n+--- @field underline vim.diagnostic.Opts.Underline\n+--- @field virtual_text vim.diagnostic.Opts.VirtualText\n+--- @field signs vim.diagnostic.Opts.Signs\n+--- @field severity_sort {reverse?:boolean}\n+\n+--- @class vim.diagnostic.Opts.Float",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1450393258",
            "id": 1450393258,
            "line": 35,
            "node_id": "PRRC_kwDOAPphoM5Wcz6q",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 35,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 35,
            "pull_request_review_id": 1811101742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450393258/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450393258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1450402505"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450402505"
                }
            },
            "author_association": "MEMBER",
            "body": "It doesn't pollute it, it corrects it. Half the API assumes `Severity` can be passed as an integer.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-12T12:55:10Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts\n+--- @field float? boolean|vim.diagnostic.Opts.Float\n+--- @field update_in_insert? boolean\n+--- @field underline? boolean|vim.diagnostic.Opts.Underline\n+--- @field virtual_text? boolean|vim.diagnostic.Opts.VirtualText\n+--- @field signs? boolean|vim.diagnostic.Opts.Signs\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+\n+--- @class vim.diagnostic.OptsResolved\n+--- @field float vim.diagnostic.Opts.Float\n+--- @field update_in_insert boolean\n+--- @field underline vim.diagnostic.Opts.Underline\n+--- @field virtual_text vim.diagnostic.Opts.VirtualText\n+--- @field signs vim.diagnostic.Opts.Signs\n+--- @field severity_sort {reverse?:boolean}\n+\n+--- @class vim.diagnostic.Opts.Float\n+--- @field bufnr? integer\n+--- @field namespace? integer\n+--- @field scope? 'line'|'buffer'|'cursor'|'c'|'l'|'b'\n+--- @field pos? integer|{[1]:integer,[2]:integer}\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+--- @field severity? vim.diagnostic.Severity\n+--- @field header? string|{[1]:string,[2]:any}\n+--- @field source? boolean|string\n+--- @field format? fun(diagnostic:vim.Diagnostic): string\n+--- @field prefix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field suffix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field focus_id? string\n+\n+--- @class vim.diagnostic.Opts.Underline\n+--- @field severity? vim.diagnostic.Severity\n+\n+--- @class vim.diagnostic.Opts.VirtualText\n+--- @field severity? vim.diagnostic.Severity\n+--- @field source? boolean|string\n+--- @field prefix? string|function\n+--- @field suffix? string|function\n+--- @field spacing? integer\n+--- @field format? function\n+--- @field hl_mode? 'replace'|'combine'|'blend'\n+--- @field virt_text? {[1]:string,[2]:any}[]\n+--- @field virt_text_pos? 'eol'|'overlay'|'right_align'|'inline'\n+--- @field virt_text_win_col? integer\n+--- @field virt_text_hide? boolean\n+\n+--- @class vim.diagnostic.Opts.Signs\n+--- @field severity? vim.diagnostic.Severity\n+--- @field priority? integer\n+--- @field text? table<vim.diagnostic.Severity,string>\n+--- @field numhl? table<vim.diagnostic.Severity,string>\n+--- @field linehl? table<vim.diagnostic.Severity,string>\n+--- @field texthl? table<vim.diagnostic.Severity,string>\n+\n+--- @alias DiagnosticSeverity vim.diagnostic.Severity\n+--- @enum vim.diagnostic.Severity\n M.severity = {\n   ERROR = 1,\n   WARN = 2,\n   INFO = 3,\n   HINT = 4,\n+  [1] = 'ERROR',\n+  [2] = 'WARN',\n+  [3] = 'INFO',\n+  [4] = 'HINT',",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1450402505",
            "id": 1450402505,
            "in_reply_to_id": 1446059302,
            "line": 82,
            "node_id": "PRRC_kwDOAPphoM5Wc2LJ",
            "original_commit_id": "8a480140184a415da24fb80dabbf8994dfd62f71",
            "original_line": 82,
            "original_position": 84,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 82,
            "pull_request_review_id": 1818185828,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450402505/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:55:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450402505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1450404182"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450404182"
                }
            },
            "author_association": "MEMBER",
            "body": "Doesn't the repo stylua config already handle this? Otherwise CI would have failed. Regardless, I think splitting this over 3 lines is preferable to adding comment annotations to prevent it.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-12T12:56:30Z",
            "diff_hunk": "@@ -639,7 +820,7 @@ function M.config(opts, namespace)\n     return vim.deepcopy(t, true)\n   end\n \n-  for k, v in pairs(opts) do\n+  for k, v in pairs(opts --[[@as table<any,any>]]) do",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1450404182",
            "id": 1450404182,
            "in_reply_to_id": 1446068820,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Wc2lW",
            "original_commit_id": "5541439cf46c9cbf242f80a6d7defae82b5d6ccc",
            "original_line": 823,
            "original_position": 582,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1818189567,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450404182/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:58:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450404182",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1450405184"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450405184"
                }
            },
            "author_association": "MEMBER",
            "body": "I wouldn't say `open_float()` owns this type. `vim.diagnostic.Opts` owns this just as much.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-12T12:57:32Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts\n+--- @field float? boolean|vim.diagnostic.Opts.Float\n+--- @field update_in_insert? boolean\n+--- @field underline? boolean|vim.diagnostic.Opts.Underline\n+--- @field virtual_text? boolean|vim.diagnostic.Opts.VirtualText\n+--- @field signs? boolean|vim.diagnostic.Opts.Signs\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+\n+--- @class vim.diagnostic.OptsResolved\n+--- @field float vim.diagnostic.Opts.Float\n+--- @field update_in_insert boolean\n+--- @field underline vim.diagnostic.Opts.Underline\n+--- @field virtual_text vim.diagnostic.Opts.VirtualText\n+--- @field signs vim.diagnostic.Opts.Signs\n+--- @field severity_sort {reverse?:boolean}\n+\n+--- @class vim.diagnostic.Opts.Float",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1450405184",
            "id": 1450405184,
            "in_reply_to_id": 1450393258,
            "line": 35,
            "node_id": "PRRC_kwDOAPphoM5Wc21A",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 35,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 35,
            "pull_request_review_id": 1818191242,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450405184/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T12:57:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450405184",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1450446894"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450446894"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry, this comment was on the outdated diff, never mind. It now reads like the following, which I didn't feel pretty:\r\n\r\n```lua\r\n  for k, v in\r\n    pairs(opts --[[@as table<any,any>]])\r\n  do\r\n    t[k] = v\r\n  end\r\n```",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-12T13:20:34Z",
            "diff_hunk": "@@ -639,7 +820,7 @@ function M.config(opts, namespace)\n     return vim.deepcopy(t, true)\n   end\n \n-  for k, v in pairs(opts) do\n+  for k, v in pairs(opts --[[@as table<any,any>]]) do",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1450446894",
            "id": 1450446894,
            "in_reply_to_id": 1446068820,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WdBAu",
            "original_commit_id": "5541439cf46c9cbf242f80a6d7defae82b5d6ccc",
            "original_line": 823,
            "original_position": 582,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1818253068,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450446894/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-12T13:20:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1450446894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1451660357"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660357"
                }
            },
            "author_association": "MEMBER",
            "body": "Shouldn't this PR change the return type to `vim.Diagnostic`?",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-14T05:29:56Z",
            "diff_hunk": "@@ -671,17 +672,18 @@ match({str}, {pat}, {groups}, {severity_map}, {defaults})\n     Parameters: ~\n       • {str}           (`string`) String to parse diagnostics from.\n       • {pat}           (`string`) Lua pattern with capture groups.\n-      • {groups}        (`table`) List of fields in a |diagnostic-structure|\n-                        to associate with captures from {pat}.\n+      • {groups}        (`string[]`) List of fields in a\n+                        |diagnostic-structure| to associate with captures from\n+                        {pat}.\n       • {severity_map}  (`table`) A table mapping the severity field from\n                         {groups} with an item from |vim.diagnostic.severity|.\n       • {defaults}      (`table?`) Table of default values for any fields not\n                         listed in {groups}. When omitted, numeric values\n                         default to 0 and \"severity\" defaults to ERROR.\n \n     Return: ~\n-        (`Diagnostic?`) |diagnostic-structure| or `nil` if {pat} fails to match\n-        {str}.\n+        (`Diagnostic?`) |diagnostic-structure| or `nil` if {pat} fails to",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1451660357",
            "id": 1451660357,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhpRF",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 685,
            "original_position": 79,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 1820154049,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660357/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T05:47:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660357",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1451660664"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660664"
                }
            },
            "author_association": "MEMBER",
            "body": "Why the namespacing difference (`vim.Diagnostic` versus `vim.diagnostic.x`)?",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-14T05:33:03Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1451660664",
            "id": 1451660664,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM5WhpV4",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 19,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 19,
            "pull_request_review_id": 1820154049,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660664/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T05:47:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660664",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1451660820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660820"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not use `vin.tbl_add_reverse_lookup`?",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-14T05:35:01Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts\n+--- @field float? boolean|vim.diagnostic.Opts.Float\n+--- @field update_in_insert? boolean\n+--- @field underline? boolean|vim.diagnostic.Opts.Underline\n+--- @field virtual_text? boolean|vim.diagnostic.Opts.VirtualText\n+--- @field signs? boolean|vim.diagnostic.Opts.Signs\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+\n+--- @class vim.diagnostic.OptsResolved\n+--- @field float vim.diagnostic.Opts.Float\n+--- @field update_in_insert boolean\n+--- @field underline vim.diagnostic.Opts.Underline\n+--- @field virtual_text vim.diagnostic.Opts.VirtualText\n+--- @field signs vim.diagnostic.Opts.Signs\n+--- @field severity_sort {reverse?:boolean}\n+\n+--- @class vim.diagnostic.Opts.Float\n+--- @field bufnr? integer\n+--- @field namespace? integer\n+--- @field scope? 'line'|'buffer'|'cursor'|'c'|'l'|'b'\n+--- @field pos? integer|{[1]:integer,[2]:integer}\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+--- @field severity? vim.diagnostic.Severity\n+--- @field header? string|{[1]:string,[2]:any}\n+--- @field source? boolean|string\n+--- @field format? fun(diagnostic:vim.Diagnostic): string\n+--- @field prefix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field suffix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field focus_id? string\n+\n+--- @class vim.diagnostic.Opts.Underline\n+--- @field severity? vim.diagnostic.Severity\n+\n+--- @class vim.diagnostic.Opts.VirtualText\n+--- @field severity? vim.diagnostic.Severity\n+--- @field source? boolean|string\n+--- @field prefix? string|function\n+--- @field suffix? string|function\n+--- @field spacing? integer\n+--- @field format? function\n+--- @field hl_mode? 'replace'|'combine'|'blend'\n+--- @field virt_text? {[1]:string,[2]:any}[]\n+--- @field virt_text_pos? 'eol'|'overlay'|'right_align'|'inline'\n+--- @field virt_text_win_col? integer\n+--- @field virt_text_hide? boolean\n+\n+--- @class vim.diagnostic.Opts.Signs\n+--- @field severity? vim.diagnostic.Severity\n+--- @field priority? integer\n+--- @field text? table<vim.diagnostic.Severity,string>\n+--- @field numhl? table<vim.diagnostic.Severity,string>\n+--- @field linehl? table<vim.diagnostic.Severity,string>\n+--- @field texthl? table<vim.diagnostic.Severity,string>\n+\n+--- @alias DiagnosticSeverity vim.diagnostic.Severity\n+--- @enum vim.diagnostic.Severity\n M.severity = {\n   ERROR = 1,\n   WARN = 2,\n   INFO = 3,\n   HINT = 4,\n+  [1] = 'ERROR',",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1451660820",
            "id": 1451660820,
            "line": 79,
            "node_id": "PRRC_kwDOAPphoM5WhpYU",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 79,
            "original_position": 81,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 79,
            "pull_request_review_id": 1820154049,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660820/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T05:47:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451660820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1451661050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451661050"
                }
            },
            "author_association": "MEMBER",
            "body": "Return types?",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-14T05:38:59Z",
            "diff_hunk": "@@ -27,6 +100,11 @@ local global_diagnostic_options = {\n   severity_sort = false,\n }\n \n+--- @class vim.diagnostic.Handler\n+--- @field show? fun(namespace: integer, bufnr: integer, diagnostics: vim.Diagnostic[], opts?: vim.diagnostic.OptsResolved)\n+--- @field hide? fun(namespace:integer, bufnr:integer)",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1451661050",
            "id": 1451661050,
            "line": 105,
            "node_id": "PRRC_kwDOAPphoM5Whpb6",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 105,
            "original_position": 105,
            "original_start_line": 104,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 104,
            "pull_request_review_id": 1820154049,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451661050/reactions"
            },
            "side": "RIGHT",
            "start_line": 104,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-14T05:47:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451661050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1451708056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451708056"
                }
            },
            "author_association": "MEMBER",
            "body": "`vim.Diagnostic` refers to the diagnostic object, `vim.diagnostic.*` is just used for any class used within `vim.diagnostic`.\n\nI decided `vim.Diagnostic` was preferable to `vim.diagnostic.Diagnostic` since it's a common object that is used in many places.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-14T11:05:13Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1451708056",
            "id": 1451708056,
            "in_reply_to_id": 1451660664,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM5Wh06Y",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 19,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 19,
            "pull_request_review_id": 1820202271,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451708056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T11:05:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451708056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1451708186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451708186"
                }
            },
            "author_association": "MEMBER",
            "body": "Because that doesn't add any typing and we plan to deprecate that function.",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-14T11:06:10Z",
            "diff_hunk": "@@ -2,22 +2,95 @@ local api, if_nil = vim.api, vim.F.if_nil\n \n local M = {}\n \n----@enum DiagnosticSeverity\n+--- @alias Diagnostic vim.Diagnostic\n+--- @class vim.Diagnostic\n+--- @field bufnr? integer\n+--- @field lnum integer 0-indexed\n+--- @field end_lnum? integer 0-indexed\n+--- @field col integer 0-indexed\n+--- @field end_col? integer 0-indexed\n+--- @field severity? vim.diagnostic.Severity\n+--- @field message string\n+--- @field source? string\n+--- @field code? string\n+--- @field _tags? { deprecated: boolean, unnecessary: boolean}\n+--- @field user_data? any arbitrary data plugins can add\n+--- @field namespace? integer\n+\n+--- @class vim.diagnostic.Opts\n+--- @field float? boolean|vim.diagnostic.Opts.Float\n+--- @field update_in_insert? boolean\n+--- @field underline? boolean|vim.diagnostic.Opts.Underline\n+--- @field virtual_text? boolean|vim.diagnostic.Opts.VirtualText\n+--- @field signs? boolean|vim.diagnostic.Opts.Signs\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+\n+--- @class vim.diagnostic.OptsResolved\n+--- @field float vim.diagnostic.Opts.Float\n+--- @field update_in_insert boolean\n+--- @field underline vim.diagnostic.Opts.Underline\n+--- @field virtual_text vim.diagnostic.Opts.VirtualText\n+--- @field signs vim.diagnostic.Opts.Signs\n+--- @field severity_sort {reverse?:boolean}\n+\n+--- @class vim.diagnostic.Opts.Float\n+--- @field bufnr? integer\n+--- @field namespace? integer\n+--- @field scope? 'line'|'buffer'|'cursor'|'c'|'l'|'b'\n+--- @field pos? integer|{[1]:integer,[2]:integer}\n+--- @field severity_sort? boolean|{reverse?:boolean}\n+--- @field severity? vim.diagnostic.Severity\n+--- @field header? string|{[1]:string,[2]:any}\n+--- @field source? boolean|string\n+--- @field format? fun(diagnostic:vim.Diagnostic): string\n+--- @field prefix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field suffix? string|table|(fun(diagnostic:vim.Diagnostic,i:integer,total:integer): string, string)\n+--- @field focus_id? string\n+\n+--- @class vim.diagnostic.Opts.Underline\n+--- @field severity? vim.diagnostic.Severity\n+\n+--- @class vim.diagnostic.Opts.VirtualText\n+--- @field severity? vim.diagnostic.Severity\n+--- @field source? boolean|string\n+--- @field prefix? string|function\n+--- @field suffix? string|function\n+--- @field spacing? integer\n+--- @field format? function\n+--- @field hl_mode? 'replace'|'combine'|'blend'\n+--- @field virt_text? {[1]:string,[2]:any}[]\n+--- @field virt_text_pos? 'eol'|'overlay'|'right_align'|'inline'\n+--- @field virt_text_win_col? integer\n+--- @field virt_text_hide? boolean\n+\n+--- @class vim.diagnostic.Opts.Signs\n+--- @field severity? vim.diagnostic.Severity\n+--- @field priority? integer\n+--- @field text? table<vim.diagnostic.Severity,string>\n+--- @field numhl? table<vim.diagnostic.Severity,string>\n+--- @field linehl? table<vim.diagnostic.Severity,string>\n+--- @field texthl? table<vim.diagnostic.Severity,string>\n+\n+--- @alias DiagnosticSeverity vim.diagnostic.Severity\n+--- @enum vim.diagnostic.Severity\n M.severity = {\n   ERROR = 1,\n   WARN = 2,\n   INFO = 3,\n   HINT = 4,\n+  [1] = 'ERROR',",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1451708186",
            "id": 1451708186,
            "in_reply_to_id": 1451660820,
            "line": 79,
            "node_id": "PRRC_kwDOAPphoM5Wh08a",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 79,
            "original_position": 81,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 79,
            "pull_request_review_id": 1820202417,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451708186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T11:06:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451708186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1452351725"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452351725"
                }
            },
            "author_association": "MEMBER",
            "body": "There aren't any?",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-15T13:02:51Z",
            "diff_hunk": "@@ -27,6 +100,11 @@ local global_diagnostic_options = {\n   severity_sort = false,\n }\n \n+--- @class vim.diagnostic.Handler\n+--- @field show? fun(namespace: integer, bufnr: integer, diagnostics: vim.Diagnostic[], opts?: vim.diagnostic.OptsResolved)\n+--- @field hide? fun(namespace:integer, bufnr:integer)",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1452351725",
            "id": 1452351725,
            "in_reply_to_id": 1451661050,
            "line": 105,
            "node_id": "PRRC_kwDOAPphoM5WkSDt",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 105,
            "original_position": 105,
            "original_start_line": 104,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 104,
            "pull_request_review_id": 1821646964,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452351725/reactions"
            },
            "side": "RIGHT",
            "start_line": 104,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-15T13:02:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452351725",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26962#discussion_r1452636161"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26962"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452636161"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh I thought these could return something. Nvm :)",
            "commit_id": "abab12d392e27b56b92680d5575272df531a0248",
            "created_at": "2024-01-15T17:46:31Z",
            "diff_hunk": "@@ -27,6 +100,11 @@ local global_diagnostic_options = {\n   severity_sort = false,\n }\n \n+--- @class vim.diagnostic.Handler\n+--- @field show? fun(namespace: integer, bufnr: integer, diagnostics: vim.Diagnostic[], opts?: vim.diagnostic.OptsResolved)\n+--- @field hide? fun(namespace:integer, bufnr:integer)",
            "html_url": "https://github.com/neovim/neovim/pull/26962#discussion_r1452636161",
            "id": 1452636161,
            "in_reply_to_id": 1451661050,
            "line": 105,
            "node_id": "PRRC_kwDOAPphoM5WlXgB",
            "original_commit_id": "d7b509025c52b10ac551e18947c1b786f85963ad",
            "original_line": 105,
            "original_position": 105,
            "original_start_line": 104,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 104,
            "pull_request_review_id": 1822092967,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452636161/reactions"
            },
            "side": "RIGHT",
            "start_line": 104,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-15T17:46:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1452636161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Need to fix docgen in another PR. Setting to draft.",
            "created_at": "2024-01-09T13:21:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/26962#issuecomment-1883046646",
            "id": 1883046646,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26962",
            "node_id": "IC_kwDOAPphoM5wPQL2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883046646/reactions"
            },
            "updated_at": "2024-01-09T13:21:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883046646",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "![image-2](https://github.com/neovim/neovim/assets/61395246/63937e04-7448-40a3-87e3-f0ee33a22d56)\r\n\r\nIs this relevant to the PR?\r\nIs the above behaviour correct? ",
            "created_at": "2024-01-12T15:56:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/26962#issuecomment-1889554001",
            "id": 1889554001,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26962",
            "node_id": "IC_kwDOAPphoM5woE5R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1889554001/reactions"
            },
            "updated_at": "2024-01-12T16:03:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1889554001",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61395246?v=4",
                "events_url": "https://api.github.com/users/LamprosPitsillos/events{/privacy}",
                "followers_url": "https://api.github.com/users/LamprosPitsillos/followers",
                "following_url": "https://api.github.com/users/LamprosPitsillos/following{/other_user}",
                "gists_url": "https://api.github.com/users/LamprosPitsillos/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/LamprosPitsillos",
                "id": 61395246,
                "login": "LamprosPitsillos",
                "node_id": "MDQ6VXNlcjYxMzk1MjQ2",
                "organizations_url": "https://api.github.com/users/LamprosPitsillos/orgs",
                "received_events_url": "https://api.github.com/users/LamprosPitsillos/received_events",
                "repos_url": "https://api.github.com/users/LamprosPitsillos/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/LamprosPitsillos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/LamprosPitsillos/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/LamprosPitsillos"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No that is completely unrelated.",
            "created_at": "2024-01-12T16:03:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/26962#issuecomment-1889564499",
            "id": 1889564499,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26962",
            "node_id": "IC_kwDOAPphoM5woHdT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1889564499/reactions"
            },
            "updated_at": "2024-01-12T16:06:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1889564499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26962/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26962/commits",
    "created_at": "2024-01-09T12:48:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26962.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:fix_diag_typ",
        "ref": "fix_diag_typ",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-01-15T23:24:13Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 242895,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T18:36:52Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "abab12d392e27b56b92680d5575272df531a0248",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26962",
    "id": 1670589399,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26962",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "5aea2a5cb1a4214e851b0bc351a9c3a9f350aa40",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5jkyvX",
    "number": 26962,
    "patch_url": "https://github.com/neovim/neovim/pull/26962.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26962/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/abab12d392e27b56b92680d5575272df531a0248",
    "title": "fix(diagnostic): typing",
    "updated_at": "2024-01-15T23:24:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26962",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}