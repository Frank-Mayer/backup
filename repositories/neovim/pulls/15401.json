{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15401/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15401/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15401"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15401"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15401/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7cafad2673659fac5bfbfef507b1637245cd49a5"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5414,
            "forks_count": 5414,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1725,
            "open_issues_count": 1725,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-27T22:51:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 271477,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 78533,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-28T01:40:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 78533,
            "watchers_count": 78533,
            "web_commit_signoff_required": false
        },
        "sha": "0603eba6e713b2bd25cbbb55caf2342b0ccdece9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "ref #6289 #6399\r\n\r\nAdd a new default autocommand to limit syntax highlighting\r\nsynchronization in the command window. This refactors the nvim_terminal\r\nautocommand out of main() and into a new init_default_autocmds()\r\nfunction, which is now part of the startup process and can be further\r\nextended with more default autocommands down the road.",
    "closed_at": "2021-09-02T11:17:04Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r691230821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691230821"
                }
            },
            "author_association": "MEMBER",
            "body": "need to document this augroup somewhere . need to think about this.\r\n\r\nalso wonder if we can avoid all the C string junk and put this in a \"special\" runtime file that is sourced by main() or whatever. That also helps discoverability and easier inspection, we can point to that runtime file from the docs.",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-18T13:20:33Z",
            "diff_hunk": "@@ -2117,3 +2117,29 @@ bool au_exists(const char *const arg) FUNC_ATTR_WARN_UNUSED_RESULT\n   xfree(arg_save);\n   return retval;\n }\n+\n+void init_default_autocmds(void)\n+{\n+  // open terminals when opening files that start with term://\n+#define PROTO \"term://\"\n+  do_augroup((char_u *)\"nvim_terminal\", false);\n+  do_autocmd_event(EVENT_BUFREADCMD, (char_u *)PROTO \"*\", false, true,\n+                   (char_u *)\":if !exists('b:term_title')|call termopen( \"\n+                   // Capture the command string\n+                   \"matchstr(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), \"\n+                   // capture the working directory\n+                   \"{'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, ''))})\"\n+                   \"|endif\",\n+                   true,\n+                   AUGROUP_ALL);\n+  do_augroup((char_u *)\"END\", false);\n+#undef PROTO\n+\n+  // Only sync 1 syntax line in the command window\n+  do_augroup((char_u *)\"nvim_cmdwin\", false);",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r691230821",
            "id": 691230821,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTIzMDgyMQ==",
            "original_commit_id": "9e47d72730fa7c93eac4b410161f1c7020f0d6c2",
            "original_line": 2141,
            "original_position": 34,
            "original_start_line": null,
            "path": "src/nvim/autocmd.c",
            "position": null,
            "pull_request_review_id": 732854771,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691230821/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T13:20:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691230821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r691244873"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691244873"
                }
            },
            "author_association": "MEMBER",
            "body": "> need to document this augroup somewhere . need to think about this.\r\n\r\nWe could put all default autocmds into a single group and then just document that?\r\n\r\n> also wonder if we can avoid all the C string junk and put this in a \"special\" runtime file that is sourced by main() or whatever. That also helps discoverability and easier inspection, we can point to that runtime file from the docs.\r\n\r\nThat's a good idea. I think in this case the discoverability and maintainability of having it in its own runtime file outweigh whatever performance benefits come from doing it directly in C.",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-18T13:36:03Z",
            "diff_hunk": "@@ -2117,3 +2117,29 @@ bool au_exists(const char *const arg) FUNC_ATTR_WARN_UNUSED_RESULT\n   xfree(arg_save);\n   return retval;\n }\n+\n+void init_default_autocmds(void)\n+{\n+  // open terminals when opening files that start with term://\n+#define PROTO \"term://\"\n+  do_augroup((char_u *)\"nvim_terminal\", false);\n+  do_autocmd_event(EVENT_BUFREADCMD, (char_u *)PROTO \"*\", false, true,\n+                   (char_u *)\":if !exists('b:term_title')|call termopen( \"\n+                   // Capture the command string\n+                   \"matchstr(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), \"\n+                   // capture the working directory\n+                   \"{'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, ''))})\"\n+                   \"|endif\",\n+                   true,\n+                   AUGROUP_ALL);\n+  do_augroup((char_u *)\"END\", false);\n+#undef PROTO\n+\n+  // Only sync 1 syntax line in the command window\n+  do_augroup((char_u *)\"nvim_cmdwin\", false);",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r691244873",
            "id": 691244873,
            "in_reply_to_id": 691230821,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI0NDg3Mw==",
            "original_commit_id": "9e47d72730fa7c93eac4b410161f1c7020f0d6c2",
            "original_line": 2141,
            "original_position": 34,
            "original_start_line": null,
            "path": "src/nvim/autocmd.c",
            "position": null,
            "pull_request_review_id": 732873712,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691244873/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T13:36:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691244873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r691258681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691258681"
                }
            },
            "author_association": "MEMBER",
            "body": "> We could put all default autocmds into a single group and then just document that?\r\n\r\nWe want users to be able to selectively opt-out of various defaults. A single augroup defeats that. I think `nvim_*` augroup name convention is OK for now, haven't thought of something better. (Lua will make this better: we can group events in a global map.)",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-18T13:51:15Z",
            "diff_hunk": "@@ -2117,3 +2117,29 @@ bool au_exists(const char *const arg) FUNC_ATTR_WARN_UNUSED_RESULT\n   xfree(arg_save);\n   return retval;\n }\n+\n+void init_default_autocmds(void)\n+{\n+  // open terminals when opening files that start with term://\n+#define PROTO \"term://\"\n+  do_augroup((char_u *)\"nvim_terminal\", false);\n+  do_autocmd_event(EVENT_BUFREADCMD, (char_u *)PROTO \"*\", false, true,\n+                   (char_u *)\":if !exists('b:term_title')|call termopen( \"\n+                   // Capture the command string\n+                   \"matchstr(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), \"\n+                   // capture the working directory\n+                   \"{'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, ''))})\"\n+                   \"|endif\",\n+                   true,\n+                   AUGROUP_ALL);\n+  do_augroup((char_u *)\"END\", false);\n+#undef PROTO\n+\n+  // Only sync 1 syntax line in the command window\n+  do_augroup((char_u *)\"nvim_cmdwin\", false);",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r691258681",
            "id": 691258681,
            "in_reply_to_id": 691230821,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI1ODY4MQ==",
            "original_commit_id": "9e47d72730fa7c93eac4b410161f1c7020f0d6c2",
            "original_line": 2141,
            "original_position": 34,
            "original_start_line": null,
            "path": "src/nvim/autocmd.c",
            "position": null,
            "pull_request_review_id": 732892672,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691258681/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T13:51:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691258681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r691437790"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691437790"
                }
            },
            "author_association": "MEMBER",
            "body": "One \"gotcha\" with using a runtime file is that it changes the script IDs of all subsequent scripts. This causes a lot of the tests to fail (since they assume script IDs start at 1, but they now start at 2) in addition to making the user's init.vim no longer have SID 1.\r\n\r\nPossible solutions:\r\n\r\n1. Don't execute the autocmd script when using `-u NONE`. This would fix the tests at least, but would prevent the `term://` BufReadCmd autocmd from working with `-u NONE`\r\n2. Source the autocmds.vim file after the user's init.vim. This would make init.vim still have SID 1, but the user can no longer remove these autocmds from their init.vim if they want to (I suppose we could add a guard around autocmds.vim so that user's can prevent it from loading). This would also prevent the `term://` BufReadCmd from working properly with e.g. `-c 'e term://ls'` on the command line.\r\n\r\nMy 2 cents is that we do both (1) and (2) but keep the `nvim_terminal` autocommand as it is now, defined directly in `main.c` and only use `autocmds.vim` for the CmdWinEnter autocommand and any future default autocommands. Thoughts?\r\n\r\n**EDIT:** This pattern also extends well to another likely default autocommand: setting the cursor in its last position in a buffer when it's first opened. In order to blacklist buffers by filetype, that autocommand needs to be defined after the filetype autocommands, which the proposed method supports.",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-18T16:54:42Z",
            "diff_hunk": "@@ -2117,3 +2117,29 @@ bool au_exists(const char *const arg) FUNC_ATTR_WARN_UNUSED_RESULT\n   xfree(arg_save);\n   return retval;\n }\n+\n+void init_default_autocmds(void)\n+{\n+  // open terminals when opening files that start with term://\n+#define PROTO \"term://\"\n+  do_augroup((char_u *)\"nvim_terminal\", false);\n+  do_autocmd_event(EVENT_BUFREADCMD, (char_u *)PROTO \"*\", false, true,\n+                   (char_u *)\":if !exists('b:term_title')|call termopen( \"\n+                   // Capture the command string\n+                   \"matchstr(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), \"\n+                   // capture the working directory\n+                   \"{'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, ''))})\"\n+                   \"|endif\",\n+                   true,\n+                   AUGROUP_ALL);\n+  do_augroup((char_u *)\"END\", false);\n+#undef PROTO\n+\n+  // Only sync 1 syntax line in the command window\n+  do_augroup((char_u *)\"nvim_cmdwin\", false);",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r691437790",
            "id": 691437790,
            "in_reply_to_id": 691230821,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTQzNzc5MA==",
            "original_commit_id": "9e47d72730fa7c93eac4b410161f1c7020f0d6c2",
            "original_line": 2141,
            "original_position": 34,
            "original_start_line": null,
            "path": "src/nvim/autocmd.c",
            "position": null,
            "pull_request_review_id": 733136902,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691437790/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T17:30:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691437790",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r691725483"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691725483"
                }
            },
            "author_association": "MEMBER",
            "body": "> This causes a lot of the tests to fail (since they assume script IDs start at 1, but they now start at 2)\r\n\r\nI'm surprised by this, and that's arguably a bug in the tests.  Upstream's test infrastructure sources numerous scripts as part of running the tests, so this sounds like something specific to _our_ tests.\r\n\r\n> in addition to making the user's init.vim no longer have SID 1.\r\n\r\nMeh, this just sounds like a case of [spacebar heating](https://xkcd.com/1172).\r\n\r\n> My 2 cents is that we do both (1) and (2) but keep the `nvim_terminal` autocommand as it is now, defined directly in `main.c` and only use `autocmds.vim` for the CmdWinEnter autocommand and any future default autocommands. Thoughts?\r\n\r\nSounds good to me.  The important part is to be consistent.  I was starting to get flashbacks to the whole defaults.vim debacle, but thankfully you decided on always loading the file while providing the user the capability of short-circuiting the contents.",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-19T02:14:40Z",
            "diff_hunk": "@@ -2117,3 +2117,29 @@ bool au_exists(const char *const arg) FUNC_ATTR_WARN_UNUSED_RESULT\n   xfree(arg_save);\n   return retval;\n }\n+\n+void init_default_autocmds(void)\n+{\n+  // open terminals when opening files that start with term://\n+#define PROTO \"term://\"\n+  do_augroup((char_u *)\"nvim_terminal\", false);\n+  do_autocmd_event(EVENT_BUFREADCMD, (char_u *)PROTO \"*\", false, true,\n+                   (char_u *)\":if !exists('b:term_title')|call termopen( \"\n+                   // Capture the command string\n+                   \"matchstr(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), \"\n+                   // capture the working directory\n+                   \"{'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), \"\n+                   \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, ''))})\"\n+                   \"|endif\",\n+                   true,\n+                   AUGROUP_ALL);\n+  do_augroup((char_u *)\"END\", false);\n+#undef PROTO\n+\n+  // Only sync 1 syntax line in the command window\n+  do_augroup((char_u *)\"nvim_cmdwin\", false);",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r691725483",
            "id": 691725483,
            "in_reply_to_id": 691230821,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTcyNTQ4Mw==",
            "original_commit_id": "9e47d72730fa7c93eac4b410161f1c7020f0d6c2",
            "original_line": 2141,
            "original_position": 34,
            "original_start_line": null,
            "path": "src/nvim/autocmd.c",
            "position": null,
            "pull_request_review_id": 733492858,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691725483/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-19T02:14:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691725483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/112971?v=4",
                "events_url": "https://api.github.com/users/jamessan/events{/privacy}",
                "followers_url": "https://api.github.com/users/jamessan/followers",
                "following_url": "https://api.github.com/users/jamessan/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamessan/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jamessan",
                "id": 112971,
                "login": "jamessan",
                "node_id": "MDQ6VXNlcjExMjk3MQ==",
                "organizations_url": "https://api.github.com/users/jamessan/orgs",
                "received_events_url": "https://api.github.com/users/jamessan/received_events",
                "repos_url": "https://api.github.com/users/jamessan/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jamessan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamessan/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jamessan"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r693890842"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693890842"
                }
            },
            "author_association": "MEMBER",
            "body": "thanks for updating the docs!",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-23T11:32:58Z",
            "diff_hunk": "@@ -300,12 +300,13 @@ argument.\n <\t\tAlso consider using autocommands; see |autocommand|.\n \n \t\tWhen {vimrc} is \"NONE\" (all uppercase), all initializations\n-\t\tfrom files and environment variables are skipped.  Plugins and\n-\t\tsyntax highlighting are also skipped.\n+\t\tfrom files and environment variables are skipped.  Plugins,\n+\t\tsyntax highlighting, and default autocommands are also\n+\t\tskipped.\n \n \t\tWhen {vimrc} is \"NORC\" (all uppercase), this has the same\n-\t\teffect as \"NONE\", but plugins and syntax highlighting are not\n-\t\tskipped.\n+\t\teffect as \"NONE\", but plugins, syntax highlighting, and default\n+\t\tautocommands are not skipped.",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r693890842",
            "id": 693890842,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg5MDg0Mg==",
            "original_commit_id": "178b92590a522277f97fd57bb2148b571b0c463d",
            "original_line": 309,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/doc/starting.txt",
            "position": null,
            "pull_request_review_id": 736013430,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693890842/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-23T11:32:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693890842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r693895718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693895718"
                }
            },
            "author_association": "MEMBER",
            "body": "note to self: also need to mention default mappings just before this.",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-23T11:40:40Z",
            "diff_hunk": "@@ -464,7 +465,15 @@ accordingly.  Vim proceeds in this order:\n <\tSkipped if \":syntax off\" was called or if the \"-u NONE\" command\n \tline argument was given.\n \n-7. Load the plugin scripts.\t\t\t\t\t*load-plugins*\n+7. Setup default autocommands.",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r693895718",
            "id": 693895718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Mzg5NTcxOA==",
            "original_commit_id": "178b92590a522277f97fd57bb2148b571b0c463d",
            "original_line": 468,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/starting.txt",
            "position": null,
            "pull_request_review_id": 736019493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693895718/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-23T11:40:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693895718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r697396853"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/697396853"
                }
            },
            "author_association": "MEMBER",
            "body": "probably reasonable to set `maxlines=&cmdwinheight` ?\r\n```suggestion\r\n    autocmd CmdWinEnter [:>] exe 'syntax sync minlines=1 maxlines='..&cmdwinheight\r\n```",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-27T12:22:18Z",
            "diff_hunk": "@@ -0,0 +1,13 @@\n+\" Default autocmds used by Nvim\n+\n+\" TODO(gpanders): Rewrite when autocmds are supported natively in Lua\n+\n+if exists('g:did_default_autocmds')\n+    finish\n+endif\n+let g:did_default_autocmds = 1\n+\n+augroup nvim_cmdwinenter\n+    autocmd!\n+    autocmd CmdWinEnter [:>] syntax sync minlines=1 maxlines=1",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r697396853",
            "id": 697396853,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzM5Njg1Mw==",
            "original_commit_id": "178b92590a522277f97fd57bb2148b571b0c463d",
            "original_line": 12,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/autocmds.vim",
            "position": null,
            "pull_request_review_id": 740461913,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697396853/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-27T12:23:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697396853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r697397960"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/697397960"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n\" TODO(gpanders): eliminate this file when autocmds are supported natively in Lua\r\n```",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-27T12:24:12Z",
            "diff_hunk": "@@ -0,0 +1,13 @@\n+\" Default autocmds used by Nvim\n+\n+\" TODO(gpanders): Rewrite when autocmds are supported natively in Lua",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r697397960",
            "id": 697397960,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzM5Nzk2MA==",
            "original_commit_id": "178b92590a522277f97fd57bb2148b571b0c463d",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": null,
            "path": "runtime/autocmds.vim",
            "position": null,
            "pull_request_review_id": 740463387,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697397960/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-27T12:24:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697397960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r697402400"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/697402400"
                }
            },
            "author_association": "MEMBER",
            "body": "let's mention this at `:help cmdwin`, in the \"VARIOUS\" section, something like\r\n\r\n```\r\nNvim defines this default CmdWinEnter autocmd in the \"nvim_cmdwinenter\" group: >\r\n    autocmd CmdWinEnter [:>] exe 'syntax sync minlines=1 maxlines='..&cmdwinheight\r\n<\r\nYou can disable this in your config by \"autocmd! nvim_cmdwinenter\".\r\n```",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-27T12:31:29Z",
            "diff_hunk": "@@ -0,0 +1,13 @@\n+\" Default autocmds used by Nvim\n+\n+\" TODO(gpanders): Rewrite when autocmds are supported natively in Lua\n+\n+if exists('g:did_default_autocmds')\n+    finish\n+endif\n+let g:did_default_autocmds = 1\n+\n+augroup nvim_cmdwinenter",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r697402400",
            "id": 697402400,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzQwMjQwMA==",
            "original_commit_id": "178b92590a522277f97fd57bb2148b571b0c463d",
            "original_line": 10,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/autocmds.vim",
            "position": null,
            "pull_request_review_id": 740469289,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697402400/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-27T12:31:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697402400",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r697585290"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/697585290"
                }
            },
            "author_association": "MEMBER",
            "body": "Yep, that is much earlier though, it happens before step 3 (at least in actual functionality, maybe for the purpose of explaining it to the user putting it before step 7 is clearer).",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-27T16:51:18Z",
            "diff_hunk": "@@ -464,7 +465,15 @@ accordingly.  Vim proceeds in this order:\n <\tSkipped if \":syntax off\" was called or if the \"-u NONE\" command\n \tline argument was given.\n \n-7. Load the plugin scripts.\t\t\t\t\t*load-plugins*\n+7. Setup default autocommands.",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r697585290",
            "id": 697585290,
            "in_reply_to_id": 693895718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzU4NTI5MA==",
            "original_commit_id": "178b92590a522277f97fd57bb2148b571b0c463d",
            "original_line": 468,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/doc/starting.txt",
            "position": null,
            "pull_request_review_id": 740716506,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697585290/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-27T16:51:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/697585290",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r699487651"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699487651"
                }
            },
            "author_association": "MEMBER",
            "body": "This should go after init_default_mappings() (or we should treat them the same way whatever we decide). I do not consider these default autocmds to be a \"plugin\", just like default mappings and default options are part of `nvim -u NONE`.\r\n\r\nIn fact this makes me think `runtime/autocmds.vim` was a mistake (sorry). Also `g:did_default_autocmds`. The only reason it exists is to avoid yucky C strings. We could use Lua to avoid that. \r\n\r\nFor now, just to move forward, I suggest using a C string and we can revisit using Lua.",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-31T16:25:21Z",
            "diff_hunk": "@@ -374,6 +374,8 @@ int main(int argc, char **argv)\n     filetype_maybe_enable();\n     // Sources syntax/syntax.vim, which calls `:filetype on`.\n     syn_maybe_enable();\n+    // Sources autocmds.vim\n+    init_default_autocmds();",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r699487651",
            "id": 699487651,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTQ4NzY1MQ==",
            "original_commit_id": "01cde56099a54d1b51570f9a0f8e65542130c619",
            "original_line": 378,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": 742948241,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699487651/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T16:28:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699487651",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15401#discussion_r699595398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15401"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/699595398"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: we can use a slightly more general name, `nvim_cmdwin` . If we ever need other handlers in that augroup, they will be disambiguated by the event type.\r\n```suggestion\r\n  do_cmdline_cmd(\"augroup nvim_cmdwin\");\r\n```",
            "commit_id": "7cafad2673659fac5bfbfef507b1637245cd49a5",
            "created_at": "2021-08-31T18:59:17Z",
            "diff_hunk": "@@ -35,6 +36,30 @@ void do_autocmd_uienter(uint64_t chanid, bool attached)\n   recursive = false;\n }\n \n+void init_default_autocmds(void)\n+{\n+  // open terminals when opening files that start with term://\n+#define PROTO \"term://\"\n+  do_cmdline_cmd(\"augroup nvim_terminal\");\n+  do_cmdline_cmd(\"autocmd!\");\n+  do_cmdline_cmd(\"autocmd BufReadCmd \" PROTO \"* ++nested \"\n+                 \"if !exists('b:term_title')|call termopen(\"\n+                 // Capture the command string\n+                 \"matchstr(expand(\\\"<amatch>\\\"), \"\n+                 \"'\\\\c\\\\m\" PROTO \"\\\\%(.\\\\{-}//\\\\%(\\\\d\\\\+:\\\\)\\\\?\\\\)\\\\?\\\\zs.*'), \"\n+                 // capture the working directory\n+                 \"{'cwd': expand(get(matchlist(expand(\\\"<amatch>\\\"), \"\n+                 \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, ''))})\"\n+                 \"|endif\");\n+  do_cmdline_cmd(\"augroup END\");\n+#undef PROTO\n+\n+  // limit syntax synchronization in the command window\n+  do_cmdline_cmd(\"augroup nvim_cmdwinenter\");",
            "html_url": "https://github.com/neovim/neovim/pull/15401#discussion_r699595398",
            "id": 699595398,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTU5NTM5OA==",
            "original_commit_id": "97536342975771f56ba5b514e749532a542699a8",
            "original_line": 58,
            "original_position": 31,
            "original_start_line": null,
            "path": "src/nvim/aucmd.c",
            "position": null,
            "pull_request_review_id": 743091901,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699595398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-31T18:59:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/699595398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This is blocking https://github.com/neovim/neovim/pull/15440. Does this need further review, or is it good to go?\r\n\r\nOnce this is merged I will also work on a PR to add a default autocommand to position the cursor in its last position when a buffer is opened.",
            "created_at": "2021-08-29T17:17:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-907830705",
            "id": 907830705,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42HGWx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/907830705/reactions"
            },
            "updated_at": "2021-08-29T17:17:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/907830705",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hrm, we have an ASAN failure. I'm not sure why these changes would cause a UAF.\r\n\r\n<details>\r\n\r\n```\r\n ==32928==ERROR: AddressSanitizer: heap-use-after-free on address 0x604000000058 at pc 0x000000b5211c bp 0x7fff3b1c6ea0 sp 0x7fff3b1c6e98\r\n READ of size 8 at 0x604000000058 thread T0\r\n     #0 0xb5211b in QUEUE_EMPTY /home/runner/work/neovim/neovim/src/nvim/lib/queue.h:52:18\r\n     #1 0xb50245 in multiqueue_empty /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:174:10\r\n     #2 0xb51ce9 in multiqueue_process_events /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:154:11\r\n     #3 0xb4baac in loop_poll_events /home/runner/work/neovim/neovim/src/nvim/event/loop.c:70:3\r\n     #4 0x1395b08 in os_breakcheck /home/runner/work/neovim/neovim/src/nvim/os/input.c:183:3\r\n     #5 0xe2c2cf in vgetorpeek /home/runner/work/neovim/neovim/src/nvim/getchar.c:1765:11\r\n     #6 0xe2913b in vpeekc /home/runner/work/neovim/neovim/src/nvim/getchar.c:1613:10\r\n     #7 0xe3a22d in char_avail /home/runner/work/neovim/neovim/src/nvim/getchar.c:1640:12\r\n     #8 0x1858cb7 in state_enter /home/runner/work/neovim/neovim/src/nvim/state.c:40:9\r\n     #9 0xce63a1 in command_line_enter /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:836:3\r\n     #10 0xce851c in getcmdline_prompt /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:2373:29\r\n     #11 0xbd947f in do_debug /home/runner/work/neovim/neovim/src/nvim/ex_cmds2.c:211:25\r\n     #12 0xbdc41f in dbg_check_breakpoint /home/runner/work/neovim/neovim/src/nvim/ex_cmds2.c:495:7\r\n     #13 0xc2a4ac in do_one_cmd /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:1347:3\r\n     #14 0xc1fce7 in do_cmdline /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:595:20\r\n     #15 0xc25710 in do_cmdline_cmd /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:284:10\r\n     #16 0x10db63a in free_all_mem /home/runner/work/neovim/neovim/src/nvim/memory.c:596:3\r\n     #17 0xf5e5a8 in os_exit /home/runner/work/neovim/neovim/src/nvim/main.c:574:3\r\n     #18 0xf738e8 in getout /home/runner/work/neovim/neovim/src/nvim/main.c:696:3\r\n     #19 0x11302e7 in preserve_exit /home/runner/work/neovim/neovim/src/nvim/misc1.c:832:3\r\n     #20 0x13b0013 in deadly_signal /home/runner/work/neovim/neovim/src/nvim/os/signal.c:168:3\r\n     #21 0x13afd91 in on_signal /home/runner/work/neovim/neovim/src/nvim/os/signal.c:193:9\r\n     #22 0xb644e2 in signal_event /home/runner/work/neovim/neovim/src/nvim/event/signal.c:47:3\r\n     #23 0xb51d72 in multiqueue_process_events /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:157:7\r\n     #24 0xb4baac in loop_poll_events /home/runner/work/neovim/neovim/src/nvim/event/loop.c:70:3\r\n     #25 0x1394f77 in inbuf_poll /home/runner/work/neovim/neovim/src/nvim/os/input.c:415:3\r\n     #26 0x1394a73 in os_inchar /home/runner/work/neovim/neovim/src/nvim/os/input.c:118:19\r\n     #27 0x112c6bc in get_keystroke /home/runner/work/neovim/neovim/src/nvim/misc1.c:490:9\r\n     #28 0x110ad78 in do_more_prompt /home/runner/work/neovim/neovim/src/nvim/message.c:2659:11\r\n     #29 0x1118e67 in msg_puts_display /home/runner/work/neovim/neovim/src/nvim/message.c:2120:13\r\n     #30 0x110fc01 in msg_puts_attr_len /home/runner/work/neovim/neovim/src/nvim/message.c:1968:5\r\n     #31 0x110f032 in msg_puts_attr /home/runner/work/neovim/neovim/src/nvim/message.c:1908:3\r\n     #32 0x10fae5b in msg_putchar_attr /home/runner/work/neovim/neovim/src/nvim/message.c:1376:3\r\n     #33 0x110ded4 in msg_putchar /home/runner/work/neovim/neovim/src/nvim/message.c:1361:3\r\n     #34 0x10fc15c in msg_start /home/runner/work/neovim/neovim/src/nvim/message.c:1326:5\r\n     #35 0xcf93ad in gotocmdline /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:3596:3\r\n     #36 0xce3fbf in command_line_enter /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:733:5\r\n     #37 0xce851c in getcmdline_prompt /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:2373:29\r\n     #38 0xbd947f in do_debug /home/runner/work/neovim/neovim/src/nvim/ex_cmds2.c:211:25\r\n     #39 0xbdc41f in dbg_check_breakpoint /home/runner/work/neovim/neovim/src/nvim/ex_cmds2.c:495:7\r\n     #40 0xc2a4ac in do_one_cmd /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:1347:3\r\n     #41 0xc1fce7 in do_cmdline /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:595:20\r\n     #42 0xc25710 in do_cmdline_cmd /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:284:10\r\n     #43 0xf6d046 in exe_pre_commands /home/runner/work/neovim/neovim/src/nvim/main.c:1688:7\r\n     #44 0xf5fc21 in main /home/runner/work/neovim/neovim/src/nvim/main.c:353:3\r\n     #45 0x7f33eb4560b2 in __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/../csu/libc-start.c:308:16\r\n     #0 0x45e05d in _start ??:?\r\n \r\n 0x604000000058 is located 8 bytes inside of 48-byte region [0x604000000050,0x604000000080)\r\n freed by thread T0 here:\r\n     #0 0x4d8cb2 in __interceptor_free ??:?\r\n     #1 0x10d9174 in xfree /home/runner/work/neovim/neovim/src/nvim/memory.c:121:3\r\n     #2 0xb4fd7a in multiqueue_free /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:133:3\r\n     #3 0xb4d214 in loop_close /home/runner/work/neovim/neovim/src/nvim/event/loop.c:172:3\r\n     #4 0xf5dcf0 in event_teardown /home/runner/work/neovim/neovim/src/nvim/main.c:150:10\r\n     #5 0xf5e56b in os_exit /home/runner/work/neovim/neovim/src/nvim/main.c:564:8\r\n     #6 0xf738e8 in getout /home/runner/work/neovim/neovim/src/nvim/main.c:696:3\r\n     #7 0x11302e7 in preserve_exit /home/runner/work/neovim/neovim/src/nvim/misc1.c:832:3\r\n     #8 0x13b0013 in deadly_signal /home/runner/work/neovim/neovim/src/nvim/os/signal.c:168:3\r\n     #9 0x13afd91 in on_signal /home/runner/work/neovim/neovim/src/nvim/os/signal.c:193:9\r\n     #10 0xb644e2 in signal_event /home/runner/work/neovim/neovim/src/nvim/event/signal.c:47:3\r\n     #11 0xb51d72 in multiqueue_process_events /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:157:7\r\n     #12 0xb4baac in loop_poll_events /home/runner/work/neovim/neovim/src/nvim/event/loop.c:70:3\r\n     #13 0x1394f77 in inbuf_poll /home/runner/work/neovim/neovim/src/nvim/os/input.c:415:3\r\n     #14 0x1394a73 in os_inchar /home/runner/work/neovim/neovim/src/nvim/os/input.c:118:19\r\n     #15 0x112c6bc in get_keystroke /home/runner/work/neovim/neovim/src/nvim/misc1.c:490:9\r\n     #16 0x110ad78 in do_more_prompt /home/runner/work/neovim/neovim/src/nvim/message.c:2659:11\r\n     #17 0x1118e67 in msg_puts_display /home/runner/work/neovim/neovim/src/nvim/message.c:2120:13\r\n     #18 0x110fc01 in msg_puts_attr_len /home/runner/work/neovim/neovim/src/nvim/message.c:1968:5\r\n     #19 0x110f032 in msg_puts_attr /home/runner/work/neovim/neovim/src/nvim/message.c:1908:3\r\n     #20 0x10fae5b in msg_putchar_attr /home/runner/work/neovim/neovim/src/nvim/message.c:1376:3\r\n     #21 0x110ded4 in msg_putchar /home/runner/work/neovim/neovim/src/nvim/message.c:1361:3\r\n     #22 0x10fc15c in msg_start /home/runner/work/neovim/neovim/src/nvim/message.c:1326:5\r\n     #23 0xcf93ad in gotocmdline /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:3596:3\r\n     #24 0xce3fbf in command_line_enter /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:733:5\r\n     #25 0xce851c in getcmdline_prompt /home/runner/work/neovim/neovim/src/nvim/ex_getln.c:2373:29\r\n     #26 0xbd947f in do_debug /home/runner/work/neovim/neovim/src/nvim/ex_cmds2.c:211:25\r\n     #27 0xbdc41f in dbg_check_breakpoint /home/runner/work/neovim/neovim/src/nvim/ex_cmds2.c:495:7\r\n     #28 0xc2a4ac in do_one_cmd /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:1347:3\r\n     #29 0xc1fce7 in do_cmdline /home/runner/work/neovim/neovim/src/nvim/ex_docmd.c:595:20\r\n \r\n previously allocated by thread T0 here:\r\n     #0 0x4d8f1d in malloc ??:?\r\n     #1 0x10d8e32 in try_malloc /home/runner/work/neovim/neovim/src/nvim/memory.c:73:15\r\n     #2 0x10d902c in xmalloc /home/runner/work/neovim/neovim/src/nvim/memory.c:107:15\r\n     #3 0xb4f3f0 in multiqueue_new /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:110:20\r\n     #4 0xb4f837 in multiqueue_new_child /home/runner/work/neovim/neovim/src/nvim/event/multiqueue.c:104:10\r\n     #5 0xb4a3af in loop_init /home/runner/work/neovim/neovim/src/nvim/event/loop.c:25:23\r\n     #6 0xf5db55 in event_init /home/runner/work/neovim/neovim/src/nvim/main.c:118:3\r\n     #7 0xf5ebaf in main /home/runner/work/neovim/neovim/src/nvim/main.c:245:3\r\n     #8 0x7f33eb4560b2 in __libc_start_main /build/glibc-eX1tMB/glibc-2.31/csu/../csu/libc-start.c:308:16\r\n \r\n SUMMARY: AddressSanitizer: heap-use-after-free /home/runner/work/neovim/neovim/src/nvim/lib/queue.h:52:18 in QUEUE_EMPTY\r\n Shadow bytes around the buggy address:\r\n   0x0c087fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n   0x0c087fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n   0x0c087fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n   0x0c087fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n   0x0c087fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\r\n =>0x0c087fff8000: fa fa fd fd fd fd fd fd fa fa fd[fd]fd fd fd fd\r\n   0x0c087fff8010: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 00\r\n   0x0c087fff8020: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 00\r\n   0x0c087fff8030: fa fa fd fd fd fd fd fd fa fa 00 00 00 00 00 00\r\n   0x0c087fff8040: fa fa 00 00 00 00 00 07 fa fa 00 00 00 00 06 fa\r\n   0x0c087fff8050: fa fa fd fd fd fd fd fd fa fa fd fd fd fd fd fd\r\n Shadow byte legend (one shadow byte represents 8 application bytes):\r\n   Addressable:           00\r\n   Partially addressable: 01 02 03 04 05 06 07\r\n   Heap left redzone:       fa\r\n   Freed heap region:       fd\r\n   Stack left redzone:      f1\r\n   Stack mid redzone:       f2\r\n   Stack right redzone:     f3\r\n   Stack after return:      f5\r\n   Stack use after scope:   f8\r\n   Global redzone:          f9\r\n   Global init order:       f6\r\n   Poisoned by user:        f7\r\n   Container overflow:      fc\r\n   Array cookie:            ac\r\n   Intra object redzone:    bb\r\n   ASan internal:           fe\r\n   Left alloca redzone:     ca\r\n   Right alloca redzone:    cb\r\n   Shadow gap:              cc\r\n ==32928==ABORTING\r\n```\r\n</details>",
            "created_at": "2021-08-31T22:45:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-909702447",
            "id": 909702447,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42OPUv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909702447/reactions"
            },
            "updated_at": "2021-08-31T22:45:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909702447",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Hrm, we have an ASAN failure. I'm not sure why these changes would cause a UAF.\r\n\r\nReminds me of https://github.com/neovim/neovim/issues/8813 , though the codepaths might be different by now. Restarting CI...",
            "created_at": "2021-09-01T00:53:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-909770267",
            "id": 909770267,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42Of4b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909770267/reactions"
            },
            "updated_at": "2021-09-01T00:53:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909770267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Did you restart the CI and the ASAN failure happened again?",
            "created_at": "2021-09-01T13:12:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-910272668",
            "id": 910272668,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42Qaic",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910272668/reactions"
            },
            "updated_at": "2021-09-01T13:12:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910272668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Did you restart the CI and the ASAN failure happened again?\r\n\r\nyeah :/",
            "created_at": "2021-09-01T14:47:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-910358250",
            "id": 910358250,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42Qvbq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910358250/reactions"
            },
            "updated_at": "2021-09-01T14:47:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910358250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I moved `init_default_autocmds` to after UI initialization (which is where the original autocommand was defined) and that seems to have solved the ASAN problem.",
            "created_at": "2021-09-01T15:38:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-910405915",
            "id": 910405915,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42Q7Eb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910405915/reactions"
            },
            "updated_at": "2021-09-01T15:44:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/910405915",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> probably reasonable to set `maxlines=&cmdwinheight` ?\r\n\r\nMy suggestion here was mistaken. Followup: https://github.com/neovim/neovim/pull/15552",
            "created_at": "2021-09-02T16:32:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/15401#issuecomment-911862417",
            "id": 911862417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
            "node_id": "IC_kwDOAPphoM42WeqR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/911862417/reactions"
            },
            "updated_at": "2021-09-02T16:32:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/911862417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15401/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15401/commits",
    "created_at": "2021-08-17T02:19:22Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15401.diff",
    "draft": false,
    "head": {
        "label": "gpanders:defaults-cmdwin",
        "ref": "defaults-cmdwin",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-05-27T13:08:26Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 264337,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7cafad2673659fac5bfbfef507b1637245cd49a5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15401",
    "id": 713863429,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15401",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "issues or PRs involving changing the defaults",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        }
    ],
    "locked": false,
    "merge_commit_sha": "622a36b1f1c652a8de433028bc4a03a1216db23f",
    "merged_at": "2021-09-02T11:17:04Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzEzODYzNDI5",
    "number": 15401,
    "patch_url": "https://github.com/neovim/neovim/pull/15401.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15401/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7cafad2673659fac5bfbfef507b1637245cd49a5",
    "title": "feat(defaults): support for default autocommands",
    "updated_at": "2024-05-24T14:54:48Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15401",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}