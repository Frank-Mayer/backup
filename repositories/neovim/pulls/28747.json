{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28747/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28747/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28747"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28747"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28747/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/4399c4932d7b0565932a667e051f6861b8293157"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5383,
            "forks_count": 5383,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1728,
            "open_issues_count": 1728,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-20T23:45:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 270386,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 77935,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-21T02:01:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 77935,
            "watchers_count": 77935,
            "web_commit_signoff_required": false
        },
        "sha": "007adde1994da7f25eaa0e6a4f402587afbc508d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Close #25379",
    "closed_at": "2024-05-15T22:44:11Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600350185"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600350185"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we encourage users to use the `r` option to show absolute timing rather than the percentages in the example? Though we probably don't want to explain here too verbosely about what's available in `jit.p`. \r\n\r\nRef https://github.com/neovim/neovim/pull/28723#issuecomment-2106637108\r\n\r\nWe can also consider adding links to external doc, e.g. https://luajit.org/ext_profiler.html",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T16:40:52Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600350185",
            "id": 1600350185,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fY2fp",
            "original_commit_id": "209dc6b67abd99aa5a009f055e578099fac768ff",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2055919278,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600350185/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T16:44:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600350185",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600356395"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600356395"
                }
            },
            "author_association": "MEMBER",
            "body": "the CI check gives useful hints in its report, so I think we can remove this from the docs",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T16:45:59Z",
            "diff_hunk": "@@ -114,11 +114,6 @@ the VCS/git logs more valuable. The structure of a commit message is:\n   BREAKING CHANGE: refactor to use Python 3 features since Python 2 is no longer supported.\n   ```\n \n-### News\n-\n-High level release notes are maintained in [news.txt](runtime/doc/news.txt). A PR is not required to add a news item",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600356395",
            "id": 1600356395,
            "line": 119,
            "node_id": "PRRC_kwDOAPphoM5fY4Ar",
            "original_commit_id": "209dc6b67abd99aa5a009f055e578099fac768ff",
            "original_line": 119,
            "original_position": 6,
            "original_start_line": null,
            "path": "CONTRIBUTING.md",
            "position": 6,
            "pull_request_review_id": 2055930446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600356395/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T16:46:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600356395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600360344"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600360344"
                }
            },
            "author_association": "MEMBER",
            "body": "It the future we should always start with a \"skeleton\" of various categories, because (1) that helps avoid merge-conflicts and (2) it's helpful for readers.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T16:49:19Z",
            "diff_hunk": "@@ -15,170 +15,129 @@ BREAKING CHANGES                                                *news-breaking*\n \n The following changes may require adaptations in user config or plugins.\n \n-• In some cases, the cursor in the Nvim |TUI| used to blink even without\n-  configuring 'guicursor' as mentioned in |cursor-blinking|. This was a bug\n-  that has now been fixed. If your cursor has stopped blinking, add the\n-  following (or similar, adapted to user preference) to your |config| file: >vim\n+• API:\n+  • |nvim_open_win()| now blocks all autocommands when `noautocmd` is set,\n+    rather than just those from setting the `buffer` to display in the window.\n \n-    set guicursor+=n-v-c:blinkon500-blinkoff500\n-<\n-• |vim.islist()| now checks whether a table is actually list-like (i.e.,\n-  has integer keys without gaps and starting from 1). For the previous\n-  behavior (only check for integer keys, allow gaps or not starting with 1),\n-  use |vim.isarray()|.\n-\n-• \"#\" followed by a digit no longer stands for a function key at the start of\n-  the lhs of a mapping.\n-\n-• `:behave` was removed.\n-  - If you used `:behave xterm`, the following is equivalent: >vim\n+• Defaults:",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600360344",
            "id": 1600360344,
            "line": 22,
            "node_id": "PRRC_kwDOAPphoM5fY4-Y",
            "original_commit_id": "e5c94492b916b505466c21634b6e4d20c61bb32b",
            "original_line": 22,
            "original_position": 24,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 27,
            "pull_request_review_id": 2055936959,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600360344/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T16:49:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600360344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600360905"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600360905"
                }
            },
            "author_association": "MEMBER",
            "body": "I will remove this before merging",
            "commit_id": "e5c94492b916b505466c21634b6e4d20c61bb32b",
            "created_at": "2024-05-14T16:49:46Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600360905",
            "id": 1600360905,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM5fY5HJ",
            "original_commit_id": "e5c94492b916b505466c21634b6e4d20c61bb32b",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/doc/news.txt.skel",
            "position": 1,
            "pull_request_review_id": 2055937775,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600360905/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2024-05-14T16:49:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600360905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600368824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600368824"
                }
            },
            "author_association": "NONE",
            "body": "Causes CI to fail due to duplicated header of `*dev-patterns*`. The other is on line 473.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T16:55:22Z",
            "diff_hunk": "@@ -304,17 +304,18 @@ See also |dev-naming|.\n   - accept iterable instead of table\n     - exception: in some cases iterable doesn't make sense, e.g. spair() sorts\n       the input by definition, so there is no reason for it to accept an\n-      iterable, because the input needs to be \"hydrated\", it can't operate on\n+      iterable, because the input needs to be \"reified\"; it can't operate on\n       a \"stream\".\n   - return iterable instead of table\n   - mimic the pairs() or ipairs() interface if the function is intended to be\n     used in a \"for\" loop.\n-  - when a result-or-error interface is needed, return `result|nil, errmsg|nil`: >\n+  - when a result-or-error interface is needed, return `result|nil, nil|errmsg`: >\n     ---@return Foo|nil # Result object, or nil if not found.\n     ---@return nil|string # Error message on failure, or nil on success.\n <\n     - Examples: |vim.ui.open()| |io.open()| |luv-error-handling|\n \n+                                                        *dev-patterns*",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600368824",
            "id": 1600368824,
            "line": 318,
            "node_id": "PRRC_kwDOAPphoM5fY7C4",
            "original_commit_id": "e5c94492b916b505466c21634b6e4d20c61bb32b",
            "original_line": 318,
            "original_position": 127,
            "original_start_line": null,
            "path": "runtime/doc/develop.txt",
            "position": 127,
            "pull_request_review_id": 2055949851,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600368824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T16:55:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600368824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/54869170?v=4",
                "events_url": "https://api.github.com/users/Ben10164/events{/privacy}",
                "followers_url": "https://api.github.com/users/Ben10164/followers",
                "following_url": "https://api.github.com/users/Ben10164/following{/other_user}",
                "gists_url": "https://api.github.com/users/Ben10164/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Ben10164",
                "id": 54869170,
                "login": "Ben10164",
                "node_id": "MDQ6VXNlcjU0ODY5MTcw",
                "organizations_url": "https://api.github.com/users/Ben10164/orgs",
                "received_events_url": "https://api.github.com/users/Ben10164/received_events",
                "repos_url": "https://api.github.com/users/Ben10164/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Ben10164/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Ben10164/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Ben10164"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600407138"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600407138"
                }
            },
            "author_association": "MEMBER",
            "body": "I know that we all know how `assert` works, but maybe adding a comment above explaining this bit could be helpful? Something like \"assert we have a non-nil result, else display the received error message\". ",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:27:43Z",
            "diff_hunk": "@@ -1611,7 +1611,8 @@ get({filter})                                       *vim.lsp.inlay_hint.get()*\n         local hint = vim.lsp.inlay_hint.get({ bufnr = 0 })[1] -- 0 for current buffer\n \n         local client = vim.lsp.get_client_by_id(hint.client_id)\n-        resolved_hint = client.request_sync('inlayHint/resolve', hint.inlay_hint, 100, 0).result\n+        local resp = client.request_sync('inlayHint/resolve', hint.inlay_hint, 100, 0)\n+        local resolved_hint = assert(resp and resp.result, resp.err)",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600407138",
            "id": 1600407138,
            "line": 1615,
            "node_id": "PRRC_kwDOAPphoM5fZEZi",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 1615,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 6,
            "pull_request_review_id": 2056012022,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600407138/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:31:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600407138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600408231"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600408231"
                }
            },
            "author_association": "MEMBER",
            "body": "Is the meaning of PUC previously explained?",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:28:42Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600408231",
            "id": 1600408231,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZEqn",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 38,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056012022,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600408231/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:31:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600408231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600421379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600421379"
                }
            },
            "author_association": "MEMBER",
            "body": "Heh? This location seems incorrect.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:40:10Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600421379",
            "id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZH4D",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056035330,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600421379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:40:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600421379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600424807"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600424807"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes. This is a LuaJIT(-only) module. (I _think_ we talked about bundling it but decided against it. Likely because it's useless on PUC Lua.)",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:42:37Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600424807",
            "id": 1600424807,
            "in_reply_to_id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZItn",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056040922,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600424807/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:43:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600424807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600429489"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600429489"
                }
            },
            "author_association": "MEMBER",
            "body": "https://luajit.org/ext_profiler.html is the best link there is.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:45:01Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600429489",
            "id": 1600429489,
            "in_reply_to_id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZJ2x",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056048517,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600429489/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:46:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600429489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600438082"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600438082"
                }
            },
            "author_association": "MEMBER",
            "body": "I can't get this to work.\r\n\r\n```lua\r\nrequire('jit.p').start('i1', 'profile')\r\n\r\nvim.fs.normalize(\".\")\r\nlocal s = \"string\" .. \"another string\" .. string.format(\"a third string\")\r\nvim.print(s)\r\n\r\nrequire('jit.p').stop()\r\n```\r\n\r\nRunning this with `nvim -l profile.lua` just gives `[No samples collected]` in the `profile` file. What do I do with this?",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:52:25Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600438082",
            "id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZL9C",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056061886,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600438082/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:52:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600438082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600441902"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600441902"
                }
            },
            "author_association": "MEMBER",
            "body": "The options are quite finicky; one size does _not_ fit all. This is why I added [plenary.profile](https://github.com/nvim-lua/plenary.nvim/blob/master/lua/plenary/profile.lua) and in particular why https://github.com/nvim-lua/plenary.nvim/blob/master/lua/plenary/profile/lua_profiler.lua is a thing.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:55:47Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600441902",
            "id": 1600441902,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZM4u",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056067668,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600441902/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:55:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600441902",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600445676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600445676"
                }
            },
            "author_association": "MEMBER",
            "body": "We should consider vendoring the latter (with neovim-specific tweaks); profiling Lua code is such an important dev tool that the lack of it in the standard library is hurting. ",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T17:59:15Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600445676",
            "id": 1600445676,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZNzs",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056073739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600445676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T17:59:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600445676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600447623"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600447623"
                }
            },
            "author_association": "MEMBER",
            "body": "The code between start-stop ran too fast for a sample-based profiler, so no samples were collected. Running these lines way more or repetitively (e.g. `for i = 1,10000 do`) would give some results.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T18:01:04Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600447623",
            "id": 1600447623,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZOSH",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056076984,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600447623/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T18:01:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600447623",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600491848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600491848"
                }
            },
            "author_association": "MEMBER",
            "body": "Should we add a real profiler? Either import from existing implementation or rewrite from scratch with this at the backend? This feels like it could be streamlined.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T18:40:54Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600491848",
            "id": 1600491848,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZZFI",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056149711,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600491848/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T18:40:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600491848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600493745"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600493745"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes we should (but not now)",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T18:42:20Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600493745",
            "id": 1600493745,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZZix",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056153025,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600493745/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T18:42:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600493745",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600586210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600586210"
                }
            },
            "author_association": "MEMBER",
            "body": "> Should we add a real profiler?\r\n\r\nWhat properties does a real profiler have that `jit.p` lacks?",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T20:08:31Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600586210",
            "id": 1600586210,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZwHi",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056323400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600586210/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T20:08:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600586210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600590681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600590681"
                }
            },
            "author_association": "MEMBER",
            "body": "Actual usability. ",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T20:12:56Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600590681",
            "id": 1600590681,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZxNZ",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056337639,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600590681/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T20:12:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600590681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600591975"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600591975"
                }
            },
            "author_association": "MEMBER",
            "body": "It was an offhand comment about the the clunkiness of jit.p, not a RFC for the government. I am not ready to defend this that seriously yet.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T20:14:26Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600591975",
            "id": 1600591975,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZxhn",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056342071,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600591975/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T20:14:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600591975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600594499"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600594499"
                }
            },
            "author_association": "MEMBER",
            "body": "But for starters the flags are finicky to get right. At least some wrapper around those with \"sane\" defaults would be nice.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T20:17:08Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600594499",
            "id": 1600594499,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZyJD",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056350040,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600594499/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T20:17:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600594499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600597965"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600597965"
                }
            },
            "author_association": "MEMBER",
            "body": "To be clear, every profiler uses jit.p under the hood (and hence doesn't work on PUC Lua); the question is just end-user usability (which jit.p does _not_ have).\n\nBut this is not the place for this discussion; the point is that recommending jit.p in documentation right now is a bad idea, and we should postpone the whole discussion to a separate issue after 0.10. ",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T20:20:56Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600597965",
            "id": 1600597965,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZy_N",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056361030,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600597965/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T20:20:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600597965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600600267"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600600267"
                }
            },
            "author_association": "MEMBER",
            "body": "> But for starters the flags are finicky to get right. At least some wrapper around those with \"sane\" defaults would be nice.\r\n\r\nI'm not sure there are saner defaults. With profilers you usually need to have some idea what you're looking for. It also helps to keep in mind that all profilers are liers. It's often a good idea to gather different kind of data.\r\nIt wouldn't surprise me if the `debug.sethook(` based variant yields different results than the luajit profiler",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-14T20:23:28Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600600267",
            "id": 1600600267,
            "in_reply_to_id": 1600438082,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fZzjL",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 55,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2056368412,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600600267/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-14T20:23:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600600267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1600870932"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600870932"
                }
            },
            "author_association": "MEMBER",
            "body": "If \"add new behavior\" is no longer in this section's description, some part of this section may need to be moved to \"NEW FEATURES\".",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T02:40:47Z",
            "diff_hunk": "@@ -396,7 +355,7 @@ The following new APIs and features were added.\n ==============================================================================\n CHANGED FEATURES                                                 *news-changed*\n \n-The following changes to existing APIs or features add new behavior.\n+These existing features changed their behavior.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1600870932",
            "id": 1600870932,
            "line": 402,
            "node_id": "PRRC_kwDOAPphoM5fa1oU",
            "original_commit_id": "9ef32fbea8fa90b44e1f6228ffe4bea0412b8cb7",
            "original_line": 402,
            "original_position": 291,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 699,
            "pull_request_review_id": 2056772981,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600870932/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T02:40:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1600870932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601573017"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601573017"
                }
            },
            "author_association": "MEMBER",
            "body": "i'll check. \"adding new behavior\" which doesn't conflict with existing behavior is definitely a \"new feature\", not a \"changed feature\".",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T12:40:55Z",
            "diff_hunk": "@@ -396,7 +355,7 @@ The following new APIs and features were added.\n ==============================================================================\n CHANGED FEATURES                                                 *news-changed*\n \n-The following changes to existing APIs or features add new behavior.\n+These existing features changed their behavior.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601573017",
            "id": 1601573017,
            "in_reply_to_id": 1600870932,
            "line": 402,
            "node_id": "PRRC_kwDOAPphoM5fdhCZ",
            "original_commit_id": "9ef32fbea8fa90b44e1f6228ffe4bea0412b8cb7",
            "original_line": 402,
            "original_position": 291,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": 699,
            "pull_request_review_id": 2057896515,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601573017/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T12:40:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601573017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601579843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601579843"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think that's appropriate here. I added the assert() to avoid confusion when trying out this code (the old code failed in an inscrutable way). But we need to avoid the urge to explain basic Lua concepts in every code example, that makes the examples very verbose.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T12:45:36Z",
            "diff_hunk": "@@ -1611,7 +1611,8 @@ get({filter})                                       *vim.lsp.inlay_hint.get()*\n         local hint = vim.lsp.inlay_hint.get({ bufnr = 0 })[1] -- 0 for current buffer\n \n         local client = vim.lsp.get_client_by_id(hint.client_id)\n-        resolved_hint = client.request_sync('inlayHint/resolve', hint.inlay_hint, 100, 0).result\n+        local resp = client.request_sync('inlayHint/resolve', hint.inlay_hint, 100, 0)\n+        local resolved_hint = assert(resp and resp.result, resp.err)",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601579843",
            "id": 1601579843,
            "in_reply_to_id": 1600407138,
            "line": 1615,
            "node_id": "PRRC_kwDOAPphoM5fditD",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 1615,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 6,
            "pull_request_review_id": 2057908553,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601579843/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T12:46:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601579843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601581396"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601581396"
                }
            },
            "author_association": "MEMBER",
            "body": "I can't think of a good way to explain it. But it's better to mention it than not mention it.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T12:46:39Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601581396",
            "id": 1601581396,
            "in_reply_to_id": 1600408231,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fdjFU",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 38,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2057910917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601581396/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T12:46:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601581396",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601591646"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601591646"
                }
            },
            "author_association": "MEMBER",
            "body": "I would personally remove this line, there's no consistent location where you'd find this file. It depends on `package.path`, which itself depends entirely on how luajit was built and installed. A link to the website is IMO acceptable.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T12:53:41Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601591646",
            "id": 1601591646,
            "in_reply_to_id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fdlle",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2057927487,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601591646/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T12:53:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601591646",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601611492"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601611492"
                }
            },
            "author_association": "MEMBER",
            "body": "If we get reports that users can't find this we can revisit. There is no reason to remove a useful hint for most users.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T13:06:53Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601611492",
            "id": 1601611492,
            "in_reply_to_id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fdqbk",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2057960765,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601611492/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T13:06:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601611492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601646999"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601646999"
                }
            },
            "author_association": "MEMBER",
            "body": "Do I count as a user lol? I mean it, `$VIMRUNTIME/lua/jit/p.lua` is more likely to not exist than it is to exist, I'm fairly sure it's not a useful hint.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T13:25:41Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601646999",
            "id": 1601646999,
            "in_reply_to_id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5fdzGX",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2058019253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601646999/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T13:25:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601646999",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601737920"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601737920"
                }
            },
            "author_association": "MEMBER",
            "body": "updated",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T14:17:18Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in\n+`$VIMRUNTIME/lua/jit/`. Lua code in |init.lua| and plugins can assume its\n+presence on many platforms, but for maximum compatibility should check the\n+`jit` global variable: >lua\n   if jit then\n     -- code for luajit\n   else\n     -- code for plain lua 5.1\n   end\n <\n                                                                   *lua-bit*\n-In particular, the luajit \"bit\" extension module is _always_ available.\n-A fallback implementation is included when nvim is built with PUC Lua 5.1,\n-and will be transparently used when `require(\"bit\")` is invoked.\n+The LuaJIT \"bit\" extension module is _always_ available: when built with PUC\n+Lua, Nvim includes a fallback implementation which provides `require(\"bit\")`.\n+\n+                                                                  *lua-profile*\n+To profile Lua code (with LuaJIT-enabled Nvim), the basic steps are: >lua\n+    -- Start a profiling session:\n+    require('jit.p').start('i1', '/tmp/profile')\n+\n+    -- Perform arbitrary tasks (use plugins, scripts, etc.) ...\n+\n+    -- Stop the session. Profile is written to /tmp/profile.\n+    require('jit.p').stop()\n+\n+See `$VIMRUNTIME/lua/jit/p.lua` for details.",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601737920",
            "id": 1601737920,
            "in_reply_to_id": 1600421379,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5feJTA",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 62,
            "original_position": 36,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2058172297,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601737920/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T14:17:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601737920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601752234"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601752234"
                }
            },
            "author_association": "MEMBER",
            "body": "It seems that some option tags have surrounding `|`, while some others don't. Should they be consistently added or removed?",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T14:25:55Z",
            "diff_hunk": "@@ -280,6 +225,88 @@ The following new APIs and features were added.\n     |vim.lsp.buf.type_definition()|, and |vim.lsp.buf.implementation()| now\n     support the `loclist` field of |vim.lsp.ListOpts|.\n \n+• Lua:\n+  • |:lua| with a |[range]| executes that range as Lua code, in any buffer.\n+  • |:source| without arguments treats a buffer with 'filetype' of \"lua\" as\n+    Lua code regardless of its extension.\n+  • |vim.iter()| provides a generic iterator interface for tables and Lua\n+    iterators |for-in|.\n+  • |vim.snippet| is a general-purpose snippet module for snippets defined in LSP format.\n+  • |vim.ringbuf()| creates ring buffers.\n+  • |vim.deepcopy()| has a `noref` argument to avoid hashing table values.\n+  • |vim.keycode()| translates keycodes in a string.\n+  • |vim.system()| for running commands / starting processes.\n+  • |vim.lpeg| and |vim.re| expose the bundled Lpeg expression grammar parser\n+    and its regex interface.\n+  • |vim.base64.encode()| and |vim.base64.decode()| encode and decode strings\n+    using Base64 encoding.\n+  • |vim.ui.open()| opens URIs using the system default handler (macOS `open`,\n+    Windows `explorer`, Linux `xdg-open`, etc.)\n+  • |vim.wo| can now be double indexed for |:setlocal| behaviour. Currently\n+    only `0` for the buffer index is currently supported.\n+  • Improved messages for type errors in `vim.api.*` calls (including `opts` params)\n+  • Lua type annotations for:\n+    • `vim.*`\n+    • `vim.fn.*`\n+    • `vim.api.*`\n+    • `vim.v.*`\n+  • |vim.text.hexencode()| and |vim.text.hexdecode()| convert strings to and\n+    from byte representations.\n+  • Functions that take a severity as an optional parameter (e.g.\n+    |vim.diagnostic.get()|) now also accept a list of severities |vim.diagnostic.severity|\n+  • |vim.diagnostic.count()| returns the number of diagnostics for a given\n+    buffer and/or namespace, by severity. This is a faster alternative to\n+    |vim.diagnostic.get()| when only the number of diagnostics is needed, but\n+    not the diagnostics themselves.\n+  • |vim.diagnostic.is_enabled()|\n+  • |vim.version.le()|, |vim.version.ge()|\n+  • |vim.fs.root()| finds project root directories from a list of \"root\n+    markers\".\n+  • Vimscript function |exists()| supports checking |v:lua| functions.\n+  • |vim.tbl_contains()| now works for general tables and allows specifying\n+    a predicate function that is checked for each value. (Use\n+    |vim.list_contains()| for checking list-like tables (integer keys without\n+    gaps) for literal values.)\n+\n+• Options\n+  • |'winfixbuf'| keeps a window focused onto a specific buffer\n+  • |'smoothscroll'| option to scroll by screen line rather than by text line\n+    when |'wrap'| is set.\n+  • 'foldtext' now supports virtual text format. |fold-foldtext|\n+  • |'foldtext'| can be set to an empty string to disable and render the line:",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601752234",
            "id": 1601752234,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5feMyq",
            "original_commit_id": "05b4db5b7798814156d9f8a92fd9beaddef5e424",
            "original_line": 276,
            "original_position": 428,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2058193003,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601752234/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T14:26:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601752234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601756833"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601756833"
                }
            },
            "author_association": "MEMBER",
            "body": "they should be consistently removed, IMO. otherwise what's the point of supporting 'foo' as a tag-link?",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T14:28:45Z",
            "diff_hunk": "@@ -280,6 +225,88 @@ The following new APIs and features were added.\n     |vim.lsp.buf.type_definition()|, and |vim.lsp.buf.implementation()| now\n     support the `loclist` field of |vim.lsp.ListOpts|.\n \n+• Lua:\n+  • |:lua| with a |[range]| executes that range as Lua code, in any buffer.\n+  • |:source| without arguments treats a buffer with 'filetype' of \"lua\" as\n+    Lua code regardless of its extension.\n+  • |vim.iter()| provides a generic iterator interface for tables and Lua\n+    iterators |for-in|.\n+  • |vim.snippet| is a general-purpose snippet module for snippets defined in LSP format.\n+  • |vim.ringbuf()| creates ring buffers.\n+  • |vim.deepcopy()| has a `noref` argument to avoid hashing table values.\n+  • |vim.keycode()| translates keycodes in a string.\n+  • |vim.system()| for running commands / starting processes.\n+  • |vim.lpeg| and |vim.re| expose the bundled Lpeg expression grammar parser\n+    and its regex interface.\n+  • |vim.base64.encode()| and |vim.base64.decode()| encode and decode strings\n+    using Base64 encoding.\n+  • |vim.ui.open()| opens URIs using the system default handler (macOS `open`,\n+    Windows `explorer`, Linux `xdg-open`, etc.)\n+  • |vim.wo| can now be double indexed for |:setlocal| behaviour. Currently\n+    only `0` for the buffer index is currently supported.\n+  • Improved messages for type errors in `vim.api.*` calls (including `opts` params)\n+  • Lua type annotations for:\n+    • `vim.*`\n+    • `vim.fn.*`\n+    • `vim.api.*`\n+    • `vim.v.*`\n+  • |vim.text.hexencode()| and |vim.text.hexdecode()| convert strings to and\n+    from byte representations.\n+  • Functions that take a severity as an optional parameter (e.g.\n+    |vim.diagnostic.get()|) now also accept a list of severities |vim.diagnostic.severity|\n+  • |vim.diagnostic.count()| returns the number of diagnostics for a given\n+    buffer and/or namespace, by severity. This is a faster alternative to\n+    |vim.diagnostic.get()| when only the number of diagnostics is needed, but\n+    not the diagnostics themselves.\n+  • |vim.diagnostic.is_enabled()|\n+  • |vim.version.le()|, |vim.version.ge()|\n+  • |vim.fs.root()| finds project root directories from a list of \"root\n+    markers\".\n+  • Vimscript function |exists()| supports checking |v:lua| functions.\n+  • |vim.tbl_contains()| now works for general tables and allows specifying\n+    a predicate function that is checked for each value. (Use\n+    |vim.list_contains()| for checking list-like tables (integer keys without\n+    gaps) for literal values.)\n+\n+• Options\n+  • |'winfixbuf'| keeps a window focused onto a specific buffer\n+  • |'smoothscroll'| option to scroll by screen line rather than by text line\n+    when |'wrap'| is set.\n+  • 'foldtext' now supports virtual text format. |fold-foldtext|\n+  • |'foldtext'| can be set to an empty string to disable and render the line:",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601756833",
            "id": 1601756833,
            "in_reply_to_id": 1601752234,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5feN6h",
            "original_commit_id": "05b4db5b7798814156d9f8a92fd9beaddef5e424",
            "original_line": 276,
            "original_position": 428,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2058203204,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601756833/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T14:28:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601756833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601775912"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601775912"
                }
            },
            "author_association": "MEMBER",
            "body": "Well if it’s not explained I find its mention irrelevant then.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T14:39:51Z",
            "diff_hunk": "@@ -34,20 +34,32 @@ Nvim ever ships with Lua 5.4+, a Lua 5.1 compatibility shim will be provided\n so that old plugins continue to work transparently.\n \n                                                                   *lua-luajit*\n-Nvim is built with luajit on platforms which support it, which provides\n-extra functionality. Lua code in |init.lua| and plugins can assume its presence\n-on installations on common platforms. For maximum compatibility with less\n-common platforms, availability can be checked using the `jit` global variable: >lua\n+On supported platforms, Nvim is built with LuaJIT, which provides extra\n+functionality (compared to PUC Lua) such as \"bit\" and various utilities in",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601775912",
            "id": 1601775912,
            "in_reply_to_id": 1600408231,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5feSko",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 38,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2058234643,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601775912/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T14:39:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601775912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1601776840"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601776840"
                }
            },
            "author_association": "MEMBER",
            "body": "Fair enough.",
            "commit_id": "4399c4932d7b0565932a667e051f6861b8293157",
            "created_at": "2024-05-15T14:40:09Z",
            "diff_hunk": "@@ -1611,7 +1611,8 @@ get({filter})                                       *vim.lsp.inlay_hint.get()*\n         local hint = vim.lsp.inlay_hint.get({ bufnr = 0 })[1] -- 0 for current buffer\n \n         local client = vim.lsp.get_client_by_id(hint.client_id)\n-        resolved_hint = client.request_sync('inlayHint/resolve', hint.inlay_hint, 100, 0).result\n+        local resp = client.request_sync('inlayHint/resolve', hint.inlay_hint, 100, 0)\n+        local resolved_hint = assert(resp and resp.result, resp.err)",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1601776840",
            "id": 1601776840,
            "in_reply_to_id": 1600407138,
            "line": 1615,
            "node_id": "PRRC_kwDOAPphoM5feSzI",
            "original_commit_id": "ff914b3290e43f40d1ac07b590499f4931c412c8",
            "original_line": 1615,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 6,
            "pull_request_review_id": 2058236111,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601776840/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-15T14:40:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1601776840",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1602307363"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1602307363"
                }
            },
            "author_association": "MEMBER",
            "body": "This file name is strange",
            "commit_id": "c2ca30bd5b8798801e6d0afca53eaa4e11dc9d72",
            "created_at": "2024-05-15T22:11:16Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1602307363",
            "id": 1602307363,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM5fgUUj",
            "original_commit_id": "07d192bc9576e3d5c90b40d04098ba508f7d6102",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "test/functional/fixtures/api_level_set(NVIM_API_LEVEL 12)        # Bump this after any API change..mpack",
            "position": 1,
            "pull_request_review_id": 2059102358,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1602307363/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2024-05-15T22:11:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1602307363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28747#discussion_r1602318520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28747"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1602318520"
                }
            },
            "author_association": "MEMBER",
            "body": "thanks!",
            "commit_id": "c2ca30bd5b8798801e6d0afca53eaa4e11dc9d72",
            "created_at": "2024-05-15T22:19:39Z",
            "diff_hunk": "",
            "html_url": "https://github.com/neovim/neovim/pull/28747#discussion_r1602318520",
            "id": 1602318520,
            "in_reply_to_id": 1602307363,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM5fgXC4",
            "original_commit_id": "07d192bc9576e3d5c90b40d04098ba508f7d6102",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "test/functional/fixtures/api_level_set(NVIM_API_LEVEL 12)        # Bump this after any API change..mpack",
            "position": 1,
            "pull_request_review_id": 2059124552,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1602318520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "file",
            "updated_at": "2024-05-15T22:19:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1602318520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28747/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28747/commits",
    "created_at": "2024-05-14T16:34:18Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28747.diff",
    "draft": false,
    "head": {
        "label": "justinmk:doc",
        "ref": "doc",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2024-05-17T14:37:40Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 262674,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2023-07-25T13:51:02Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "4399c4932d7b0565932a667e051f6861b8293157",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28747",
    "id": 1869412599,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28747",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7c13d1a4a836effd436f8bbcdf1d03113f4c48c6",
    "merged_at": "2024-05-15T22:44:11Z",
    "milestone": {
        "closed_at": "2024-05-16T14:11:42Z",
        "closed_issues": 432,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-05-12T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 0,
        "state": "closed",
        "title": "0.10",
        "updated_at": "2024-05-17T04:23:33Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5vbPj3",
    "number": 28747,
    "patch_url": "https://github.com/neovim/neovim/pull/28747.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28747/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/4399c4932d7b0565932a667e051f6861b8293157",
    "title": "docs: news",
    "updated_at": "2024-05-15T22:44:27Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28747",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}