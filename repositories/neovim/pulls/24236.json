{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24236/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24236/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24236"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24236"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24236/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ce82ea0b4010d69e951411451ea02cfb0a3c8259"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4762,
            "forks_count": 4762,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1673,
            "open_issues_count": 1673,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-07-17T22:27:39Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247442,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 67470,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-07-17T23:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 67470,
            "watchers_count": 67470,
            "web_commit_signoff_required": false
        },
        "sha": "3750e5ed9c740a4334628c4a560d77c1dc2d0bfd",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "It uses the same code as \"scroll_delta\" of \"win_viewport\" UI event to\r\ncalculate text height, but is more flexible.",
    "closed_at": "2023-07-10T23:15:47Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1250971963"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1250971963"
                }
            },
            "author_association": "MEMBER",
            "body": "    @see |virtcol()| for text width\r\n\r\n",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-03T14:32:33Z",
            "diff_hunk": "@@ -462,3 +464,40 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Gets the number of screen lines occupied by a range of text in a given window.\n+/// Works for lines that are off-screen.\n+///\n+/// Diff filler or virtual lines are counted as a part of the line below.\n+///\n+/// Indexing is similar to |nvim_buf_get_text()|.\n+///",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1250971963",
            "id": 1250971963,
            "line": 476,
            "node_id": "PRRC_kwDOAPphoM5KkFE7",
            "original_commit_id": "1daa0d17016be40be79c6fe655da4ff08a737565",
            "original_line": 476,
            "original_position": 27,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": 29,
            "pull_request_review_id": 1511315851,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1250971963/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-03T14:32:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1250971963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1257246824"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1257246824"
                }
            },
            "author_association": "MEMBER",
            "body": "Are we absolutely sure that Integer will be sufficient for the future?\r\n```suggestion\r\nDict nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)\r\n```",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-08T12:00:24Z",
            "diff_hunk": "@@ -462,3 +464,105 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Counts the number of screen lines occupied by a range of text in a given window.\n+/// Works for lines that are off-screen and takes folds into account.\n+///\n+/// Diff filler or virtual lines above a line are counted as a part of that line,\n+/// unless the line is on \"start_row\" and \"start_vcol\" is specified.\n+///\n+/// Diff filler or virtual lines below the last line are only added to the result\n+/// if \"end_row\" is omitted.\n+///\n+/// Line indexing is similar to |nvim_buf_get_text()|.\n+///\n+/// @param window  Window handle, or 0 for current window.\n+/// @param opts    Optional parameters:\n+///                - start_row: Line index where the range starts, 0-based inclusive.\n+///                             When omitted start at the very top.\n+///                - end_row: Line index where the range ends, 0-based inclusive.\n+///                           When omitted end at the very bottom.\n+///                - start_vcol: Virtual column on \"start_row\" where the range starts,\n+///                              0-based, rounded down to full screen lines.\n+///                              When omitted count the whole line.\n+///                - end_vcol: Virtual column on \"end_row\" where the range ends,\n+///                            0-based, rounded up to full screen lines.\n+///                            When omitted count the whole line.\n+/// @return  The number of screen lines that the range of text occupy.\n+///\n+/// @see |virtcol()| for text width.\n+Integer nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1257246824",
            "id": 1257246824,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5K8BBo",
            "original_commit_id": "f8ce1cf1b08e42d94b473dbf8c561e4e4076bdc5",
            "original_line": 494,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": null,
            "pull_request_review_id": 1520697546,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1257246824/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-08T12:00:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1257246824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1257262032"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1257262032"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd rather change the return value type to `Object`, because naming Dictionary keys is hard.",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-08T12:57:28Z",
            "diff_hunk": "@@ -462,3 +464,105 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Counts the number of screen lines occupied by a range of text in a given window.\n+/// Works for lines that are off-screen and takes folds into account.\n+///\n+/// Diff filler or virtual lines above a line are counted as a part of that line,\n+/// unless the line is on \"start_row\" and \"start_vcol\" is specified.\n+///\n+/// Diff filler or virtual lines below the last line are only added to the result\n+/// if \"end_row\" is omitted.\n+///\n+/// Line indexing is similar to |nvim_buf_get_text()|.\n+///\n+/// @param window  Window handle, or 0 for current window.\n+/// @param opts    Optional parameters:\n+///                - start_row: Line index where the range starts, 0-based inclusive.\n+///                             When omitted start at the very top.\n+///                - end_row: Line index where the range ends, 0-based inclusive.\n+///                           When omitted end at the very bottom.\n+///                - start_vcol: Virtual column on \"start_row\" where the range starts,\n+///                              0-based, rounded down to full screen lines.\n+///                              When omitted count the whole line.\n+///                - end_vcol: Virtual column on \"end_row\" where the range ends,\n+///                            0-based, rounded up to full screen lines.\n+///                            When omitted count the whole line.\n+/// @return  The number of screen lines that the range of text occupy.\n+///\n+/// @see |virtcol()| for text width.\n+Integer nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1257262032",
            "id": 1257262032,
            "in_reply_to_id": 1257246824,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5K8EvQ",
            "original_commit_id": "f8ce1cf1b08e42d94b473dbf8c561e4e4076bdc5",
            "original_line": 494,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": null,
            "pull_request_review_id": 1520703566,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1257262032/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-08T12:57:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1257262032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1264583266"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264583266"
                }
            },
            "author_association": "MEMBER",
            "body": "Thinking about this more, I don't think Object helps us with forward-compatibility. Although technically we might not violate `:help api-contract` because we won't need to change the formal signature, if we return a new kind of result, it will still break clients expecting to \"unbox\" an int.\r\n\r\nAnd given the `..._height` suffix of the function, potential for other kinds of results is limited. So I guess this return type should be `Integer`.",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-15T23:23:44Z",
            "diff_hunk": "@@ -462,3 +464,104 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Computes the number of screen lines occupied by a range of text in a given window.\n+/// Works for off-screen text and takes folds into account.\n+///\n+/// Diff filler or virtual lines above a line are counted as a part of that line,\n+/// unless the line is on \"start_row\" and \"start_vcol\" is specified.\n+///\n+/// Diff filler or virtual lines below the last buffer line are counted in the result\n+/// when \"end_row\" is omitted.\n+///\n+/// Line indexing is similar to |nvim_buf_get_text()|.\n+///\n+/// @param window  Window handle, or 0 for current window.\n+/// @param opts    Optional parameters:\n+///                - start_row: Starting line index, 0-based inclusive.\n+///                             When omitted start at the very top.\n+///                - end_row: Ending line index, 0-based inclusive.\n+///                           When omitted end at the very bottom.\n+///                - start_vcol: Starting virtual column index on \"start_row\",\n+///                              0-based inclusive, rounded down to full screen lines.\n+///                              When omitted include the whole line.\n+///                - end_vcol: Ending virtual column index on \"end_row\",\n+///                            0-based exclusive, rounded up to full screen lines.\n+///                            When omitted include the whole line.\n+/// @return  The number of screen lines that the range of text occupy.\n+///\n+/// @see |virtcol()| for text width.\n+Object nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1264583266",
            "id": 1264583266,
            "line": 494,
            "node_id": "PRRC_kwDOAPphoM5LYAJi",
            "original_commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "original_line": 494,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": 47,
            "pull_request_review_id": 1531639160,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264583266/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-15T23:23:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264583266",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1264583758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264583758"
                }
            },
            "author_association": "MEMBER",
            "body": "I was thinking that in future there may be an option (e.g. `details`) that allows returning different kinds of heights, which will require a different return type. Of course it's also possible to return only one integer in each call with a different option.",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-15T23:31:03Z",
            "diff_hunk": "@@ -462,3 +464,104 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Computes the number of screen lines occupied by a range of text in a given window.\n+/// Works for off-screen text and takes folds into account.\n+///\n+/// Diff filler or virtual lines above a line are counted as a part of that line,\n+/// unless the line is on \"start_row\" and \"start_vcol\" is specified.\n+///\n+/// Diff filler or virtual lines below the last buffer line are counted in the result\n+/// when \"end_row\" is omitted.\n+///\n+/// Line indexing is similar to |nvim_buf_get_text()|.\n+///\n+/// @param window  Window handle, or 0 for current window.\n+/// @param opts    Optional parameters:\n+///                - start_row: Starting line index, 0-based inclusive.\n+///                             When omitted start at the very top.\n+///                - end_row: Ending line index, 0-based inclusive.\n+///                           When omitted end at the very bottom.\n+///                - start_vcol: Starting virtual column index on \"start_row\",\n+///                              0-based inclusive, rounded down to full screen lines.\n+///                              When omitted include the whole line.\n+///                - end_vcol: Ending virtual column index on \"end_row\",\n+///                            0-based exclusive, rounded up to full screen lines.\n+///                            When omitted include the whole line.\n+/// @return  The number of screen lines that the range of text occupy.\n+///\n+/// @see |virtcol()| for text width.\n+Object nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1264583758",
            "id": 1264583758,
            "in_reply_to_id": 1264583266,
            "line": 494,
            "node_id": "PRRC_kwDOAPphoM5LYARO",
            "original_commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "original_line": 494,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": 47,
            "pull_request_review_id": 1531639478,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264583758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-15T23:31:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264583758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1264584004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264584004"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, do you mean this may break client wrappers?",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-15T23:33:10Z",
            "diff_hunk": "@@ -462,3 +464,104 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Computes the number of screen lines occupied by a range of text in a given window.\n+/// Works for off-screen text and takes folds into account.\n+///\n+/// Diff filler or virtual lines above a line are counted as a part of that line,\n+/// unless the line is on \"start_row\" and \"start_vcol\" is specified.\n+///\n+/// Diff filler or virtual lines below the last buffer line are counted in the result\n+/// when \"end_row\" is omitted.\n+///\n+/// Line indexing is similar to |nvim_buf_get_text()|.\n+///\n+/// @param window  Window handle, or 0 for current window.\n+/// @param opts    Optional parameters:\n+///                - start_row: Starting line index, 0-based inclusive.\n+///                             When omitted start at the very top.\n+///                - end_row: Ending line index, 0-based inclusive.\n+///                           When omitted end at the very bottom.\n+///                - start_vcol: Starting virtual column index on \"start_row\",\n+///                              0-based inclusive, rounded down to full screen lines.\n+///                              When omitted include the whole line.\n+///                - end_vcol: Ending virtual column index on \"end_row\",\n+///                            0-based exclusive, rounded up to full screen lines.\n+///                            When omitted include the whole line.\n+/// @return  The number of screen lines that the range of text occupy.\n+///\n+/// @see |virtcol()| for text width.\n+Object nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1264584004",
            "id": 1264584004,
            "in_reply_to_id": 1264583266,
            "line": 494,
            "node_id": "PRRC_kwDOAPphoM5LYAVE",
            "original_commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "original_line": 494,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": 47,
            "pull_request_review_id": 1531639589,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264584004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-15T23:33:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264584004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24236#discussion_r1264585004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24236"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264585004"
                }
            },
            "author_association": "MEMBER",
            "body": "> Oh, do you mean this may break client wrappers?\r\n\r\nYes, especially statically-compiled languages. Makes auto-generation harder.\r\n\r\n\r\n\r\n> may be an option (e.g. `details`) that allows returning different kinds of heights,\r\n\r\nIn that case we could change this to `Array(Integer)` ? That avoids needing to worry about key names. But I also think `Dict` with key name `height` would be fine.",
            "commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "created_at": "2023-07-15T23:47:34Z",
            "diff_hunk": "@@ -462,3 +464,104 @@ void nvim_win_set_hl_ns(Window window, Integer ns_id, Error *err)\n   win->w_hl_needs_update = true;\n   redraw_later(win, UPD_NOT_VALID);\n }\n+\n+/// Computes the number of screen lines occupied by a range of text in a given window.\n+/// Works for off-screen text and takes folds into account.\n+///\n+/// Diff filler or virtual lines above a line are counted as a part of that line,\n+/// unless the line is on \"start_row\" and \"start_vcol\" is specified.\n+///\n+/// Diff filler or virtual lines below the last buffer line are counted in the result\n+/// when \"end_row\" is omitted.\n+///\n+/// Line indexing is similar to |nvim_buf_get_text()|.\n+///\n+/// @param window  Window handle, or 0 for current window.\n+/// @param opts    Optional parameters:\n+///                - start_row: Starting line index, 0-based inclusive.\n+///                             When omitted start at the very top.\n+///                - end_row: Ending line index, 0-based inclusive.\n+///                           When omitted end at the very bottom.\n+///                - start_vcol: Starting virtual column index on \"start_row\",\n+///                              0-based inclusive, rounded down to full screen lines.\n+///                              When omitted include the whole line.\n+///                - end_vcol: Ending virtual column index on \"end_row\",\n+///                            0-based exclusive, rounded up to full screen lines.\n+///                            When omitted include the whole line.\n+/// @return  The number of screen lines that the range of text occupy.\n+///\n+/// @see |virtcol()| for text width.\n+Object nvim_win_text_height(Window window, Dict(win_text_height) *opts, Error *err)",
            "html_url": "https://github.com/neovim/neovim/pull/24236#discussion_r1264585004",
            "id": 1264585004,
            "in_reply_to_id": 1264583266,
            "line": 494,
            "node_id": "PRRC_kwDOAPphoM5LYAks",
            "original_commit_id": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
            "original_line": 494,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/api/window.c",
            "position": 47,
            "pull_request_review_id": 1531640196,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264585004/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-07-15T23:49:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1264585004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Does this take into account folds? If so this will be really useful for https://github.com/lewis6991/satellite.nvim, and any scrollbar plugin.",
            "created_at": "2023-07-03T10:07:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1617791173",
            "id": 1617791173,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gbYjF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1617791173/reactions"
            },
            "updated_at": "2023-07-03T10:08:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1617791173",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes",
            "created_at": "2023-07-03T11:12:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1617974035",
            "id": 1617974035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gcFMT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 7,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1617974035/reactions"
            },
            "updated_at": "2023-07-03T11:12:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1617974035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Would text \"width\" also be a potential future result? So this could named `nvim_get_text_size` and right now it might only return `{ height = ... }` but in the future it might return `{ height=..., width=... }`.\r\n\r\n> Works for lines that are off-screen.\r\n\r\nDoes that imply that a `buf` parameter might make sense in the future? In general I think we should avoid new `nvim_win_xx`/`nvim_buf_xx` apis, instead name it `nvim_xx`.\r\n\r\n",
            "created_at": "2023-07-03T12:27:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1618166723",
            "id": 1618166723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gc0PD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618166723/reactions"
            },
            "updated_at": "2023-07-03T12:27:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618166723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Does that imply that a `buf` parameter might make sense in the future? In general I think we should avoid new `nvim_win_xx`/`nvim_buf_xx` apis, instead name it `nvim_xx`.\r\n\r\nI don't think so. Fold information is stored in the window and doesn't make sense for a buffer not displayed in that window.",
            "created_at": "2023-07-03T12:35:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1618178504",
            "id": 1618178504,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gc3HI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618178504/reactions"
            },
            "updated_at": "2023-07-03T12:36:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618178504",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Would text \"width\" also be a potential future result? So this could named `nvim_get_text_size` and right now it might only return `{ height = ... }` but in the future it might return `{ height=..., width=... }`.\r\n\r\nI don't think the same function should be used to get both text height and width, because they require very different arguments.\r\n\r\nArguments for text height:\r\n- Required:\r\n  - Starting line index\r\n  - Ending line index\r\n- Optional:\r\n  - Starting (virtual) column\r\n  - Ending (virtual) column\r\n  - How to count filler lines at the start and the end\r\n\r\nArguments for text width:\r\n- Required:\r\n  - Only one line index\r\n  - Starting text column\r\n  - Ending text column\r\n- Optional:\r\n  - Whether to count virtual columns added for 'showbreak' and 'breakindent'\r\n  - Whether to count virtual columns added truncated double-width character\r\n  - Whether to include virtual text after the end of the line\r\n\r\nThere is also already `virtcol()` that can be used for text width.",
            "created_at": "2023-07-03T13:00:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1618217827",
            "id": 1618217827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gdAtj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618217827/reactions"
            },
            "updated_at": "2023-07-03T13:02:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618217827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This looks useful for some things, but I don't think it can replace `scroll_delta`, due to the additional call and latency it introduces.\r\n\r\nConsider a case where you scroll down holding a key, so we have a new `scroll_delta` each key repeat, so every 30 ms or so. For each of these we would need call `nvim_win_get_text_height`, and get the result back before the next `win_viewport`. Even if you have a fast and completely stable, maybe local network, this is nowhere near guaranteed, because Neovim could do some other processing and not respond in time. Furthermore, even if the key_repeats are stable at one press per 30ms, there's no guarantee that the delay between two received `win_viewport` event are that long, it could be much shorter.\r\n\r\nSo this basically forces the client to stop everything and start buffering, and only continue processing when the result is received, so it could lead to a very stuttering experience. \r\n\r\n**Edit:** After more thinking, with a couple of additional API features, this could actually allow us to implement completely smooth scrolling in all cases. I will create an issue with more information later today.",
            "created_at": "2023-07-03T14:47:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1618506483",
            "id": 1618506483,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5geHLz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618506483/reactions"
            },
            "updated_at": "2023-07-03T15:09:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1618506483",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9946255?v=4",
                "events_url": "https://api.github.com/users/fredizzimo/events{/privacy}",
                "followers_url": "https://api.github.com/users/fredizzimo/followers",
                "following_url": "https://api.github.com/users/fredizzimo/following{/other_user}",
                "gists_url": "https://api.github.com/users/fredizzimo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/fredizzimo",
                "id": 9946255,
                "login": "fredizzimo",
                "node_id": "MDQ6VXNlcjk5NDYyNTU=",
                "organizations_url": "https://api.github.com/users/fredizzimo/orgs",
                "received_events_url": "https://api.github.com/users/fredizzimo/received_events",
                "repos_url": "https://api.github.com/users/fredizzimo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/fredizzimo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/fredizzimo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/fredizzimo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let me know when this is somewhat stable, and I can try to integrate it into satellite.nvim so we can see if the API is in the right shape.\r\n\r\nCurrently, satellite.nvim builds a map of lnum->virtual_lnum by spamming `foldclosedend()`, and it needs a bunch of caching to make it performant. And because of this caching we need to apply maps onto all the fold keys (`za`, `zR`, etc) in order to invalidate this cache.\r\n\r\nI'm hoping this API can simplify this somewhat.",
            "created_at": "2023-07-06T08:59:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623258487",
            "id": 1623258487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gwPV3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623258487/reactions"
            },
            "updated_at": "2023-07-06T08:59:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623258487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Code is already done. I just keep getting sidetracked when I wanted to write tests.",
            "created_at": "2023-07-06T09:04:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623266404",
            "id": 1623266404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gwRRk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 2,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623266404/reactions"
            },
            "updated_at": "2023-07-06T09:04:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623266404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Appears to work well. It's about as performant as my cached `foldclosedend()` implementation (give or take).\r\n\r\nWith caching, it is about 3x as fast!\r\n\r\nMight be out of scope for this PR, but is there a general event we can listen to invalidate caches of this API call?\r\n\r\nI've already committed the code if you want to see the implementation: https://github.com/lewis6991/satellite.nvim/commit/29faa3ebfe0d2063755bcd9a764c9b591e8167b5",
            "created_at": "2023-07-06T09:30:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623328917",
            "id": 1623328917,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gwgiV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623328917/reactions"
            },
            "updated_at": "2023-07-06T09:34:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623328917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I do also think `nvim_win_get_text_height` is not the ideal name, mainly because it is a bit too long. However, I think \"get\" is the most redundant word here, as no other verbs are possible. There are several existing examples of an API function without a verb:\r\n- `nvim_strwidth`: \"get\" is the only possible verb here\r\n- `nvim_buf_line_count`: \"get\" is the only possible verb here\r\n- `nvim_command` and `nvim_cmd`: the most common verb that can be applied to the command is \"execute\"\r\n\r\nRegardless of the name, I think it is very strange to move `win` to `opts` here. There has never been an API where a latter argument changes the meaning of previous ones. (Or maybe `nvim_eval_statusline` can count as one?)",
            "created_at": "2023-07-06T11:11:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623486102",
            "id": 1623486102,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gxG6W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623486102/reactions"
            },
            "updated_at": "2023-07-10T12:42:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623486102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm quite happy with `nvim_win_get_text_height` or `nvim_win_text_height`. `win` definitely should not be an option since this function only makes sense in the context of windows.",
            "created_at": "2023-07-06T11:19:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623497297",
            "id": 1623497297,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gxJpR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623497297/reactions"
            },
            "updated_at": "2023-07-06T11:19:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623497297",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes. The fact that this API takes both folds and filler lines into account means that it has to be window-dependent, because both folds and diff fillers lines are strongly tied to a window. If, hypothetically, in future there needs to be a window-independent text height API, then it will likely require very different arguments and should be separate API function.\r\n\r\nTherefore there is no reason to exclude \"win\" from this API's name.",
            "created_at": "2023-07-06T11:58:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623555918",
            "id": 1623555918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gxX9O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623555918/reactions"
            },
            "updated_at": "2023-07-06T11:59:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623555918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've renamed the API to `nvim_win_text_height`.\r\n\r\nI've also added a way to include filler lines below the last line of the buffer. To make that less confusing to achieve I've moved `start_row` and `end_row` to `opts`, so that filler lines below the last line is counted when `end_row` is omitted.",
            "created_at": "2023-07-06T13:21:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/24236#issuecomment-1623673837",
            "id": 1623673837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
            "node_id": "IC_kwDOAPphoM5gx0vt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623673837/reactions"
            },
            "updated_at": "2023-07-06T13:21:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1623673837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24236/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24236/commits",
    "created_at": "2023-07-03T06:02:19Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24236.diff",
    "draft": false,
    "head": {
        "label": "zeertzjq:api-line-size",
        "ref": "api-line-size",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/zeertzjq/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/zeertzjq/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/zeertzjq/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/zeertzjq/neovim/branches{/branch}",
            "clone_url": "https://github.com/zeertzjq/neovim.git",
            "collaborators_url": "https://api.github.com/repos/zeertzjq/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/zeertzjq/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/zeertzjq/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/zeertzjq/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/zeertzjq/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/zeertzjq/neovim/contributors",
            "created_at": "2021-09-27T02:22:45Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/zeertzjq/neovim/deployments",
            "description": null,
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/zeertzjq/neovim/downloads",
            "events_url": "https://api.github.com/repos/zeertzjq/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/zeertzjq/neovim/forks",
            "full_name": "zeertzjq/neovim",
            "git_commits_url": "https://api.github.com/repos/zeertzjq/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/zeertzjq/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/zeertzjq/neovim/git/tags{/sha}",
            "git_url": "git://github.com/zeertzjq/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "",
            "hooks_url": "https://api.github.com/repos/zeertzjq/neovim/hooks",
            "html_url": "https://github.com/zeertzjq/neovim",
            "id": 410715915,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/zeertzjq/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/zeertzjq/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/zeertzjq/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/zeertzjq/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/zeertzjq/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/zeertzjq/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/zeertzjq/neovim/merges",
            "milestones_url": "https://api.github.com/repos/zeertzjq/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGHsHCw",
            "notifications_url": "https://api.github.com/repos/zeertzjq/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/zeertzjq/neovim/pulls{/number}",
            "pushed_at": "2023-07-17T13:43:00Z",
            "releases_url": "https://api.github.com/repos/zeertzjq/neovim/releases{/id}",
            "size": 240535,
            "ssh_url": "git@github.com:zeertzjq/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/zeertzjq/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/zeertzjq/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/zeertzjq/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/zeertzjq/neovim/subscription",
            "svn_url": "https://github.com/zeertzjq/neovim",
            "tags_url": "https://api.github.com/repos/zeertzjq/neovim/tags",
            "teams_url": "https://api.github.com/repos/zeertzjq/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/zeertzjq/neovim/git/trees{/sha}",
            "updated_at": "2023-02-18T11:19:39Z",
            "url": "https://api.github.com/repos/zeertzjq/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ce82ea0b4010d69e951411451ea02cfb0a3c8259",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24236",
    "id": 1417418292,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24236",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "locked": false,
    "merge_commit_sha": "db8fe63a9398efd57c3ff28aa3d93e45fb70ee1a",
    "merged_at": "2023-07-10T23:15:47Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 56,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 146,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-07-16T22:09:09Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5UfBY0",
    "number": 24236,
    "patch_url": "https://github.com/neovim/neovim/pull/24236.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24236/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ce82ea0b4010d69e951411451ea02cfb0a3c8259",
    "title": "feat(api): add nvim_win_text_height",
    "updated_at": "2023-07-15T23:49:01Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24236",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
        "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
        "followers_url": "https://api.github.com/users/zeertzjq/followers",
        "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
        "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/zeertzjq",
        "id": 35768171,
        "login": "zeertzjq",
        "node_id": "MDQ6VXNlcjM1NzY4MTcx",
        "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
        "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
        "repos_url": "https://api.github.com/users/zeertzjq/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/zeertzjq"
    }
}