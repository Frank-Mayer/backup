{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26758/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26758/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26758"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26758"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26758/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5096,
            "forks_count": 5096,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1716,
            "open_issues_count": 1716,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T01:20:52Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248449,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72293,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-02T00:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72293,
            "watchers_count": 72293,
            "web_commit_signoff_required": false
        },
        "sha": "1ef60ea6513be72a03958ed6239bfe474c85a7a3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": null,
    "closed_at": "2023-12-29T21:13:40Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26758#discussion_r1436954593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436954593"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this realistic? I guess that would require immediately converting to `schar_T` and placing on the screen while parsing inside `build_stl_str_hl()`. Seems like an unlikely refactor considering it's complexity. Wasn't `fill_foldcolumn()` prematurely made to put characters on the screen directly? Since 'statuscolumn' is a consumer as well, filling a `char` buffer and letting `draw_col_buf()` convert to `schar_T` for the default 'foldcolumn' seems more appropriate. Made a PR with a concrete change instead of discussing about it but feel free to prove me wrong.",
            "commit_id": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
            "created_at": "2023-12-27T11:01:57Z",
            "diff_hunk": "@@ -1640,18 +1641,11 @@ int build_stl_str_hl(win_T *wp, char *out, size_t outlen, char *fmt, OptIndex op\n \n       char *p = NULL;\n       if (fold) {\n-        schar_T fold_buf[10];\n-        size_t n = fill_foldcolumn(NULL, wp, stcp->foldinfo,\n-                                   (linenr_T)get_vim_var_nr(VV_LNUM), 0, fold_buf);\n+        size_t n = fill_foldcolumn(wp, stcp->foldinfo, (linenr_T)get_vim_var_nr(VV_LNUM),\n+                                   fdc, NULL, out_p);\n         stl_items[curitem].minwid = -((stcp->use_cul ? HLF_CLF : HLF_FC) + 1);\n-        size_t buflen = 0;\n-        // TODO(bfredl): this is very backwards. we must support schar_T\n-        // being used directly in 'statuscol'",
            "html_url": "https://github.com/neovim/neovim/pull/26758#discussion_r1436954593",
            "id": 1436954593,
            "line": 1649,
            "node_id": "PRRC_kwDOAPphoM5Vpi_h",
            "original_commit_id": "d663d315e0f8c1e31ccfbd97789b7390eb2a5384",
            "original_line": 1649,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 24,
            "pull_request_review_id": 1797060025,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436954593/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T11:06:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436954593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26758#discussion_r1438110957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438110957"
                }
            },
            "author_association": "MEMBER",
            "body": "> Wasn't fill_foldcolumn() prematurely made to put characters on the screen directly? \r\n\r\nThere's absolutely nothing \"premature\" with using screen chars and screen data structures to render text to be put on the screen. In addition `wp->w_p_fcs_chars` is going to be changed to use `schar_T` directly (just like signs have), so `fill_foldcolumn()` is going to need to deal with `schar_T` values regardless.\r\n\r\n> I guess that would require immediately converting to schar_T and placing on the screen while parsing inside build_stl_str_hl(). Seems like an unlikely refactor considering it's complexity.\r\n\r\nThis sounds weirdly and very specifically defeatist, given the even more complex refactors needed to get win_line(), grid.c etc to the state where they are today. But regardless, it is not something that has to be done immediately. The point is extra complexity of stl implementation being an outlier has to be contained within it, is should not disrupt the flow of the code all around it, like drawline.c . After all the _primary purpose_ of statuslines and -columns is to be rendered on the screen, `nvim_eval_statusline` is useful to have but it is a secondary purpose and it is fine if that's what's going to need an extra conversion.\r\n\r\nThis change just seems like code golfing back into a previous local minimum instead of driving refactor work forward.",
            "commit_id": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
            "created_at": "2023-12-29T09:24:15Z",
            "diff_hunk": "@@ -1640,18 +1641,11 @@ int build_stl_str_hl(win_T *wp, char *out, size_t outlen, char *fmt, OptIndex op\n \n       char *p = NULL;\n       if (fold) {\n-        schar_T fold_buf[10];\n-        size_t n = fill_foldcolumn(NULL, wp, stcp->foldinfo,\n-                                   (linenr_T)get_vim_var_nr(VV_LNUM), 0, fold_buf);\n+        size_t n = fill_foldcolumn(wp, stcp->foldinfo, (linenr_T)get_vim_var_nr(VV_LNUM),\n+                                   fdc, NULL, out_p);\n         stl_items[curitem].minwid = -((stcp->use_cul ? HLF_CLF : HLF_FC) + 1);\n-        size_t buflen = 0;\n-        // TODO(bfredl): this is very backwards. we must support schar_T\n-        // being used directly in 'statuscol'",
            "html_url": "https://github.com/neovim/neovim/pull/26758#discussion_r1438110957",
            "id": 1438110957,
            "in_reply_to_id": 1436954593,
            "line": 1649,
            "node_id": "PRRC_kwDOAPphoM5Vt9Tt",
            "original_commit_id": "d663d315e0f8c1e31ccfbd97789b7390eb2a5384",
            "original_line": 1649,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 24,
            "pull_request_review_id": 1798769075,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438110957/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T09:24:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438110957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26758#discussion_r1438114513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438114513"
                }
            },
            "author_association": "MEMBER",
            "body": "> There's absolutely nothing \"premature\" with using screen chars and screen data structures to render text to be put on the screen.\r\n\r\nPremature in the sense that there are other callers of the function that do not do that (yet). But OK got it.\r\n\n> This sounds weirdly and very specifically defeatist\n\nNot really defeatist, just doesn't seem worthwhile only for the reason of avoiding an intermediate char buffer.\n\r\n> The point is extra complexity of stl implementation being an outlier has to be contained within it, is should not disrupt the flow of the code all around it, like drawline.c .\r\n\r\nI mean I would say with the current implementation, disrupting the code and introducing extra complexity in drawline.c is exactly whats happening. Previous commit of this PR only reduced that IMO.",
            "commit_id": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
            "created_at": "2023-12-29T09:32:00Z",
            "diff_hunk": "@@ -1640,18 +1641,11 @@ int build_stl_str_hl(win_T *wp, char *out, size_t outlen, char *fmt, OptIndex op\n \n       char *p = NULL;\n       if (fold) {\n-        schar_T fold_buf[10];\n-        size_t n = fill_foldcolumn(NULL, wp, stcp->foldinfo,\n-                                   (linenr_T)get_vim_var_nr(VV_LNUM), 0, fold_buf);\n+        size_t n = fill_foldcolumn(wp, stcp->foldinfo, (linenr_T)get_vim_var_nr(VV_LNUM),\n+                                   fdc, NULL, out_p);\n         stl_items[curitem].minwid = -((stcp->use_cul ? HLF_CLF : HLF_FC) + 1);\n-        size_t buflen = 0;\n-        // TODO(bfredl): this is very backwards. we must support schar_T\n-        // being used directly in 'statuscol'",
            "html_url": "https://github.com/neovim/neovim/pull/26758#discussion_r1438114513",
            "id": 1438114513,
            "in_reply_to_id": 1436954593,
            "line": 1649,
            "node_id": "PRRC_kwDOAPphoM5Vt-LR",
            "original_commit_id": "d663d315e0f8c1e31ccfbd97789b7390eb2a5384",
            "original_line": 1649,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 24,
            "pull_request_review_id": 1798773852,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438114513/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T13:19:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438114513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26758#discussion_r1438374733"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438374733"
                }
            },
            "author_association": "MEMBER",
            "body": "> I mean I would say with the current implementation, disrupting the code and introducing extra complexity in drawline.c is exactly whats happening. Previous commit of this PR only reduced that IMO.\r\n\r\nWell I have to disagree with that. The simple way to put text on the screen is to just assign it to `linebuf_char` and add metadata to its siblings attr/vcol as needed at the same time. moving the treatment of `linebuf_vcol` foldcolumn values to `draw_col_buf` would be a crude hack which is not less disruptive just because it occupies fewer lines of code.  Not to mention, the fact that these values (i e click behavior) get lost in 'statuscol' is still something to consider a bug (whose fix would follow easily if stl code became more similar to the builtin column code and used screen buffers, _not_ the other way around).",
            "commit_id": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
            "created_at": "2023-12-29T18:59:01Z",
            "diff_hunk": "@@ -1640,18 +1641,11 @@ int build_stl_str_hl(win_T *wp, char *out, size_t outlen, char *fmt, OptIndex op\n \n       char *p = NULL;\n       if (fold) {\n-        schar_T fold_buf[10];\n-        size_t n = fill_foldcolumn(NULL, wp, stcp->foldinfo,\n-                                   (linenr_T)get_vim_var_nr(VV_LNUM), 0, fold_buf);\n+        size_t n = fill_foldcolumn(wp, stcp->foldinfo, (linenr_T)get_vim_var_nr(VV_LNUM),\n+                                   fdc, NULL, out_p);\n         stl_items[curitem].minwid = -((stcp->use_cul ? HLF_CLF : HLF_FC) + 1);\n-        size_t buflen = 0;\n-        // TODO(bfredl): this is very backwards. we must support schar_T\n-        // being used directly in 'statuscol'",
            "html_url": "https://github.com/neovim/neovim/pull/26758#discussion_r1438374733",
            "id": 1438374733,
            "in_reply_to_id": 1436954593,
            "line": 1649,
            "node_id": "PRRC_kwDOAPphoM5Vu9tN",
            "original_commit_id": "d663d315e0f8c1e31ccfbd97789b7390eb2a5384",
            "original_line": 1649,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 24,
            "pull_request_review_id": 1799168750,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438374733/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T18:59:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438374733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26758#discussion_r1438388349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438388349"
                }
            },
            "author_association": "MEMBER",
            "body": "> Well I have to disagree with that. The simple way to put text on the screen is to just assign it to linebuf_char and add metadata to its siblings attr/vcol as needed at the same time. moving the treatment of linebuf_vcol foldcolumn values to draw_col_buf would be a crude hack which is not less disruptive just because it occupies fewer lines of code. \r\n\r\nYeah I can agree to that POV. Though if `draw_col_buf` is there to stay, I don't see the harm in using it.\r\n\r\n> Not to mention, the fact that these values (i e click behavior) get lost in 'statuscol' is still something to consider a bug (whose fix would follow easily if stl code became more similar to the builtin column code and used screen buffers, not the other way around).\r\n\r\nI'm not sure that it should be considered a bug, moreso an inconvenience perhaps. 'statuscolumn' can assign its own click callback handlers (`mouse_check_grid()` is bypassed entirely).",
            "commit_id": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
            "created_at": "2023-12-29T19:32:56Z",
            "diff_hunk": "@@ -1640,18 +1641,11 @@ int build_stl_str_hl(win_T *wp, char *out, size_t outlen, char *fmt, OptIndex op\n \n       char *p = NULL;\n       if (fold) {\n-        schar_T fold_buf[10];\n-        size_t n = fill_foldcolumn(NULL, wp, stcp->foldinfo,\n-                                   (linenr_T)get_vim_var_nr(VV_LNUM), 0, fold_buf);\n+        size_t n = fill_foldcolumn(wp, stcp->foldinfo, (linenr_T)get_vim_var_nr(VV_LNUM),\n+                                   fdc, NULL, out_p);\n         stl_items[curitem].minwid = -((stcp->use_cul ? HLF_CLF : HLF_FC) + 1);\n-        size_t buflen = 0;\n-        // TODO(bfredl): this is very backwards. we must support schar_T\n-        // being used directly in 'statuscol'",
            "html_url": "https://github.com/neovim/neovim/pull/26758#discussion_r1438388349",
            "id": 1438388349,
            "in_reply_to_id": 1436954593,
            "line": 1649,
            "node_id": "PRRC_kwDOAPphoM5VvBB9",
            "original_commit_id": "d663d315e0f8c1e31ccfbd97789b7390eb2a5384",
            "original_line": 1649,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 24,
            "pull_request_review_id": 1799188011,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438388349/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T19:32:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438388349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26758#discussion_r1438412174"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26758"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438412174"
                }
            },
            "author_association": "MEMBER",
            "body": ">  Though if draw_col_buf is there to stay, I don't see the harm in using it.\r\n\r\nIt might be or it might not be (see the comment above it)",
            "commit_id": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
            "created_at": "2023-12-29T21:13:20Z",
            "diff_hunk": "@@ -1640,18 +1641,11 @@ int build_stl_str_hl(win_T *wp, char *out, size_t outlen, char *fmt, OptIndex op\n \n       char *p = NULL;\n       if (fold) {\n-        schar_T fold_buf[10];\n-        size_t n = fill_foldcolumn(NULL, wp, stcp->foldinfo,\n-                                   (linenr_T)get_vim_var_nr(VV_LNUM), 0, fold_buf);\n+        size_t n = fill_foldcolumn(wp, stcp->foldinfo, (linenr_T)get_vim_var_nr(VV_LNUM),\n+                                   fdc, NULL, out_p);\n         stl_items[curitem].minwid = -((stcp->use_cul ? HLF_CLF : HLF_FC) + 1);\n-        size_t buflen = 0;\n-        // TODO(bfredl): this is very backwards. we must support schar_T\n-        // being used directly in 'statuscol'",
            "html_url": "https://github.com/neovim/neovim/pull/26758#discussion_r1438412174",
            "id": 1438412174,
            "in_reply_to_id": 1436954593,
            "line": 1649,
            "node_id": "PRRC_kwDOAPphoM5VvG2O",
            "original_commit_id": "d663d315e0f8c1e31ccfbd97789b7390eb2a5384",
            "original_line": 1649,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/statusline.c",
            "position": 24,
            "pull_request_review_id": 1799219867,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438412174/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T21:13:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438412174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Merge conflict",
            "created_at": "2023-12-29T02:08:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/26758#issuecomment-1871676742",
            "id": 1871676742,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26758",
            "node_id": "IC_kwDOAPphoM5vj4VG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871676742/reactions"
            },
            "updated_at": "2023-12-29T02:08:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871676742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26758/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26758/commits",
    "created_at": "2023-12-27T11:01:21Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26758.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:drawline",
        "ref": "drawline",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2024-01-01T23:00:55Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 244810,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2022-09-14T02:39:38Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26758",
    "id": 1657954689,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26758",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c5e9acca6471280e32fbcaa30849aa68358155ca",
    "merged_at": "2023-12-29T21:13:40Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5i0mGB",
    "number": 26758,
    "patch_url": "https://github.com/neovim/neovim/pull/26758.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26758/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/fe2ca7eabff7d924eff18e0b3a8efc354c0eaf17",
    "title": "refactor(drawline): avoid writing foldopen before writing foldclosed",
    "updated_at": "2023-12-29T21:13:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26758",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal"
    }
}