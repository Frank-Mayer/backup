{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28478/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28478/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28478"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28478"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28478/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b8a6f969996e292adeed3401ac02081004b1090f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5293,
            "forks_count": 5293,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1717,
            "open_issues_count": 1717,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-29T23:44:26Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 268725,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76625,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-30T01:59:13Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76625,
            "watchers_count": 76625,
            "web_commit_signoff_required": false
        },
        "sha": "af8500af64571f787579b60bf0064cd05655fd51",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "vim.notify cannot be suppressed and it is not always necessary to display a visible warning to the user if the RPC process fails to start. For instance, a user may have the same LSP configuration across systems, some of which may not have all of the LSP server executables installed. In that case, the user receives a notification every time a file is opened that they cannot suppress.\r\n\r\nInstead of using vim.notify in vim.lsp.rpc, propagate a normal error up through the call stack and use vim.notify in vim.lsp.start() only if the \"silent\" option is not set.\r\n\r\nThis also updates lsp.start_client() to return an error message as its second return value if an error occurred, rather than calling vim.notify directly. Callers of lsp.start_client() will need to update call sites appropriately if they wish to report errors to the user (or even better, switch to vim.lsp.start).\r\n\r\n",
    "closed_at": "2024-04-26T13:15:44Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1577387856"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577387856"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure I understand the rationale for this?\r\n\r\nAttaching lsp to buffers which are not backed by the filesystem is a legitimate use-case. ~This would break plugins like nvim-jdtls which support serving `jdt://` uri's via a custom off-spec extension~: (*Update*: Actually, it uses `buf_attach_client` - the change wouldn't break it.)\r\n\r\nhttps://github.com/mfussenegger/nvim-jdtls/blob/8eb5f0dbe6e126b392ddcaf45893358619893e45/plugin/nvim_jdtls.vim#L6-L7\r\n\r\nhttps://github.com/mfussenegger/nvim-jdtls/blob/8eb5f0dbe6e126b392ddcaf45893358619893e45/lua/jdtls.lua#L1164-L1215\r\n\r\nI think https://github.com/sourcegraph/sg.nvim uses a similar approach, and in the LSP repo there are discussions like this: https://github.com/microsoft/language-server-protocol/issues/1264",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T07:07:43Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1577387856",
            "id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eBQdQ",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2019040953,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577387856/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T07:53:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577387856",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1577633536"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577633536"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes I agree, I often open scratch buffers for Lua stuff that don't get written.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T10:04:51Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1577633536",
            "id": 1577633536,
            "in_reply_to_id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eCMcA",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2019447209,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577633536/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T10:04:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577633536",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1577895284"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577895284"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok this is a case of over fitting to my use case I guess. `clangd` does not work without a backing file so I (incorrectly) assumed that this was the case with all servers.\r\n\r\nWill drop the `vim.uv.fs_access` check, but `nvim_buf_is_loaded` and `buftype ~= ''` are still ok I think? Or do either of you know of uses cases where those might be invalid assumptions?",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T13:30:12Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1577895284",
            "id": 1577895284,
            "in_reply_to_id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDMV0",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2019879454,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577895284/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T13:30:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577895284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1577942493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577942493"
                }
            },
            "author_association": "MEMBER",
            "body": "`buftype` might be going too far. In my config I just have: `if vim.bo[args.buf].buftype == 'nofile' then return end`, but that may not be the correct thing to do generally.\r\n\r\nMaybe we can just do that and see where it leads us, can always change it.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T13:57:15Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1577942493",
            "id": 1577942493,
            "in_reply_to_id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDX3d",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2019961635,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577942493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T13:57:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577942493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1577981500"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577981500"
                }
            },
            "author_association": "MEMBER",
            "body": "> Will drop the vim.uv.fs_access check, but nvim_buf_is_loaded and buftype ~= '' are still ok I think? Or do either of you know of uses cases where those might be invalid assumptions?\r\n\r\nI second that checking the `buftype` is still too much. Just to show another use-case: https://github.com/mfussenegger/dotfiles/blob/8f99373541a0928eaea7e8e6273307faa370cd34/vim/.config/nvim/commands.lua#L52-L95 there I use `acwrite` to intercept writes to execute code via `BufWriteCmd`. lua-language-server works fine on that scratch buffer.\r\n\r\nI think only the `nvim_buf_is_loaded` check is fine, but that's also already present in a way: https://github.com/neovim/neovim/blob/a1550dbf0ac252052a7a71780708d3ec05aa3686/runtime/lua/vim/lsp.lua#L596-L599",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T14:21:36Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1577981500",
            "id": 1577981500,
            "in_reply_to_id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDhY8",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2020027657,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577981500/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T14:21:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577981500",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1577987436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577987436"
                }
            },
            "author_association": "MEMBER",
            "body": "What about disallowing `nofile`? I can't remember why I needed it, but it was to prevent attaching to some specific buffers or I would get errors, probably gitsigns diff buffers which have `filetype` set.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T14:25:21Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1577987436",
            "id": 1577987436,
            "in_reply_to_id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDi1s",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2020037565,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577987436/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T14:25:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1577987436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1578000992"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578000992"
                }
            },
            "author_association": "MEMBER",
            "body": "`nofile` definitely works. I use that in nvim-jdtls.\r\n\r\nI think the only buftype that might cause problems is `prompt`, but that might also have been fixed with https://github.com/neovim/neovim/pull/28260 ",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-24T14:33:51Z",
            "diff_hunk": "@@ -244,6 +244,16 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  local fname = vim.api.nvim_buf_get_name(bufnr)\n+  if\n+    vim.bo[bufnr].buftype ~= ''\n+    or not vim.api.nvim_buf_is_loaded(bufnr)\n+    or not vim.uv.fs_access(fname, 'r')\n+  then\n+    -- Not a valid buffer\n+    return\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1578000992",
            "id": 1578000992,
            "in_reply_to_id": 1577387856,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eDmJg",
            "original_commit_id": "0055094a1b331e5d20cc7656d799178d836a5546",
            "original_line": 253,
            "original_position": 21,
            "original_start_line": 248,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2020060036,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578000992/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-24T14:33:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578000992",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1578793102"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578793102"
                }
            },
            "author_association": "MEMBER",
            "body": "Pardon my ignore here, but does this change in the return type mean that in order for a plugin to check if creating an LSP client succeeds, they can no longer rely on checking if this returns `nil` or not and instead have to wrap the call with a `pcatch`?",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T03:05:32Z",
            "diff_hunk": "@@ -2340,7 +2342,7 @@ start({cmd}, {dispatchers}, {extra_spawn_params})        *vim.lsp.rpc.start()*\n                                 See |vim.system()|\n \n     Return: ~\n-        (`vim.lsp.rpc.PublicClient?`) Client RPC object, with these methods:\n+        (`vim.lsp.rpc.PublicClient`) Client RPC object, with these methods:",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1578793102",
            "id": 1578793102,
            "line": 2346,
            "node_id": "PRRC_kwDOAPphoM5eGniO",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 2346,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 43,
            "pull_request_review_id": 2021403550,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578793102/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T03:06:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578793102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1578797628"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578797628"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes. Need to do a proper code search, but as far as I’m aware no plugins are using this API directly except nvim-lspconfig, which I will update myself when this is merged.\r\n\r\nAlternatively we could use multi return values, `client|nil, nil|string` where the 2nd argument is the error if the client failed to start. That’s still a breaking change, but slightly less breaking. ",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T03:16:45Z",
            "diff_hunk": "@@ -2340,7 +2342,7 @@ start({cmd}, {dispatchers}, {extra_spawn_params})        *vim.lsp.rpc.start()*\n                                 See |vim.system()|\n \n     Return: ~\n-        (`vim.lsp.rpc.PublicClient?`) Client RPC object, with these methods:\n+        (`vim.lsp.rpc.PublicClient`) Client RPC object, with these methods:",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1578797628",
            "id": 1578797628,
            "in_reply_to_id": 1578793102,
            "line": 2346,
            "node_id": "PRRC_kwDOAPphoM5eGoo8",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 2346,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 43,
            "pull_request_review_id": 2021410799,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578797628/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T03:16:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578797628",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1578803436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578803436"
                }
            },
            "author_association": "MEMBER",
            "body": "Got it, thanks for the early research. I think the current implementation is good for now, but given that `vim.lsp.start` wasn't added in v0.10, the change at least deserves an entry in `news.txt`.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T03:31:31Z",
            "diff_hunk": "@@ -2340,7 +2342,7 @@ start({cmd}, {dispatchers}, {extra_spawn_params})        *vim.lsp.rpc.start()*\n                                 See |vim.system()|\n \n     Return: ~\n-        (`vim.lsp.rpc.PublicClient?`) Client RPC object, with these methods:\n+        (`vim.lsp.rpc.PublicClient`) Client RPC object, with these methods:",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1578803436",
            "id": 1578803436,
            "in_reply_to_id": 1578793102,
            "line": 2346,
            "node_id": "PRRC_kwDOAPphoM5eGqDs",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 2346,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 43,
            "pull_request_review_id": 2021419307,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578803436/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T03:31:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578803436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1578941321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578941321"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  if not vim.api.nvim_buf_is_loaded(bufnr) then\r\n```\r\n\r\nAs mentioned in the comments - there are currently working `nofile` use-cases",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T06:33:23Z",
            "diff_hunk": "@@ -244,17 +247,29 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  if vim.bo[bufnr].buftype == 'nofile' or not vim.api.nvim_buf_is_loaded(bufnr) then",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1578941321",
            "id": 1578941321,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eHLuJ",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 250,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2021636225,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578941321/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T06:33:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1578941321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579204202"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579204202"
                }
            },
            "author_association": "MEMBER",
            "body": "`git grep quiet -- ':/*.lua'` suggests that we haven't used this name anywhere yet. `silent` would be the conventional name.\r\n```suggestion\r\n                  • {silent} (`boolean`) Suppress error reporting if the LSP\r\n                    server fails to start (default false).\r\n```",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T09:54:45Z",
            "diff_hunk": "@@ -869,12 +869,14 @@ start({config}, {opts})                                      *vim.lsp.start()*\n                   |vim.lsp.ClientConfig|.\n       • {opts}    (`table?`) Optional keyword arguments\n                   • {reuse_client}\n-                    (`fun(client: vim.lsp.Client, config: table): boolean`)\n+                    (`fun(client: vim.lsp.Client, config: vim.lsp.ClientConfig): boolean`)\n                     Predicate used to decide if a client should be re-used.\n                     Used on all running clients. The default implementation\n                     re-uses a client if name and root_dir matches.\n                   • {bufnr} (`integer`) Buffer handle to attach to if starting\n                     or re-using a client (0 for current).\n+                  • {quiet} (`boolean`) Suppress error reporting if the LSP\n+                    server fails to start (default false).",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579204202",
            "id": 1579204202,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eIL5q",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 879,
            "original_position": 12,
            "original_start_line": 878,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2022062673,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579204202/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-25T09:54:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579204202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579443382"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579443382"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah I completely misinterpreted your [comment](https://github.com/neovim/neovim/pull/28478#discussion_r1578000992) as \"`nofile` definitely works [as the value to use in this PR]\". My mistake.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T13:08:58Z",
            "diff_hunk": "@@ -244,17 +247,29 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  if vim.bo[bufnr].buftype == 'nofile' or not vim.api.nvim_buf_is_loaded(bufnr) then",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579443382",
            "id": 1579443382,
            "in_reply_to_id": 1578941321,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eJGS2",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 250,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2022449907,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579443382/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T13:08:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579443382",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579448194"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579448194"
                }
            },
            "author_association": "MEMBER",
            "body": "Ok given that `'buftype'` is not in use at all I'm just going to drop the first commit and make this PR only adding the `silent` option (since `nvim_buf_is_loaded` is already checked in `buf_attach_client`).",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T13:12:14Z",
            "diff_hunk": "@@ -244,17 +247,29 @@ function lsp.start(config, opts)\n   local reuse_client = opts.reuse_client or reuse_client_default\n   local bufnr = resolve_bufnr(opts.bufnr)\n \n+  if vim.bo[bufnr].buftype == 'nofile' or not vim.api.nvim_buf_is_loaded(bufnr) then",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579448194",
            "id": 1579448194,
            "in_reply_to_id": 1578941321,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eJHeC",
            "original_commit_id": "120fa0a8bdd273f9f4857b7ca0026bd492e442f9",
            "original_line": 250,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp.lua",
            "position": null,
            "pull_request_review_id": 2022457512,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579448194/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-25T13:12:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579448194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579525979"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579525979"
                }
            },
            "author_association": "MEMBER",
            "body": "Ideally we should follow the `pcall` convention of `boolean, string|result` but it's probably too breaking to do that here?",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T13:57:12Z",
            "diff_hunk": "@@ -886,10 +888,11 @@ start_client({config})                                *vim.lsp.start_client()*\n       • {config}  (`vim.lsp.ClientConfig`) Configuration for the server. See\n                   |vim.lsp.ClientConfig|.\n \n-    Return: ~\n+    Return (multiple): ~\n         (`integer?`) client_id |vim.lsp.get_client_by_id()| Note: client may\n         not be fully initialized. Use `on_init` to do any actions once the\n         client has been initialized.\n+        (`string?`) Error message, if any",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579525979",
            "id": 1579525979,
            "line": 895,
            "node_id": "PRRC_kwDOAPphoM5eJadb",
            "original_commit_id": "25ec5bfa6f82b380e865d95c96c7ff995aea9b7a",
            "original_line": 895,
            "original_position": 25,
            "original_start_line": 891,
            "path": "runtime/doc/lsp.txt",
            "position": 25,
            "pull_request_review_id": 2022590633,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579525979/reactions"
            },
            "side": "RIGHT",
            "start_line": 891,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-25T13:57:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579525979",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579576304"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579576304"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure if it's too breaking, but I'd like to point out that `vim.uv` uses this pattern of `result|nil, errormsg|nil` for most of its functions. So in a way the pattern here wouldn't be new. Probably rather the opposite, there are fewer cases where `boolean, string|result` is used.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T14:27:56Z",
            "diff_hunk": "@@ -886,10 +888,11 @@ start_client({config})                                *vim.lsp.start_client()*\n       • {config}  (`vim.lsp.ClientConfig`) Configuration for the server. See\n                   |vim.lsp.ClientConfig|.\n \n-    Return: ~\n+    Return (multiple): ~\n         (`integer?`) client_id |vim.lsp.get_client_by_id()| Note: client may\n         not be fully initialized. Use `on_init` to do any actions once the\n         client has been initialized.\n+        (`string?`) Error message, if any",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579576304",
            "id": 1579576304,
            "in_reply_to_id": 1579525979,
            "line": 895,
            "node_id": "PRRC_kwDOAPphoM5eJmvw",
            "original_commit_id": "25ec5bfa6f82b380e865d95c96c7ff995aea9b7a",
            "original_line": 895,
            "original_position": 25,
            "original_start_line": 891,
            "path": "runtime/doc/lsp.txt",
            "position": 25,
            "pull_request_review_id": 2022682550,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579576304/reactions"
            },
            "side": "RIGHT",
            "start_line": 891,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-25T14:27:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579576304",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579577820"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579577820"
                }
            },
            "author_association": "MEMBER",
            "body": "The Lua stdlib does this too, e.g. `io.open` returns `file|nil, nil|error`.",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T14:28:54Z",
            "diff_hunk": "@@ -886,10 +888,11 @@ start_client({config})                                *vim.lsp.start_client()*\n       • {config}  (`vim.lsp.ClientConfig`) Configuration for the server. See\n                   |vim.lsp.ClientConfig|.\n \n-    Return: ~\n+    Return (multiple): ~\n         (`integer?`) client_id |vim.lsp.get_client_by_id()| Note: client may\n         not be fully initialized. Use `on_init` to do any actions once the\n         client has been initialized.\n+        (`string?`) Error message, if any",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579577820",
            "id": 1579577820,
            "in_reply_to_id": 1579525979,
            "line": 895,
            "node_id": "PRRC_kwDOAPphoM5eJnHc",
            "original_commit_id": "25ec5bfa6f82b380e865d95c96c7ff995aea9b7a",
            "original_line": 895,
            "original_position": 25,
            "original_start_line": 891,
            "path": "runtime/doc/lsp.txt",
            "position": 25,
            "pull_request_review_id": 2022684989,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579577820/reactions"
            },
            "side": "RIGHT",
            "start_line": 891,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-25T14:28:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579577820",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579593413"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579593413"
                }
            },
            "author_association": "MEMBER",
            "body": "There is also an advantage to the `result|nil, errormsg|nil` pattern:\r\nIf you do:\r\n\r\n```\r\nlocal result, err = foobar()\r\nif err then\r\n    ...\r\nelseif result then\r\n    ...\r\nend\r\n```\r\n\r\nluals can correctly infer the type of `result`.\r\nWith `bool, result|err` a `if ok` won't tell it if the second return value has the type of the error, or the type of the result.\r\n",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T14:39:04Z",
            "diff_hunk": "@@ -886,10 +888,11 @@ start_client({config})                                *vim.lsp.start_client()*\n       • {config}  (`vim.lsp.ClientConfig`) Configuration for the server. See\n                   |vim.lsp.ClientConfig|.\n \n-    Return: ~\n+    Return (multiple): ~\n         (`integer?`) client_id |vim.lsp.get_client_by_id()| Note: client may\n         not be fully initialized. Use `on_init` to do any actions once the\n         client has been initialized.\n+        (`string?`) Error message, if any",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579593413",
            "id": 1579593413,
            "in_reply_to_id": 1579525979,
            "line": 895,
            "node_id": "PRRC_kwDOAPphoM5eJq7F",
            "original_commit_id": "25ec5bfa6f82b380e865d95c96c7ff995aea9b7a",
            "original_line": 895,
            "original_position": 25,
            "original_start_line": 891,
            "path": "runtime/doc/lsp.txt",
            "position": 25,
            "pull_request_review_id": 2022710652,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579593413/reactions"
            },
            "side": "RIGHT",
            "start_line": 891,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-25T14:39:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579593413",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28478#discussion_r1579602655"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28478"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579602655"
                }
            },
            "author_association": "MEMBER",
            "body": "interesting. let's document this pattern in `:help dev-lua` \"interface conventions\" section.\r\n\r\nI should probably rework https://github.com/neovim/neovim/pull/28502 ?",
            "commit_id": "b8a6f969996e292adeed3401ac02081004b1090f",
            "created_at": "2024-04-25T14:43:14Z",
            "diff_hunk": "@@ -886,10 +888,11 @@ start_client({config})                                *vim.lsp.start_client()*\n       • {config}  (`vim.lsp.ClientConfig`) Configuration for the server. See\n                   |vim.lsp.ClientConfig|.\n \n-    Return: ~\n+    Return (multiple): ~\n         (`integer?`) client_id |vim.lsp.get_client_by_id()| Note: client may\n         not be fully initialized. Use `on_init` to do any actions once the\n         client has been initialized.\n+        (`string?`) Error message, if any",
            "html_url": "https://github.com/neovim/neovim/pull/28478#discussion_r1579602655",
            "id": 1579602655,
            "in_reply_to_id": 1579525979,
            "line": 895,
            "node_id": "PRRC_kwDOAPphoM5eJtLf",
            "original_commit_id": "25ec5bfa6f82b380e865d95c96c7ff995aea9b7a",
            "original_line": 895,
            "original_position": 25,
            "original_start_line": 891,
            "path": "runtime/doc/lsp.txt",
            "position": 25,
            "pull_request_review_id": 2022724673,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579602655/reactions"
            },
            "side": "RIGHT",
            "start_line": 891,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-04-25T14:43:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1579602655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> vim.notify cannot be surpressed and it is not always necessary to display a visible warning to the user if the RPC process fails to start.\r\n\r\nAlthough it might be noisy, I personally think that having a visible and urgent notification is suitable in this case, and that a message in the log file is easily lost.\r\n\r\nPerhaps we can add an option to `vim.lsp.rpc.start` on what to do in these scenarios to please everyone?",
            "created_at": "2024-04-24T03:34:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2073953819",
            "id": 2073953819,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM57ngYb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073953819/reactions"
            },
            "updated_at": "2024-04-24T03:34:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2073953819",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  Since vim.lsp.start() is a slightly higher level interface over Client.start_client()\r\n\r\nDoes this imply that start_client will continue to be a public interface? I was hoping we could eliminate it.",
            "created_at": "2024-04-24T10:14:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2074602614",
            "id": 2074602614,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM57p-x2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074602614/reactions"
            },
            "updated_at": "2024-04-24T10:14:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074602614",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > vim.notify cannot be surpressed and it is not always necessary to display a visible warning to the user if the RPC process fails to start.\r\n> \r\n> Although it might be noisy, I personally think that having a visible and urgent notification is suitable in this case, and that a message in the log file is easily lost.\r\n> \r\n> Perhaps we can add an option to `vim.lsp.rpc.start` on what to do in these scenarios to please everyone?\r\n\r\nSo long as there is some kind of affordance to suppress the warning or error message, I'm fine with this solution. I do not want to be notified every time I open a Python file on a remote server that `pyright` is not installed. I _know_ it's not installed, that's not a warning or an error.",
            "created_at": "2024-04-24T13:24:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2074944372",
            "id": 2074944372,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM57rSN0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074944372/reactions"
            },
            "updated_at": "2024-04-24T13:24:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074944372",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > Since vim.lsp.start() is a slightly higher level interface over Client.start_client()\r\n> \r\n> Does this imply that start_client will continue to be a public interface? I was hoping we could eliminate it.\r\n\r\nI guess this depends on whether we want to support \"advanced\" LSP use cases for plugins, or if we want to have everyone just use `vim.lsp.start()`. I'm fine with the latter, personally, but I don't know if/how other plugins are using `start_client()` (I know nvim-lspconfig is, but that's only because nvim-lspconfig hasn't been meaningfully updated in a long time).",
            "created_at": "2024-04-24T13:26:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2074948211",
            "id": 2074948211,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM57rTJz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074948211/reactions"
            },
            "updated_at": "2024-04-24T13:26:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2074948211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So long as there is some kind of affordance to suppress the warning or error message, I'm fine with this solution. I do not want to be notified every time I open a Python file on a remote server that pyright is not installed. I know it's not installed, that's not a warning or an error.\r\n\r\nI'd also prefer a flag to ignore these errors over removing the default notification.\r\nFor people initially setting up LSP it's not nice if there's no visible feedback at all if the process can't be found or fails to execute.",
            "created_at": "2024-04-24T14:24:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2075078496",
            "id": 2075078496,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM57ry9g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2075078496/reactions"
            },
            "updated_at": "2024-04-24T14:24:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2075078496",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > So long as there is some kind of affordance to suppress the warning or error message, I'm fine with this solution. I do not want to be notified every time I open a Python file on a remote server that pyright is not installed. I know it's not installed, that's not a warning or an error.\r\n> \r\n> I'd also prefer a flag to ignore these errors over removing the default notification. For people initially setting up LSP it's not nice if there's no visible feedback at all if the process can't be found or fails to execute.\r\n\r\nWe can add a `quiet` field to the `opts` parameter of `vim.lsp.start()`.\r\n\r\nThen in `rpc.start()` we can use `error()` instead of vim.notify. `vim.lsp.start()` uses `pcall` when calling `lsp.start_client` and calls `vim.notify` if `quiet` is falsey.\r\n\r\n\r\nThis will kind of break nvim-lspconfig though, since they still use `start_client` directly (users will see an error rather than a warning notification), though it should be an easy update on that side (eventually, nvim-lspconfig should use `vim.lsp.start()` too, but that's a bigger effort).",
            "created_at": "2024-04-24T14:50:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2075135489",
            "id": 2075135489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM57sA4B",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2075135489/reactions"
            },
            "updated_at": "2024-04-24T14:50:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2075135489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">Alternatively we could use multi return values, client|nil, nil|string where the 2nd argument is the error if the client failed to start. That’s still a breaking change, but slightly less breaking.\r\n\r\nI updated `vim.lsp.start_client()` to do this. I also updated the dispatch functions to return a client or error, rather than an optional client. This simplifies our error reporting paths.\r\n\r\nThis is a _mildly_ breaking change for anyone using `vim.lsp.start_client()` directly. Things will still work when they work, but if an error occurs there is no longer a notification by default. Callers of `start_client` need to handle the error themselves (or better yet, switch to `vim.lsp.start()`).",
            "created_at": "2024-04-25T13:47:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2077238453",
            "id": 2077238453,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM570CS1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077238453/reactions"
            },
            "updated_at": "2024-04-25T13:47:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2077238453",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "nvim-lspconfig PR is here: https://github.com/neovim/nvim-lspconfig/pull/3126",
            "created_at": "2024-04-26T13:15:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/28478#issuecomment-2079377344",
            "id": 2079377344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
            "node_id": "IC_kwDOAPphoM578MfA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079377344/reactions"
            },
            "updated_at": "2024-04-26T13:15:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2079377344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28478/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28478/commits",
    "created_at": "2024-04-24T01:27:04Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28478.diff",
    "draft": false,
    "head": {
        "label": "gpanders:lsp-start",
        "ref": "lsp-start",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-04-28T15:23:01Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 262186,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b8a6f969996e292adeed3401ac02081004b1090f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28478",
    "id": 1837752052,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28478",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "37d8e504593646c81542f8c66f0d608e0a59f036",
    "merged_at": "2024-04-26T13:15:44Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5tid70",
    "number": 28478,
    "patch_url": "https://github.com/neovim/neovim/pull/28478.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28478/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b8a6f969996e292adeed3401ac02081004b1090f",
    "title": "fix(lsp): add \"silent\" option to vim.lsp.start",
    "updated_at": "2024-04-26T13:16:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28478",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}