{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27523/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27523/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27523"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27523"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27523/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27523"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5259,
            "forks_count": 5259,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1730,
            "open_issues_count": 1730,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-20T01:37:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 253965,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 74120,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-20T01:31:12Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 74120,
            "watchers_count": 74120,
            "web_commit_signoff_required": false
        },
        "sha": "93c911e52feadff72003f7e78257c00c3bbf1570",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Gives `:InspectTree` an optional argument representing a specific parser to show in the tree, for easier debugging. I'm not sure how to add proper documentation for this, it seems the documentation for the command itself is not fully complete, as it doesn't show that it takes a count.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27523#discussion_r1493875346"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1493875346"
                }
            },
            "author_association": "MEMBER",
            "body": "This could be simplified to:\r\n```lua\r\n  if cmd.mods ~= '' or cmd.count ~= 0 then\r\n    local count = cmd.count ~= 0 and cmd.count or ''\r\n    local new = cmd.mods ~= '' and 'new' or 'vnew'\r\n\r\n    vim.treesitter.inspect_tree({\r\n      command = ('%s %s%s'):format(cmd.mods, count, new),\r\n      lang = cmd.fargs and cmd.fargs[1],\r\n    })\r\n  else\r\n    vim.treesitter.inspect_tree()\r\n```",
            "commit_id": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
            "created_at": "2024-02-18T23:31:52Z",
            "diff_hunk": "@@ -7,17 +7,26 @@ vim.api.nvim_create_user_command('Inspect', function(cmd)\n end, { desc = 'Inspect highlights and extmarks at the cursor', bang = true })\n \n vim.api.nvim_create_user_command('InspectTree', function(cmd)\n+  ---@type string\n+  local lang = cmd.fargs and cmd.fargs[1]\n   if cmd.mods ~= '' or cmd.count ~= 0 then\n     local count = cmd.count ~= 0 and cmd.count or ''\n     local new = cmd.mods ~= '' and 'new' or 'vnew'\n \n     vim.treesitter.inspect_tree({\n       command = ('%s %s%s'):format(cmd.mods, count, new),\n+      lang = lang,\n     })\n   else\n-    vim.treesitter.inspect_tree()\n+    vim.treesitter.inspect_tree({\n+      lang = lang,\n+    })",
            "html_url": "https://github.com/neovim/neovim/pull/27523#discussion_r1493875346",
            "id": 1493875346,
            "line": 23,
            "node_id": "PRRC_kwDOAPphoM5ZCrqS",
            "original_commit_id": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
            "original_line": 23,
            "original_position": 18,
            "original_start_line": 10,
            "path": "runtime/plugin/nvim.lua",
            "position": 18,
            "pull_request_review_id": 1887360821,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1493875346/reactions"
            },
            "side": "RIGHT",
            "start_line": 10,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-18T23:31:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1493875346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27523#discussion_r1493939356"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1493939356"
                }
            },
            "author_association": "NONE",
            "body": "Hmm... in my testing I couldn't get this to work; something like `:InspectTree markdown_inline` will still just show the regular markdown tree",
            "commit_id": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
            "created_at": "2024-02-19T02:29:02Z",
            "diff_hunk": "@@ -7,17 +7,26 @@ vim.api.nvim_create_user_command('Inspect', function(cmd)\n end, { desc = 'Inspect highlights and extmarks at the cursor', bang = true })\n \n vim.api.nvim_create_user_command('InspectTree', function(cmd)\n+  ---@type string\n+  local lang = cmd.fargs and cmd.fargs[1]\n   if cmd.mods ~= '' or cmd.count ~= 0 then\n     local count = cmd.count ~= 0 and cmd.count or ''\n     local new = cmd.mods ~= '' and 'new' or 'vnew'\n \n     vim.treesitter.inspect_tree({\n       command = ('%s %s%s'):format(cmd.mods, count, new),\n+      lang = lang,\n     })\n   else\n-    vim.treesitter.inspect_tree()\n+    vim.treesitter.inspect_tree({\n+      lang = lang,\n+    })",
            "html_url": "https://github.com/neovim/neovim/pull/27523#discussion_r1493939356",
            "id": 1493939356,
            "in_reply_to_id": 1493875346,
            "line": 23,
            "node_id": "PRRC_kwDOAPphoM5ZC7Sc",
            "original_commit_id": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
            "original_line": 23,
            "original_position": 18,
            "original_start_line": 10,
            "path": "runtime/plugin/nvim.lua",
            "position": 18,
            "pull_request_review_id": 1887451250,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1493939356/reactions"
            },
            "side": "RIGHT",
            "start_line": 10,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-19T02:29:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1493939356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27523#discussion_r1494232795"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27523"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1494232795"
                }
            },
            "author_association": "MEMBER",
            "body": "Markdown is special; you'll _never_ have `markdown_inline` root tree.",
            "commit_id": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
            "created_at": "2024-02-19T09:16:54Z",
            "diff_hunk": "@@ -7,17 +7,26 @@ vim.api.nvim_create_user_command('Inspect', function(cmd)\n end, { desc = 'Inspect highlights and extmarks at the cursor', bang = true })\n \n vim.api.nvim_create_user_command('InspectTree', function(cmd)\n+  ---@type string\n+  local lang = cmd.fargs and cmd.fargs[1]\n   if cmd.mods ~= '' or cmd.count ~= 0 then\n     local count = cmd.count ~= 0 and cmd.count or ''\n     local new = cmd.mods ~= '' and 'new' or 'vnew'\n \n     vim.treesitter.inspect_tree({\n       command = ('%s %s%s'):format(cmd.mods, count, new),\n+      lang = lang,\n     })\n   else\n-    vim.treesitter.inspect_tree()\n+    vim.treesitter.inspect_tree({\n+      lang = lang,\n+    })",
            "html_url": "https://github.com/neovim/neovim/pull/27523#discussion_r1494232795",
            "id": 1494232795,
            "in_reply_to_id": 1493875346,
            "line": 23,
            "node_id": "PRRC_kwDOAPphoM5ZEC7b",
            "original_commit_id": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
            "original_line": 23,
            "original_position": 18,
            "original_start_line": 10,
            "path": "runtime/plugin/nvim.lua",
            "position": 18,
            "pull_request_review_id": 1887917673,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27523",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1494232795/reactions"
            },
            "side": "RIGHT",
            "start_line": 10,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-19T09:16:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1494232795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "What is the motivating use case for this? You mentioned \"easier debugging\", could you elaborate?\r\n\r\nWhen `:InspectTree` is used in a buffer, that buffer already has a filetype. What does specifying an arbitrary language buy us? I tested this out just now by running `:InspectTree lua` in a C buffer and, predictably, the results were not useful.",
            "created_at": "2024-02-19T14:27:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952563116",
            "id": 1952563116,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50Yb-s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952563116/reactions"
            },
            "updated_at": "2024-02-19T14:27:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952563116",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The main use (for me) would be for languages whose name differs from the filetype (e.g., `latex` parser for `tex` filetypes), but arguably that should be fixed by adding smarter language resolution.\r\n\r\nThere _may_ be a use case for only showing injected (or root) trees, so, e.g., `:InspectTree vimdoc` on a help file would omit injected languages. But I posit this is rare enough not to need syntactic sugar.\r\n\r\n(That being said, this PR seems harmless, as it simply exposes the existing underlying option in a straightforward manner.)",
            "created_at": "2024-02-19T14:34:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952576479",
            "id": 1952576479,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50YfPf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952576479/reactions"
            },
            "updated_at": "2024-02-19T14:34:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952576479",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Could this not be achieved by changing the filetype of the current buffer instead?",
            "created_at": "2024-02-19T14:35:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952577647",
            "id": 1952577647,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50Yfhv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952577647/reactions"
            },
            "updated_at": "2024-02-19T14:37:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952577647",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not in my case, since `latex` is not a valid filetype. This is the reason why the underlying Lua function `vim.treesitter.inspect_tree()` accepts a `lang` argument; what this PR does is just expose this to the Vimscript convenience user command. \r\n\r\nThe real question here is \"why this argument and not the others?\" and \"is this robust enough?\"",
            "created_at": "2024-02-19T14:35:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952578949",
            "id": 1952578949,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50Yf2F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952578949/reactions"
            },
            "updated_at": "2024-02-19T14:38:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952578949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh. I forgot parsers and vim filetypes doesn't necessarily need to have parity. Thanks.",
            "created_at": "2024-02-19T14:37:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952581881",
            "id": 1952581881,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50Ygj5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952581881/reactions"
            },
            "updated_at": "2024-02-19T14:37:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952581881",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (That being said, this PR seems harmless, as it simply exposes the existing underlying option in a straightforward manner.)\r\n\r\nMy concern is that we will lock in the argument to the `:InspectTree` command which _could_ be used for a different, more useful, as yet unknown use case in the future.\r\n\r\n`vim.treesitter.inspect_tree()` is exposed intentionally to allow this kind of flexibility. Is overriding the language needed often enough to warrant it being part of the command itself?\r\n\r\nIf we made it an optional argument e.g. `:InspectTree ++lang={lang}` or similar, my reservations would be addressed, but that is of course a less simple change.",
            "created_at": "2024-02-19T14:41:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952589411",
            "id": 1952589411,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50YiZj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952589411/reactions"
            },
            "updated_at": "2024-02-19T14:41:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952589411",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> vim.treesitter.inspect_tree() is exposed intentionally to allow this kind of flexibility. Is overriding the language needed often enough to warrant it being part of the command itself?\r\n\r\nAnd does it need to be _manually_, instead of making `:InspectTree`/`inspect_tree()` smarter and using the improved language resolution methods? I think this should be done first, in any case.",
            "created_at": "2024-02-19T14:43:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/27523#issuecomment-1952594558",
            "id": 1952594558,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
            "node_id": "IC_kwDOAPphoM50Yjp-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952594558/reactions"
            },
            "updated_at": "2024-02-19T14:43:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1952594558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27523/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27523/commits",
    "created_at": "2024-02-18T17:21:05Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27523.diff",
    "draft": true,
    "head": {
        "label": "ribru17:inspecttree_lang",
        "ref": "inspecttree_lang",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ribru17/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ribru17/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ribru17/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ribru17/neovim/branches{/branch}",
            "clone_url": "https://github.com/ribru17/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ribru17/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ribru17/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ribru17/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ribru17/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ribru17/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ribru17/neovim/contributors",
            "created_at": "2023-12-31T05:02:30Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ribru17/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ribru17/neovim/downloads",
            "events_url": "https://api.github.com/repos/ribru17/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ribru17/neovim/forks",
            "full_name": "ribru17/neovim",
            "git_commits_url": "https://api.github.com/repos/ribru17/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ribru17/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ribru17/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ribru17/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ribru17/neovim/hooks",
            "html_url": "https://github.com/ribru17/neovim",
            "id": 737455179,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ribru17/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ribru17/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ribru17/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ribru17/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ribru17/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ribru17/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ribru17/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ribru17/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK_SsSw",
            "notifications_url": "https://api.github.com/repos/ribru17/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
                "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
                "followers_url": "https://api.github.com/users/ribru17/followers",
                "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
                "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ribru17",
                "id": 55766287,
                "login": "ribru17",
                "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
                "organizations_url": "https://api.github.com/users/ribru17/orgs",
                "received_events_url": "https://api.github.com/users/ribru17/received_events",
                "repos_url": "https://api.github.com/users/ribru17/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ribru17"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ribru17/neovim/pulls{/number}",
            "pushed_at": "2024-02-19T05:25:43Z",
            "releases_url": "https://api.github.com/repos/ribru17/neovim/releases{/id}",
            "size": 247052,
            "ssh_url": "git@github.com:ribru17/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ribru17/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ribru17/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ribru17/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ribru17/neovim/subscription",
            "svn_url": "https://github.com/ribru17/neovim",
            "tags_url": "https://api.github.com/repos/ribru17/neovim/tags",
            "teams_url": "https://api.github.com/repos/ribru17/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ribru17/neovim/git/trees{/sha}",
            "updated_at": "2024-02-09T21:30:03Z",
            "url": "https://api.github.com/repos/ribru17/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
            "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
            "followers_url": "https://api.github.com/users/ribru17/followers",
            "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
            "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ribru17",
            "id": 55766287,
            "login": "ribru17",
            "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
            "organizations_url": "https://api.github.com/users/ribru17/orgs",
            "received_events_url": "https://api.github.com/users/ribru17/received_events",
            "repos_url": "https://api.github.com/users/ribru17/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ribru17"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27523",
    "id": 1731760137,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27523",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "86ab8902ed5ee097f14abf32da4073b5d856ee0c",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5nOJAJ",
    "number": 27523,
    "patch_url": "https://github.com/neovim/neovim/pull/27523.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27523/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/c11facf02bc3496b0c9d3b08a5ac9e7f1aff1f42",
    "title": "feat(treesitter): add lang arg to :InspectTree",
    "updated_at": "2024-02-19T14:43:40Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27523",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/55766287?v=4",
        "events_url": "https://api.github.com/users/ribru17/events{/privacy}",
        "followers_url": "https://api.github.com/users/ribru17/followers",
        "following_url": "https://api.github.com/users/ribru17/following{/other_user}",
        "gists_url": "https://api.github.com/users/ribru17/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ribru17",
        "id": 55766287,
        "login": "ribru17",
        "node_id": "MDQ6VXNlcjU1NzY2Mjg3",
        "organizations_url": "https://api.github.com/users/ribru17/orgs",
        "received_events_url": "https://api.github.com/users/ribru17/received_events",
        "repos_url": "https://api.github.com/users/ribru17/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ribru17/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ribru17/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ribru17"
    }
}