{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20669/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20669/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20669"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20669"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20669/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20669"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/cc873413d78ff9a75c5e85a2d9f701cc21d1e800"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5066,
            "forks_count": 5066,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1721,
            "open_issues_count": 1721,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-19T00:15:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 246400,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71892,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-19T01:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71892,
            "watchers_count": 71892,
            "web_commit_signoff_required": false
        },
        "sha": "b40170f7a3ca4bd157eeb52c9d57cb2ebfe3c562",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Ergonomic wrappers for `nvim_buf_call` and `nvim_win_call`\r\n\r\nMotivated from https://github.com/nvim-treesitter/nvim-treesitter-context/pull/170 which has:\r\n\r\n```lua\r\nvim.api.nvim_win_call(winid, function()\r\n  vim.fn.winrestview({leftcol = leftcol})\r\nend)\r\n```\r\n\r\nCan now be written as:\r\n\r\n```lua\r\nvim.wincall(winid, vim.fn.winrestview, {leftcol = leftcol})\r\n```\r\n\r\nwhich is much more similar to std functions like `pcall` etc.\r\n",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "Perhaps the names `winwrap` and `bufwrap` would be more suitable here? :eyes:",
            "created_at": "2022-10-15T12:11:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1279732810",
            "id": 1279732810,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MRyxK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279732810/reactions"
            },
            "updated_at": "2022-10-15T12:11:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279732810",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/76052559?v=4",
                "events_url": "https://api.github.com/users/vhyrro/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhyrro/followers",
                "following_url": "https://api.github.com/users/vhyrro/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhyrro/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhyrro",
                "id": 76052559,
                "login": "vhyrro",
                "node_id": "MDQ6VXNlcjc2MDUyNTU5",
                "organizations_url": "https://api.github.com/users/vhyrro/orgs",
                "received_events_url": "https://api.github.com/users/vhyrro/received_events",
                "repos_url": "https://api.github.com/users/vhyrro/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhyrro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhyrro/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhyrro"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't think so as \"wrap\" functions return other functions whereas these do not.",
            "created_at": "2022-10-15T12:23:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1279734827",
            "id": 1279734827,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MRzQr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279734827/reactions"
            },
            "updated_at": "2022-10-15T12:23:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279734827",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "Oh right, that's true. Just feels like using `call` for both versions of the functions can become a little confusing, since `vim.api.nvim_win_call` is actually calling a function whereas `wincall` is wrapping a function then calling it 🤔 ",
            "created_at": "2022-10-15T12:27:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1279735604",
            "id": 1279735604,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MRzc0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279735604/reactions"
            },
            "updated_at": "2022-10-15T12:28:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279735604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/76052559?v=4",
                "events_url": "https://api.github.com/users/vhyrro/events{/privacy}",
                "followers_url": "https://api.github.com/users/vhyrro/followers",
                "following_url": "https://api.github.com/users/vhyrro/following{/other_user}",
                "gists_url": "https://api.github.com/users/vhyrro/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vhyrro",
                "id": 76052559,
                "login": "vhyrro",
                "node_id": "MDQ6VXNlcjc2MDUyNTU5",
                "organizations_url": "https://api.github.com/users/vhyrro/orgs",
                "received_events_url": "https://api.github.com/users/vhyrro/received_events",
                "repos_url": "https://api.github.com/users/vhyrro/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vhyrro/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vhyrro/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vhyrro"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The fact it is wrapping and calling is an implementation detail and shouldn't influence the interface.\n\nIf we wanted we could implement this directly in C.",
            "created_at": "2022-10-15T12:29:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1279735822",
            "id": 1279735822,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MRzgO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279735822/reactions"
            },
            "updated_at": "2022-10-15T12:29:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279735822",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sugar like this can be very nice if it's pervasive and automatic (i.e. we get it \"for free\"), but I'm not in favor of lots of shallow wrappers around existing API shapes. And this is very shallow indeed, it's totally cosmetic and gains little. We need to avoid adding lots of tiny cosmetic improvements that add surface area and variations in code and aren't really adding a lot of value, which makes cognitive load higher for plugin authors.\r\n\r\nWe should instead think about higher-level interfaces and patterns. Is \"buf call\" and \"win call\" actually a great pattern? Would something more generic like \"context call\" work? Something like:\r\n\r\n```\r\nvim.with({buf=.., win=..., options={...}, function()\r\n  -- Function executes with the specified win/buf/options and then state is restored after.\r\nend)\r\n```\r\n\r\n> I don't think so as \"wrap\" functions return other functions whereas these do not.\r\n\r\n\"wrap\" is also not something we should perpetuate. The \"wrap\" functions were a compromise, not a guideline.\r\n\r\n",
            "created_at": "2022-10-16T00:56:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1279862492",
            "id": 1279862492,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MSSbc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 5,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 5,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279862492/reactions"
            },
            "updated_at": "2022-10-16T01:04:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1279862492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk: thanks for your thoughts on this, I appreciate them and mostly agree.\r\n\r\nI put this PR out without any context just to see what the opinions would be. However here's a more detailed rationale for this.\r\n\r\nThe main motivation for this is just to be able to pass in function arguments to `api.nvim_buf/win_call`, however we can't do that because:\r\n- API contract\r\n- API doesn't support varargs (though an array could be used).\r\n\r\nBut mainly, `nvim_buf/win_call` are Lua only, so it doesn't make sense to have them in the API. For more context this was discussed in #19164 and matrix, and the agreement was that Lua only stuff should be kept away from the API. This is what motivated #19239.\r\n\r\nFurthermore, here's full list of Lua only functions in the API:\r\n- `nvim_buf_call`\r\n- `nvim_win_call`\r\n- `nvim_set_decoration_provider`.\r\n\r\n### Proposal\r\n\r\n- deprecate `nvim_buf/win_call` (to be removed in 2.0)\r\n- add `vim.bufcall` `vim.wincall` to replace said deprecated functions\r\n- maybe consider some API-contract for Lua API (TBD when to be enforced).\r\n- at some point, re-implement `vim.bufcall` and `vim.wincall` directly in C (possibly using #19239).\r\n\r\n### Notes\r\n\r\n- I think the suggestion of `vim.with` is a good one, however I would predicate that on it being able to specify more than just `buf` and `win`. Since these functions are basically just `bufdo` and `windo`, It might make sense to use the mods used for ex commands: `silent`, `noautocmd`, `verbose`, `keep*`.\r\n  ```lua\r\n  vim.with({buf=2}, fn, arg1, arg2) -- Run fn for buffer 2\r\n  vim.with({buf=true}, fn, arg1, arg2) -- Run fn for all buffers\r\n  vim.with({win=1001, silent=true}, fn, arg1, arg2) -- Run fn for window 1001 and silence any output.\r\n  ```\r\n   This essentially fills the *gaps* with `nvim_cmd` listed here: https://github.com/neovim/neovim/issues/20541#issuecomment-1273377012\r\n- This overlaps with #20632, so we should think out a full design first.\r\n\r\n\r\n\r\n\r\n",
            "created_at": "2022-10-17T08:55:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1280514100",
            "id": 1280514100,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MUxg0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280514100/reactions"
            },
            "updated_at": "2022-10-17T08:59:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280514100",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related issue: #19832",
            "created_at": "2022-10-17T11:22:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1280704441",
            "id": 1280704441,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MVf-5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280704441/reactions"
            },
            "updated_at": "2022-10-17T11:22:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280704441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The main motivation for this is just to be able to pass in function arguments to `api.nvim_buf/win_call`, however we can't do that because:\r\n> \r\n> * API contract\r\n> * API doesn't support varargs (though an array could be used).\r\n> \r\n> But mainly, `nvim_buf/win_call` are Lua only, so it doesn't make sense to have them in the API.\r\n\r\nWe can relax the API contract (and document this) for Lua-only APIs. Mainly we care about not breaking RPC clients (and `libnvim` in the future).\r\n\r\n> Lua only stuff should be kept away from the API. \r\n\r\nIf they're marked `FUNC_API_LUA_ONLY` , is there any problem?\r\n\r\n> deprecate nvim_buf/win_call (to be removed in 2.0)\r\n> add vim.bufcall vim.wincall to replace said deprecated functions\r\n> maybe consider some API-contract for Lua API (TBD when to be enforced).\r\n\r\nI see `FUNC_API_LUA_ONLY` as giving us all the automation and formalism of the API subsystem, with a separate contract (TODO: `:help api-contract-lua`) + potential for graduating them to RPC or C (`libnvim`) later.\r\n\r\nBTW, would a \"thunk generator\" address the immediate need here?\r\n\r\n```\r\n-- Creates a thunk that applies the args `...` to `fn`.\r\nfunction vim.f(fn, ...)\r\n  return function()\r\n    return fn(...)\r\n  end\r\nend\r\n```\r\n",
            "created_at": "2022-10-18T11:48:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1282258720",
            "id": 1282258720,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5Mbbcg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282258720/reactions"
            },
            "updated_at": "2022-10-18T11:48:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282258720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> We can relax the API contract (and document this) for Lua-only APIs. Mainly we care about not breaking RPC clients (and libnvim in the future).\r\n\r\nI assume you mean to allow signatures of Lua-only API's to change, providing they are *reasonably* backwards compatible? e.g: adding new arguments, dropping arguments, making argument types polymorphic? If so then we probably need to re-consider #15302 since at the moment arguments checks are strict in the Lua-API.\r\n\r\n> If they're marked FUNC_API_LUA_ONLY , is there any problem?\r\n\r\nThe main problem, which is significant to me, is guidance on whether something should be added to `vim.*` or `vim.api.*`. In #19164 I argued that `vim.ui_attach` should be added to the API, but after discussion we agreed adding to `vim.*`, and the policy of adding Lua-only to `vim.*` makes the decision on where to add things much more clear cut.\r\n\r\n>  see FUNC_API_LUA_ONLY as giving us all the automation and formalism of the API subsystem, with a separate contract (TODO: :help api-contract-lua) + potential for graduating them to RPC or C (libnvim) later.\r\n\r\nUsually if something could be graduated to RPC, we can do it from the start. I'm not sure if there is any scope whatsoever to allow funcrefs in RPC as it is a fundamental limitation? The case is different for libnvim but that doesn't exist yet.\r\n\r\n> BTW, would a \"thunk generator\" address the immediate need here?\r\n\r\nYes it would actually!  It would also allow `vim.schedule` to be more ergonomic. Though I would still argue adding var-args to the end of `vim.schedule` would be worth doing.\r\n\r\nIt would make sense to put this in `F.lua` so we could have `vim.F.f` or `vim.F.wrap`.",
            "created_at": "2022-10-19T09:16:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1283689364",
            "id": 1283689364,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5Mg4uU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283689364/reactions"
            },
            "updated_at": "2022-10-19T09:16:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283689364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It would make sense to put this in `F.lua` so we could have `vim.F.f` or `vim.F.wrap`.\r\n\r\nDon't want vim.F to be a public interface (and we need to deprecate it, it doesn't meet naming conventions). Functional utils should live directly on `vim.*` (or maybe `vim.f.*` / `vim.fun.*`).\r\n\r\n> I assume you mean to allow signatures of Lua-only API's to change, providing they are _reasonably_ backwards compatible? e.g: adding new arguments, dropping arguments, making argument types polymorphic? If so then we probably need to re-consider #15302 since at the moment arguments checks are strict in the Lua-API.\r\n\r\nYeah we would need to relax the API checks for FUNC_API_LUA_ONLY. I can't find a \"guidance\" issue about when to choose `nvim/lua/` vs `FUNC_API_LUA_ONLY`. Question is, if `nvim_set_decoration_provider` / `nvim_buf_call` instead lived in `vim.*`, what would we gain/lose in terms of development cost? Do we actually need `FUNC_API_LUA_ONLY` or should we always add to `vim.*` directly? @bfredl \r\n\r\n",
            "created_at": "2022-10-19T11:43:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1283875045",
            "id": 1283875045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5MhmDl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283875045/reactions"
            },
            "updated_at": "2022-10-19T11:43:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283875045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk Some convenience in terms of development cost (converting params and return values, also, documentation Just Works), but we could of course disentangle the generator so it can be used outside of the `vim.api.*` namespace. I think lewis did a sketch in that direction a while ago :) https://github.com/neovim/neovim/pull/19239",
            "created_at": "2022-10-19T11:59:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1283897701",
            "id": 1283897701,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5Mhrll",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283897701/reactions"
            },
            "updated_at": "2022-10-19T11:59:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283897701",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sounds like #19239 is the path forward, then we can eliminate FUNC_API_LUA_ONLY.",
            "created_at": "2022-10-19T12:57:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/20669#issuecomment-1283974222",
            "id": 1283974222,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
            "node_id": "IC_kwDOAPphoM5Mh-RO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283974222/reactions"
            },
            "updated_at": "2022-10-19T12:57:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1283974222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20669/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20669/commits",
    "created_at": "2022-10-15T11:31:34Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20669.diff",
    "draft": true,
    "head": {
        "label": "lewis6991:feat/bufwincall",
        "ref": "feat/bufwincall",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2023-12-17T09:54:44Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 235511,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T18:36:52Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "cc873413d78ff9a75c5e85a2d9f701cc21d1e800",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20669",
    "id": 1088130106,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20669",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "For PRs that propose significant changes to some part of the architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "63f090875eb87665ee76e6fb88bfb1030fa97ab9",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5A24w6",
    "number": 20669,
    "patch_url": "https://github.com/neovim/neovim/pull/20669.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20669/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/cc873413d78ff9a75c5e85a2d9f701cc21d1e800",
    "title": "feat(lua): add `vim.bufcall` and `vim.wincall`",
    "updated_at": "2023-12-12T14:46:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20669",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}