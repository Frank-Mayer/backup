{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26516/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26516/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26516"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26516"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26516/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26516"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/4ea0473d31051fd52310766660fa47561770e03b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5077,
            "forks_count": 5077,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-26T01:26:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247838,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-26T01:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72074,
            "watchers_count": 72074,
            "web_commit_signoff_required": false
        },
        "sha": "529498685bbcd4783bc0e816d6247118c9ffb9a7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "related to #20784\r\n\r\nThis adds support for the workspace file operations: willRenameFiles, willCreateFiles, willDeleteFiles, didRenameFiles, didCreateFiles, and didDeleteFiles.\r\n\r\nThis will not change the default Neovim behavior at all. It is intended for file management plugins such as nvim-tree or oil.nvim to call these new methods when they perform file operations.\r\n\r\nSome of the notable design decisions:\r\n* The API is synchronous. From [the specification](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_willRenameFiles): \"Please note that clients might drop results if computing the edit took too long or if a server constantly fails on this request. This is done to keep renames fast and reliable.\" We can take this to mean that clients are expected to block the file operation until the request completes, so a sync method makes sense. If we want to make it async later, it can be done by adding an optional `callback` argument and an `async = true` field to the options table.\r\n* The `will*` methods return the list of workspace edits. This allows the caller to see what edits were performed as a result of the file operations. Combined with `apply_edits = false`, this allows the caller to do custom handling of the edits (potentially prompting the user for confirmation before applying). Note that because `vim.lsp.util.apply_workspace_edit` requires the offset encoding, we have to also return the offset encoding as well.\r\n* I had to add a new `vim.fs.path_contains` method to check when file paths are in a LSP workspace. Open to suggestions for different names, or if we don't want to commit to exposing that via the public API for now, I can make it a local function.\r\n* The methods were added to a new lua module `vim.lsp.workspace`. Other similar methods seem to live in `vim.lsp.buf`, but it really doesn't make sense for workspace methods to be under the `buf` namespace.\r\n* The logic for using vim.lpeg to create a match pattern from a glob is moved into `vim.lsp.util`. There are several places in the LSP spec that use globs, and it's very useful to have that as a generally-available utility.\r\n\r\nTODO:\r\n- [ ] Tests for path_contains\r\n- [ ] Regenerate documentation?\r\n- [ ] Tests for vim.lsp.util.glob_to_lpeg\r\n- [ ] Tests for vim.lsp.workspace.*",
    "closed_at": "2023-12-23T16:01:50Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26516#discussion_r1422151568"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26516"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422151568"
                }
            },
            "author_association": "MEMBER",
            "body": "can you start with this change as a separate PR?\r\n\r\ndoes it check ancestors or only the immediate parent?\r\n```suggestion\r\nfunction M.path_has(ancestor, path)\r\n```",
            "commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "created_at": "2023-12-11T09:17:29Z",
            "diff_hunk": "@@ -367,4 +367,33 @@ function M.normalize(path, opts)\n   return (path:gsub('(.)/$', '%1'))\n end\n \n+--- Check if a path is contained within another path.\n+---@param container string The path being checked to see if it is the parent\n+---@param path string The path being checked to see if it is contained within the parent\n+---@return boolean\n+function M.path_contains(container, path)",
            "html_url": "https://github.com/neovim/neovim/pull/26516#discussion_r1422151568",
            "id": 1422151568,
            "line": 374,
            "node_id": "PRRC_kwDOAPphoM5UxE-Q",
            "original_commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "original_line": 374,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 8,
            "pull_request_review_id": 1774640396,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422151568/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-11T09:17:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422151568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26516#discussion_r1422154034"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26516"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422154034"
                }
            },
            "author_association": "MEMBER",
            "body": "this change also would be helpful as a separate PR, then we can focus discussion for the workspace changes",
            "commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "created_at": "2023-12-11T09:18:52Z",
            "diff_hunk": "@@ -544,6 +545,74 @@ end\n -- function M.glob_to_regex(glob)\n -- end\n \n+--- Parses the raw glob into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n+--- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n+---\n+---@param pattern string The raw glob pattern\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+function M.glob_to_lpeg(pattern)",
            "html_url": "https://github.com/neovim/neovim/pull/26516#discussion_r1422154034",
            "id": 1422154034,
            "line": 553,
            "node_id": "PRRC_kwDOAPphoM5UxFky",
            "original_commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "original_line": 553,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 17,
            "pull_request_review_id": 1774643670,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422154034/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-11T09:18:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422154034",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26516#discussion_r1422465944"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26516"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422465944"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`libuv` has `fs_realpath`, it may be better to use libuv's functions instead of `vim.fn.*` to allow the method to be used in fast event context and leave the door open for users to use them in threads",
            "commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "created_at": "2023-12-11T13:26:48Z",
            "diff_hunk": "@@ -367,4 +367,33 @@ function M.normalize(path, opts)\n   return (path:gsub('(.)/$', '%1'))\n end\n \n+--- Check if a path is contained within another path.\n+---@param container string The path being checked to see if it is the parent\n+---@param path string The path being checked to see if it is contained within the parent\n+---@return boolean\n+function M.path_contains(container, path)\n+  -- Normalize both paths so we don't have to deal with different path separators\n+  container = M.normalize(vim.fn.fnamemodify(container, ':p'))\n+  path = M.normalize(vim.fn.fnamemodify(path, ':p'))",
            "html_url": "https://github.com/neovim/neovim/pull/26516#discussion_r1422465944",
            "id": 1422465944,
            "line": 377,
            "node_id": "PRRC_kwDOAPphoM5UyRuY",
            "original_commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "original_line": 377,
            "original_position": 11,
            "original_start_line": 376,
            "path": "runtime/lua/vim/fs.lua",
            "position": 11,
            "pull_request_review_id": 1775137572,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26516",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422465944/reactions"
            },
            "side": "RIGHT",
            "start_line": 376,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-11T13:26:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422465944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4576770?v=4",
                "events_url": "https://api.github.com/users/mike325/events{/privacy}",
                "followers_url": "https://api.github.com/users/mike325/followers",
                "following_url": "https://api.github.com/users/mike325/following{/other_user}",
                "gists_url": "https://api.github.com/users/mike325/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mike325",
                "id": 4576770,
                "login": "mike325",
                "node_id": "MDQ6VXNlcjQ1NzY3NzA=",
                "organizations_url": "https://api.github.com/users/mike325/orgs",
                "received_events_url": "https://api.github.com/users/mike325/received_events",
                "repos_url": "https://api.github.com/users/mike325/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mike325/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mike325/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mike325"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26516#discussion_r1422566029"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26516"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422566029"
                }
            },
            "author_association": "MEMBER",
            "body": "If we don't use libuv in a fairly recent API, there's usually a reason for it. Vim's function are (sadly, for libuv) more robust and platform-independent especially around edge cases.",
            "commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "created_at": "2023-12-11T14:45:01Z",
            "diff_hunk": "@@ -367,4 +367,33 @@ function M.normalize(path, opts)\n   return (path:gsub('(.)/$', '%1'))\n end\n \n+--- Check if a path is contained within another path.\n+---@param container string The path being checked to see if it is the parent\n+---@param path string The path being checked to see if it is contained within the parent\n+---@return boolean\n+function M.path_contains(container, path)\n+  -- Normalize both paths so we don't have to deal with different path separators\n+  container = M.normalize(vim.fn.fnamemodify(container, ':p'))\n+  path = M.normalize(vim.fn.fnamemodify(path, ':p'))",
            "html_url": "https://github.com/neovim/neovim/pull/26516#discussion_r1422566029",
            "id": 1422566029,
            "in_reply_to_id": 1422465944,
            "line": 377,
            "node_id": "PRRC_kwDOAPphoM5UyqKN",
            "original_commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "original_line": 377,
            "original_position": 11,
            "original_start_line": 376,
            "path": "runtime/lua/vim/fs.lua",
            "position": 11,
            "pull_request_review_id": 1775304082,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26516",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422566029/reactions"
            },
            "side": "RIGHT",
            "start_line": 376,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-11T14:45:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422566029",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26516#discussion_r1422756107"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26516"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422756107"
                }
            },
            "author_association": "MEMBER",
            "body": "+1\r\n\r\nAnd it probably shouldn't go into lsp.util, but another location. See https://github.com/neovim/neovim/issues/23291#issuecomment-1817873088 and https://github.com/neovim/neovim/issues/25272\r\n\r\nAnd it would be nice if we could also document the supported glob pattern.\r\n\r\n> Tests for vim.lsp.util.glob_to_lpeg\r\n\r\nThe `_watchfiles_spec` is currently mostly testing the pattern matching, we can move these too.",
            "commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "created_at": "2023-12-11T16:23:09Z",
            "diff_hunk": "@@ -544,6 +545,74 @@ end\n -- function M.glob_to_regex(glob)\n -- end\n \n+--- Parses the raw glob into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n+--- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n+---\n+---@param pattern string The raw glob pattern\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+function M.glob_to_lpeg(pattern)",
            "html_url": "https://github.com/neovim/neovim/pull/26516#discussion_r1422756107",
            "id": 1422756107,
            "in_reply_to_id": 1422154034,
            "line": 553,
            "node_id": "PRRC_kwDOAPphoM5UzYkL",
            "original_commit_id": "4ea0473d31051fd52310766660fa47561770e03b",
            "original_line": 553,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 17,
            "pull_request_review_id": 1775588352,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26516",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422756107/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-11T16:32:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422756107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> E.g. Something like `vim.fs.rename(old, new)` and `vim.fs.delete(path)`.\r\n> \r\n> These would either invoke the lsp actions directly (if we're okay coupling that), or we introduce new autocmd events like `FileRename` and `FileDelete` and LSP subscribes to them.\r\n\r\nIf we introduce fs events (`FileRename`, `FileDelete`) does that have too much overlap with a \"filewatcher\" interface (which is on the roadmap but not really designed yet)? I suppose the fs events themselves could be \"the filewatcher interface\" assuming that gives users enough control to tune things (debounce, directory recursion, etc).",
            "created_at": "2023-12-11T16:59:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1850486938",
            "id": 1850486938,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uTDCa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850486938/reactions"
            },
            "updated_at": "2023-12-11T16:59:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850486938",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Does this PR subsume #24975 ?",
            "created_at": "2023-12-11T17:47:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1850575818",
            "id": 1850575818,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uTYvK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850575818/reactions"
            },
            "updated_at": "2023-12-11T17:47:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850575818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I don't believe that applying workspace edits requires any interaction with `will*`/`did*`. Since the `will*` calls return a workspace edit, if we called it again when applying the workspace edit it would infinite loop.\r\n\r\nI personally feel like adding a higher-level API is jumping the gun. We _know_ that file plugin authors need this functionality, because it's been implemented several times over. But those plugins are already handling the filesystem operations themselves. It's not clear to me that there's need or demand for lua APIs that perform create/delete/rename operations (and it might cause more confusion, because there's already vimscript functions, libuv, and `os`). This is also something that could easily be added later, potentially once we better know the shape of the filewatcher interface.\r\n\r\nIf we _do_ think that this needs to be paired with some higher-level API or event interface, I think it's very important that it support _bulk_ operations. Every call to `willRenameFiles` is a RPC round trip, so we should only do that _once_ with all of the files that we plan to create/delete/rename.\r\n\r\n",
            "created_at": "2023-12-11T18:26:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1850639861",
            "id": 1850639861,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uToX1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850639861/reactions"
            },
            "updated_at": "2023-12-11T18:26:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850639861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It's not clear to me that there's need or demand for lua APIs that perform create/delete/rename operations (and it might cause more confusion\r\n\r\nI think https://github.com/tpope/vim-eunuch shows that there's some demand for functionality like delete and move without pulling in a full file manager. I have a `Del ` command definition myself, and would've a rename for the LSP integration if jdtls didn't provide another way to do that.\r\n\r\n\r\n> This is also something that could easily be added later, potentially once we better know the shape of the filewatcher interface.\r\n\r\nIf we add a high level API, then the API introduced here is probably no longer needed, no?\r\nHaving both seems too much to me. And if we have to choose between high level functions that users can use directly, or mid-level API that is only useful in combination with some other code I do have a pretty clear preference\r\n\r\n---\r\n\r\nTo clarify, this is not to say that I'm completely opposed to this, just that we should take a minute to think about this and have a look at the design space\r\n",
            "created_at": "2023-12-11T19:32:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1850750981",
            "id": 1850750981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uUDgF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850750981/reactions"
            },
            "updated_at": "2023-12-11T19:37:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850750981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think https://github.com/tpope/vim-eunuch shows that there's some demand for functionality like delete and move without pulling in a full file manager.\r\n\r\nThat's a good point! It might make sense to start pulling in some of those commands to core Neovim, and if that happens it would also make sense to wire those up to the LSP client. In this world we would still have this API present, it would just be private. While I don't need this personally, I'm not against it and I can see the value. \r\n\r\nMy question is: is there any reason we don't want to expose the low level of the API? We expose `vim.lsp.util.jump_to_location` and `vim.lsp.util.apply_workspace_edit` and many others that interact directly with raw LSP concepts, and that has been enormously helpful for personal configs and plugins alike. This seems conceptually similar.\r\n\r\nFor me personally, I don't want to use a higher level API for this. If I can just call the LSP methods directly that gives me complete control over when each step is performed (LSP willRename request, file operation, LSP didRename notification) and _how_ each step is performed. I can decide if I want to batch the LSP requests or not. I have full control over the individual file actions (sync vs async, the mode that files/directories are created with, maybe I want to create temp backup files if I'm renaming across devices, maybe I want renames to fail if the target already exists, etc). Maybe I want to confirm every individual workspace edit before applying them, or maybe I want to aggregate them all and confirm the total set, or maybe no confirmation is necessary. There's enough room here for people to want different things that I think that *hiding* the underlying API is going to be counterproductive.",
            "created_at": "2023-12-11T22:23:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1850987984",
            "id": 1850987984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uU9XQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850987984/reactions"
            },
            "updated_at": "2023-12-11T22:23:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850987984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My question is: is there any reason we don't want to expose the low level of the API? We expose vim.lsp.util.jump_to_location and vim.lsp.util.apply_workspace_edit and many others that interact directly with raw LSP concepts, and that has been enormously helpful for personal configs and plugins alike. This seems conceptually similar.\r\n\r\nThere is no general rule, but some of the factors:\r\n\r\n- How general and composable are the functions\r\n- How deep/shallow are they\r\n- Are they used for other built-in functionality\r\n\r\nWe also consider a few things that were added specifically to vim.lsp.util as a mistake and raised the bar a bit due to that. Some were just in the wrong location, but some functions had/have a problematic design. (See https://github.com/neovim/neovim/issues/25272)\r\n\r\nLow level API is in general okay, my reluctance here comes a bit from the facts that:\r\n\r\n- It's not really that low level, but somewhere in-between. Low level would be more general, but this targets one rather specific use-case.\r\n- It currently wouldn't be used by anything else in nvim. It would only be there for plugin authors\r\n- Related to ^, we enable new LSP capabilities without really having them built-in/used.\r\n\r\n\r\nThe suggestion/question to go with higher level APIs comes a bit from the fact that there's in general a bit of a push to keep the API surface small if possible.\r\nSo far I had the impression that the strategy is often to:\r\n\r\n- Expose (very) low level to let people go crazy, and enable new use cases (like the extmarks/virtual_text APIs)\r\n- Expose high level API/commands for end-users\r\n    - Add opts as far as reasonable for customization\r\n\r\nExposing more of the building blocks for the high level end-user functions, or building more convenience is usually done later, if the low-level API requires too much plumbing, and if extending the opts would be too unflexible.\r\n\r\n> I have full control over the individual file actions (sync vs async, the mode that files/directories are created with, maybe I want to create temp backup files if I'm renaming across devices, maybe I want renames to fail if the target already exists, etc). Maybe I want to confirm every individual workspace edit before applying them, or maybe I want to aggregate them all and confirm the total set, or maybe no confirmation is necessary\r\n\r\nFair points. With oil.nvim in mind, how do your concrete functions behave?\r\n\r\n---\r\n\r\n> If we introduce fs events (FileRename, FileDelete) does that have too much overlap with a \"filewatcher\" interface (which is on the roadmap but not really designed yet)? I suppose the fs events themselves could be \"the filewatcher interface\" assuming that gives users enough control to tune things (debounce, directory recursion, etc).\r\n\r\nThat's a good point. I haven't really thought about that, but yes, I think there would be overlap.\r\n\r\n---\r\n\r\nAlso tagging @MariaSolOs for some more opinions.\r\n",
            "created_at": "2023-12-13T16:45:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1854312115",
            "id": 1854312115,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uho6z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854312115/reactions"
            },
            "updated_at": "2023-12-13T16:46:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1854312115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> * It currently wouldn't be used by anything else in nvim. It would only be there for plugin authors\r\n> * Related to ^, we enable new LSP capabilities without really having them built-in/used.\r\n\r\nThese are both very fair. The initial reason for this PR was to expose the glob matching logic via a non-matching API, as that was the only piece that I really didn't want to copy/implement myself. From there, it seemed like there would be some value in putting the rest of the implementation into Neovim core so we don't have to keep re-inventing it. While the API still feels relatively low-level to me, the concern that there's no immediate use for it in core makes a lot of sense.\r\n\r\nMaybe the answer here is that this logic _could_ be useful, but it's not the right time for it. Maybe it would make more sense to wait until we add more file manipulation capabilities to core, and at that point it could be worth thinking about it again.\r\n\r\nIf #26519 or something like it gets merged, then that solves my immediate need.",
            "created_at": "2023-12-14T07:46:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/26516#issuecomment-1855339154",
            "id": 1855339154,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
            "node_id": "IC_kwDOAPphoM5uljqS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1855339154/reactions"
            },
            "updated_at": "2023-12-14T07:46:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1855339154",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26516/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26516/commits",
    "created_at": "2023-12-11T08:57:24Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26516.diff",
    "draft": true,
    "head": {
        "label": "stevearc:stevearc-will-rename-files",
        "ref": "stevearc-will-rename-files",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/stevearc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/stevearc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/stevearc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/stevearc/neovim/branches{/branch}",
            "clone_url": "https://github.com/stevearc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/stevearc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/stevearc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/stevearc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/stevearc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/stevearc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/stevearc/neovim/contributors",
            "created_at": "2022-09-01T22:04:11Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/stevearc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/stevearc/neovim/downloads",
            "events_url": "https://api.github.com/repos/stevearc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/stevearc/neovim/forks",
            "full_name": "stevearc/neovim",
            "git_commits_url": "https://api.github.com/repos/stevearc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/stevearc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/stevearc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/stevearc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/stevearc/neovim/hooks",
            "html_url": "https://github.com/stevearc/neovim",
            "id": 531699540,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/stevearc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/stevearc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/stevearc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/stevearc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/stevearc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/stevearc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/stevearc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/stevearc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOH7EXVA",
            "notifications_url": "https://api.github.com/repos/stevearc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/stevearc/neovim/pulls{/number}",
            "pushed_at": "2023-12-23T16:01:44Z",
            "releases_url": "https://api.github.com/repos/stevearc/neovim/releases{/id}",
            "size": 237864,
            "ssh_url": "git@github.com:stevearc/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/stevearc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/stevearc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/stevearc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/stevearc/neovim/subscription",
            "svn_url": "https://github.com/stevearc/neovim",
            "tags_url": "https://api.github.com/repos/stevearc/neovim/tags",
            "teams_url": "https://api.github.com/repos/stevearc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/stevearc/neovim/git/trees{/sha}",
            "updated_at": "2022-10-14T15:42:57Z",
            "url": "https://api.github.com/repos/stevearc/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "4ea0473d31051fd52310766660fa47561770e03b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
            "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
            "followers_url": "https://api.github.com/users/stevearc/followers",
            "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/stevearc",
            "id": 506791,
            "login": "stevearc",
            "node_id": "MDQ6VXNlcjUwNjc5MQ==",
            "organizations_url": "https://api.github.com/users/stevearc/orgs",
            "received_events_url": "https://api.github.com/users/stevearc/received_events",
            "repos_url": "https://api.github.com/users/stevearc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/stevearc"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26516",
    "id": 1638360331,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26516",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "1ab491b1ba024a31d9a412206f13d888b33c6136",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5hp2UL",
    "number": 26516,
    "patch_url": "https://github.com/neovim/neovim/pull/26516.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26516/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/4ea0473d31051fd52310766660fa47561770e03b",
    "title": "feat(lsp): add API for workspace file operations",
    "updated_at": "2023-12-23T16:01:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26516",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
        "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
        "followers_url": "https://api.github.com/users/stevearc/followers",
        "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
        "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/stevearc",
        "id": 506791,
        "login": "stevearc",
        "node_id": "MDQ6VXNlcjUwNjc5MQ==",
        "organizations_url": "https://api.github.com/users/stevearc/orgs",
        "received_events_url": "https://api.github.com/users/stevearc/received_events",
        "repos_url": "https://api.github.com/users/stevearc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/stevearc"
    }
}