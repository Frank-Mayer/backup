{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24564/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24564/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24564"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24564"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24564/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d70826bb875a35693427de40b0aba1b4650a4410"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5277,
            "forks_count": 5277,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1705,
            "open_issues_count": 1705,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-23T00:28:51Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 267079,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76421,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-23T01:19:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76421,
            "watchers_count": 76421,
            "web_commit_signoff_required": false
        },
        "sha": "c43c745a14dced87a23227d7be4f1c33d4455193",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "`vim.tbl_add_reverse_lookup` isn't type safe and is almost impossible for an LSP to analyze properly, since it is not a union type, and hence causes lots of diagnostics. It also just generally makes thing more confusing since it blurs both sides of the mapping.\r\n\r\nInstead add `vim.tbl_inv` to keep the lookup separate.",
    "closed_at": "2023-09-25T12:55:27Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24564#discussion_r1284528431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284528431"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd slap a vim.deprecate() on it",
            "commit_id": "d70826bb875a35693427de40b0aba1b4650a4410",
            "created_at": "2023-08-04T14:54:38Z",
            "diff_hunk": "@@ -425,6 +425,7 @@ function vim.deep_equal(a, b)\n   return false\n end\n \n+--- @deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/24564#discussion_r1284528431",
            "id": 1284528431,
            "line": 428,
            "node_id": "PRRC_kwDOAPphoM5MkFkv",
            "original_commit_id": "0d7b322ff0f9156067c5ae5518832fbb79f947ae",
            "original_line": 428,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 4,
            "pull_request_review_id": 1563049295,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284528431/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-04T14:54:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1284528431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24564#discussion_r1285020199"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285020199"
                }
            },
            "author_association": "MEMBER",
            "body": "What is table-specific about this? It could be streamed, so makes sense on `vim.iter`.\r\n",
            "commit_id": "d70826bb875a35693427de40b0aba1b4650a4410",
            "created_at": "2023-08-05T10:49:43Z",
            "diff_hunk": "@@ -450,6 +451,24 @@ function vim.tbl_add_reverse_lookup(o)\n   return o\n end\n \n+--- Return the inverse table with the keys and values swapped\n+--- Examples:\n+--- <pre>lua\n+---   vim.tbl_inv({ a = 1, b = 2, c = 3 })\n+---   -- == { [1] = 'a', [2] = 'b', [3] = 'c'}\n+--- </pre>\n+--- @param t table Table to invert\n+--- @return table # Inverted table\n+function vim.tbl_inv(t)\n+  local r = {}\n+  --- @diagnostic disable-next-line:no-unknown\n+  for k, v in pairs(t) do\n+    --- @diagnostic disable-next-line:no-unknown\n+    r[v] = k\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/24564#discussion_r1285020199",
            "id": 1285020199,
            "line": 468,
            "node_id": "PRRC_kwDOAPphoM5Ml9on",
            "original_commit_id": "132b60d1727ca97caa86ee55d36ebf5ba393601d",
            "original_line": 468,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 26,
            "pull_request_review_id": 1563855908,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285020199/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-05T10:49:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285020199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24564#discussion_r1285020448"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285020448"
                }
            },
            "author_association": "MEMBER",
            "body": "Could extend the existing tables instead of creating separate \"Inv\" variants. That's an ok pattern for fixed collections where we know the values won't have conflicts. I just don't think it needs to be baked into a `tbl_add_reverse_lookup` function.\r\n\r\nAnd each of the docstrings for these \"two-way\" dicts should mention this. That was the main confusion.",
            "commit_id": "d70826bb875a35693427de40b0aba1b4650a4410",
            "created_at": "2023-08-05T10:53:19Z",
            "diff_hunk": "@@ -312,11 +310,23 @@ local constants = {\n   },\n }\n \n-for k, v in pairs(constants) do\n-  local tbl = vim.deepcopy(v)\n-  vim.tbl_add_reverse_lookup(tbl)\n-  protocol[k] = tbl\n-end\n+local protocol = vim.deepcopy(constants)\n+\n+--- @nodoc\n+--- @type table<lsp.CompletionItemKind,string>\n+protocol.CompletionItemKindInv = vim.tbl_inv(protocol.CompletionItemKind)",
            "html_url": "https://github.com/neovim/neovim/pull/24564#discussion_r1285020448",
            "id": 1285020448,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ml9sg",
            "original_commit_id": "f707b1092c4964081927f532416714b5477afe91",
            "original_line": 317,
            "original_position": 75,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/protocol.lua",
            "position": null,
            "pull_request_review_id": 1563856297,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285020448/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-05T10:54:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285020448",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24564#discussion_r1285023558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285023558"
                }
            },
            "author_association": "MEMBER",
            "body": "What do you mean by table specific? This function will work with any table. I'm not sure how this would fit into `vim.iter`.",
            "commit_id": "d70826bb875a35693427de40b0aba1b4650a4410",
            "created_at": "2023-08-05T11:16:12Z",
            "diff_hunk": "@@ -450,6 +451,24 @@ function vim.tbl_add_reverse_lookup(o)\n   return o\n end\n \n+--- Return the inverse table with the keys and values swapped\n+--- Examples:\n+--- <pre>lua\n+---   vim.tbl_inv({ a = 1, b = 2, c = 3 })\n+---   -- == { [1] = 'a', [2] = 'b', [3] = 'c'}\n+--- </pre>\n+--- @param t table Table to invert\n+--- @return table # Inverted table\n+function vim.tbl_inv(t)\n+  local r = {}\n+  --- @diagnostic disable-next-line:no-unknown\n+  for k, v in pairs(t) do\n+    --- @diagnostic disable-next-line:no-unknown\n+    r[v] = k\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/24564#discussion_r1285023558",
            "id": 1285023558,
            "in_reply_to_id": 1285020199,
            "line": 468,
            "node_id": "PRRC_kwDOAPphoM5Ml-dG",
            "original_commit_id": "132b60d1727ca97caa86ee55d36ebf5ba393601d",
            "original_line": 468,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 26,
            "pull_request_review_id": 1563861440,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285023558/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-05T11:16:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285023558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24564#discussion_r1285023650"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285023650"
                }
            },
            "author_association": "MEMBER",
            "body": "If you prefer we can make this function private. It's just used in a few places in our codebase.",
            "commit_id": "d70826bb875a35693427de40b0aba1b4650a4410",
            "created_at": "2023-08-05T11:16:43Z",
            "diff_hunk": "@@ -450,6 +451,24 @@ function vim.tbl_add_reverse_lookup(o)\n   return o\n end\n \n+--- Return the inverse table with the keys and values swapped\n+--- Examples:\n+--- <pre>lua\n+---   vim.tbl_inv({ a = 1, b = 2, c = 3 })\n+---   -- == { [1] = 'a', [2] = 'b', [3] = 'c'}\n+--- </pre>\n+--- @param t table Table to invert\n+--- @return table # Inverted table\n+function vim.tbl_inv(t)\n+  local r = {}\n+  --- @diagnostic disable-next-line:no-unknown\n+  for k, v in pairs(t) do\n+    --- @diagnostic disable-next-line:no-unknown\n+    r[v] = k\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/24564#discussion_r1285023650",
            "id": 1285023650,
            "in_reply_to_id": 1285020199,
            "line": 468,
            "node_id": "PRRC_kwDOAPphoM5Ml-ei",
            "original_commit_id": "132b60d1727ca97caa86ee55d36ebf5ba393601d",
            "original_line": 468,
            "original_position": 26,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 26,
            "pull_request_review_id": 1563861743,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285023650/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-05T11:16:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1285023650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24564#discussion_r1288215663"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24564"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1288215663"
                }
            },
            "author_association": "MEMBER",
            "body": "We can add that once 0.10 is released 😉 :\r\n- 0.10: soft deprecation (docs only)\r\n- 0.11:  hard deprecation (warning)\r\n- 0.12: removed",
            "commit_id": "d70826bb875a35693427de40b0aba1b4650a4410",
            "created_at": "2023-08-09T09:32:39Z",
            "diff_hunk": "@@ -425,6 +425,7 @@ function vim.deep_equal(a, b)\n   return false\n end\n \n+--- @deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/24564#discussion_r1288215663",
            "id": 1288215663,
            "in_reply_to_id": 1284528431,
            "line": 428,
            "node_id": "PRRC_kwDOAPphoM5MyJxv",
            "original_commit_id": "0d7b322ff0f9156067c5ae5518832fbb79f947ae",
            "original_line": 428,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": 4,
            "pull_request_review_id": 1569142732,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1288215663/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-09T09:32:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1288215663",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "+100.\r\n\r\n> something like vim.tbl_reverse\r\n\r\nInstead of a new `vim.tbl_x` function let's see if whatever is needed makes sense in `vim.iter`, or `vim.func`, or `table` itself.\r\n\r\nI think `vim.iter():reverse()` makes sense because \"streaming\" a reversal makes sense. It's not specific to tables.",
            "created_at": "2023-08-04T14:55:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1665744776",
            "id": 1665744776,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jST-I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665744776/reactions"
            },
            "updated_at": "2023-08-04T16:10:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665744776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For list like tables reverse means something else though?",
            "created_at": "2023-08-04T16:11:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1665862464",
            "id": 1665862464,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jSwtA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665862464/reactions"
            },
            "updated_at": "2023-08-04T16:11:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665862464",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ":D I got tunnel vision when I saw `tbl_reverse`.\r\n\r\n`tbl_add_reverse_lookup` is a strange function, \r\n\r\n- it assumes that none of the values will conflict with the keys\r\n- a better name for the operation is \"swap\" not reverse...\r\n\r\nin python you can swap keys/values with zip():\r\n\r\n    dict(zip(my_dict.values(), my_dict.keys()))\r\n\r\nWe need `zip()` anyway (unless iter() has some synonym for it already?). I don't see why we need a function that crams \"both directions\" into the same table?",
            "created_at": "2023-08-04T16:21:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1665873837",
            "id": 1665873837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jSzet",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665873837/reactions"
            },
            "updated_at": "2023-08-04T16:21:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665873837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it assumes that none of the values will conflict with the keys\r\n\r\nIn its defence, it does error if there is a conflict.\r\n\r\nBut yeah, cramming this into the same table is just generally a bad idea.",
            "created_at": "2023-08-04T16:27:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1665884308",
            "id": 1665884308,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jS2CU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665884308/reactions"
            },
            "updated_at": "2023-08-04T16:27:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1665884308",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> in python you can swap keys/values with zip():\r\n> ```python\r\n> dict(zip(my_dict.values(), my_dict.keys()))\r\n> ```\r\n\r\nI don't think we can do this in Lua since `vim.tbl_keys` isn't guaranteed to be deterministic or have aligned indexes with `vim.tbl_values`.\r\n\r\nFor this reason I've added `vim.tbl_inv()` (invert a table) to replace `vim.tbl_add_reverse_lookup`. Once LuaLS properly implements generics this will be properly typed.",
            "created_at": "2023-08-05T10:41:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1666468208",
            "id": 1666468208,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jVElw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666468208/reactions"
            },
            "updated_at": "2023-08-05T10:41:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666468208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think we can do this in Lua since `vim.tbl_keys` isn't guaranteed to be deterministic or have aligned indexes with `vim.tbl_values`.\r\n\r\nWould sorting work?\r\n\r\n    vim.iter.zip(vim.iter.sort(iter:values()), vim.iter.sort(iter:keys()))\r\n\r\n",
            "created_at": "2023-08-05T10:46:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1666469270",
            "id": 1666469270,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jVE2W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666469270/reactions"
            },
            "updated_at": "2023-08-05T11:18:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666469270",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > I don't think we can do this in Lua since `vim.tbl_keys` isn't guaranteed to be deterministic or have aligned indexes with `vim.tbl_values`.\r\n> \r\n> Would sorting work?\r\n> \r\n> ```\r\n> vim.iter.zip(vim.iter.sort(iter:values()), vim.iter.sort(iter:keys()))\r\n> ```\r\n\r\nWouldn't that turn `{a='c', d = 'b'}` into `{b='a', c='d'}`?",
            "created_at": "2023-08-05T10:53:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1666470683",
            "id": 1666470683,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jVFMb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666470683/reactions"
            },
            "updated_at": "2023-08-05T11:19:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666470683",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Any collection-oriented function function should live in `vim.iter` unless it can't possibly make sense there (e.g. it only works on tables: \"table-specific\").\r\n\r\n> not sure how this would fit into `vim.iter`.\r\n\r\nIn a sense it's a map() variant. `Iter:inverse()` seems like it could work for any \"vector\", not just a key-value pair. \r\n\r\nThis produces a list of tuples:\r\n\r\n```lua\r\nlocal it = vim.iter({ a=1, b=2, c=3, d=4 }):map(function(k, v)\r\n return { v, k }\r\nend)\r\nvim.print(it:totable())\r\n```\r\n\r\nThe list of tuples needs to be converted back to a dict somehow, so that's not great. But generally we should find ways to make all these functional/iterable things compose well. Strongly want to avoid new `tbl_xx` functions.\r\n\r\nIf `Iter:inverse()` doesn't seem reasonable then how about adding a parameter to `totable()`:\r\n\r\n    function Iter.totable(self, inverse)\r\n",
            "created_at": "2023-08-05T11:28:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1666478607",
            "id": 1666478607,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jVHIP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666478607/reactions"
            },
            "updated_at": "2023-08-05T14:35:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666478607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "~~If `:totable()` accepted a function then it might solve all kinds of use-cases. \"Inverse\" would look like:~~\r\n\r\n```\r\nit:totable(function(new_table, k, v) new_table[v] = k end)\r\n```\r\n\r\n**Edit:** `totable(function)` is not needed, we have `iter:fold()` at home:\r\n\r\n```lua\r\nvim.print(vim.iter({ a='x1', b='x2', c='x3', d='x4' }):fold({}, function(t, k, v)\r\n  t[v] = k\r\n  return t\r\nend))\r\n```\r\n\r\n## Proposal\r\n\r\nBut `totable({inverse=true})` is worth supporting:\r\n\r\n```\r\nit:totable({inverse=true})\r\n```",
            "created_at": "2023-08-05T11:42:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1666481111",
            "id": 1666481111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jVHvX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666481111/reactions"
            },
            "updated_at": "2023-08-05T14:38:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1666481111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> But totable({inverse=true}) is worth supporting:\r\n> ```lua\r\n> it:totable({inverse=true})\r\n> ```\r\n\r\nFrom what I can tell `vim.iter` is mostly only useful for function iterators and list-like tables:\r\n\r\n```lua\r\nvim.iter({a=1,b=2,c=3}):totable()\r\n--- { { \"a\", 1, <metatable> = <1>{} }, { \"c\", 3, <metatable> = <table 1> }, { \"b\", 2, <metatable> = <table 1> } }\r\n```\r\n\r\nSo to get the original table back from any non-list table you need to do:\r\n\r\n```lua\r\nvim.iter(mytable):fold({}, function(t, k, v)\r\n   t[v] = k \r\n   return t\r\nend)\r\n```\r\n\r\nSo it doesn't seem like `vim.iter` can (or should) be used as the one-stop shop for all things table. Obviously the `fold()` route is just a more convoluted way of inverting the table manually.",
            "created_at": "2023-08-09T08:51:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1670929553",
            "id": 1670929553,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jmFyR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1670929553/reactions"
            },
            "updated_at": "2023-08-09T08:51:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1670929553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> From what I can tell `vim.iter` is mostly only useful for function iterators and list-like tables:\r\n\r\n?????? Let's fix that then. Tables are iterables. Having a separate concept for dict-like tables defeats a large part of the purpose of an \"iterable\" interface.\r\n\r\n> ```\r\n> vim.iter({a=1,b=2,c=3}):totable()\r\n> --- { { \"a\", 1, <metatable> = <1>{} }, { \"c\", 3, <metatable> = <table 1> }, { \"b\", 2, <metatable> = <table 1> } }\r\n>  ```\r\n\r\nShouldn't `totable()` ~~return~~ remove any metamethods that vim.iter added? @gpanders ",
            "created_at": "2023-08-09T12:03:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1671198733",
            "id": 1671198733,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jnHgN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671198733/reactions"
            },
            "updated_at": "2023-08-09T14:04:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671198733",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ?????? Let's fix that then. Tables are iterables. Having a separate concept for dict-like tables defeats a large part of the purpose of an \"iterable\" interface.\r\n\r\nI've looked at `iter.lua` somewhat, and it's not clear to me how we can improve it like this, or if it even makes sense/possible with the current design. 🤷 \r\n\r\n",
            "created_at": "2023-08-09T13:17:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1671310952",
            "id": 1671310952,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jni5o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671310952/reactions"
            },
            "updated_at": "2023-08-09T13:17:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671310952",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "We did at one point have another \"subclass\" of Iter for dictionaries (we currently have `Iter` and `ListIter`, at one point during the initial implementation there was `DictIter` or something like that). But I took it out because it wasn't \"special\" enough to warrant its own implementation.\r\n\r\n`vim.iter` works with dictionary style tables just fine. The `:totable()` function returns an array-like table. At one point we considered making the return type depend on the \"shape\" of the iterator; for example, if the iterator returned two values then `:totable()` would return a dictionary where the first value represented the key and the second value the value. However, this is not generalizable: there are plenty of regular function iterators that return two values that are not dictionaries. This also means that `:totable()`'s return type varies based on the underlying iterator data, which feels a little magical?\r\n\r\nI didn't (and still don't) think it was a big deal to use `:fold()` to create a dictionary like table, but if others feel differently we can re-introduce the `DictIter` subclass and specialize the `:totable()` implementation to return a dictionary.\r\n\r\n>Shouldn't totable() return any metamethods that vim.iter added? @gpanders\r\n\r\nWe don't add any metamethods to the returned table. The only metamethods in use on `vim.iter` are on the `Iter` class, which is distinct from the table that is returned from `:totable()`. Maybe I'm misunderstanding the question though.\r\n\r\n>So it doesn't seem like vim.iter can (or should) be used as the one-stop shop for all things table. Obviously the fold() route is just a more convoluted way of inverting the table manually.\r\n\r\nFWIW I agree with this, \"native\" Lua is already very good at many table operations, and for something like \"inverting the keys and values of a table\", I don't think `vim.iter` really provides any value over\r\n\r\n```lua\r\nlocal inv = {}\r\nfor k, v in pairs(t) do\r\n  inv[v] = k\r\nend\r\n```\r\n\r\nunless you _really_ want it all to happen on a single line. `vim.iter` is most useful for chaining multiple operations, or if you already have some function predicate that you want to apply to a table.",
            "created_at": "2023-08-09T13:22:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-1671319088",
            "id": 1671319088,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM5jnk4w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671319088/reactions"
            },
            "updated_at": "2023-08-09T13:25:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1671319088",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The `:totable()` function returns an array-like table. At one point we considered making the return type depend on the \"shape\" of the iterator; for example, if the iterator returned two values then `:totable()` would return a dictionary where the first value represented the key and the second value the value.\r\n\r\n@gpanders should we rename `:totable` to `:toarray` then? \r\n\r\n> > Shouldn't totable() return any metamethods that vim.iter added? @gpanders\r\n> \r\n> We don't add any metamethods to the returned table.\r\n\r\nMy question is about the `<metatable>` in the `:totable()` result, do we need to include that in the result?:\r\n\r\n```\r\nvim.iter({a=1,b=2,c=3}):totable()\r\n--- { { \"a\", 1, <metatable> = <1>{} }, { \"c\", 3, <metatable> = <table 1> }, { \"b\", 2, <metatable> = <table 1> } }\r\n```",
            "created_at": "2024-04-21T15:15:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/24564#issuecomment-2068080323",
            "id": 2068080323,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
            "node_id": "IC_kwDOAPphoM57RGbD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2068080323/reactions"
            },
            "updated_at": "2024-04-21T15:15:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2068080323",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24564/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24564/commits",
    "created_at": "2023-08-04T14:21:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24564.diff",
    "draft": true,
    "head": {
        "label": "lewis6991:fix/depre_rev_lookup",
        "ref": "fix/depre_rev_lookup",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-04-22T08:51:58Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 261339,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d70826bb875a35693427de40b0aba1b4650a4410",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24564",
    "id": 1463019291,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24564",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "",
            "id": 3968935075,
            "name": "breaking-change",
            "node_id": "LA_kwDOAPphoM7skSSj",
            "url": "https://api.github.com/repos/neovim/neovim/labels/breaking-change"
        }
    ],
    "locked": false,
    "merge_commit_sha": "bc87a32750a899355241cc73cebe52e7b729655f",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5XM-cb",
    "number": 24564,
    "patch_url": "https://github.com/neovim/neovim/pull/24564.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24564/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d70826bb875a35693427de40b0aba1b4650a4410",
    "title": "feat(lua)!: add vim.tbl_inv and deprecate vim.tbl_add_reverse_lookup",
    "updated_at": "2024-04-21T15:15:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24564",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}