{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24738/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24738/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24738"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24738"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24738/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24738"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7a3c2fb24f2d7315ef55696daa2c4a0b72efd9e1"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4962,
            "forks_count": 4962,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1681,
            "open_issues_count": 1681,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-06T01:31:09Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 237090,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70644,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-06T01:53:30Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70644,
            "watchers_count": 70644,
            "web_commit_signoff_required": false
        },
        "sha": "200dafb8a5839826bc157bdc9153f1171ce639e1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Take over #17099 with a rebased version.\r\n\r\nSome things that need fixing / design:\r\n- Predicates may now operate on a list of nodes, how should they behave (e.g. `#contains?`)\r\n- Others things probably\r\n",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Regarding the predicates problem, something we can do is make that configurable as part of the predicate name:\r\n- Add a prefix (expected _before_ the `not`) that can be either `all`, `any`, or empty\r\n- Dependending on the prefix:\r\n  - Empty: expect a single node, execute the predicate on this node\r\n  - `any`: matches if any of the captured nodes matches the predicate\r\n  - `all`: left as an exercise to the reader\r\n\r\nThe implementation is fairly straightforward: each predicate handler is wrapped in something that handles the \"iteration\" part of the matching.\r\n\r\nThat would not require changing much on the user side: quantifiers are not supported yet, and all the predicates would thus behave as before. It could thus soften the breaking change associated with this PR.",
            "created_at": "2023-08-16T12:51:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680547006",
            "id": 1680547006,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kKxy-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680547006/reactions"
            },
            "updated_at": "2023-08-16T12:51:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680547006",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What does upstream do? I worry a bit about adding (more) custom predicates that are incompatible...",
            "created_at": "2023-08-16T13:09:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680576759",
            "id": 1680576759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kK5D3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680576759/reactions"
            },
            "updated_at": "2023-08-16T13:09:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680576759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For now, would it make sense to just apply predicates to all? 99% of the time there is only a single node for a capture.",
            "created_at": "2023-08-16T13:11:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680579767",
            "id": 1680579767,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kK5y3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680579767/reactions"
            },
            "updated_at": "2023-08-16T13:12:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680579767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> What does upstream do? I worry a bit about adding (more) custom predicates that are incompatible...\r\n\r\n~I just tested in the [online playground](https://tree-sitter.github.io/tree-sitter/playground) and it seems to just not match at all.~\r\n\r\n~Maybe _not matching_ when the captures are quantified is better ? We can maybe add new predicates that combine the other predicates in the future (by building a \"fake\" match or something ?).~\r\n\r\nEDIT: I was wrong.",
            "created_at": "2023-08-16T13:29:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680610129",
            "id": 1680610129,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLBNR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680610129/reactions"
            },
            "updated_at": "2023-08-16T13:50:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680610129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Maybe not matching when the captures are quantified is better ? We can maybe add new predicates that combine the other predicates in the future (by building a \"fake\" match or something ?).\r\n\r\nELI5? You mean not matching any predicated queries like: `(preproc_def)+ @test`? Wouldn't that be less elegant to implement than 'all'?",
            "created_at": "2023-08-16T13:39:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680628068",
            "id": 1680628068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLFlk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680628068/reactions"
            },
            "updated_at": "2023-08-16T13:40:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680628068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think the most expected behavior is if the predicate is applied to all matching captures independently (as if they were independent queries).\r\n\r\n",
            "created_at": "2023-08-16T13:41:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680631107",
            "id": 1680631107,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLGVD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680631107/reactions"
            },
            "updated_at": "2023-08-16T13:41:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680631107",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Correction: the behavior of the predicate matching is to try to apply it on all captured nodes (see [here](https://github.com/tree-sitter/tree-sitter/blob/28b831456e2c3c1cc94d39caaee4c49533721ca9/lib/binding_web/binding.js#L833C12-L833C12))\r\n\r\nMaybe we should do the same for consistency then.",
            "created_at": "2023-08-16T13:48:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680645506",
            "id": 1680645506,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLJ2C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680645506/reactions"
            },
            "updated_at": "2023-08-16T13:49:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680645506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes (as long as they are broadly reasonable), and document it.\r\n\r\n(We could also raise this question upstream; maybe Max has changed his mind on that since then? @amaanq )",
            "created_at": "2023-08-16T14:14:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680699742",
            "id": 1680699742,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLXFe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680699742/reactions"
            },
            "updated_at": "2023-08-16T14:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680699742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The query in nvim-treesitter/nvim-treesitter#5127 that I'm trying to match seems to be fixed with this PR\r\n```scheme\r\n; queries for golang\r\n(\r\n  (comment)+ @injection.content \r\n  .\r\n  (import_declaration\r\n    (import_spec path: (interpreted_string_literal) @_import_c))\r\n  (#eq? @_import_c \"\\\"C\\\"\")\r\n  (#lua-match? @injection.content \"^//\")\r\n  (#set! injection.language \"c\")\r\n  (#offset! @injection.content 0 2 0 0)\r\n  (#set! injection.combined))\r\n```\r\n\r\nAlso related: tree-sitter/tree-sitter#2468, it's suggested that the problem might come from downstream, as treesitter still captures all of the nodes, but right now, only the last node of the comment chain is highlighted properly",
            "created_at": "2023-08-16T14:16:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680703891",
            "id": 1680703891,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLYGT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680703891/reactions"
            },
            "updated_at": "2023-08-16T14:16:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680703891",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ahh, finally a genuine use for `injection.combined`.\r\n\r\nIt seems like this would also supersede https://github.com/neovim/neovim/pull/21310 (though I don't fully understand the problem that PR is trying to solve).",
            "created_at": "2023-08-16T14:19:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1680708843",
            "id": 1680708843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kLZTr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680708843/reactions"
            },
            "updated_at": "2023-08-16T14:25:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1680708843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Yes (as long as they are broadly reasonable), and document it.\r\n> \r\n> (We could also raise this question upstream; maybe Max has changed his mind on that since then? @amaanq )\r\n\r\nI can ask him, but yeah currently predicates are meant to apply to every capture\r\n\r\n\r\n> What does upstream do? I worry a bit about adding (more) custom predicates that are incompatible...\r\n\r\nIf they make sense and are useful upstream could also adopt it",
            "created_at": "2023-08-16T17:37:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1681022421",
            "id": 1681022421,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kMl3V",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681022421/reactions"
            },
            "updated_at": "2023-08-16T17:37:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681022421",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'll change all the predicates to apply to every captures then. Though I think we can be clear about the fact that matches that are predicated _and_ quantified are unstable for now.\r\n\r\nFurthermore, I can't remember if nvim-treesitter still provides predicates, but they'll have to be updated to this new interface.",
            "created_at": "2023-08-17T07:37:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1681788993",
            "id": 1681788993,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kPhBB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681788993/reactions"
            },
            "updated_at": "2023-08-17T07:37:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681788993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Triple checking the actual implementation of the predicated quantified matches, the predicate returns `true` whenever any of the captured nodes satisfy the predicate:\r\nhttps://github.com/tree-sitter/tree-sitter/blob/eb3c2b378a509933c4b712aceac8c9c4ae28ca1a/lib/binding_web/binding.js#L861",
            "created_at": "2023-08-17T07:39:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1681792824",
            "id": 1681792824,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kPh84",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681792824/reactions"
            },
            "updated_at": "2023-08-17T07:39:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681792824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'll change all the predicates to apply to every captures then. Though I think we can be clear about the fact that matches that are predicated _and_ quantified are unstable for now.\r\n> \r\n> Furthermore, I can't remember if nvim-treesitter still provides predicates, but they'll have to be updated to this new interface.\r\n\r\nThey do, although I've been trying to get rid of them. We could upstream `#has-type?`, which is the last genuine one (used in some indents).\r\n\r\nIf the change is breaking (which is OK), could you edit the PR description to show what the new format needs to be?",
            "created_at": "2023-08-17T07:42:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1681797665",
            "id": 1681797665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5kPjIh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681797665/reactions"
            },
            "updated_at": "2023-08-17T07:46:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1681797665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "just for book keeping: supersedes #19563 #17099 #13343",
            "created_at": "2023-08-29T08:12:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1696974850",
            "id": 1696974850,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5lJcgC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1696974850/reactions"
            },
            "updated_at": "2023-08-29T08:12:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1696974850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@vigoux https://github.com/tree-sitter/tree-sitter/pull/2532 is merged, if you can follow how upstream has it done that'd be great",
            "created_at": "2023-09-01T04:23:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1702135917",
            "id": 1702135917,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5ldIht",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702135917/reactions"
            },
            "updated_at": "2023-09-01T04:23:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702135917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can you summarize here how upstream behaves? It wasn't fully clear to me from the docs (as evidenced by my comment).",
            "created_at": "2023-09-01T07:17:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1702285383",
            "id": 1702285383,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5ldtBH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702285383/reactions"
            },
            "updated_at": "2023-09-01T07:17:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702285383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Yeah I tacked on a footer that was a tl;dr about it but I'll explain more here:\r\n\r\nAll is default, for any-of, match, and eq (and we can/should extend that to other captures Neovim uses)\r\n\r\nThe any- prefix is used for match and eq, (doesn't make sense for any-of imo, I can't really see a use case for it)\r\n\r\nThe predicate api itself was unchanged (yes, there was flip-flopping about if eq? should allow multiple args but that never happened)\r\n\r\n",
            "created_at": "2023-09-01T10:44:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1702549658",
            "id": 1702549658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5letia",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702549658/reactions"
            },
            "updated_at": "2023-09-01T10:44:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702549658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29718261?v=4",
                "events_url": "https://api.github.com/users/amaanq/events{/privacy}",
                "followers_url": "https://api.github.com/users/amaanq/followers",
                "following_url": "https://api.github.com/users/amaanq/following{/other_user}",
                "gists_url": "https://api.github.com/users/amaanq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/amaanq",
                "id": 29718261,
                "login": "amaanq",
                "node_id": "MDQ6VXNlcjI5NzE4MjYx",
                "organizations_url": "https://api.github.com/users/amaanq/orgs",
                "received_events_url": "https://api.github.com/users/amaanq/received_events",
                "repos_url": "https://api.github.com/users/amaanq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/amaanq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/amaanq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/amaanq"
            }
        },
        {
            "author_association": "NONE",
            "body": "I'm trying to write a query for markdown which should capture multiple paragraphs, and combine them into single injection region:\r\n```\r\n(section\r\n  (\r\n    ((paragraph) @s (#match? @s \"^:::bib\"))\r\n    .\r\n    (paragraph)*\r\n    .\r\n    ((paragraph) @e (#match? @e \":::$\"))\r\n  ) @injection.content\r\n\r\n  (#set! injection.language \"bibtex\")\r\n  (#set! injection.include-children)\r\n  (#set! injection.combined)\r\n)\r\n```\r\nSo far every way I tried to do this only captures one of the paragraphs (usually the first one matched). Would this be possible after merging this PR?",
            "created_at": "2023-11-05T09:18:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/24738#issuecomment-1793681864",
            "id": 1793681864,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
            "node_id": "IC_kwDOAPphoM5q6WnI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1793681864/reactions"
            },
            "updated_at": "2023-11-05T09:18:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1793681864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/18511281?v=4",
                "events_url": "https://api.github.com/users/kamoshi/events{/privacy}",
                "followers_url": "https://api.github.com/users/kamoshi/followers",
                "following_url": "https://api.github.com/users/kamoshi/following{/other_user}",
                "gists_url": "https://api.github.com/users/kamoshi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kamoshi",
                "id": 18511281,
                "login": "kamoshi",
                "node_id": "MDQ6VXNlcjE4NTExMjgx",
                "organizations_url": "https://api.github.com/users/kamoshi/orgs",
                "received_events_url": "https://api.github.com/users/kamoshi/received_events",
                "repos_url": "https://api.github.com/users/kamoshi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kamoshi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kamoshi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kamoshi"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24738/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24738/commits",
    "created_at": "2023-08-16T12:39:14Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24738.diff",
    "draft": false,
    "head": {
        "label": "vigoux:fix/query-quantifiers",
        "ref": "fix/query-quantifiers",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/vigoux/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/vigoux/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/vigoux/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/vigoux/neovim/branches{/branch}",
            "clone_url": "https://github.com/vigoux/neovim.git",
            "collaborators_url": "https://api.github.com/repos/vigoux/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/vigoux/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/vigoux/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/vigoux/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/vigoux/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/vigoux/neovim/contributors",
            "created_at": "2020-04-14T17:09:25Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/vigoux/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/vigoux/neovim/downloads",
            "events_url": "https://api.github.com/repos/vigoux/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/vigoux/neovim/forks",
            "full_name": "vigoux/neovim",
            "git_commits_url": "https://api.github.com/repos/vigoux/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/vigoux/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/vigoux/neovim/git/tags{/sha}",
            "git_url": "git://github.com/vigoux/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/vigoux/neovim/hooks",
            "html_url": "https://github.com/vigoux/neovim",
            "id": 255673198,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/vigoux/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/vigoux/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/vigoux/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/vigoux/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/vigoux/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/vigoux/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/vigoux/neovim/merges",
            "milestones_url": "https://api.github.com/repos/vigoux/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyNTU2NzMxOTg=",
            "notifications_url": "https://api.github.com/repos/vigoux/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
                "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
                "followers_url": "https://api.github.com/users/vigoux/followers",
                "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
                "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/vigoux",
                "id": 39092278,
                "login": "vigoux",
                "node_id": "MDQ6VXNlcjM5MDkyMjc4",
                "organizations_url": "https://api.github.com/users/vigoux/orgs",
                "received_events_url": "https://api.github.com/users/vigoux/received_events",
                "repos_url": "https://api.github.com/users/vigoux/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/vigoux"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/vigoux/neovim/pulls{/number}",
            "pushed_at": "2023-08-17T09:14:41Z",
            "releases_url": "https://api.github.com/repos/vigoux/neovim/releases{/id}",
            "size": 246293,
            "ssh_url": "git@github.com:vigoux/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/vigoux/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/vigoux/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/vigoux/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/vigoux/neovim/subscription",
            "svn_url": "https://github.com/vigoux/neovim",
            "tags_url": "https://api.github.com/repos/vigoux/neovim/tags",
            "teams_url": "https://api.github.com/repos/vigoux/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/vigoux/neovim/git/trees{/sha}",
            "updated_at": "2020-05-15T10:06:46Z",
            "url": "https://api.github.com/repos/vigoux/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7a3c2fb24f2d7315ef55696daa2c4a0b72efd9e1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
            "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
            "followers_url": "https://api.github.com/users/vigoux/followers",
            "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
            "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/vigoux",
            "id": 39092278,
            "login": "vigoux",
            "node_id": "MDQ6VXNlcjM5MDkyMjc4",
            "organizations_url": "https://api.github.com/users/vigoux/orgs",
            "received_events_url": "https://api.github.com/users/vigoux/received_events",
            "repos_url": "https://api.github.com/users/vigoux/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/vigoux"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24738",
    "id": 1477406405,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24738",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0165fd1f48fb17361d2291bd58073f60e5e80535",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 179,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 129,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-11-03T22:58:25Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5YD27F",
    "number": 24738,
    "patch_url": "https://github.com/neovim/neovim/pull/24738.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24738/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7a3c2fb24f2d7315ef55696daa2c4a0b72efd9e1",
    "title": "fix(treesitter): proper handling of query quantifiers",
    "updated_at": "2023-11-05T09:18:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24738",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/39092278?v=4",
        "events_url": "https://api.github.com/users/vigoux/events{/privacy}",
        "followers_url": "https://api.github.com/users/vigoux/followers",
        "following_url": "https://api.github.com/users/vigoux/following{/other_user}",
        "gists_url": "https://api.github.com/users/vigoux/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/vigoux",
        "id": 39092278,
        "login": "vigoux",
        "node_id": "MDQ6VXNlcjM5MDkyMjc4",
        "organizations_url": "https://api.github.com/users/vigoux/orgs",
        "received_events_url": "https://api.github.com/users/vigoux/received_events",
        "repos_url": "https://api.github.com/users/vigoux/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/vigoux/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vigoux/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/vigoux"
    }
}