{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26132/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26132/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26132"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26132"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26132/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5021,
            "forks_count": 5021,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1692,
            "open_issues_count": 1692,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-28T00:15:26Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 236645,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71282,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-28T01:47:09Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71282,
            "watchers_count": 71282,
            "web_commit_signoff_required": false
        },
        "sha": "53cc835b51546f9ff68facebab2e0c6e97585e5b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "`vim.wait()` cannot be called in a fast callback since the main loop cannot be run in that context as it is not reentrant\r\n\r\n\r\nFixes #26122\r\n",
    "closed_at": "2023-11-27T09:09:21Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1400738391"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400738391"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// If `multiqueue` has events then process them and return.\r\n/// Otherwise `loop` is non-NULL, run it once and process its fast events.\r\n```",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-21T15:04:03Z",
            "diff_hunk": "@@ -87,6 +87,29 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If`multiqueue` has events then process them and return.\n+/// Otherwise `loop` is non-NULL, run it once and process it's fast events.",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1400738391",
            "id": 1400738391,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TfZJX",
            "original_commit_id": "ccd314faf6c67eb8c6695cf22d25a0fc52321ed0",
            "original_line": 91,
            "original_position": 5,
            "original_start_line": 90,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1742247332,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400738391/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-11-21T15:04:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400738391",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1400740843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400740843"
                }
            },
            "author_association": "MEMBER",
            "body": "`#` is enough to disambiguate\r\n```suggestion\r\n    it('should not run the main loop in fast callbacks #26122', function()\r\n```",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-21T15:05:52Z",
            "diff_hunk": "@@ -2769,6 +2769,19 @@ describe('lua stdlib', function()\n         eq({'notification', 'wait', {-2}}, next_msg(500))\n       end)\n     end)\n+\n+    it('should not run the main loop in fast callbacks (#26122)', function()",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1400740843",
            "id": 1400740843,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TfZvr",
            "original_commit_id": "ccd314faf6c67eb8c6695cf22d25a0fc52321ed0",
            "original_line": 2773,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 1742252501,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400740843/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-21T15:05:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400740843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1400742693"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400742693"
                }
            },
            "author_association": "MEMBER",
            "body": "This makes sense to me and is the general direction I hope we can drive towards. Ideally scripts shouldn't have to check `vim.in_fast_event()` or explicitly schedule() things.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-21T15:07:15Z",
            "diff_hunk": "@@ -469,7 +469,10 @@ static int nlua_wait(lua_State *lstate)\n   // Flush screen updates before blocking.\n   ui_flush();\n \n-  LOOP_PROCESS_EVENTS_UNTIL(&main_loop,\n+  // Never run the main loop when we are in a fast callback.\n+  Loop *loop = in_fast_callback ? NULL : &main_loop;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1400742693",
            "id": 1400742693,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TfaMl",
            "original_commit_id": "ccd314faf6c67eb8c6695cf22d25a0fc52321ed0",
            "original_line": 473,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 1742257275,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400742693/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-21T15:07:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400742693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1400782273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400782273"
                }
            },
            "author_association": "MEMBER",
            "body": "In general I think they still have to, it's just that `vim.wait()` was initially designed to be callable in fast callbacks, however there existed a path which caused it to run the main loop and crash.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-21T15:32:48Z",
            "diff_hunk": "@@ -469,7 +469,10 @@ static int nlua_wait(lua_State *lstate)\n   // Flush screen updates before blocking.\n   ui_flush();\n \n-  LOOP_PROCESS_EVENTS_UNTIL(&main_loop,\n+  // Never run the main loop when we are in a fast callback.\n+  Loop *loop = in_fast_callback ? NULL : &main_loop;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1400782273",
            "id": 1400782273,
            "in_reply_to_id": 1400742693,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tfj3B",
            "original_commit_id": "ccd314faf6c67eb8c6695cf22d25a0fc52321ed0",
            "original_line": 473,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 1742323959,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400782273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-21T15:32:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400782273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1400814760"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400814760"
                }
            },
            "author_association": "MEMBER",
            "body": "> In general I think they still have to,\r\n\r\nyes, out of scope for this PR, but still something we can aspire to.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-21T15:55:10Z",
            "diff_hunk": "@@ -469,7 +469,10 @@ static int nlua_wait(lua_State *lstate)\n   // Flush screen updates before blocking.\n   ui_flush();\n \n-  LOOP_PROCESS_EVENTS_UNTIL(&main_loop,\n+  // Never run the main loop when we are in a fast callback.\n+  Loop *loop = in_fast_callback ? NULL : &main_loop;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1400814760",
            "id": 1400814760,
            "in_reply_to_id": 1400742693,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tfryo",
            "original_commit_id": "ccd314faf6c67eb8c6695cf22d25a0fc52321ed0",
            "original_line": 473,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 1742374052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400814760/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-21T15:55:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1400814760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1401494848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401494848"
                }
            },
            "author_association": "MEMBER",
            "body": "This means `vim.wait()` doesn't wait at all in a fast context, which may be confusing.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T04:37:31Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1401494848",
            "id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TiR1A",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1743554448,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401494848/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T04:37:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401494848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1401883607"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401883607"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, doesn't the doc for the `fast_only` parameter imply that this is already the case? \r\n\r\nDo we need a `fast_loop` where non-editor, Lua-only processing is done? (Or does `NULL` already work like that?)\r\n\r\n```\r\n      • {fast_only}  (boolean|nil) If true, only |api-fast| events will be\r\n                     processed. If called from while in an |api-fast| event,\r\n                     will automatically be set to `true`.\r\n```",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T11:08:05Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1401883607",
            "id": 1401883607,
            "in_reply_to_id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TjwvX",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1744129400,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401883607/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T11:09:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401883607",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1401912187"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401912187"
                }
            },
            "author_association": "MEMBER",
            "body": "One of the main use cases for `vim.wait()` is to for applications like `vim.system()` where we want to uv to poll and check for IO, however this only happens on the main loop.\r\n\r\n> Or does NULL already work like that?\r\n\r\nNULL just ensures we never run the main loop, but it will still process any outstanding fast/main events. However I think zeer is right and maybe this change is wrong.\r\n\r\nI don't see how we can run the uv loop when we are in a fast callback, so maybe we just disallow it since it would become a massive foot gun otherwise.\r\n\r\n> Do we need a fast_loop where non-editor, Lua-only processing is done? \r\n\r\nThis probably surpasses my knowledge of how the event loop works, but are you suggesting we create another loop which uv binds to in fast-callbacks? Could that even work?",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T11:33:30Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1401912187",
            "id": 1401912187,
            "in_reply_to_id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tj3t7",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1744174968,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401912187/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T11:33:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401912187",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1401932073"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401932073"
                }
            },
            "author_association": "MEMBER",
            "body": "IMO introducing a secondary event loop would be the wrong way to go. \r\n\r\nif we want to allow \"sync style\" code inside callback (i e a `vim.system` which waits and returns, instead of taking yet another callback), we need to use something based on co-routines, so the callback can be suspended and the top-level event loop resumed.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T11:52:13Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1401932073",
            "id": 1401932073,
            "in_reply_to_id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tj8kp",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1744204453,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401932073/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T11:52:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1401932073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1402133296"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402133296"
                }
            },
            "author_association": "MEMBER",
            "body": "> I don't see how we can run the uv loop when we are in a fast callback,\r\n\r\nAnother (half-baked, probably wrong) idea is for the fast callback to \"re-schedule itself on the main loop\". But suspend-and-resume as @bfredl mentioned, sounds much better.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T14:16:15Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1402133296",
            "id": 1402133296,
            "in_reply_to_id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Tktsw",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1744523522,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402133296/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T14:16:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402133296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1402284815"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402284815"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes I agree, however given how `lua_resume` and `lua_yield` are needed to be used, I think that would require a lot of effort to get this to work. \r\n\r\nIt may just to easier to disallow `vim.wait` in fast events. It's not something we test and hasn't been an issue until now.\r\n\r\nFor stuff like timers, I don't see any benefit to running the callbacks in fast events and users should just wrap the callbacks with `vim.schedule_wrap()`. tbh I think this is true for 99% for fast callbacks. It is only things like `uv_idle_t`, `uv_prepare_t` objects that benefit from using fast callbacks.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T15:48:22Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1402284815",
            "id": 1402284815,
            "in_reply_to_id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TlSsP",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1744749301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402284815/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T15:48:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402284815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1402376711"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376711"
                }
            },
            "author_association": "MEMBER",
            "body": "> It may just to easier to disallow `vim.wait` in fast events.\r\n\r\nThrowing an error is fine for now, because it's a 2-way door: we can always relax it in the future.",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-22T16:30:33Z",
            "diff_hunk": "@@ -87,6 +87,31 @@ bool loop_poll_events(Loop *loop, int64_t ms)\n   return timeout_expired;\n }\n \n+/// If `multiqueue` has events then process them and return.\n+/// Otherwise if `loop` is non-NULL, run it once and process its fast events.\n+///\n+/// @param loop\n+/// @param multiqueue\n+/// @param ms  0: non-blocking poll.\n+///            > 0: timeout after `ms`.\n+///            < 0: wait forever.\n+/// @return  true if no events were processed or timeout expired\n+bool loop_process_events(Loop *loop, MultiQueue *multiqueue, int64_t ms)\n+{\n+  if (multiqueue && !multiqueue_empty(multiqueue)) {\n+    multiqueue_process_events(multiqueue);\n+    return false;\n+  }\n+\n+  if (loop) {\n+    bool timeout_expired = loop_uv_run(loop, ms, true);\n+    multiqueue_process_events(loop->fast_events);\n+    return timeout_expired;\n+  }\n+\n+  return true;",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1402376711",
            "id": 1402376711,
            "in_reply_to_id": 1401494848,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TlpIH",
            "original_commit_id": "8e9c8aa26dc6c0493150f260d373bc5514ab75d7",
            "original_line": 112,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/event/loop.c",
            "position": null,
            "pull_request_review_id": 1744880778,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376711/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-22T16:30:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1402376711",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1405171510"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405171510"
                }
            },
            "author_association": "MEMBER",
            "body": "can we also assert the error message?",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-25T16:55:31Z",
            "diff_hunk": "@@ -2769,6 +2769,19 @@ describe('lua stdlib', function()\n         eq({'notification', 'wait', {-2}}, next_msg(500))\n       end)\n     end)\n+\n+    it('should not run in fast callbacks #26122', function()\n+      exec_lua([[\n+        vim.uv.new_timer():start(0, 100, function()\n+          local count = 0\n+          vim.wait(100, function()\n+            count = count + 1\n+            return count == 10\n+          end, 100)\n+        end)\n+      ]])\n+      assert_alive()",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1405171510",
            "id": 1405171510,
            "line": 2783,
            "node_id": "PRRC_kwDOAPphoM5TwTc2",
            "original_commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "original_line": 2783,
            "original_position": 15,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": 15,
            "pull_request_review_id": 1749216538,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405171510/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T16:55:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405171510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26132#discussion_r1405173110"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26132"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405173110"
                }
            },
            "author_association": "MEMBER",
            "body": "Not easily since the error happens in a luv callback which doesn't get sent back over RPC to busted.\n\nIn Gitsigns testsuite I've solved this by overriding `error()` to send back an error event: https://github.com/lewis6991/gitsigns.nvim/blob/main/test/helpers.lua#L339-L342",
            "commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "created_at": "2023-11-25T17:01:41Z",
            "diff_hunk": "@@ -2769,6 +2769,19 @@ describe('lua stdlib', function()\n         eq({'notification', 'wait', {-2}}, next_msg(500))\n       end)\n     end)\n+\n+    it('should not run in fast callbacks #26122', function()\n+      exec_lua([[\n+        vim.uv.new_timer():start(0, 100, function()\n+          local count = 0\n+          vim.wait(100, function()\n+            count = count + 1\n+            return count == 10\n+          end, 100)\n+        end)\n+      ]])\n+      assert_alive()",
            "html_url": "https://github.com/neovim/neovim/pull/26132#discussion_r1405173110",
            "id": 1405173110,
            "in_reply_to_id": 1405171510,
            "line": 2783,
            "node_id": "PRRC_kwDOAPphoM5TwT12",
            "original_commit_id": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
            "original_line": 2783,
            "original_position": 15,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": 15,
            "pull_request_review_id": 1749217181,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405173110/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T17:03:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1405173110",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I've pivoted this PR to just disallow `vim.wait` in api-fast, however I've raised https://github.com/neovim/neovim/pull/26198 to experiment with the suspend and resume idea.",
            "created_at": "2023-11-24T15:48:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/26132#issuecomment-1825845061",
            "id": 1825845061,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26132",
            "node_id": "IC_kwDOAPphoM5s1C9F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1825845061/reactions"
            },
            "updated_at": "2023-11-24T15:48:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1825845061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26132/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26132/commits",
    "created_at": "2023-11-21T11:26:49Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26132.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:loopstuff",
        "ref": "loopstuff",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2023-11-24T13:32:23Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 235138,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T18:36:52Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26132",
    "id": 1610767228,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26132",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "OS processes, spawn",
            "id": 182884815,
            "name": "job-control",
            "node_id": "MDU6TGFiZWwxODI4ODQ4MTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/job-control"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 520282574,
            "name": "event-loop",
            "node_id": "MDU6TGFiZWw1MjAyODI1NzQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/event-loop"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "84bbe4b0ca935db1f6202db339aee5594a3b3908",
    "merged_at": "2023-11-27T09:09:21Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5gAlt8",
    "number": 26132,
    "patch_url": "https://github.com/neovim/neovim/pull/26132.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26132/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2cadfdcec9aff7921214f1a0bb4ce0f59aff1cf0",
    "title": "fix(lua): do not allow `vim.wait()` in fast callbacks",
    "updated_at": "2023-11-27T09:12:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26132",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}