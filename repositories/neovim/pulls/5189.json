{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/5189/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/5189/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/5189"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/5189"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/5189/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/fceea9c4da0695b021f4d42a8a49dc53019a6220"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5797,
            "forks_count": 5797,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1835,
            "open_issues_count": 1835,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2025-01-07T01:42:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 302309,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 84985,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2025-01-07T01:59:15Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 84985,
            "watchers_count": 84985,
            "web_commit_signoff_required": false
        },
        "sha": "039c7ab60758661132c9bade0a4674190fa9442b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "This adds the `'messagepane'` (bool) option that causes `:messages` to display messages in a buffer.  Only messages that are kept in history are displayed in the pane.  The default message history has a limit of 200 entries, but the message pane keeps 1000 entries separately.\n\nMy motivation for doing this is keeping errors and spammy messages from interrupting me as I work.  I think this will be particularly useful for plugin development where the messages are intentionally verbose.\n\nTodo:\n- [x] ftplugin for the message pane that provides niceties, like jumping to an error source under the cursor.\n- [x] Better implementation of \"scroll to bottom\" that can handle `'wrap'`.\n- [x] Ignore errors from trying to modify the message pane buffer.\n- [x] Vim script function for adding messages directly to the message pane.\n- [x] Time stamped separator.  Could be used for simple profiling or separating groups of messages.\n- [x] Tests\n- [x] Rename to `msgbuf`, `message buffer`\n\nFuture Todo:\n- Customizable history length.\n- Specify message types to display in the pane (errors or echomsg).\n",
    "closed_at": "2025-01-05T01:53:25Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74681640"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74681640"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Reminder: Need to add tests for `msgpane()` and `msgpane_open()`\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-13T04:44:22Z",
            "diff_hunk": "@@ -0,0 +1,666 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local Screen = require('test.functional.ui.screen')\n+local clear, feed, wait = helpers.clear, helpers.feed, helpers.wait\n+local execute, command = helpers.execute, helpers.command\n+\n+before_each(function()\n+  local file = io.open('Xtest_msgpane_script', 'w')\n+  file:write([[\n+function! s:throw_func() abort\n+  throw 'Error'\n+endfunction\n+\n+function! Throw() abort\n+  call s:throw_func()\n+endfunction\n+]])\n+  file:close()\n+end)\n+\n+after_each(function()\n+  os.remove('Xtest_msgpane_script')\n+end)\n+\n+describe(':messages', function()\n+  local screen\n+\n+  function echo_messages(times, final_message)\n+    if times == nil then\n+      times = 1\n+    end\n+\n+    for i=1,times do\n+      command('echomsg \"message 1\"')\n+\n+      command('echohl Green')\n+      command('echomsg \"message 2\"')\n+      command('echohl None')\n+\n+      command('echo \"not logged\"')\n+\n+      command('echohl Yellow')\n+      command('echomsg \"message 3\"')\n+\n+      command('echohl Magenta')\n+      command('echomsg \"message 4\"')\n+      command('echohl None')\n+    end\n+\n+    if final_message ~= nil then\n+      command('echomsg \"' .. final_message .. '\"')\n+    end\n+  end\n+\n+  function echo_long_messages(times, final_message)\n+    if times == nil then\n+      times = 1\n+    end\n+\n+    for i=1,times do\n+      command('echomsg \"message 1 xxxx xxxx xxxx xxxx xxxx xxxx xxxx end 1\"')\n+\n+      command('echohl Green')\n+      command('echomsg \"message 2 xxxx xxxx xxxx xxxx xxxx xxxx xxxx end 2\"')\n+      command('echohl None')\n+\n+      command('echo \"not logged\"')\n+\n+      command('echohl Yellow')\n+      command('echomsg \"message 3 xxxx xxxx xxxx xxxx xxxx xxxx xxxx end 3\"')\n+\n+      command('echohl Magenta')\n+      command('echomsg \"message 4 xxxx xxxx xxxx xxxx xxxx xxxx xxxx end 4\"')\n+      command('echohl None')\n+    end\n+\n+    if final_message ~= nil then\n+      command('echomsg \"' .. final_message .. '\"')\n+    end\n+  end\n+\n+  before_each(function()\n+    clear({env={\n+      VIMRUNTIME='runtime',\n+      XDG_CONFIG_HOME='tmp/Xconfig',\n+    }})\n+\n+    screen = Screen.new(40, 10)\n+    screen:attach()\n+\n+    screen:set_default_attr_ids({\n+      [1]  = { bold = true, foreground = Screen.colors.Blue },\n+      [2]  = { reverse = true },\n+      [3]  = { bold = true, reverse = true },\n+      [4]  = { background = Screen.colors.Red },\n+      [5]  = { foreground = Screen.colors.Green },\n+      [6]  = { foreground = Screen.colors.Yellow },\n+      [7]  = { foreground = Screen.colors.Fuchsia },\n+      [8]  = { background = Screen.colors.Orange },\n+      [9]  = { bold = true, foreground = Screen.colors.SeaGreen },\n+      -- CursorLine\n+      [10] = { background = Screen.colors.Maroon },\n+      [11] = { background = Screen.colors.Maroon, foreground = Screen.colors.Green },\n+      [12] = { background = Screen.colors.Maroon, foreground = Screen.colors.Yellow },\n+      [13] = { background = Screen.colors.Maroon, foreground = Screen.colors.Fuchsia },\n+      -- Visual\n+      [14] = { background = Screen.colors.Coral },\n+      [15] = { background = Screen.colors.Coral, foreground = Screen.colors.Green },\n+      [16] = { background = Screen.colors.Coral, foreground = Screen.colors.Yellow },\n+      [17] = { background = Screen.colors.Coral, foreground = Screen.colors.Fuchsia },\n+      -- Search\n+      [18] = { background = Screen.colors.Oldlace },\n+      [19] = { background = Screen.colors.Oldlace, foreground = Screen.colors.Green },\n+      [20] = { background = Screen.colors.Oldlace, foreground = Screen.colors.Yellow },\n+      [21] = { background = Screen.colors.Oldlace, foreground = Screen.colors.Fuchsia },\n+    })\n+\n+    -- Needs to be sourced before 'syntax on' and 'filetype plugin on' so that\n+    -- it's <SNR>1\n+    command('source Xtest_msgpane_script')\n+\n+    command('syntax on')\n+    command('filetype plugin on')\n+\n+    command('highlight ErrorMsg guifg=none guibg=Red')\n+    command('highlight LineNr guifg=none guibg=Orange')\n+    command('highlight Green guifg=Green guibg=none')\n+    command('highlight Yellow guifg=Yellow guibg=none')\n+    command('highlight Magenta guifg=Magenta guibg=none')\n+    command('highlight CursorLine guibg=Maroon')\n+    command('highlight Visual guibg=Coral')\n+    command('highlight Search guibg=Oldlace')\n+  end)\n+\n+  describe('default', function()\n+    it('displays messages', function()\n+      echo_messages()\n+      execute('messages')\n+\n+      screen:expect([[\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        message 1                               |\n+        {5:message 2}                               |\n+        {6:message 3}                               |\n+        {7:message 4}                               |\n+        {9:Press ENTER or type command to continue}^ |\n+      ]])\n+    end)\n+\n+    it('displays exception', function()\n+      echo_messages()\n+      execute('call Throw()')\n+\n+      screen:expect([[\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {4:Error detected while processing function}|\n+        {4: Throw[1]..<SNR>1_throw_func:}           |\n+        {8:line    1:}                              |\n+        {4:E605: Exception not caught: Error}       |\n+        {9:Press ENTER or type command to continue}^ |\n+      ]])\n+    end)\n+  end)\n+\n+  describe('in a buffer', function()\n+    it('displays messages', function()\n+      echo_messages()\n+      command('set messagepane')\n+      execute('messages')\n+\n+      screen:expect([[\n+                                                |\n+        {2:[No Name]                               }|\n+        message 1                               |\n+        {5:message 2}                               |\n+        {6:message 3}                               |\n+        {7:^message 4}                               |\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {3:nvim://messages                         }|\n+        :messages                               |\n+      ]])\n+    end)\n+\n+    it('displays an exception', function()\n+      echo_messages()\n+      command('set messagepane')\n+      execute('messages')\n+      execute('call Throw()')\n+\n+      screen:expect([[\n+                                                |\n+        {2:[No Name]                               }|\n+        {6:message 3}                               |\n+        {7:message 4}                               |\n+        {4:Error detected while processing function}|\n+        {4: Throw[1]..<SNR>1_throw_func:}           |\n+        {8:line    1:}                              |\n+        {4:^E605: Exception not caught: Error}       |\n+        {3:nvim://messages                         }|\n+        {4:E605: Exception not caught: Error}       |\n+      ]])\n+    end)\n+\n+    it('displays the last message without prompting', function()\n+      command('set messagepane')\n+      execute('call Throw()')\n+\n+      screen:expect([[\n+        ^                                        |\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {4:E605: Exception not caught: Error}       |\n+      ]])\n+\n+      echo_messages()\n+\n+      screen:expect([[\n+        ^                                        |\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {7:message 4}                               |\n+      ]])\n+\n+      echo_messages()\n+      execute('call Throw()')\n+\n+      screen:expect([[\n+        ^                                        |\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {4:E605: Exception not caught: Error}       |\n+      ]])\n+    end)\n+\n+    it('displays history before messagepane enabled', function()\n+      echo_messages()\n+      command('set messagepane')\n+      command('messages')\n+\n+      screen:expect([[\n+                                                |\n+        {2:[No Name]                               }|\n+        message 1                               |\n+        {5:message 2}                               |\n+        {6:message 3}                               |\n+        {7:^message 4}                               |\n+        {1:~                                       }|\n+        {1:~                                       }|\n+        {3:nvim://messages                         }|\n+        {7:message 4}                               |\n+      ]])\n+    end)\n+\n+    describe('auto scrolling', function()\n+      before_each(function()\n+        command('set messagepane')\n+        command('messages')\n+      end)\n+\n+      it('in an empty buffer', function()\n+        echo_messages(5, 'test')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          {7:message 4}                               |\n+          message 1                               |\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {7:message 4}                               |\n+          ^test                                    |\n+          {3:nvim://messages                         }|\n+          test                                    |\n+        ]])\n+      end)\n+\n+      it('disabled because cursor is not on last line', function()\n+        echo_messages(1, 'test')\n+        feed('k')\n+        echo_messages(5, 'end')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          message 1                               |\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {7:^message 4}                               |\n+          test                                    |\n+          message 1                               |\n+          {3:nvim://messages                         }|\n+          end                                     |\n+        ]])\n+      end)\n+\n+      it('continues after moving cursor back to last line', function()\n+        echo_messages(1, 'test')\n+        feed('k')\n+        echo_messages(5, 'mid')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          message 1                               |\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {7:^message 4}                               |\n+          test                                    |\n+          message 1                               |\n+          {3:nvim://messages                         }|\n+          mid                                     |\n+        ]])\n+\n+        feed('G')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          {7:message 4}                               |\n+          message 1                               |\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {7:message 4}                               |\n+          ^mid                                     |\n+          {3:nvim://messages                         }|\n+          mid                                     |\n+        ]])\n+\n+        echo_messages(5, 'end')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          {7:message 4}                               |\n+          message 1                               |\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {7:message 4}                               |\n+          ^end                                     |\n+          {3:nvim://messages                         }|\n+          end                                     |\n+        ]])\n+      end)\n+\n+      it(\"with 'wrap' enabled\", function()\n+        command('set wrap')\n+        echo_long_messages(5, 'end')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          {6:message 3 xxxx xxxx xxxx xxxx xxxx xxxx }|\n+          {6:xxxx end 3}                              |\n+          {7:message 4 xxxx xxxx xxxx xxxx xxxx xxxx }|\n+          {7:xxxx end 4}                              |\n+          ^end                                     |\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          end                                     |\n+        ]])\n+      end)\n+    end)\n+\n+    describe('displays error functions', function()\n+\n+      before_each(function()\n+        screen:try_resize(40, 20)\n+\n+        command('set messagepane')\n+        execute('messages')\n+        execute('call Throw()')\n+\n+        screen:expect([[\n+                                                  |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {2:[No Name]                               }|\n+          {4:Error detected while processing function}|\n+          {4: Throw[1]..<SNR>1_throw_func:}           |\n+          {8:line    1:}                              |\n+          {4:^E605: Exception not caught: Error}       |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          {4:E605: Exception not caught: Error}       |\n+        ]])\n+      end)\n+\n+      it('selection', function()\n+        feed('2kgf')\n+\n+        screen:expect([[\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {2:[No Name]                               }|\n+          {4:Error detected while processing function}|\n+          {4: Throw[1]..<SNR>1_throw_func:}           |\n+          {8:line    1:}                              |\n+          {4:E605: Exception not caught: Error}       |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          Jump to function:                       |\n+          1. Throw()                              |\n+          2. s:throw_func()                       |\n+          Type number and <Enter> or click with mo|\n+          use (empty cancels): ^                   |\n+        ]])\n+      end)\n+\n+      it('and selection jumps to split', function()\n+        feed('2kgf1<cr>')\n+\n+        -- Remove the filename's text from the screen\n+        command('setlocal statusline=%t')\n+        command('echo')\n+\n+        screen:expect([[\n+                                                  |\n+          function! Throw() abort                 |\n+            ^call s:throw_func()                   |\n+          endfunction                             |\n+          {1:~                                       }|\n+          {3:Xtest_msgpane_script                    }|\n+                                                  |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {2:[No Name]                               }|\n+          {4:Error detected while processing function}|\n+          {4: Throw[1]..<SNR>1_throw_func:}           |\n+          {8:line    1:}                              |\n+          {4:E605: Exception not caught: Error}       |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {2:nvim://messages                         }|\n+                                                  |\n+        ]])\n+      end)\n+\n+      it('and selection jumps to existing buffer', function()\n+        command('wincmd k')\n+        command('setlocal statusline=%t')\n+        command('edit Xtest_msgpane_script')\n+        command('wincmd j')\n+        feed('G2kgf1<cr>')\n+\n+        screen:expect([[\n+            throw 'Error'                         |\n+          endfunction                             |\n+                                                  |\n+          function! Throw() abort                 |\n+            ^call s:throw_func()                   |\n+          endfunction                             |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:Xtest_msgpane_script                    }|\n+          {4:Error detected while processing function}|\n+          {4: Throw[1]..<SNR>1_throw_func:}           |\n+          {8:line    1:}                              |\n+          {4:E605: Exception not caught: Error}       |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {2:nvim://messages                         }|\n+                                                  |\n+        ]])\n+      end)\n+    end)\n+\n+    describe('highlight', function()\n+      before_each(function()\n+        echo_messages()\n+        command('set messagepane noshowmode')\n+        command('messages')\n+      end)\n+\n+      it('combines with CursorLine', function()\n+        command('set cursorline')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          message 1                               |\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {13:^message 4                               }|\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          {7:message 4}                               |\n+        ]])\n+\n+        feed('k')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          message 1                               |\n+          {5:message 2}                               |\n+          {12:^message 3                               }|\n+          {7:message 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          {7:message 4}                               |\n+        ]])\n+\n+        feed('k')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          message 1                               |\n+          {11:^message 2                               }|\n+          {6:message 3}                               |\n+          {7:message 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          {7:message 4}                               |\n+        ]])\n+\n+        feed('k')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          {10:^message 1                               }|\n+          {5:message 2}                               |\n+          {6:message 3}                               |\n+          {7:message 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          {7:message 4}                               |\n+        ]])\n+      end)\n+\n+      it('combines with Visual', function()\n+        feed('v3k')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          ^m{14:essage 1}                               |\n+          {15:message 2}                               |\n+          {16:message 3}                               |\n+          {17:m}{7:essage 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          {7:message 4}                               |\n+        ]])\n+      end)\n+\n+      it('combines with Search', function()\n+        feed('gg/e\\\\|a<cr>')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          m{18:^e}ss{18:a}g{18:e} 1                               |\n+          {5:m}{19:e}{5:ss}{19:a}{5:g}{19:e}{5: 2}                               |\n+          {6:m}{20:e}{6:ss}{20:a}{6:g}{20:e}{6: 3}                               |\n+          {7:m}{21:e}{7:ss}{21:a}{7:g}{21:e}{7: 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          /e\\|a                                   |\n+        ]])\n+      end)\n+\n+      it('combines with Search + CursorLine', function()\n+        command('set cursorline')\n+        feed('gg/e\\\\|a<cr>')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          {10:m}{18:^e}{10:ss}{18:a}{10:g}{18:e}{10: 1                               }|\n+          {5:m}{19:e}{5:ss}{19:a}{5:g}{19:e}{5: 2}                               |\n+          {6:m}{20:e}{6:ss}{20:a}{6:g}{20:e}{6: 3}                               |\n+          {7:m}{21:e}{7:ss}{21:a}{7:g}{21:e}{7: 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          /e\\|a                                   |\n+        ]])\n+\n+        feed('j')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          m{18:e}ss{18:a}g{18:e} 1                               |\n+          {11:m}{19:^e}{11:ss}{19:a}{11:g}{19:e}{11: 2                               }|\n+          {6:m}{20:e}{6:ss}{20:a}{6:g}{20:e}{6: 3}                               |\n+          {7:m}{21:e}{7:ss}{21:a}{7:g}{21:e}{7: 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          /e\\|a                                   |\n+        ]])\n+\n+        feed('j')\n+\n+        screen:expect([[\n+                                                  |\n+          {2:[No Name]                               }|\n+          m{18:e}ss{18:a}g{18:e} 1                               |\n+          {5:m}{19:e}{5:ss}{19:a}{5:g}{19:e}{5: 2}                               |\n+          {12:m}{20:^e}{12:ss}{20:a}{12:g}{20:e}{12: 3                               }|\n+          {7:m}{21:e}{7:ss}{21:a}{7:g}{21:e}{7: 4}                               |\n+          {1:~                                       }|\n+          {1:~                                       }|\n+          {3:nvim://messages                         }|\n+          /e\\|a                                   |\n+        ]])\n+\n+      end)",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74681640",
            "id": 74681640,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NjgxNjQw",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 663,
            "original_start_line": null,
            "path": "test/functional/ui/message_pane_spec.lua",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74681640/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74681640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74698666"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74698666"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`is` -> `if`\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T09:26:51Z",
            "diff_hunk": "@@ -5138,6 +5138,22 @@ msgpackparse({list})\t\t\t\t   {Nvim} *msgpackparse()*\n \t\t\trepresenting extension type. Second is \n \t\t\t|readfile()|-style list of strings.\n \n+msgpane({message}[, {highlight}[, {open}]])\t\t{Nvim} *msgpane()*\n+\t\tDisplay {message} in the message pane, optionally highlighted\n+\t\twith a {highlight} group name.\n+\n+\t\tWhen {open} is non-zero, open the message pane in a window.\n+\t\tSee also |'messagepane'|, |msgpane_open()|.\n+\n+msgpane_open()\t\t\t\t\t  {Nvim} *msgpane_open()*\n+\t\tOpen the message pane if it's not already displayed in a\n+\t\twindow.  Only one message pane window is opened per tab.\n+\n+\t\tReturns the message pane's buffer number or 0 is the pane",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74698666",
            "id": 74698666,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0Njk4NjY2",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74698666/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74698666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74698680"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74698680"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Do we need this line?\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T09:28:25Z",
            "diff_hunk": "@@ -7470,6 +7486,7 @@ localmap\t\tCompiled with local mappings and abbr. |:map-local|\n mac\t\t\tMacintosh version of Vim.\n macunix\t\t\tMacintosh version of Vim, using Unix files (OS-X).\n menu\t\t\tCompiled with support for |:menu|.\n+msgpane\t\t\tCompiled with support for 'messagepane'.",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74698680",
            "id": 74698680,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0Njk4Njgw",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74698680/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74698680",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74699643"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699643"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`argvars[2]` cannot always be checked. If only param `message` is used, we can only check up to `argvars[1]` and `argvars[1].v_type == VAR_UNKNOWN`.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T10:41:03Z",
            "diff_hunk": "@@ -13047,6 +13051,55 @@ static void f_msgpackparse(typval_T *argvars, typval_T *rettv)\n   return;\n }\n \n+/// \"msgpane()\" function\n+///\n+/// Display a message in the message pane.\n+///\n+/// @param message Message to display.\n+/// @param [highlight] The highlight group name.\n+/// @param [open] Opens the message page if it's not already in a window.\n+///\n+/// @return Nothing.\n+static void f_msgpane(typval_T *argvars, typval_T *rettv)\n+{\n+  char_u *msg = get_tv_string(&argvars[0]);\n+  int attr = 0;\n+\n+  if (argvars[1].v_type != VAR_UNKNOWN) {\n+    char_u *attrName = get_tv_string(&argvars[1]);\n+    int hl_id = syn_name2id(attrName);\n+    attr = syn_id2attr(hl_id);\n+  }\n+\n+  if (argvars[2].v_type != VAR_UNKNOWN) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74699643",
            "id": 74699643,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0Njk5NjQz",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/nvim/eval.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699643/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699643",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74699668"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699668"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`page` -> `pane`\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T10:43:15Z",
            "diff_hunk": "@@ -13047,6 +13051,55 @@ static void f_msgpackparse(typval_T *argvars, typval_T *rettv)\n   return;\n }\n \n+/// \"msgpane()\" function\n+///\n+/// Display a message in the message pane.\n+///\n+/// @param message Message to display.\n+/// @param [highlight] The highlight group name.\n+/// @param [open] Opens the message page if it's not already in a window.",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74699668",
            "id": 74699668,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0Njk5NjY4",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 35,
            "original_start_line": null,
            "path": "src/nvim/eval.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699668/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699668",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74699804"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699804"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "ASAN finds a problem with `:echo msgpane(\"asdf\", 0,0)`. Parameter values not checked?\n\n``` c\n==4831==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x62d00023a3b8 at pc 0x0000016d5ac9 bp 0x7ffc8214cf40 sp 0x7ffc8214cf38\nREAD of size 4 at 0x62d00023a3b8 thread T0\n    #0 0x16d5ac8 in syn_id2attr /home/oni-link/git/neovim/src/nvim/syntax.c:7235:15\n    #1 0x89857c in f_msgpane /home/oni-link/git/neovim/src/nvim/eval.c:13071:12\n    #2 0x794e63 in call_func /home/oni-link/git/neovim/src/nvim/eval.c:7310:11\n    #3 0x7a8da4 in get_func_tv /home/oni-link/git/neovim/src/nvim/eval.c:7159:11\n    #4 0x839119 in eval7 /home/oni-link/git/neovim/src/nvim/eval.c:4277:15\n    #5 0x834c45 in eval6 /home/oni-link/git/neovim/src/nvim/eval.c:3998:7\n    #6 0x8318d9 in eval5 /home/oni-link/git/neovim/src/nvim/eval.c:3850:7\n    #7 0x82ce51 in eval4 /home/oni-link/git/neovim/src/nvim/eval.c:3602:7\n    #8 0x82c3e3 in eval3 /home/oni-link/git/neovim/src/nvim/eval.c:3524:7\n    #9 0x82b973 in eval2 /home/oni-link/git/neovim/src/nvim/eval.c:3461:7\n    #10 0x78d952 in eval1 /home/oni-link/git/neovim/src/nvim/eval.c:3394:7\n    #11 0x7eb20e in ex_echo /home/oni-link/git/neovim/src/nvim/eval.c:19415:9\n    #12 0xa990d0 in do_one_cmd /home/oni-link/git/neovim/src/nvim/ex_docmd.c:2193:5\n    #13 0xa77c17 in do_cmdline /home/oni-link/git/neovim/src/nvim/ex_docmd.c:601:20\n    #14 0x100c1fb in nv_colon /home/oni-link/git/neovim/src/nvim/normal.c:4489:18\n    #15 0xff3743 in normal_execute /home/oni-link/git/neovim/src/nvim/normal.c:1144:3\n    #16 0x1684d10 in state_enter /home/oni-link/git/neovim/src/nvim/state.c:56:26\n    #17 0xfa7ab0 in normal_enter /home/oni-link/git/neovim/src/nvim/normal.c:464:3\n    #18 0xd606c2 in main /home/oni-link/git/neovim/src/nvim/main.c:544:3\n    #19 0x7f7cc90235af in __libc_start_main (/lib64/libc.so.6+0x205af)\n    #20 0x445628 in _start (/home/oni-link/git/neovim/build/bin/nvim+0x445628)\n\n0x62d00023a3b8 is located 72 bytes to the left of 34056-byte region [0x62d00023a400,0x62d000242908)\nallocated by thread T0 here:\n    #0 0x4f8fb8 in realloc /home/oni-link/git/llvm/projects/compiler-rt/lib/asan/asan_malloc_linux.cc:77\n    #1 0xe8385c in xrealloc /home/oni-link/git/neovim/src/nvim/memory.c:141:15\n    #2 0xc84e33 in ga_grow /home/oni-link/git/neovim/src/nvim/garray.c:96:14\n    #3 0x16c55ef in highlight_changed /home/oni-link/git/neovim/src/nvim/syntax.c:7376:3\n    #4 0x1321b77 in update_screen /home/oni-link/git/neovim/src/nvim/screen.c:342:5\n    #5 0x1069995 in normal_redraw /home/oni-link/git/neovim/src/nvim/normal.c:1263:5\n    #6 0x106702c in normal_check /home/oni-link/git/neovim/src/nvim/normal.c:1346:5\n    #7 0x1684723 in state_enter /home/oni-link/git/neovim/src/nvim/state.c:20:35\n    #8 0xfa7ab0 in normal_enter /home/oni-link/git/neovim/src/nvim/normal.c:464:3\n    #9 0xd606c2 in main /home/oni-link/git/neovim/src/nvim/main.c:544:3\n    #10 0x7f7cc90235af in __libc_start_main (/lib64/libc.so.6+0x205af)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow /home/oni-link/git/neovim/src/nvim/syntax.c:7235:15 in syn_id2attr\n```\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T10:55:52Z",
            "diff_hunk": "@@ -13047,6 +13051,55 @@ static void f_msgpackparse(typval_T *argvars, typval_T *rettv)\n   return;\n }\n \n+/// \"msgpane()\" function\n+///\n+/// Display a message in the message pane.\n+///\n+/// @param message Message to display.\n+/// @param [highlight] The highlight group name.\n+/// @param [open] Opens the message page if it's not already in a window.\n+///\n+/// @return Nothing.\n+static void f_msgpane(typval_T *argvars, typval_T *rettv)\n+{\n+  char_u *msg = get_tv_string(&argvars[0]);\n+  int attr = 0;\n+\n+  if (argvars[1].v_type != VAR_UNKNOWN) {\n+    char_u *attrName = get_tv_string(&argvars[1]);\n+    int hl_id = syn_name2id(attrName);\n+    attr = syn_id2attr(hl_id);",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74699804",
            "id": 74699804,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0Njk5ODA0",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 46,
            "original_start_line": null,
            "path": "src/nvim/eval.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699804/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74699977"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699977"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`msgpane_buf` could be `NULL`.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T11:11:03Z",
            "diff_hunk": "@@ -0,0 +1,302 @@\n+#include \"nvim/vim.h\"\n+#include \"nvim/ascii.h\"\n+#include \"nvim/buffer.h\"\n+#include \"nvim/message.h\"\n+#include \"nvim/ex_cmds.h\"\n+#include \"nvim/fileio.h\"\n+#include \"nvim/option.h\"\n+#include \"nvim/memline.h\"\n+#include \"nvim/macros.h\"\n+#include \"nvim/move.h\"\n+#include \"nvim/misc1.h\"\n+#include \"nvim/window.h\"\n+#include \"nvim/buffer_defs.h\"\n+#include \"nvim/message_pane.h\"\n+#include \"nvim/os/time.h\"\n+\n+#define MSGPANE_SEP_FILL '-'\n+#define MSGPANE_SEP (char_u *)\"-- \"\n+#define MSGPANE_SEP_LEN STRLEN(MSGPANE_SEP)\n+\n+#ifdef INCLUDE_GENERATED_DECLARATIONS\n+# include \"message_pane.c.generated.h\"\n+#endif\n+\n+\n+static buf_T *msgpane_buf = NULL;\n+static MessagePaneEntry *history[MAX_MSGPANE_HIST];\n+static int history_len = 0;\n+\n+\n+/// Return true if the message pane exists.\n+static bool msgpane_exists(void)\n+{\n+  return msgpane_buf != NULL && buf_valid(msgpane_buf);\n+}\n+\n+/// Create a message pane buffer.\n+static bool msgpane_create(void)\n+{\n+  if (msgpane_exists()) {\n+    return true;\n+  }\n+\n+  msgpane_buf = buflist_new((char_u *)\"nvim://messages\", NULL, 1, BLN_LISTED);\n+  msgpane_buf->b_messages = true;",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74699977",
            "id": 74699977,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0Njk5OTc3",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 45,
            "original_start_line": null,
            "path": "src/nvim/message_pane.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699977/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74699977",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74700083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74700083"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Missing `msg_silent--;`?\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T11:18:18Z",
            "diff_hunk": "@@ -0,0 +1,302 @@\n+#include \"nvim/vim.h\"\n+#include \"nvim/ascii.h\"\n+#include \"nvim/buffer.h\"\n+#include \"nvim/message.h\"\n+#include \"nvim/ex_cmds.h\"\n+#include \"nvim/fileio.h\"\n+#include \"nvim/option.h\"\n+#include \"nvim/memline.h\"\n+#include \"nvim/macros.h\"\n+#include \"nvim/move.h\"\n+#include \"nvim/misc1.h\"\n+#include \"nvim/window.h\"\n+#include \"nvim/buffer_defs.h\"\n+#include \"nvim/message_pane.h\"\n+#include \"nvim/os/time.h\"\n+\n+#define MSGPANE_SEP_FILL '-'\n+#define MSGPANE_SEP (char_u *)\"-- \"\n+#define MSGPANE_SEP_LEN STRLEN(MSGPANE_SEP)\n+\n+#ifdef INCLUDE_GENERATED_DECLARATIONS\n+# include \"message_pane.c.generated.h\"\n+#endif\n+\n+\n+static buf_T *msgpane_buf = NULL;\n+static MessagePaneEntry *history[MAX_MSGPANE_HIST];\n+static int history_len = 0;\n+\n+\n+/// Return true if the message pane exists.\n+static bool msgpane_exists(void)\n+{\n+  return msgpane_buf != NULL && buf_valid(msgpane_buf);\n+}\n+\n+/// Create a message pane buffer.\n+static bool msgpane_create(void)\n+{\n+  if (msgpane_exists()) {\n+    return true;\n+  }\n+\n+  msgpane_buf = buflist_new((char_u *)\"nvim://messages\", NULL, 1, BLN_LISTED);\n+  msgpane_buf->b_messages = true;\n+  return msgpane_exists();\n+}\n+\n+/// Scroll to the bottom in each window displaying the message pane if the\n+/// cursor is on the last line.\n+static void scroll_to_bottom(bool force)\n+{\n+  win_T *oldwin = curwin;\n+  linenr_T lnum;\n+  int lines_height;\n+\n+  FOR_ALL_TAB_WINDOWS(tp, wp) {\n+    if (wp->w_buffer->b_messages) {\n+      // Note: we are checking the cursor's line _after_ adding a new line.\n+      if (force || wp->w_cursor.lnum >= wp->w_buffer->b_ml.ml_line_count - 1) {\n+        lnum = wp->w_buffer->b_ml.ml_line_count;\n+        wp->w_cursor.lnum = lnum;\n+        wp->w_cursor.col = 0;\n+\n+        if (wp->w_p_wrap) {\n+          lines_height = 0;\n+\n+          while (lnum > 0 && lines_height < wp->w_height) {\n+            lines_height += plines_win_nofill(wp, lnum--, false);\n+          }\n+\n+          if (lines_height > wp->w_height) {\n+            lnum++;\n+          }\n+        } else if (wp->w_height > lnum) {\n+          lnum = 0;\n+        } else {\n+          lnum -= wp->w_height;\n+        }\n+\n+        /// Note: There is scroll_cursor_bot() in move.c but I can't get it to\n+        /// do what I want.\n+        set_topline(wp, lnum + 1);\n+\n+        curwin = wp;\n+        update_topline();\n+        validate_cursor();\n+        curwin = oldwin;\n+      }\n+    }\n+  }\n+\n+  curwin = oldwin;\n+}\n+\n+/// Open a message pane window.\n+bool msgpane_open(void)\n+{\n+  bool win_exists = false;\n+  bool pane_exists = msgpane_exists();\n+\n+  if (!p_msgpane) {\n+    return false;\n+  }\n+\n+  if (!pane_exists) {\n+    if (!msgpane_create()) {\n+      return false;\n+    }\n+\n+    // There are messages from before the creation of the message pane.\n+    if (first_msg_hist != NULL && history_len == 0) {\n+      // Temporarily NULL msgpane_buf while filling the history.\n+      buf_T *msgpane = msgpane_buf;\n+      msgpane_buf = NULL;\n+      MessageHistoryEntry *p;\n+\n+      for (p = first_msg_hist; p != NULL; p = p->next) {\n+        if (p->msg != NULL && *p->msg != NUL) {\n+          msgpane_add_msg(p->msg, p->attr);\n+        }\n+      }\n+\n+      msgpane_buf = msgpane;\n+    }\n+  }\n+\n+  FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n+    if (wp->w_buffer->b_messages == true) {\n+      win_exists = true;\n+      break;\n+    }\n+  }\n+\n+  if (!win_exists) {\n+    // Create a window to display the message buffer.\n+    msg_silent++;\n+    block_autocmds();\n+\n+    if (win_split((int)p_cwh, WSP_BOT) == FAIL) {\n+      beep_flush();\n+      unblock_autocmds();\n+      return false;",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74700083",
            "id": 74700083,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAwMDgz",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 143,
            "original_start_line": null,
            "path": "src/nvim/message_pane.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74700083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74700083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74701033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701033"
                }
            },
            "author_association": "MEMBER",
            "body": "So is this a completely separate mechanism from `:messages`? I thought the msgpane would collect all `:echomsg` messages.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T12:37:15Z",
            "diff_hunk": "@@ -5138,6 +5138,22 @@ msgpackparse({list})\t\t\t\t   {Nvim} *msgpackparse()*\n \t\t\trepresenting extension type. Second is \n \t\t\t|readfile()|-style list of strings.\n \n+msgpane({message}[, {highlight}[, {open}]])\t\t{Nvim} *msgpane()*",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74701033",
            "id": 74701033,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAxMDMz",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701033/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74701085"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701085"
                }
            },
            "author_association": "MEMBER",
            "body": "If msgpane collects echomsg, why is this function needed?\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T12:39:51Z",
            "diff_hunk": "@@ -5138,6 +5138,22 @@ msgpackparse({list})\t\t\t\t   {Nvim} *msgpackparse()*\n \t\t\trepresenting extension type. Second is \n \t\t\t|readfile()|-style list of strings.\n \n+msgpane({message}[, {highlight}[, {open}]])\t\t{Nvim} *msgpane()*",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74701085",
            "id": 74701085,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAxMDg1",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701085/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74701109"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701109"
                }
            },
            "author_association": "MEMBER",
            "body": "I already don't like all the special handling of buftype=terminal. Can't we avoid another special case?\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T12:42:17Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74701109",
            "id": 74701109,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAxMTA5",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701109/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74701126"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701126"
                }
            },
            "author_association": "MEMBER",
            "body": "Why?\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T12:42:50Z",
            "diff_hunk": "@@ -321,8 +321,9 @@ close_buffer (\n       unload_buf = true;\n   }\n \n-  if (buf->terminal && (unload_buf || del_buf || wipe_buf)) {\n-    // terminal buffers can only be wiped\n+  if ((buf->terminal || buf->b_messages)\n+      && (unload_buf || del_buf || wipe_buf)) {\n+    // terminal and message pane buffers can only be wiped",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74701126",
            "id": 74701126,
            "line": 379,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAxMTI2",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 17,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 17,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701126/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701126",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74701928"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701928"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ah, because `buflist_new()` could return NULL, right?  (just woke up)\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T13:45:17Z",
            "diff_hunk": "@@ -0,0 +1,302 @@\n+#include \"nvim/vim.h\"\n+#include \"nvim/ascii.h\"\n+#include \"nvim/buffer.h\"\n+#include \"nvim/message.h\"\n+#include \"nvim/ex_cmds.h\"\n+#include \"nvim/fileio.h\"\n+#include \"nvim/option.h\"\n+#include \"nvim/memline.h\"\n+#include \"nvim/macros.h\"\n+#include \"nvim/move.h\"\n+#include \"nvim/misc1.h\"\n+#include \"nvim/window.h\"\n+#include \"nvim/buffer_defs.h\"\n+#include \"nvim/message_pane.h\"\n+#include \"nvim/os/time.h\"\n+\n+#define MSGPANE_SEP_FILL '-'\n+#define MSGPANE_SEP (char_u *)\"-- \"\n+#define MSGPANE_SEP_LEN STRLEN(MSGPANE_SEP)\n+\n+#ifdef INCLUDE_GENERATED_DECLARATIONS\n+# include \"message_pane.c.generated.h\"\n+#endif\n+\n+\n+static buf_T *msgpane_buf = NULL;\n+static MessagePaneEntry *history[MAX_MSGPANE_HIST];\n+static int history_len = 0;\n+\n+\n+/// Return true if the message pane exists.\n+static bool msgpane_exists(void)\n+{\n+  return msgpane_buf != NULL && buf_valid(msgpane_buf);\n+}\n+\n+/// Create a message pane buffer.\n+static bool msgpane_create(void)\n+{\n+  if (msgpane_exists()) {\n+    return true;\n+  }\n+\n+  msgpane_buf = buflist_new((char_u *)\"nvim://messages\", NULL, 1, BLN_LISTED);\n+  msgpane_buf->b_messages = true;",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74701928",
            "id": 74701928,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAxOTI4",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 45,
            "original_start_line": null,
            "path": "src/nvim/message_pane.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701928/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74701928",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74702017"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702017"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was thinking from the perspective of debug logging for plugin development.  I thought it would be nice if a message could get into the buffer without overwriting what's displayed in the command line.  I also wanted a way to make sure an important message wouldn't go unnoticed.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T13:50:32Z",
            "diff_hunk": "@@ -5138,6 +5138,22 @@ msgpackparse({list})\t\t\t\t   {Nvim} *msgpackparse()*\n \t\t\trepresenting extension type. Second is \n \t\t\t|readfile()|-style list of strings.\n \n+msgpane({message}[, {highlight}[, {open}]])\t\t{Nvim} *msgpane()*",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74702017",
            "id": 74702017,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAyMDE3",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702017/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74702043"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702043"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I was actually thinking about having one variable like `buf->b_internal_type` which is an int for un-editable buffers.  `BUF_TERMINAL`, `BUF_MESSAGES`, etc.  If it was non-zero then the same rules would apply to all of them.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T13:52:45Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74702043",
            "id": 74702043,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAyMDQz",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702043/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702043",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74702139"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702139"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "TBH, late night brute force bug squashing.  I'll have to recheck this since I rewrote how the buffer was created after this was added.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T13:58:53Z",
            "diff_hunk": "@@ -321,8 +321,9 @@ close_buffer (\n       unload_buf = true;\n   }\n \n-  if (buf->terminal && (unload_buf || del_buf || wipe_buf)) {\n-    // terminal buffers can only be wiped\n+  if ((buf->terminal || buf->b_messages)\n+      && (unload_buf || del_buf || wipe_buf)) {\n+    // terminal and message pane buffers can only be wiped",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74702139",
            "id": 74702139,
            "line": 379,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzAyMTM5",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 17,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 17,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702139/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74702139",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74704264"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704264"
                }
            },
            "author_association": "MEMBER",
            "body": "That sounds better, but avoiding special treatment would still be ideal.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T15:57:59Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74704264",
            "id": 74704264,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzA0MjY0",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704264/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74704317"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704317"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I copied a pattern.  I don't know if it's needed in the docs.  I wanted to have `has('msgpane')` so plugin developers could have some expectation of how messages are presented.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T16:01:46Z",
            "diff_hunk": "@@ -7470,6 +7486,7 @@ localmap\t\tCompiled with local mappings and abbr. |:map-local|\n mac\t\t\tMacintosh version of Vim.\n macunix\t\t\tMacintosh version of Vim, using Unix files (OS-X).\n menu\t\t\tCompiled with support for |:menu|.\n+msgpane\t\t\tCompiled with support for 'messagepane'.",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74704317",
            "id": 74704317,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzA0MzE3",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704317/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74704386"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704386"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The main thing I was going for by following the terminal checks is I didn't want the message buffer to be editable at all.  I think that if a user could change certain buffer settings, it could lead to some bad behavior from writing messages to a buffer that the user expects to be controlling.\n\nIs there a better way to go about that?\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T16:06:32Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74704386",
            "id": 74704386,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzA0Mzg2",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704386/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74704452"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704452"
                }
            },
            "author_association": "MEMBER",
            "body": "I recommend not trying to solve that problem before it actually is proven to be a problem. Even for terminal buffers, I think we're doing it wrong.\n\nIf something weird happens because the user explicitly made something  weird happen: who cares? :)\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T16:11:46Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74704452",
            "id": 74704452,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzA0NDUy",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704452/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704452",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74704843"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704843"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think I segfaulted when trying to edit the buffer and a message came in .  But that was in the early stage.  Doesn't look like the problem still exists.\n\nI removed all the `b_messages` checks and remembered the actual reason: The line highlights need to match the buffer lines.  It was easier to do because `bufhl_add_hl()` requires a highlight ID which I couldn't get without touching `:echohl` and a bunch of other functions.  I also thought it'd be kind of messed up if the user thought they controlled a buffer and lines started disappearing because the messages are being truncated.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T16:36:01Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74704843",
            "id": 74704843,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzA0ODQz",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704843/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74704843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74705649"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74705649"
                }
            },
            "author_association": "MEMBER",
            "body": "We can set nomodfiable on the buffer. \n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-14T17:31:05Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74705649",
            "id": 74705649,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0NzA1NjQ5",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74705649/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74705649",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/5189#discussion_r74876707"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/5189"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/74876707"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm going to look at removing the special treatment after I sort out how the lines are added to the buffer.  As it is now, if a user happens to add a line after the buffer reaches 1000 lines, the buffer will grow indefinitely.\n",
            "commit_id": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
            "created_at": "2016-08-16T05:07:54Z",
            "diff_hunk": "@@ -309,7 +309,7 @@ close_buffer (\n   // buffers.\n   // The caller must take care of NOT deleting/freeing when 'bufhidden' is\n   // \"hide\" (otherwise we could never free or delete a buffer).\n-  if (!buf->terminal) {\n+  if (!buf->terminal && !buf->b_messages) {",
            "html_url": "https://github.com/neovim/neovim/pull/5189#discussion_r74876707",
            "id": 74876707,
            "line": 365,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDc0ODc2NzA3",
            "original_commit_id": "7f7a3aea7b54b1940e5dcdef4e8c3c48967ff4b6",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 5,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74876707/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2017-02-25T01:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/74876707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Demo: https://share.esdf.io/i3eC7pr0Dr/messages.html\n",
            "created_at": "2016-08-08T05:24:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-238144501",
            "id": 238144501,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE0NDUwMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238144501/reactions"
            },
            "updated_at": "2016-08-08T05:24:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238144501",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "See also https://github.com/neovim/neovim/pull/1802 which implements `:echomsg!` (notice the \"bang\") to add a message to the history and \"maybe\" printing it (but never triggering \"Press Enter\" prompt).\n",
            "created_at": "2016-08-08T05:28:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-238144909",
            "id": 238144909,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE0NDkwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238144909/reactions"
            },
            "updated_at": "2016-08-08T05:28:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238144909",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The approach that I assumed we would take would be to expose `:messages` as a list or something like that, so that functionality like this could be done in a plugin.\n\nOr--perhaps better--expose each message as an API event. Then even collection of the messages is implemented outside of the C core. \n\nIn general, we want to move away from implementing features in C if possible.\n\nHowever, just IMO. Anything with good test coverage and no major objections by others, usually is worth including...\n\n---\n\nThe demo is sweet though. 🔥 \n\nIt looks like this PR might be a way to close https://github.com/neovim/neovim/issues/1029. \n",
            "created_at": "2016-08-08T05:37:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-238145883",
            "id": 238145883,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE0NTg4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238145883/reactions"
            },
            "updated_at": "2016-08-08T05:41:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238145883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk Wish I saw #1802 sooner because it makes `messages.c` a little bit more understandable.\n\nI tried to go the plugin route originally but the main thing I was missing was the colors.  I also felt that something like this would need to be as close as possible to the bare metal to keep it snappy.\n",
            "created_at": "2016-08-08T05:46:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-238146772",
            "id": 238146772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzODE0Njc3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238146772/reactions"
            },
            "updated_at": "2016-08-08T05:46:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/238146772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Updated demo: https://share.esdf.io/ez62CPcIWI/messages.html\n",
            "created_at": "2016-08-11T06:11:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239081032",
            "id": 239081032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTA4MTAzMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239081032/reactions"
            },
            "updated_at": "2016-08-11T06:11:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239081032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm still working on the tests, but I think this is ready for comments.\n",
            "created_at": "2016-08-12T05:23:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239363489",
            "id": 239363489,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTM2MzQ4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239363489/reactions"
            },
            "updated_at": "2016-08-12T05:23:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239363489",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "General question: Shouldn't it be \"window\" instead of \"pane\"? This is not tmux after all. :-P\n",
            "created_at": "2016-08-14T10:46:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239667075",
            "id": 239667075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY2NzA3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239667075/reactions"
            },
            "updated_at": "2016-08-14T10:46:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239667075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/972014?v=4",
                "events_url": "https://api.github.com/users/mhinz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhinz/followers",
                "following_url": "https://api.github.com/users/mhinz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhinz",
                "id": 972014,
                "login": "mhinz",
                "node_id": "MDQ6VXNlcjk3MjAxNA==",
                "organizations_url": "https://api.github.com/users/mhinz/orgs",
                "received_events_url": "https://api.github.com/users/mhinz/received_events",
                "repos_url": "https://api.github.com/users/mhinz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhinz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Perhaps the feature should be called\"message buffer\". It is a buffer, right? Does it appear in the buffer list (I would say yes)? Messages normally shows in \"the pager\".\n",
            "created_at": "2016-08-14T12:34:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239671330",
            "id": 239671330,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3MTMzMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239671330/reactions"
            },
            "updated_at": "2016-08-14T12:34:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239671330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let the messages buffer be a normal buffer. If user deletes it, we can deal with it (recreate it, or fallback to the pager).\n",
            "created_at": "2016-08-14T12:45:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239671783",
            "id": 239671783,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3MTc4Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239671783/reactions"
            },
            "updated_at": "2016-08-14T12:45:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239671783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The answer to \"why pane not buffer\" is actually petty:  `msgbuf` is a variable that's already used in a couple of places.  TBH, I don't like \"message buffer\", but \"history buffer\" didn't sound right either.\n",
            "created_at": "2016-08-14T13:42:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239674210",
            "id": 239674210,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3NDIxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239674210/reactions"
            },
            "updated_at": "2016-08-14T13:42:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239674210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Just \"history buffer\" would be confusing anyway, since there are many types of histories: message history, cmdline history, search history, ...\n\nIt just feels like \"pane\" would introduce a completely new word to the Vim vocabulary for no good reason. On the other hand, I can't come up with a better suggestion right now..\n",
            "created_at": "2016-08-14T13:51:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239674671",
            "id": 239674671,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3NDY3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239674671/reactions"
            },
            "updated_at": "2016-08-14T13:51:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239674671",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/972014?v=4",
                "events_url": "https://api.github.com/users/mhinz/events{/privacy}",
                "followers_url": "https://api.github.com/users/mhinz/followers",
                "following_url": "https://api.github.com/users/mhinz/following{/other_user}",
                "gists_url": "https://api.github.com/users/mhinz/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mhinz",
                "id": 972014,
                "login": "mhinz",
                "node_id": "MDQ6VXNlcjk3MjAxNA==",
                "organizations_url": "https://api.github.com/users/mhinz/orgs",
                "received_events_url": "https://api.github.com/users/mhinz/received_events",
                "repos_url": "https://api.github.com/users/mhinz/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mhinz/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mhinz/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mhinz",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Maybe `message window` and `msgwin`?\n",
            "created_at": "2016-08-14T14:01:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239675172",
            "id": 239675172,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3NTE3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239675172/reactions"
            },
            "updated_at": "2016-08-14T14:01:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239675172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "How is the quickfix buffer implemented? is it a \"normal\" nofile buffer with some mappings set up?\n",
            "created_at": "2016-08-14T14:47:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239677412",
            "id": 239677412,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3NzQxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239677412/reactions"
            },
            "updated_at": "2016-08-14T14:47:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239677412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> How is the quickfix buffer implemented? is it a \"normal\" nofile buffer with some mappings set up?\n\nKind of.  It's buftype is set to `quickfix` while it's filename is unset.  You can run `:file /tmp/whatever` and `:set modifiable buftype=` and it'll be a run of the mill buffer that can be edited.\n",
            "created_at": "2016-08-14T15:16:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239679010",
            "id": 239679010,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY3OTAxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239679010/reactions"
            },
            "updated_at": "2016-08-14T15:16:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239679010",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "It's not a window, it's a buffer. It could be open in multiple windows or a tab. Cannot see a better user-facing name than \"message buffer\".\n",
            "created_at": "2016-08-14T16:01:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239681263",
            "id": 239681263,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY4MTI2Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239681263/reactions"
            },
            "updated_at": "2016-08-14T16:01:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239681263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "But, when presented to the user, it's in a window.  It's all about using the right wording to set expectations 😉\n\nSeriously, I agree.  My reason for the name isn't that good.  I just didn't want the other instances of `msgbuf` to be mistaken has being associated and I didn't want long names like `message_buffer_whatever()`.  Also, `msgbuf_buf`.\n",
            "created_at": "2016-08-14T16:15:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-239681993",
            "id": 239681993,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTY4MTk5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239681993/reactions"
            },
            "updated_at": "2016-08-14T16:15:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/239681993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Now that I've been using this for a couple days, there's a few things I think should happen:\n- No lines are written to the buffer until it's in a window.\n- Use a short delay timer that waits a few ms before adding lines to the buffer.\n- `msgpane()` should treat each line in the input string as a line in the buffer instead of displaying it as a really long line with NUL characters.  It would also be the notable difference from `:echomsg`\n",
            "created_at": "2016-08-16T05:22:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-240003867",
            "id": 240003867,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDAwMzg2Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240003867/reactions"
            },
            "updated_at": "2016-08-16T05:22:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240003867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Timers could add bugs. Wait on optimizations until another pr. Though collecting messages in a list would still be my recommendation... OTOH a buffer can be thought of as a list.\n",
            "created_at": "2016-08-16T15:56:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-240147719",
            "id": 240147719,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDE0NzcxOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240147719/reactions"
            },
            "updated_at": "2016-08-16T15:56:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240147719",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Timers could add bugs. Wait on optimizations until another pr.\n\nPoint taken.\n\n> Though collecting messages in a list would still be my recommendation\n\nI do like the idea, but I still want to keep the colors and have a buffer that's updated when on screen.  The default messages only stores the highlight attr and I can't think of how to reverse it into a highlight name.\n\nMaybe this can be exposed through `histget('messages', ...)` for scripts.\n",
            "created_at": "2016-08-17T15:44:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-240454245",
            "id": 240454245,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDQ1NDI0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240454245/reactions"
            },
            "updated_at": "2016-08-17T15:44:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240454245",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Maybe this can be exposed through histget('messages', ...) for scripts.\n\nDefinitely seems like something we should offer, though again can wait until later.\n",
            "created_at": "2016-08-18T06:06:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-240632249",
            "id": 240632249,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDYzMjI0OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240632249/reactions"
            },
            "updated_at": "2016-08-18T06:06:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/240632249",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I think the feature should be implemented as plugin.",
            "created_at": "2021-11-17T06:16:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-971224229",
            "id": 971224229,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "IC_kwDOAPphoM4547Sl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/971224229/reactions"
            },
            "updated_at": "2021-11-17T06:16:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/971224229",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41495?v=4",
                "events_url": "https://api.github.com/users/Shougo/events{/privacy}",
                "followers_url": "https://api.github.com/users/Shougo/followers",
                "following_url": "https://api.github.com/users/Shougo/following{/other_user}",
                "gists_url": "https://api.github.com/users/Shougo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Shougo",
                "id": 41495,
                "login": "Shougo",
                "node_id": "MDQ6VXNlcjQxNDk1",
                "organizations_url": "https://api.github.com/users/Shougo/orgs",
                "received_events_url": "https://api.github.com/users/Shougo/received_events",
                "repos_url": "https://api.github.com/users/Shougo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Shougo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Shougo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Shougo",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/27855 implements a buffer-driven pager in Lua.",
            "created_at": "2025-01-05T01:53:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/5189#issuecomment-2571467467",
            "id": 2571467467,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
            "node_id": "IC_kwDOAPphoM6ZRXrL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2571467467/reactions"
            },
            "updated_at": "2025-01-05T01:53:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2571467467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/5189/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/5189/commits",
    "created_at": "2016-08-08T05:23:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/5189.diff",
    "draft": false,
    "head": {
        "label": "tweekmonster:messages-pane",
        "ref": "messages-pane",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/tweekmonster/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/tweekmonster/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/tweekmonster/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/tweekmonster/neovim/branches{/branch}",
            "clone_url": "https://github.com/tweekmonster/neovim.git",
            "collaborators_url": "https://api.github.com/repos/tweekmonster/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/tweekmonster/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/tweekmonster/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/tweekmonster/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/tweekmonster/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/tweekmonster/neovim/contributors",
            "created_at": "2016-06-06T13:23:26Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/tweekmonster/neovim/deployments",
            "description": "Vim-fork focused on extensibility and agility.",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/tweekmonster/neovim/downloads",
            "events_url": "https://api.github.com/repos/tweekmonster/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/tweekmonster/neovim/forks",
            "full_name": "tweekmonster/neovim",
            "git_commits_url": "https://api.github.com/repos/tweekmonster/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/tweekmonster/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/tweekmonster/neovim/git/tags{/sha}",
            "git_url": "git://github.com/tweekmonster/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/tweekmonster/neovim/hooks",
            "html_url": "https://github.com/tweekmonster/neovim",
            "id": 60529590,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/tweekmonster/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/tweekmonster/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/tweekmonster/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/tweekmonster/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/tweekmonster/neovim/labels{/name}",
            "language": "VimL",
            "languages_url": "https://api.github.com/repos/tweekmonster/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/tweekmonster/neovim/merges",
            "milestones_url": "https://api.github.com/repos/tweekmonster/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnk2MDUyOTU5MA==",
            "notifications_url": "https://api.github.com/repos/tweekmonster/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
                "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
                "followers_url": "https://api.github.com/users/tweekmonster/followers",
                "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
                "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tweekmonster",
                "id": 111942,
                "login": "tweekmonster",
                "node_id": "MDQ6VXNlcjExMTk0Mg==",
                "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
                "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
                "repos_url": "https://api.github.com/users/tweekmonster/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tweekmonster",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/tweekmonster/neovim/pulls{/number}",
            "pushed_at": "2020-03-06T16:30:57Z",
            "releases_url": "https://api.github.com/repos/tweekmonster/neovim/releases{/id}",
            "size": 99768,
            "ssh_url": "git@github.com:tweekmonster/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/tweekmonster/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/tweekmonster/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/tweekmonster/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/tweekmonster/neovim/subscription",
            "svn_url": "https://github.com/tweekmonster/neovim",
            "tags_url": "https://api.github.com/repos/tweekmonster/neovim/tags",
            "teams_url": "https://api.github.com/repos/tweekmonster/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/tweekmonster/neovim/git/trees{/sha}",
            "updated_at": "2016-06-06T13:23:35Z",
            "url": "https://api.github.com/repos/tweekmonster/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "fceea9c4da0695b021f4d42a8a49dc53019a6220",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
            "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
            "followers_url": "https://api.github.com/users/tweekmonster/followers",
            "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
            "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/tweekmonster",
            "id": 111942,
            "login": "tweekmonster",
            "node_id": "MDQ6VXNlcjExMTk0Mg==",
            "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
            "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
            "repos_url": "https://api.github.com/users/tweekmonster/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/tweekmonster",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/5189",
    "id": 80395958,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/5189",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 681,
        "created_at": "2014-05-10T20:43:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "Low priority items. We plan to work on this but don't have a target date.",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/6",
        "id": 655037,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/6/labels",
        "node_id": "MDk6TWlsZXN0b25lNjU1MDM3",
        "number": 6,
        "open_issues": 624,
        "state": "open",
        "title": "backlog",
        "updated_at": "2025-01-05T20:57:25Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/6"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0ODAzOTU5NTg=",
    "number": 5189,
    "patch_url": "https://github.com/neovim/neovim/pull/5189.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/5189/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/fceea9c4da0695b021f4d42a8a49dc53019a6220",
    "title": ":messages pane",
    "updated_at": "2025-01-05T01:53:26Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/5189",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/111942?v=4",
        "events_url": "https://api.github.com/users/tweekmonster/events{/privacy}",
        "followers_url": "https://api.github.com/users/tweekmonster/followers",
        "following_url": "https://api.github.com/users/tweekmonster/following{/other_user}",
        "gists_url": "https://api.github.com/users/tweekmonster/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/tweekmonster",
        "id": 111942,
        "login": "tweekmonster",
        "node_id": "MDQ6VXNlcjExMTk0Mg==",
        "organizations_url": "https://api.github.com/users/tweekmonster/orgs",
        "received_events_url": "https://api.github.com/users/tweekmonster/received_events",
        "repos_url": "https://api.github.com/users/tweekmonster/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/tweekmonster/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tweekmonster/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/tweekmonster",
        "user_view_type": "public"
    }
}