{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26786/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26786/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26786"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26786"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26786/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5317,
            "forks_count": 5317,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1721,
            "open_issues_count": 1721,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-14T00:42:07Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 269835,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 77016,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-14T00:39:42Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 77016,
            "watchers_count": 77016,
            "web_commit_signoff_required": false
        },
        "sha": "beca827212b106114c371f8bb61aa1a50810062f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem:\r\nWe don't have flatten / flatMap for `vim.iter` https://github.com/neovim/neovim/issues/26454\r\n\r\nSolution: Implement flat, with a default depth to 1. This is similar to the way `Array.prototype.flat` works in [ECMAScript](https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.flat). It only works for list-like iterators",
    "closed_at": "2024-01-11T02:57:51Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1437948077"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437948077"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this is your test file right ? ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-29T02:01:24Z",
            "diff_hunk": "@@ -0,0 +1,18 @@\n+local function flatten(v, max_depth, initial_depth, result)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1437948077",
            "id": 1437948077,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VtVit",
            "original_commit_id": "0f69fda5953c98050bd38816b41014474395edb3",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "test.lua",
            "position": null,
            "pull_request_review_id": 1798550894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437948077/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T02:01:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437948077",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1437949914"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437949914"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "oops lol",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-29T02:10:26Z",
            "diff_hunk": "@@ -0,0 +1,18 @@\n+local function flatten(v, max_depth, initial_depth, result)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1437949914",
            "id": 1437949914,
            "in_reply_to_id": 1437948077,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VtV_a",
            "original_commit_id": "0f69fda5953c98050bd38816b41014474395edb3",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "test.lua",
            "position": null,
            "pull_request_review_id": 1798553256,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437949914/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T02:10:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437949914",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1437952177"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437952177"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I couldn't find a better way to do this than making a copy. I tried for some in-place magic, but it seemed to be going nowhere. This is basically what the ES spec does as well 🤷‍♂️ ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-29T02:22:57Z",
            "diff_hunk": "@@ -179,6 +193,45 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns {1, 2, {3}})\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1437952177",
            "id": 1437952177,
            "line": 238,
            "node_id": "PRRC_kwDOAPphoM5VtWix",
            "original_commit_id": "3de60f4c9c68a9571d292e0e495a7a30ee071849",
            "original_line": 239,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": 67,
            "pull_request_review_id": 1798555195,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437952177/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T02:23:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437952177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438628871"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438628871"
                }
            },
            "author_association": "MEMBER",
            "body": "pairs or ipairs?",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T15:18:55Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438628871",
            "id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vv7wH",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799565931,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438628871/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T15:18:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438628871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438630349"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438630349"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "good call, should be `ipairs`. We shouldn't have any non-numeric keys at this point, but that is safer and makes it more clear what we're doing ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T15:24:32Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438630349",
            "id": 1438630349,
            "in_reply_to_id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vv8HN",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799566329,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438630349/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T15:24:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438630349",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438635830"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438635830"
                }
            },
            "author_association": "MEMBER",
            "body": "Also, the behaviors on a table like `{ nil, 2 }` or `{ [2] = 2 }` are different. It would be great if this as well can be included in the tests.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T15:43:42Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438635830",
            "id": 1438635830,
            "in_reply_to_id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vv9c2",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799567600,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438635830/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T15:44:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438635830",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438679848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438679848"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "hmm. not allowing `nil` in a list-like iterator seems to be a peculiarity of `Iter:new()`. The second case makes more sense, because that table isn't really list-like. I can add tests and examples in the docs for these ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T18:35:08Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438679848",
            "id": 1438679848,
            "in_reply_to_id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwIMo",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799579254,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438679848/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T18:35:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438679848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438680167"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438680167"
                }
            },
            "author_association": "MEMBER",
            "body": "lists are tables that are indexed with consecutive(!) integers starting from 1, so the first table is also not list-like.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T18:36:55Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438680167",
            "id": 1438680167,
            "in_reply_to_id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwIRn",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799579355,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438680167/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T18:36:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438680167",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438681715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438681715"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@clason interesting, I would have thought the structure was `{[1] = nil, [2] = 2}`, did not know lua works like this:\r\n\r\n```lua\r\nlua print(vim.inspect({nil, 2}))\r\n```\r\ngives `{ [2] = 2 }`",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T18:43:08Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438681715",
            "id": 1438681715,
            "in_reply_to_id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwIpz",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799579764,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438681715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T18:43:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438681715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438681986"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438681986"
                }
            },
            "author_association": "MEMBER",
            "body": "You use `nil` to delete a key, so these two tables are (have to be) equivalent.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T18:44:33Z",
            "diff_hunk": "@@ -179,6 +194,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a: 2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 3}`)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth)\n+    if flattened ~= nil then\n+      for _, flat_v in pairs(flattened) do",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438681986",
            "id": 1438681986,
            "in_reply_to_id": 1438628871,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwIuC",
            "original_commit_id": "4d59d9c524152bd31c073131e11d2dca7bc81873",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799579824,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438681986/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T18:44:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438681986",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687285"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687285"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction Iter.flatten(self, depth) -- luacheck: no unused args\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:06:31Z",
            "diff_hunk": "@@ -179,6 +194,59 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({[2] = 2}):flat():totable()\n+--- vim.iter({nil, 2})\n+---\n+--- ```\n+--- Both give an error because the iterator being flattened is not list-like\n+--- (the indices in the source table are not consecutive)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687285",
            "id": 1438687285,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKA1",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 223,
            "original_position": 52,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687285/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687285",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687469"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687469"
                }
            },
            "author_association": "MEMBER",
            "body": "If this only works on list-like tables then the docstring should mention that (use other list-like only functions in this file as a reference).",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:07:16Z",
            "diff_hunk": "@@ -179,6 +194,59 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687469",
            "id": 1438687469,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKDt",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 198,
            "original_position": 27,
            "original_start_line": 197,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687469/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687781"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687781"
                }
            },
            "author_association": "MEMBER",
            "body": "I don't think we need to explain what \"list-like\" means here. There are already other places that do that, and if needs to be repeated there are more appropriate locations. For the this function's docstring, assume that \"only works for list-like tables\" is well understood. No need to provide anti-examples.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:08:35Z",
            "diff_hunk": "@@ -179,6 +194,59 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({[2] = 2}):flat():totable()\n+--- vim.iter({nil, 2})\n+---\n+--- ```\n+--- Both give an error because the iterator being flattened is not list-like\n+--- (the indices in the source table are not consecutive)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687781",
            "id": 1438687781,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKIl",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 218,
            "original_position": 47,
            "original_start_line": 212,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687781/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687781",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687821"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687821"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction ListIter.flatten(self, depth)\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:08:48Z",
            "diff_hunk": "@@ -179,6 +194,59 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({[2] = 2}):flat():totable()\n+--- vim.iter({nil, 2})\n+---\n+--- ```\n+--- Both give an error because the iterator being flattened is not list-like\n+--- (the indices in the source table are not consecutive)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args\n+  error('flat() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flat(self, depth)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438687821",
            "id": 1438687821,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKJN",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 229,
            "original_position": 58,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687821/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438687821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438688065"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688065"
                }
            },
            "author_association": "MEMBER",
            "body": "Only list-like tables are accepted:\r\n\r\n```suggestion\r\n---@param src table List-like table to flatten\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:09:54Z",
            "diff_hunk": "@@ -1052,6 +1120,23 @@ function M.map(f, src, ...)\n   return Iter.new(src, ...):map(f):totable()\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values\n+---\n+--- ```lua\n+--- -- Equivalent to:\n+--- vim.iter(src):flat():totable()\n+--- ```\n+---\n+---@see |Iter:flat()|\n+---\n+---@param src table|function Table or iterator function to flatten",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438688065",
            "id": 1438688065,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKNB",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 1132,
            "original_position": 95,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688065/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688065",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438688152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688152"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction M.flatten(src, depth, ...)\r\n  return Iter.new(src, ...):flatten(depth):totable()\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:10:04Z",
            "diff_hunk": "@@ -1052,6 +1120,23 @@ function M.map(f, src, ...)\n   return Iter.new(src, ...):map(f):totable()\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values\n+---\n+--- ```lua\n+--- -- Equivalent to:\n+--- vim.iter(src):flat():totable()\n+--- ```\n+---\n+---@see |Iter:flat()|\n+---\n+---@param src table|function Table or iterator function to flatten\n+---@param depth number|nil Depth to which the iterable should be flattened\n+---                        (defaults to 1)\n+---@return table\n+function M.flat(src, depth, ...)\n+  return Iter.new(src, ...):flat(depth):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438688152",
            "id": 1438688152,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKOY",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 1137,
            "original_position": 100,
            "original_start_line": 1136,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688152/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438688436"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688436"
                }
            },
            "author_association": "MEMBER",
            "body": "Here and throughout: let's leave these kinds of formatting changes out of this PR, as it makes it more difficult to actually review what has changed. Test files are intentionally _not_ autoformatted right now, but that will (probably) change in the future, at which point these kinds of changes will be done.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:11:04Z",
            "diff_hunk": "@@ -10,7 +10,7 @@ describe('vim.iter', function()\n     rb:push(\"b\")\n \n     local it = vim.iter(rb)\n-    eq({\"a\", \"b\"}, it:totable())\n+    eq({ \"a\", \"b\" }, it:totable())",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438688436",
            "id": 1438688436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKS0",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 13,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": null,
            "pull_request_review_id": 1799581603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688436/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:11:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438688436",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438689135"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438689135"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "since the other members here are in the imperative voice, that probably makes more sense 👍 ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:14:31Z",
            "diff_hunk": "@@ -1052,6 +1120,23 @@ function M.map(f, src, ...)\n   return Iter.new(src, ...):map(f):totable()\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values\n+---\n+--- ```lua\n+--- -- Equivalent to:\n+--- vim.iter(src):flat():totable()\n+--- ```\n+---\n+---@see |Iter:flat()|\n+---\n+---@param src table|function Table or iterator function to flatten\n+---@param depth number|nil Depth to which the iterable should be flattened\n+---                        (defaults to 1)\n+---@return table\n+function M.flat(src, depth, ...)\n+  return Iter.new(src, ...):flat(depth):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438689135",
            "id": 1438689135,
            "in_reply_to_id": 1438688152,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwKdv",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 1137,
            "original_position": 100,
            "original_start_line": 1136,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799582074,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438689135/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:14:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438689135",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438690650"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438690650"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "yes, I used the same language from slice: https://github.com/rudiejd/neovim/blob/f727dd00166e60534bde9001795d849fd40f5ac0/runtime/lua/vim/iter.lua#L855 \r\n\r\nnamely the `|list-iterator|` part ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:20:25Z",
            "diff_hunk": "@@ -179,6 +194,59 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438690650",
            "id": 1438690650,
            "in_reply_to_id": 1438687469,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwK1a",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 198,
            "original_position": 27,
            "original_start_line": 197,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799582393,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438690650/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438690650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438691665"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438691665"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Changed to flatten throughout",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:24:16Z",
            "diff_hunk": "@@ -179,6 +194,59 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens an |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {{3}}}):flat():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({[2] = 2}):flat():totable()\n+--- vim.iter({nil, 2})\n+---\n+--- ```\n+--- Both give an error because the iterator being flattened is not list-like\n+--- (the indices in the source table are not consecutive)\n+---\n+---@param depth number|nil Depth to which iterator pipeline should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flat(self, depth) -- luacheck: no unused args",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438691665",
            "id": 1438691665,
            "in_reply_to_id": 1438687285,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwLFR",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 223,
            "original_position": 52,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799582613,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438691665/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:24:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438691665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438693095"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438693095"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "sorry about that, I wrongly assumed the tests were autoformatted and formatted before pushing. should be fixed now ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-30T19:29:35Z",
            "diff_hunk": "@@ -10,7 +10,7 @@ describe('vim.iter', function()\n     rb:push(\"b\")\n \n     local it = vim.iter(rb)\n-    eq({\"a\", \"b\"}, it:totable())\n+    eq({ \"a\", \"b\" }, it:totable())",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438693095",
            "id": 1438693095,
            "in_reply_to_id": 1438688436,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwLbn",
            "original_commit_id": "17bbed66c8581514d6a0430f856601bc3abd82e6",
            "original_line": 13,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": null,
            "pull_request_review_id": 1799582945,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438693095/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:29:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438693095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438941070"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438941070"
                }
            },
            "author_association": "MEMBER",
            "body": "Please add a proper docstring to this function (including type annotations for parameters)",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2023-12-31T23:55:06Z",
            "diff_hunk": "@@ -112,6 +112,21 @@ local function sanitize(t)\n   return t\n end\n \n+-- this returns a table that contains the flattened v",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438941070",
            "id": 1438941070,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VxH-O",
            "original_commit_id": "ea992761c2ddcb03d86c9cbd3bc941890c92e6d3",
            "original_line": 115,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799698485,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438941070/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-31T23:55:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438941070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1438957230"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438957230"
                }
            },
            "author_association": "MEMBER",
            "body": "Why does it not fully flatten the table? Because the default `depth` is 1? What would be the rationale of choosing 1 as the default depth? Shouldn't we flatten the entire table by default?",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T03:57:29Z",
            "diff_hunk": "@@ -179,6 +199,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1438957230",
            "id": 1438957230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VxL6u",
            "original_commit_id": "30ece8ceed8609bd50648fc87b023ebbb52b3573",
            "original_line": 215,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799716632,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438957230/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T03:57:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438957230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439033052"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439033052"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "By choosing that default, I was trying to mimic the behavior of the [ECMAScript method](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat) `Arrays.prototype.flat`, which was mentioned in the original issue thread. That is probably the implementation with which people are most familiar. \r\n\r\nFully flattening by default is definitely another option here. ES uses a depth of infinity to fully flatten a table, but comparisons with infinity, which could be less intuitive to users. in Lua: \r\n\r\n```lua\r\n-- flatten a table to infinite depth (math.huge = inf)\r\nprint(vim.inspect(vim.iter.flatten({1, {2}, {{3}}, {{{{4}}}}}, math.huge)))\r\n\r\n```\r\n",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T14:00:07Z",
            "diff_hunk": "@@ -179,6 +199,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439033052",
            "id": 1439033052,
            "in_reply_to_id": 1438957230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vxebc",
            "original_commit_id": "30ece8ceed8609bd50648fc87b023ebbb52b3573",
            "original_line": 215,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799810210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439033052/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T14:00:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439033052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439033404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439033404"
                }
            },
            "author_association": "MEMBER",
            "body": "I see, that makes a sense and I'm now convinced with `depth` defaulting to 1. New (better) defaults for the new API is good :)",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T14:02:28Z",
            "diff_hunk": "@@ -179,6 +199,51 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- The flattened list will exclude nil, and any values with non-numeric keys\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {a = 2}, {nil, {nil}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {}, 3}`)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439033404",
            "id": 1439033404,
            "in_reply_to_id": 1438957230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vxeg8",
            "original_commit_id": "30ece8ceed8609bd50648fc87b023ebbb52b3573",
            "original_line": 215,
            "original_position": 44,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1799810615,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439033404/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T14:02:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439033404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439045696"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045696"
                }
            },
            "author_association": "MEMBER",
            "body": "\r\n`flat` is shorter and is what https://github.com/neovim/neovim/issues/26454 specifies.\r\n```suggestion\r\nIter:flat({depth})                                         *Iter:flat()*\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T15:21:31Z",
            "diff_hunk": "@@ -3388,6 +3405,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439045696",
            "id": 1439045696,
            "line": 3416,
            "node_id": "PRRC_kwDOAPphoM5VxhhA",
            "original_commit_id": "f4d8afbbb123d278d7ecc4f480a223be0871fed2",
            "original_line": 3416,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 4,
            "pull_request_review_id": 1799824969,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045696/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T15:21:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439045710"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045710"
                }
            },
            "author_association": "MEMBER",
            "body": "See https://github.com/neovim/neovim/pull/26786#discussion_r1438688152",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T15:21:42Z",
            "diff_hunk": "@@ -3388,6 +3405,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439045710",
            "id": 1439045710,
            "in_reply_to_id": 1439045696,
            "line": 3416,
            "node_id": "PRRC_kwDOAPphoM5VxhhO",
            "original_commit_id": "f4d8afbbb123d278d7ecc4f480a223be0871fed2",
            "original_line": 3416,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 4,
            "pull_request_review_id": 1799824990,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045710/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T15:21:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439045815"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045815"
                }
            },
            "author_association": "MEMBER",
            "body": "This is not worth adding as a `vim.iter` function. We can always change that later, but for now we should not enter this one-way door. `vim.iter(...):flat():totable()` is perfectly reasonable.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T15:22:31Z",
            "diff_hunk": "@@ -3296,6 +3296,23 @@ filter({f}, {src}, {...})                                  *vim.iter.filter()*\n     See also: ~\n       • |Iter:filter()|\n \n+flatten({src}, {depth}, {...})                            *vim.iter.flatten()*",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439045815",
            "id": 1439045815,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vxhi3",
            "original_commit_id": "f4d8afbbb123d278d7ecc4f480a223be0871fed2",
            "original_line": 3299,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1799825134,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045815/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T15:22:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439045815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439046330"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439046330"
                }
            },
            "author_association": "MEMBER",
            "body": "Shorter is better. @gpanders do you mind if we use `flat`",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T15:25:46Z",
            "diff_hunk": "@@ -3388,6 +3405,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439046330",
            "id": 1439046330,
            "in_reply_to_id": 1439045696,
            "line": 3416,
            "node_id": "PRRC_kwDOAPphoM5Vxhq6",
            "original_commit_id": "f4d8afbbb123d278d7ecc4f480a223be0871fed2",
            "original_line": 3416,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 4,
            "pull_request_review_id": 1799825618,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439046330/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-01T15:25:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439046330",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439077611"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439077611"
                }
            },
            "author_association": "MEMBER",
            "body": "> Shorter is better. @gpanders do you mind if we use `flat`\r\n\r\nConsistent is also better. `flat()` feels like a very bizarre function name, it is neither a noun nor a verb. The rest of the API in vim.iter() (and our API in general) uses verbs for function names to indicate it “does something”.\r\n\r\n`flatten` is also, as far as I know, much more common in other languages. In fact, aside from the one JavaScript implementation you linked to I’ve never seen such a function called `flat` https://rosettacode.org/wiki/Flatten_a_list\r\n\r\nhttps://v2.ocaml.org/api/List.html#VALflatten\r\n\r\nhttps://doc.rust-lang.org/std/iter/trait.Iterator.html#method.flatten\r\n\r\nhttps://www.erlang.org/doc/man/lists#flatten-1",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-01T19:55:16Z",
            "diff_hunk": "@@ -3388,6 +3405,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439077611",
            "id": 1439077611,
            "in_reply_to_id": 1439045696,
            "line": 3416,
            "node_id": "PRRC_kwDOAPphoM5VxpTr",
            "original_commit_id": "f4d8afbbb123d278d7ecc4f480a223be0871fed2",
            "original_line": 3416,
            "original_position": 28,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 4,
            "pull_request_review_id": 1799858196,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439077611/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T15:14:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439077611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439723603"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439723603"
                }
            },
            "author_association": "MEMBER",
            "body": "This note seems misleading. Can a `|list-iterator|` ever have a non-numeric key? \r\n\r\nIs `|list-iterator|` only required at the \"top level\" (and then next question would be \"why\")?\r\n",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-02T18:50:29Z",
            "diff_hunk": "@@ -3388,6 +3388,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. The\n+    flattened list will exclude nil, and any values with non-numeric keys",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439723603",
            "id": 1439723603,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V0HBT",
            "original_commit_id": "2760b1c1ca3aa5f70c036c3d68cd010a5f86d6ca",
            "original_line": 3393,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1800863884,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439723603/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T18:51:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439723603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439726030"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439726030"
                }
            },
            "author_association": "MEMBER",
            "body": "Seems strange that it oblietrates nested maps. Was this already discussed? How are maps/dicts treated in other flatten() implementations (e.g. JS, erlang)?\r\n\r\nIn JS a nested \"map\" is an object. And in Lua, a table has a similar role: it's a basic \"object\" whose keys are its properties/members. So I don't see why it should be hollowed out by flatten(). \r\n\r\n```suggestion\r\n    <(returns `{1, {a = 2}, 3}` )\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-02T18:54:05Z",
            "diff_hunk": "@@ -3388,6 +3388,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. The\n+    flattened list will exclude nil, and any values with non-numeric keys\n+\n+    Example:\n+\n+    >lua\n+        vim.iter({1, {2}, {{3}}}):flatten():totable()\n+\n+    <(returns `{1, 2, {3}}` )\n+\n+    >lua\n+        vim.iter({1, {a = 2}, {nil, {nil}}, {3}}):flatten():totable()\n+\n+    <(returns `{1, {}, 3}` )",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439726030",
            "id": 1439726030,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V0HnO",
            "original_commit_id": "2760b1c1ca3aa5f70c036c3d68cd010a5f86d6ca",
            "original_line": 3405,
            "original_position": 18,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1800867691,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439726030/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T18:55:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439726030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439731056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439731056"
                }
            },
            "author_association": "MEMBER",
            "body": "If a value looks like a dict-like table, it should be preserved. We should be able to flatten lists of dicts.\r\n\r\n    eq({ { a = 1}, { b = 2} }, vim.iter({ { { a = 1}, { b = 2} } }):flatten():totable())",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-02T19:00:59Z",
            "diff_hunk": "@@ -390,6 +390,37 @@ describe('vim.iter', function()\n     end))\n   end)\n \n+  it('flatten()', function()\n+    local t = { { 1, { 2 } }, { { { { 3 } } }, { 4 } }, { 5 } }\n+\n+    eq({ 1, { 2 }, { { { 3 } } }, { 4 }, 5 }, vim.iter(t):flatten():totable())\n+    eq({ 1, 2, { { 3 } }, 4, 5 }, vim.iter(t):flatten(2):totable())\n+    eq({ 1, 2, { 3 }, 4, 5 }, vim.iter(t):flatten(3):totable())\n+    eq({ 1, 2, 3, 4, 5 }, vim.iter(t):flatten(4):totable())\n+\n+    local corner = { 1, { 2, 3, nil, 4 }, 5, { 6, a = 7, b = 8 } }\n+    eq({ 1, 2, 3, 4, 5, 6 }, vim.iter(corner):flatten():totable())",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439731056",
            "id": 1439731056,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V0I1w",
            "original_commit_id": "2760b1c1ca3aa5f70c036c3d68cd010a5f86d6ca",
            "original_line": 402,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": null,
            "pull_request_review_id": 1800875301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439731056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T19:01:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439731056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1439799727"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439799727"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This is now required at every level",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-02T20:39:13Z",
            "diff_hunk": "@@ -3388,6 +3388,29 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. The\n+    flattened list will exclude nil, and any values with non-numeric keys",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1439799727",
            "id": 1439799727,
            "in_reply_to_id": 1439723603,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5V0Zmv",
            "original_commit_id": "2760b1c1ca3aa5f70c036c3d68cd010a5f86d6ca",
            "original_line": 3393,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1800980291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439799727/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T20:39:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439799727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444695032"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444695032"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    -- { 1, 2, { 3 } }\r\n<\r\n```\r\n(for example)\r\n\r\nLet's make the formatting consistent with others, e.g. `Iter:enumerate()`, `Iter:find()`, etc. Also please use proper whitespaces throughout the examples, as per the standard stylua style.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:03:38Z",
            "diff_hunk": "@@ -3388,6 +3388,34 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. Errors if\n+    it attempts to flatten a dict-like value\n+\n+    Example:\n+\n+    >lua\n+        vim.iter({1, {2}, {{3}}}):flatten():totable()\n+\n+    <(returns `{1, 2, {3}}` )",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444695032",
            "id": 1444695032,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHEv4",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 3425,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1809176810,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444695032/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:33:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444695032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444695669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444695669"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Errors if it attempts to flatten a dict-like value.\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:04:06Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- Errors if it attempts to flatten a dict-like value",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444695669",
            "id": 1444695669,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHE51",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 212,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809176810,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444695669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444695669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444696618"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444696618"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:04:44Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444696618",
            "id": 1444696618,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHFIq",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 211,
            "original_position": 40,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809176810,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444696618/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:16:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444696618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444704332"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444704332"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\r\n```\r\n",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:09:21Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- Errors if it attempts to flatten a dict-like value\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten(2):totable()",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444704332",
            "id": 1444704332,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHHBM",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 227,
            "original_position": 56,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809176810,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444704332/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444704332",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444707521"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444707521"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@param depth? number Depth to which |list-iterator| should be flattened\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:11:32Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- Errors if it attempts to flatten a dict-like value\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten(2):totable()\n+--- ```\n+--- errors because it attempts to flatten a dict-like table ({a = 2})\n+---@param depth number|nil Depth to which |list-iterator| pipeline should be flattened",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444707521",
            "id": 1444707521,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHHzB",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809176810,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444707521/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444707521",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444731218"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444731218"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it should be `@param depth number?`, per https://luals.github.io/wiki/annotations/#documenting-types:\r\n\r\n>Adding a question mark (?) after a type like boolean? or number? is the same as saying boolean|nil or number|nil. ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:25:07Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- Errors if it attempts to flatten a dict-like value\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten(2):totable()\n+--- ```\n+--- errors because it attempts to flatten a dict-like table ({a = 2})\n+---@param depth number|nil Depth to which |list-iterator| pipeline should be flattened",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444731218",
            "id": 1444731218,
            "in_reply_to_id": 1444707521,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHNlS",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809224715,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444731218/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:25:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444731218",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444740271"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444740271"
                }
            },
            "author_association": "MEMBER",
            "body": "Typing-wise `@param depth? number`, `@param depth number?`, `@param depth number|nil`, are all equivalent because Lua does not distinguish between `.flatten(nil)` and `.flatten()` , but to me `depth?` more sounds like an *optional* parameter. In the neovim codebase we mix these interchangeably and I know `@param depth number|nil` style is often used, so I don't have a strong preference here.\r\n\r\nhttps://luals.github.io/wiki/annotations/#param\r\n> Putting a question mark (?) after the parameter name will mark it as optional, meaning nil is an accepted type",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:30:48Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- Errors if it attempts to flatten a dict-like value\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten(2):totable()\n+--- ```\n+--- errors because it attempts to flatten a dict-like table ({a = 2})\n+---@param depth number|nil Depth to which |list-iterator| pipeline should be flattened",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444740271",
            "id": 1444740271,
            "in_reply_to_id": 1444707521,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHPyv",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809236712,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444740271/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:31:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444740271",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444769616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444769616"
                }
            },
            "author_association": "MEMBER",
            "body": "In general, if there's no observable difference for our tooling (both luals and our doc generator script), either variant is acceptable, but the usage should be consistent at least within a file.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:49:54Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator| pipeline, un-nesting nested values.\n+--- Errors if it attempts to flatten a dict-like value\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten(2):totable()\n+--- ```\n+--- errors because it attempts to flatten a dict-like table ({a = 2})\n+---@param depth number|nil Depth to which |list-iterator| pipeline should be flattened",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444769616",
            "id": 1444769616,
            "in_reply_to_id": 1444707521,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHW9Q",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 230,
            "original_position": 59,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809276612,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444769616/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T14:50:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444769616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444785455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444785455"
                }
            },
            "author_association": "MEMBER",
            "body": "I see this is not fixed yet? Please look at how other methods are showing \"Examples\".",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T14:59:04Z",
            "diff_hunk": "@@ -3388,6 +3388,34 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. Errors if\n+    it attempts to flatten a dict-like value\n+\n+    Example:\n+\n+    >lua\n+        vim.iter({1, {2}, {{3}}}):flatten():totable()\n+\n+    <(returns `{1, 2, {3}}` )",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444785455",
            "id": 1444785455,
            "in_reply_to_id": 1444695032,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHa0v",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 3425,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1809297373,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444785455/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T15:00:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444785455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444810737"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444810737"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "sorry, I think I tried to apply this suggestion but didn't realize it was a comment on the doc file itself",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T15:15:37Z",
            "diff_hunk": "@@ -3388,6 +3388,34 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. Errors if\n+    it attempts to flatten a dict-like value\n+\n+    Example:\n+\n+    >lua\n+        vim.iter({1, {2}, {{3}}}):flatten():totable()\n+\n+    <(returns `{1, 2, {3}}` )",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444810737",
            "id": 1444810737,
            "in_reply_to_id": 1444695032,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WHg_x",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 3425,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1809331738,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444810737/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T15:16:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444810737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444939870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444939870"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Flattens a single list-like table. Errors if it attempts to flatten a\r\n--- dict-like table\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T16:18:05Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444939870",
            "id": 1444939870,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIAhe",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 116,
            "original_position": 5,
            "original_start_line": 115,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809522503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444939870/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T16:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444939870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444940861"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444940861"
                }
            },
            "author_association": "MEMBER",
            "body": "What does `(internal)` mean? That's not a convention that I've seen used in the Neovim code base.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T16:18:44Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444940861",
            "id": 1444940861,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIAw9",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 120,
            "original_position": 9,
            "original_start_line": 119,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809522503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444940861/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T16:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444940861",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444942474"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444942474"
                }
            },
            "author_association": "MEMBER",
            "body": "The error message doesn't seem to match the comment? Should this say \"non-list like table encountered\"?\r\n\r\nThere should be a test case covering this scenario (that matches on the error text).",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T16:19:45Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('list like table encountered')",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444942474",
            "id": 1444942474,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIBKK",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 132,
            "original_position": 21,
            "original_start_line": 130,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809522503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444942474/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T16:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444942474",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444943129"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444943129"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- -- {1, 2, {3}}\r\n--- ```\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T16:20:12Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444943129",
            "id": 1444943129,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIBUZ",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 219,
            "original_position": 48,
            "original_start_line": 218,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809522503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444943129/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T16:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444943129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444943789"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444943789"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- ```lua\r\n--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\r\n--- -- {1, {a = 2}, 3}\r\n--- ```\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T16:20:34Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444943789",
            "id": 1444943789,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIBet",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 224,
            "original_position": 53,
            "original_start_line": 221,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809522503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444943789/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T16:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444943789",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1444945051"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444945051"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- ```lua\r\n--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\r\n--- -- error: attempt to flatten a dict-like table\r\n--- ```\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T16:21:23Z",
            "diff_hunk": "@@ -179,6 +208,60 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Example:\n+---\n+--- ```lua\n+--- vim.iter({1, {2}, {{3}}}):flatten():totable()\n+--- ```\n+--- (returns `{1, 2, {3}}`)\n+---\n+--- ```lua\n+--- vim.iter({1, {{a = 2}}, {3}}):flatten():totable()\n+--- ```\n+--- (returns `{1, {a = 2}, 3}`)\n+---\n+--- ```lua\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- ```\n+--- errors because it attempts to flatten a dict-like table ({a = 2})",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1444945051",
            "id": 1444945051,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIByb",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 229,
            "original_position": 58,
            "original_start_line": 226,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809522503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444945051/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T16:21:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1444945051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445108697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445108697"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "this is fixed now",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T18:20:52Z",
            "diff_hunk": "@@ -3388,6 +3388,34 @@ Iter:find({f})                                                   *Iter:find()*\n     Return: ~\n         any\n \n+Iter:flatten({depth})                                         *Iter:flatten()*\n+    Flattens a |list-iterator| pipeline, un-nesting nested values. Errors if\n+    it attempts to flatten a dict-like value\n+\n+    Example:\n+\n+    >lua\n+        vim.iter({1, {2}, {{3}}}):flatten():totable()\n+\n+    <(returns `{1, 2, {3}}` )",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445108697",
            "id": 1445108697,
            "in_reply_to_id": 1444695032,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIpvZ",
            "original_commit_id": "c31140652694bce86b1958bf20a8507db7b582b2",
            "original_line": 3425,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1809746075,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445108697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-08T18:20:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445108697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445111379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445111379"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "this is the error text in the helper method - it isn't surfaced to the actual method. there is a test case that covers this scenario: https://github.com/neovim/neovim/pull/26786/files#diff-23eaf1539c9c72672e24dc1ba1cbe1e57dc45822d8132408e12b54c76ff4a20fR420 ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T18:23:03Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('list like table encountered')",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445111379",
            "id": 1445111379,
            "in_reply_to_id": 1444942474,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIqZT",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 132,
            "original_position": 21,
            "original_start_line": 130,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809749685,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445111379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T18:23:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445111379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445125444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445125444"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "this is a helper function that recursively flattens a table, and these variables are only used at higher levels of recursion - not on the initial call. that's what I meant here - I can remove this if it's confusing ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T18:34:47Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445125444",
            "id": 1445125444,
            "in_reply_to_id": 1444940861,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WIt1E",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 120,
            "original_position": 9,
            "original_start_line": 119,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1809766693,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445125444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T18:34:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445125444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445366408"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445366408"
                }
            },
            "author_association": "MEMBER",
            "body": "Is the error text correct? It doesn't look like it -- as I said above, the comment seems to contradict the error text.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T21:34:52Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('list like table encountered')",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445366408",
            "id": 1445366408,
            "in_reply_to_id": 1444942474,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WJoqI",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 132,
            "original_position": 21,
            "original_start_line": 130,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1810063334,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445366408/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T21:34:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445366408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445376492"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445376492"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "ohh I see what you're saying. yes, this error text is incorrect even though it isn't what is being returned to the user. I will fix that",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-08T21:44:37Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+---Flattens a single list-like table. Errors if it attempts to flatten a\n+---dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('list like table encountered')",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445376492",
            "id": 1445376492,
            "in_reply_to_id": 1444942474,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WJrHs",
            "original_commit_id": "973930fcd05606001ca9dd92939b119c6b1845b7",
            "original_line": 132,
            "original_position": 21,
            "original_start_line": 130,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1810076874,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445376492/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-08T21:44:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445376492",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445545102"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545102"
                }
            },
            "author_association": "MEMBER",
            "body": "This can just be `assert(v[i])`.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T01:48:59Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+--- Flattens a single list-like table. Errors if it attempts to flatten a\n+--- dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('dict-like table encountered')\n+        return res\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445545102",
            "id": 1445545102,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WKUSO",
            "original_commit_id": "41673ee6ede53c2b1fce24c88b73e72689d8c421",
            "original_line": 135,
            "original_position": 23,
            "original_start_line": 131,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1810286911,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545102/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T01:48:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545102",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445545302"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545302"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n      assert(v[i])\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T01:49:24Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+--- Flattens a single list-like table. Errors if it attempts to flatten a\n+--- dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('dict-like table encountered')\n+        return res\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445545302",
            "id": 1445545302,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WKUVW",
            "original_commit_id": "41673ee6ede53c2b1fce24c88b73e72689d8c421",
            "original_line": 135,
            "original_position": 23,
            "original_start_line": 131,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1810287225,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545302/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T01:49:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1445545868"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545868"
                }
            },
            "author_association": "MEMBER",
            "body": "Actually why not just ditch the error completely and return `nil` if the input is invalid. Then at the call site you can check the return value for `nil` rather than use `pcall`.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T01:50:35Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+--- Flattens a single list-like table. Errors if it attempts to flatten a\n+--- dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('dict-like table encountered')\n+        return res\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1445545868",
            "id": 1445545868,
            "in_reply_to_id": 1445545302,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WKUeM",
            "original_commit_id": "41673ee6ede53c2b1fce24c88b73e72689d8c421",
            "original_line": 135,
            "original_position": 23,
            "original_start_line": 131,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1810288044,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545868/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T01:50:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1445545868",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446063955"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446063955"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I originally tried to do this, but I couldn't get it working in the case where the dict-like table is nested deeper than the first level that is flattened. I'd return `nil` for that one entry, but the return value of the helper function would not be `nil`. I also wanted to exit the recursion early when a dict-like table was encountered, and an exception seemed like the easiest way to do that. My mental model could totally be wrong though - this is my first time diving deep into lua 😅 ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T13:00:24Z",
            "diff_hunk": "@@ -112,6 +112,35 @@ local function sanitize(t)\n   return t\n end\n \n+--- Flattens a single list-like table. Errors if it attempts to flatten a\n+--- dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      if v[i] == nil then\n+        error('dict-like table encountered')\n+        return res\n+      end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446063955",
            "id": 1446063955,
            "in_reply_to_id": 1445545302,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMS9T",
            "original_commit_id": "41673ee6ede53c2b1fce24c88b73e72689d8c421",
            "original_line": 135,
            "original_position": 23,
            "original_start_line": 131,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811109510,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446063955/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T13:00:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446063955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446119603"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446119603"
                }
            },
            "author_association": "MEMBER",
            "body": "Ditch the `(internal)` marker, make the arguments non-optional, we can provide initial values in the call site in `Iter:flatten()`.\r\n\r\nI'm also fine naming this local function just `flatten`.\r\n\r\n```suggestion\r\n--- Flattens a single list-like table. Errors if it attempts to flatten a\r\n--- dict-like table\r\n---@param v table table which should be flattened\r\n---@param max_depth number depth to which the table should be flattened\r\n---@param depth number current iteration depth\r\n---@param result table output table that contains flattened result\r\n---@return table flattened table if it can be flattened, otherwise nil\r\nlocal function flatten(v, max_depth, depth, result)\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T13:58:11Z",
            "diff_hunk": "@@ -112,6 +112,32 @@ local function sanitize(t)\n   return t\n end\n \n+--- Flattens a single list-like table. Errors if it attempts to flatten a\n+--- dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446119603",
            "id": 1446119603,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMgiz",
            "original_commit_id": "fb83407338633691ce2f45b8bba503ca630dedcf",
            "original_line": 124,
            "original_position": 13,
            "original_start_line": 115,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811202266,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446119603/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T14:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446119603",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446120962"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446120962"
                }
            },
            "author_association": "MEMBER",
            "body": "Remove `assert`\r\n\r\n```suggestion\r\n      i = i + 1\r\n\r\n      if v[i] == nil then\r\n        -- short-circuit: this is not a list like table\r\n        return nil\r\n      end\r\n\r\n      if flatten_single_list(v[i], max_depth, depth, result) == nil then\r\n        return nil\r\n      end\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T13:59:24Z",
            "diff_hunk": "@@ -112,6 +112,32 @@ local function sanitize(t)\n   return t\n end\n \n+--- Flattens a single list-like table. Errors if it attempts to flatten a\n+--- dict-like table\n+---@param v table table which should be flattened\n+---@param max_depth number depth to which the table should be flattened\n+---@param initial_depth number|nil (internal) starting depth (defaulted to 0)\n+---@param result table|nil (internal) flattened in each iteration (defaulted to {})\n+---@return table flattened table if it can be flattened, otherwise nil\n+local function flatten_single_list(v, max_depth, initial_depth, result)\n+  local d = initial_depth or 0\n+  local res = result or {}\n+\n+  if d < max_depth and type(v) == 'table' then\n+    local i = 0\n+    for _ in pairs(v) do\n+      i = i + 1\n+      -- short-circuit: this is not a list like table\n+      assert(v[i])\n+      flatten_single_list(v[i], max_depth, d + 1, res)",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446120962",
            "id": 1446120962,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMg4C",
            "original_commit_id": "fb83407338633691ce2f45b8bba503ca630dedcf",
            "original_line": 132,
            "original_position": 21,
            "original_start_line": 129,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811202266,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446120962/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T14:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446120962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446122080"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446122080"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local flattened = flatten(self._table[i], depth, 0, {})\r\n\r\n    -- exit early if we try to flatten a dict-like table\r\n    if flattened == nil\r\n      error('flatten() requires a list-like table')\r\n      return self\r\n    end\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T14:00:26Z",
            "diff_hunk": "@@ -179,6 +205,56 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---@param depth? number Depth to which |list-iterator| should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flatten(self, depth) -- luacheck: no unused args\n+  error('flatten() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flatten(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local ok, flattened = pcall(flatten_single_list, self._table[i], depth)\n+\n+    -- exit early if we try to flatten a dict-like table\n+    if not ok then\n+      error('flatten() requires a list-like table')\n+      return self\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446122080",
            "id": 1446122080,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMhJg",
            "original_commit_id": "fb83407338633691ce2f45b8bba503ca630dedcf",
            "original_line": 248,
            "original_position": 74,
            "original_start_line": 239,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811202266,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446122080/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T14:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446122080",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446122739"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446122739"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    for _, v in pairs(flattened) do\r\n      target[#target + 1] = v\r\n    end\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T14:01:00Z",
            "diff_hunk": "@@ -179,6 +205,56 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---@param depth? number Depth to which |list-iterator| should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flatten(self, depth) -- luacheck: no unused args\n+  error('flatten() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flatten(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local ok, flattened = pcall(flatten_single_list, self._table[i], depth)\n+\n+    -- exit early if we try to flatten a dict-like table\n+    if not ok then\n+      error('flatten() requires a list-like table')\n+      return self\n+    end\n+\n+    for _, flat_v in pairs(flattened) do\n+      target[n] = flat_v\n+      n = n + inc\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446122739",
            "id": 1446122739,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMhTz",
            "original_commit_id": "fb83407338633691ce2f45b8bba503ca630dedcf",
            "original_line": 252,
            "original_position": 79,
            "original_start_line": 247,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811202266,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446122739/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T14:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446122739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446123746"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446123746"
                }
            },
            "author_association": "MEMBER",
            "body": "We need to set `self._head` back to 1 here since we are assigning a new table\r\n\r\n```suggestion\r\n\r\n  self._head = 1\r\n  self._tail = #target + 1\r\n  self._table = target\r\n  return self\r\nend\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T14:01:57Z",
            "diff_hunk": "@@ -179,6 +205,56 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---@param depth? number Depth to which |list-iterator| should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flatten(self, depth) -- luacheck: no unused args\n+  error('flatten() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flatten(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local ok, flattened = pcall(flatten_single_list, self._table[i], depth)\n+\n+    -- exit early if we try to flatten a dict-like table\n+    if not ok then\n+      error('flatten() requires a list-like table')\n+      return self\n+    end\n+\n+    for _, flat_v in pairs(flattened) do\n+      target[n] = flat_v\n+      n = n + inc\n+    end\n+  end\n+\n+  self._tail = n\n+  self._table = target\n+  return self\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446123746",
            "id": 1446123746,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WMhji",
            "original_commit_id": "fb83407338633691ce2f45b8bba503ca630dedcf",
            "original_line": 259,
            "original_position": 85,
            "original_start_line": 252,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811202266,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446123746/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T14:03:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446123746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446212545"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446212545"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "thank you for catching this!",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T15:07:40Z",
            "diff_hunk": "@@ -179,6 +205,56 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---@param depth? number Depth to which |list-iterator| should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flatten(self, depth) -- luacheck: no unused args\n+  error('flatten() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flatten(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  local n = 1\n+  for i = self._head, self._tail - inc, inc do\n+    local ok, flattened = pcall(flatten_single_list, self._table[i], depth)\n+\n+    -- exit early if we try to flatten a dict-like table\n+    if not ok then\n+      error('flatten() requires a list-like table')\n+      return self\n+    end\n+\n+    for _, flat_v in pairs(flattened) do\n+      target[n] = flat_v\n+      n = n + inc\n+    end\n+  end\n+\n+  self._tail = n\n+  self._table = target\n+  return self\n+end",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446212545",
            "id": 1446212545,
            "in_reply_to_id": 1446123746,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WM3PB",
            "original_commit_id": "fb83407338633691ce2f45b8bba503ca630dedcf",
            "original_line": 259,
            "original_position": 85,
            "original_start_line": 252,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811357032,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446212545/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T15:07:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446212545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446361699"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446361699"
                }
            },
            "author_association": "MEMBER",
            "body": "This should fix the doc issues\r\n\r\n```suggestion\r\n--- ```\r\n---\r\n---@param depth? number Depth to which |list-iterator| should be flattened\r\n```",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T16:59:58Z",
            "diff_hunk": "@@ -179,6 +208,55 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---@param depth? number Depth to which |list-iterator| should be flattened",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446361699",
            "id": 1446361699,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WNbpj",
            "original_commit_id": "c029c58df25c44b3bbdaa521e70af786a6e40cf9",
            "original_line": 227,
            "original_position": 55,
            "original_start_line": 225,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811599934,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446361699/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T16:59:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446361699",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446389532"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446389532"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "thank you!",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T17:20:16Z",
            "diff_hunk": "@@ -179,6 +208,55 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---@param depth? number Depth to which |list-iterator| should be flattened",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446389532",
            "id": 1446389532,
            "in_reply_to_id": 1446361699,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WNicc",
            "original_commit_id": "c029c58df25c44b3bbdaa521e70af786a6e40cf9",
            "original_line": 227,
            "original_position": 55,
            "original_start_line": 225,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811645872,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446389532/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-09T17:20:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446389532",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446571742"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446571742"
                }
            },
            "author_association": "MEMBER",
            "body": "this is a unreachable code, please remove.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T20:28:03Z",
            "diff_hunk": "@@ -179,6 +208,56 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---\n+---@param depth? number Depth to which |list-iterator| should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flatten(self, depth) -- luacheck: no unused args\n+  error('flatten() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flatten(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth, 0, {})\n+\n+    -- exit early if we try to flatten a dict-like table\n+    if flattened == nil then\n+      error('flatten() requires a list-like table')\n+      return self",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446571742",
            "id": 1446571742,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WOO7e",
            "original_commit_id": "291668f0474b9d1b43a0dd12be8710be0024e6df",
            "original_line": 247,
            "original_position": 76,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1811943101,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446571742/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T20:32:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446571742",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446577869"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446577869"
                }
            },
            "author_association": "MEMBER",
            "body": "Can we add tests for behaviors when `depth = 0`?\r\n```suggestion\r\n\r\neq({ { 1, { 2 } }, { { { { 3 } } }, { 4 } }, { 5 } }, vim.iter(t):flatten(0):totable())\r\n```\r\n\r\n(Please don't just accept the suggestion; please fix locally, run tests, and then push)",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T20:30:38Z",
            "diff_hunk": "@@ -390,6 +390,36 @@ describe('vim.iter', function()\n     end))\n   end)\n \n+  it('flatten()', function()\n+    local t = { { 1, { 2 } }, { { { { 3 } } }, { 4 } }, { 5 } }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446577869",
            "id": 1446577869,
            "line": 395,
            "node_id": "PRRC_kwDOAPphoM5WOQbN",
            "original_commit_id": "291668f0474b9d1b43a0dd12be8710be0024e6df",
            "original_line": 395,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": 6,
            "pull_request_review_id": 1811943101,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446577869/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T20:32:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446577869",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446580214"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446580214"
                }
            },
            "author_association": "MEMBER",
            "body": "Also, what happens if depth < 0 was given? I know it's an invalid parameter but...",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T20:31:42Z",
            "diff_hunk": "@@ -390,6 +390,36 @@ describe('vim.iter', function()\n     end))\n   end)\n \n+  it('flatten()', function()\n+    local t = { { 1, { 2 } }, { { { { 3 } } }, { 4 } }, { 5 } }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446580214",
            "id": 1446580214,
            "in_reply_to_id": 1446577869,
            "line": 395,
            "node_id": "PRRC_kwDOAPphoM5WOQ_2",
            "original_commit_id": "291668f0474b9d1b43a0dd12be8710be0024e6df",
            "original_line": 395,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": 6,
            "pull_request_review_id": 1811943101,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446580214/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T20:32:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446580214",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446728567"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446728567"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "this is duplicated from the other error paths: https://github.com/rudiejd/neovim/blob/291668f0474b9d1b43a0dd12be8710be0024e6df/runtime/lua/vim/iter.lua#L814\r\n\r\nshould I remove it there too, or just in this location? I just wanted to make sure the behavior was the same",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T23:38:46Z",
            "diff_hunk": "@@ -179,6 +208,56 @@ function ListIter.filter(self, f)\n   return self\n end\n \n+--- Flattens a |list-iterator|, un-nesting nested values up to the given {depth}.\n+--- Errors if it attempts to flatten a dict-like value.\n+---\n+--- Examples:\n+---\n+--- ```lua\n+--- vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\n+--- -- { 1, 2, { 3 } }\n+---\n+--- vim.iter({1, { { a = 2 } }, { 3 } }):flatten():totable()\n+--- -- { 1, { a = 2 }, 3 }\n+---\n+--- vim.iter({ 1, { { a = 2 } }, { 3 } }):flatten(math.huge):totable()\n+--- -- error: attempt to flatten a dict-like table\n+--- ```\n+---\n+---@param depth? number Depth to which |list-iterator| should be flattened\n+---                        (defaults to 1)\n+---@return Iter\n+function Iter.flatten(self, depth) -- luacheck: no unused args\n+  error('flatten() requires a list-like table')\n+  return self\n+end\n+\n+---@private\n+function ListIter.flatten(self, depth)\n+  depth = depth or 1\n+  local inc = self._head < self._tail and 1 or -1\n+  local target = {}\n+\n+  for i = self._head, self._tail - inc, inc do\n+    local flattened = flatten(self._table[i], depth, 0, {})\n+\n+    -- exit early if we try to flatten a dict-like table\n+    if flattened == nil then\n+      error('flatten() requires a list-like table')\n+      return self",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446728567",
            "id": 1446728567,
            "in_reply_to_id": 1446571742,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WO1N3",
            "original_commit_id": "291668f0474b9d1b43a0dd12be8710be0024e6df",
            "original_line": 247,
            "original_position": 76,
            "original_start_line": null,
            "path": "runtime/lua/vim/iter.lua",
            "position": null,
            "pull_request_review_id": 1812188152,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446728567/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T23:58:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446728567",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1446730799"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446730799"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I added tests for `depth = 0` and verified they return the same thing. sorry for accepting the suggestions - I usually just click that to close them all then do a fixup later 😅 \r\n\r\nto your second question -- right now, passing a negative is equivalent to passing 0. I added a test to illustrate this behavior. I can make it error if that is preferred. ",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-09T23:43:09Z",
            "diff_hunk": "@@ -390,6 +390,36 @@ describe('vim.iter', function()\n     end))\n   end)\n \n+  it('flatten()', function()\n+    local t = { { 1, { 2 } }, { { { { 3 } } }, { 4 } }, { 5 } }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1446730799",
            "id": 1446730799,
            "in_reply_to_id": 1446577869,
            "line": 395,
            "node_id": "PRRC_kwDOAPphoM5WO1wv",
            "original_commit_id": "291668f0474b9d1b43a0dd12be8710be0024e6df",
            "original_line": 395,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": 6,
            "pull_request_review_id": 1812191104,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446730799/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-09T23:43:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446730799",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26786#discussion_r1447466691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26786"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447466691"
                }
            },
            "author_association": "MEMBER",
            "body": "Throwing errors would be better for invalid parameters, but I don't have a strong opinion. Maybe we can just leave the behavior undocumented and undefined. @justinmk may have a better opinion here.",
            "commit_id": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
            "created_at": "2024-01-10T14:32:18Z",
            "diff_hunk": "@@ -390,6 +390,36 @@ describe('vim.iter', function()\n     end))\n   end)\n \n+  it('flatten()', function()\n+    local t = { { 1, { 2 } }, { { { { 3 } } }, { 4 } }, { 5 } }\n+",
            "html_url": "https://github.com/neovim/neovim/pull/26786#discussion_r1447466691",
            "id": 1447466691,
            "in_reply_to_id": 1446577869,
            "line": 395,
            "node_id": "PRRC_kwDOAPphoM5WRpbD",
            "original_commit_id": "291668f0474b9d1b43a0dd12be8710be0024e6df",
            "original_line": 395,
            "original_position": 6,
            "original_start_line": null,
            "path": "test/functional/lua/iter_spec.lua",
            "position": 6,
            "pull_request_review_id": 1813365375,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447466691/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T14:32:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447466691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "news.txt already includes an entry on `vim.iter`, so I don't think I am going to update that for this ",
            "created_at": "2023-12-29T02:15:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1871679097",
            "id": 1871679097,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vj455",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871679097/reactions"
            },
            "updated_at": "2023-12-29T02:15:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871679097",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I would suggest we add *comprehensive* tests on various corner cases about the behavior (and document them well), even when a NOT-list-like table is given, or a table contains `nil`, etc.:\r\n\r\n```lua\r\n> vim.tbl_flatten({1, {2, 3, nil, 4}, 5, {6, a = 7, b = 8}})\r\n< { 1, 2, 3, 4, 5, 6 }\r\n\r\n> vim.iter.flat({1, {2, 3, nil, 4}, 5, {6, a = 7, b = 8}})\r\n< { 1, 2, 3, 4, 5, 6, 8, 7 }\r\n```\r\n",
            "created_at": "2023-12-29T03:48:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1871707764",
            "id": 1871707764,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vj_50",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871707764/reactions"
            },
            "updated_at": "2023-12-29T03:51:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871707764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I would suggest we add _comprehensive_ tests on various corner cases about the behavior (and document them well), even when a NOT-list-like table is given, or a table contains `nil`, etc.:\r\n> \r\n> ```lua\r\n> > vim.tbl_flatten({1, {2, 3, nil, 4}, 5, {6, a = 7, b = 8}})\r\n> < { 1, 2, 3, 4, 5, 6 }\r\n> \r\n> > vim.iter.flat({1, {2, 3, nil, 4}, 5, {6, a = 7, b = 8}})\r\n> < { 1, 2, 3, 4, 5, 6, 8, 7 }\r\n> ```\r\n\r\n\r\n\r\nthat's a great call ! I tested when the first level was not a list-like table, but not the inner-levels 🤒 . This is also potentially a bug with `Iter:new()` since it doesn't check deeper than one level in validating when validating that an iterator is list-like https://github.com/rudiejd/neovim/blob/3de60f4c9c68a9571d292e0e495a7a30ee071849/runtime/lua/vim/iter.lua#L1007-L1017\r\n\r\nis the desired behavior here to ignore key-like values and nil a-la `vim.tbl_flatten`, or to include them in the same order? I'm just going to go with ignoring them for now for consistency and document this as such, but it's an interesting question. ",
            "created_at": "2023-12-29T04:08:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1871713939",
            "id": 1871713939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vkBaT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871713939/reactions"
            },
            "updated_at": "2024-01-01T14:51:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871713939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think there are still issues in dealing with non-list table. What is our decision when it comes to a non-list (dict) table that are nested? Either non-error or eager error checking is fine, but consistency would be better.\r\n\r\n```\r\n> vim.iter({ a = 3 }) :flatten(math.huge):totable()\r\n< Error: flatten() requires a list-like table\r\n\r\n> vim.iter({1, { a = 3 }}) :flatten(math.huge):totable()\r\n< {1}\r\n```",
            "created_at": "2024-01-02T18:52:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1874415374",
            "id": 1874415374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vuU8O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874415374/reactions"
            },
            "updated_at": "2024-01-02T18:55:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874415374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I think there are still issues in dealing with non-list table. What is our decision when it comes to a non-list (dict) table that are nested? Either non-error or eager error checking is fine, but consistency would be better.\r\n> \r\n> ```\r\n> > vim.iter({ a = 3 }) :flatten(math.huge):totable()\r\n> < Error: flatten() requires a list-like table\r\n> \r\n> > vim.iter({1, { a = 3 }}) :flatten(math.huge):totable()\r\n> < {1}\r\n> ```\r\n\r\nThat's a good point on the inconsistency. Seems related to @justinmk's comment too. I only required being list-like at the top level, but then wiped out nested tables that weren't list-like. \r\n\r\nI think a non-error as fine *as long as* the non-list like table is not being flattened. ",
            "created_at": "2024-01-02T19:08:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1874432082",
            "id": 1874432082,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vuZBS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874432082/reactions"
            },
            "updated_at": "2024-01-02T19:08:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874432082",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Proposal:\r\n- for each value,\r\n    - if it's a list, flatten it\r\n    - if it's a dict, don't recurse into it (don't flatten it)\r\n        - thus if the top-level value is dict-like, it just returns the dict.\r\n- to decide if a value is list-like:\r\n    - use the same logic as `vim.iter`: https://github.com/neovim/neovim/blob/031088fc0afffe4af6fa90d68d5b93ca09992ef1/runtime/lua/vim/iter.lua#L954\r\n    - for efficiency, build the flattened list _while also_ iterating to check if it is a list.\r\n        - return early if any key is found that indicates the container is dict-like.\r\n    - related: https://github.com/neovim/neovim/issues/24746\r\n- document this behavior in the docstring.",
            "created_at": "2024-01-02T19:15:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1874439622",
            "id": 1874439622,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vua3G",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874439622/reactions"
            },
            "updated_at": "2024-01-02T19:17:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874439622",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This should be done, let me know what you think :) \r\n\r\n> Proposal:\r\n>       * if it's a dict, don't recurse into it (don't flatten it)\r\n\r\nI ended up erroring instead of not flattening, since as @wookayin mentioned it seems inconsistent to error on top-level dict-like members, but not nested ones. on an error, the function will return the source iterator without modifications. ",
            "created_at": "2024-01-02T20:32:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1874516017",
            "id": 1874516017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5vutgx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874516017/reactions"
            },
            "updated_at": "2024-01-02T20:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874516017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "hey @justinmk @wookayin, thanks for all the feedback and help with this! Any other comments here? I believe I should have addressed everything ",
            "created_at": "2024-01-08T13:57:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1881062743",
            "id": 1881062743,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5wHr1X",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881062743/reactions"
            },
            "updated_at": "2024-01-08T13:57:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881062743",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@wookayin doc suggestions applied, and this is now rebased off of master with formatting for the tests 👍 ",
            "created_at": "2024-01-08T14:57:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1881172076",
            "id": 1881172076,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5wIGhs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881172076/reactions"
            },
            "updated_at": "2024-01-08T14:57:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881172076",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Refactored to respond to suggestions. The tests should be fixed now. The docs build keeps failing on this diff:\r\n\r\n```\r\nError: Job failed, run 'make doc' and commit your doc changes.\r\nError: The doc generation produces the following changes:\r\ndiff --git a/runtime/doc/lua.txt b/runtime/doc/lua.txt\r\nindex fcfe131..b558a3f 100644\r\n--- a/runtime/doc/lua.txt\r\n+++ b/runtime/doc/lua.txt\r\n@@ -3435,9 +3435,7 @@ Iter:flatten({depth})                                         *Iter:flatten()*\r\n     Flattens a |list-iterator|, un-nesting nested values up to the given\r\n     {depth}. Errors if it attempts to flatten a dict-like value.\r\n \r\n-    Examples:\r\n-\r\n-    >lua\r\n+    Examples: >lua\r\n         vim.iter({ 1, { 2 }, { { 3 } } }):flatten():totable()\r\n         -- { 1, 2, { 3 } }\r\n```\r\n\r\ndespite the fact that I have already run and committed `make doc`. not really sure what the issue is, since the other docs in this file have the same format for examples. I actually tried to copy and paste the text from their section to no avail 😅 ",
            "created_at": "2024-01-09T16:43:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1883403541",
            "id": 1883403541,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5wQnUV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883403541/reactions"
            },
            "updated_at": "2024-05-07T13:31:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883403541",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That docs error is fixed thanks to a great catch by @gpanders, and all of the suggestions should be implemented ",
            "created_at": "2024-01-09T20:17:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1883718234",
            "id": 1883718234,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5wR0Ja",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883718234/reactions"
            },
            "updated_at": "2024-01-09T20:17:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883718234",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> other things mostly look good, thanks for the work!\r\n\r\nthank you all for all the feedback! I've learned a ton from this PR ",
            "created_at": "2024-01-09T23:46:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/26786#issuecomment-1883970389",
            "id": 1883970389,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
            "node_id": "IC_kwDOAPphoM5wSxtV",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883970389/reactions"
            },
            "updated_at": "2024-01-09T23:46:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883970389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26786/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26786/commits",
    "created_at": "2023-12-28T22:30:15Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26786.diff",
    "draft": false,
    "head": {
        "label": "rudiejd:feat/iter-flat-map",
        "ref": "feat/iter-flat-map",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/rudiejd/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/rudiejd/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/rudiejd/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/rudiejd/neovim/branches{/branch}",
            "clone_url": "https://github.com/rudiejd/neovim.git",
            "collaborators_url": "https://api.github.com/repos/rudiejd/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/rudiejd/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/rudiejd/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/rudiejd/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/rudiejd/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/rudiejd/neovim/contributors",
            "created_at": "2023-12-26T05:09:18Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/rudiejd/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/rudiejd/neovim/downloads",
            "events_url": "https://api.github.com/repos/rudiejd/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/rudiejd/neovim/forks",
            "full_name": "rudiejd/neovim",
            "git_commits_url": "https://api.github.com/repos/rudiejd/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/rudiejd/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/rudiejd/neovim/git/tags{/sha}",
            "git_url": "git://github.com/rudiejd/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/rudiejd/neovim/hooks",
            "html_url": "https://github.com/rudiejd/neovim",
            "id": 735792126,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/rudiejd/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/rudiejd/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/rudiejd/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/rudiejd/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/rudiejd/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/rudiejd/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/rudiejd/neovim/merges",
            "milestones_url": "https://api.github.com/repos/rudiejd/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK9tL_g",
            "notifications_url": "https://api.github.com/repos/rudiejd/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
                "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
                "followers_url": "https://api.github.com/users/rudiejd/followers",
                "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
                "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rudiejd",
                "id": 46619169,
                "login": "rudiejd",
                "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
                "organizations_url": "https://api.github.com/users/rudiejd/orgs",
                "received_events_url": "https://api.github.com/users/rudiejd/received_events",
                "repos_url": "https://api.github.com/users/rudiejd/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rudiejd"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/rudiejd/neovim/pulls{/number}",
            "pushed_at": "2024-05-13T05:29:57Z",
            "releases_url": "https://api.github.com/repos/rudiejd/neovim/releases{/id}",
            "size": 255819,
            "ssh_url": "git@github.com:rudiejd/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/rudiejd/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/rudiejd/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/rudiejd/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/rudiejd/neovim/subscription",
            "svn_url": "https://github.com/rudiejd/neovim",
            "tags_url": "https://api.github.com/repos/rudiejd/neovim/tags",
            "teams_url": "https://api.github.com/repos/rudiejd/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/rudiejd/neovim/git/trees{/sha}",
            "updated_at": "2023-12-28T20:29:51Z",
            "url": "https://api.github.com/repos/rudiejd/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
            "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
            "followers_url": "https://api.github.com/users/rudiejd/followers",
            "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
            "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/rudiejd",
            "id": 46619169,
            "login": "rudiejd",
            "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
            "organizations_url": "https://api.github.com/users/rudiejd/orgs",
            "received_events_url": "https://api.github.com/users/rudiejd/received_events",
            "repos_url": "https://api.github.com/users/rudiejd/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/rudiejd"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26786",
    "id": 1659430597,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26786",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "a767c046f4e6bff1412269d56a8edfe33857d954",
    "merged_at": "2024-01-11T02:57:51Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 420,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-05-12T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 7,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-05-13T19:47:36Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5i6ObF",
    "number": 26786,
    "patch_url": "https://github.com/neovim/neovim/pull/26786.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26786/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/02e70dfd1b6fb5bd3f10180f2868b63c0823b5d1",
    "title": "feat(vim.iter): flattening for list-like iterators ",
    "updated_at": "2024-05-07T13:31:31Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26786",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/46619169?v=4",
        "events_url": "https://api.github.com/users/rudiejd/events{/privacy}",
        "followers_url": "https://api.github.com/users/rudiejd/followers",
        "following_url": "https://api.github.com/users/rudiejd/following{/other_user}",
        "gists_url": "https://api.github.com/users/rudiejd/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rudiejd",
        "id": 46619169,
        "login": "rudiejd",
        "node_id": "MDQ6VXNlcjQ2NjE5MTY5",
        "organizations_url": "https://api.github.com/users/rudiejd/orgs",
        "received_events_url": "https://api.github.com/users/rudiejd/received_events",
        "repos_url": "https://api.github.com/users/rudiejd/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rudiejd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rudiejd/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rudiejd"
    }
}