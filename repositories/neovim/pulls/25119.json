{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25119/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25119/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25119"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25119"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25119/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/159a40218e65419da1b2762e4f055ad85d2af2ea"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4932,
            "forks_count": 4932,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1664,
            "open_issues_count": 1664,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-10-22T00:41:21Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 250603,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70301,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-10-22T01:52:34Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70301,
            "watchers_count": 70301,
            "web_commit_signoff_required": false
        },
        "sha": "27a566f3f8e07a4cebb426674800bdf9a7f4f222",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Fixes #24297",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323055383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323055383"
                }
            },
            "author_association": "MEMBER",
            "body": "Does \"undoing auto-formatting\" (`gw`, `gw`) have the unwanted behavior now? We should test for that, and possibly try to avoid it.",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T13:34:40Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323055383",
            "id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O3DkX",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1622273655,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323055383/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T13:34:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323055383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323087818"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323087818"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'm still not sure how I could reproduce the behavior which was supposed to be fixed by the original commit. But given context I'll try to come up with something and write tests I guess.",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T13:57:02Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323087818",
            "id": 1323087818,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O3LfK",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1622325110,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323087818/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T14:03:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323087818",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323247012"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323247012"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Ok, after effectively rolling back the changes from original commit I understand what the problem was. Though that doesn't matter much.\r\n\r\nIt's now clear to me that simply deleting this code doesn't make any sense. Moving cursor to the position where changes are undone should definitely happen in many cases, like when some text was simply added in INSERT mode or some word/line/paragraph was deleted. And it won't happen anymore if this code will be simply deleted and it would be really strange.\r\n\r\nIt seems to me that in the end the best solution would be to explicitly mark undo entries with something like \"don't move cursor when this is undone/redone\" in certain cases.\r\n\r\nThough on a low level it's hard to infer those cases without an explicit option. E.g. doing that for all calls to `nvim_buf_set_text` would make sense in case of autoformatting, but if some user action is implemented by a plugin via `nvim_buf_set_text` (think something like split/join) then moving cursor to the point of that change on undo would make perfect sense.",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T15:48:50Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323247012",
            "id": 1323247012,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O3yWk",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1622583588,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323247012/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T15:48:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323247012",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323284283"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323284283"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Would it make sense to introduce such an option for `nvim_buf_set_text`? Or we'll try to find another solution?",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T16:19:30Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323284283",
            "id": 1323284283,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O37c7",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1622645271,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323284283/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T16:19:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323284283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323327848"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323327848"
                }
            },
            "author_association": "MEMBER",
            "body": "Could be worth a hack PR to show the idea (and get feedback). Another idea could be to use something like `nvim_buf_set_extmark(0, nvim_create_namespace('undo'), ...)` to set markers explicitly. That could be a more generalized solution instead of something specific to `nvim_buf_set_text`.",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T16:59:52Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323327848",
            "id": 1323327848,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O4GFo",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1622727850,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323327848/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T16:59:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323327848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323341316"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323341316"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": ">Another idea could be to use something like nvim_buf_set_extmark(0, nvim_create_namespace('undo'), ...) to set markers explicitly\r\n\r\nYou mean setting those markers for an area in which cursor position should be ignored on undo?",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T17:13:41Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323341316",
            "id": 1323341316,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O4JYE",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1622750076,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323341316/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T17:20:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323341316",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1323588946"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323588946"
                }
            },
            "author_association": "MEMBER",
            "body": "Something like that :D I'm thinking anything can set the mark(s) and then `u_undoredo` (or whatever) uses it to decide cursor position. And perhaps throw an error if more than one thing tries to set such a mark?",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-12T21:18:46Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1323588946",
            "id": 1323588946,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O5F1S",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1623169351,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323588946/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-12T21:18:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1323588946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25119#discussion_r1324135533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25119"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1324135533"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I wasn't entirely sure why using extmarks would be preferred when I started, except it might be convenient to use `ephemeral` for such things, to clean them up automatically, but it felt a little bit complicated for now. In general it felt like it's ok to be able to just toggle a flag on a buffer or window for that behavior. Implementation is a bit silly, but it's just a proof of concept for discussion.\r\n\r\nI tested it manually and it seems to work sensibly in most cases. For example renaming a variable not at a definition point and then undoing does not move cursor to definition (assuming definition happens to be the top-most point of edit), it moves cursor to where it was when rename happened though.\r\n\r\nSo in fact it doesn't completely solve the original issue for formatting, because if cursor was in one of the changed regions it will pull it there on undo. I find that behavior useful for renaming and code actions though.\r\n\r\nAnd I'm afraid that to keep this behavior and fix the original issue we would need one more flag to completely ignore cursor position saved in undo block, even in cases when it's inside changed lines.\r\n\r\nAnd now I think probably this is where extmarks would help. May be for that case we could mark everything from first line to start of code action and then from end of code action to last line to signify that cursor should not move if changes happen in those two ranges. Though I'm not sure if we should create some special namespace for internal purposes or create a special kind of extmarks or some option.",
            "commit_id": "159a40218e65419da1b2762e4f055ad85d2af2ea",
            "created_at": "2023-09-13T08:05:12Z",
            "diff_hunk": "@@ -2308,23 +2308,6 @@ static void u_undoredo(int undo, bool do_buf_event)\n       if (lnum >= top && lnum <= top + newsize + 1) {\n         curwin->w_cursor = curhead->uh_cursor;\n         newlnum = curwin->w_cursor.lnum - 1;\n-      } else {\n-        // Use the first line that actually changed.  Avoids that\n-        // undoing auto-formatting puts the cursor in the previous",
            "html_url": "https://github.com/neovim/neovim/pull/25119#discussion_r1324135533",
            "id": 1324135533,
            "in_reply_to_id": 1323055383,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5O7LRt",
            "original_commit_id": "161f4e04d9d1560a6ecb2e5e766b48d93b31c114",
            "original_line": 2313,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/undo.c",
            "position": null,
            "pull_request_review_id": 1623943987,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1324135533/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-13T08:22:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1324135533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I only minimally changed tests for now to make them pass, because they relied on this behavior. Not sure if explicit tests for this change are needed.\r\n\r\nAlso not sure if plugins could depend on this behavior and this should not be merged. But it's hard to imagine how plugins would depend on that in a sensible way.",
            "created_at": "2023-09-12T13:17:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1715709254",
            "id": 1715709254,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mQ6VG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715709254/reactions"
            },
            "updated_at": "2023-09-12T13:17:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715709254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This was introduced before the existence of oldtests: https://github.com/vim/vim-history/commit/0206c5b14035929b9392a09985ab4b9fdef94003",
            "created_at": "2023-09-12T13:25:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1715722087",
            "id": 1715722087,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mQ9dn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715722087/reactions"
            },
            "updated_at": "2023-09-12T13:27:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1715722087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I wasn't entirely sure why using extmarks would be preferred when I started, except it might be convenient to use `ephemeral` for such things, to clean them up automatically, but it felt a little bit complicated for now. In general it felt like it's ok to be able to just toggle a flag on a buffer or window for that behavior. Implementation is a bit silly, but it's just a proof of concept for discussion.\r\n\r\nI tested it manually and it seems to work sensibly in most cases. For example renaming a variable not at a definition point and then undoing does not move cursor to definition (assuming definition happens to be the top-most point of edit), it moves cursor to where it was when rename happened though.\r\n\r\nSo in fact it doesn't completely solve the original issue for formatting, because if cursor was in one of the changed regions it will pull it there on undo. I find that behavior useful for renaming and code actions though.\r\n\r\nAnd I'm afraid that to keep this behavior and fix the original issue we would need one more flag to completely ignore cursor position saved in undo block, even in cases when it's inside changed lines.\r\n\r\nAnd now I think probably this is where extmarks would help. May be for that case we could mark everything from first line to start of code action and then from end of code action to last line to signify that cursor should not move if changes happen in those two ranges. Though I'm not sure if we should create some special namespace for internal purposes or create a special kind of extmarks or some option.",
            "created_at": "2023-09-13T10:03:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1717329627",
            "id": 1717329627,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mXF7b",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717329627/reactions"
            },
            "updated_at": "2023-09-13T10:03:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717329627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Now extmarks are used to decide for which undo regions cursor position should not change. I couldn't use `ephemeral`, because `extmark_get` doesn't find such extmarks. I guess it's not meant to be used like that. It's a bit annoying to have to remember to delete extmark afterwards though. This can be wrapped in a nicer Lua api with a callback, otherwise it makes it easier to produce hard to find bugs.\r\n\r\nI hope I've not done something too stupid regarding memory management when looking for extmarks.",
            "created_at": "2023-09-13T13:50:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1717677109",
            "id": 1717677109,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mYaw1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717677109/reactions"
            },
            "updated_at": "2023-09-13T13:50:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717677109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If this approach looks fine, I guess next I'll need to figure out how to apply it separately for the cases of formatting, renaming and applying code actions, not for generic `apply_text_edits`. And write tests.",
            "created_at": "2023-09-13T13:58:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1717690568",
            "id": 1717690568,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mYeDI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717690568/reactions"
            },
            "updated_at": "2023-09-13T14:00:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717690568",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's wait for feedback first.",
            "created_at": "2023-09-13T15:09:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1717825811",
            "id": 1717825811,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mY_ET",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717825811/reactions"
            },
            "updated_at": "2023-09-13T15:09:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1717825811",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "After testing it a bit I now see that not adjusting cursor line at all after undoing formatting is not great. It needs to be moved at least based on the changes above the line, shifting up or down depending on added/deleted lines. I formatted `undo.c` file itself with `clangd` (forgot to disable format-on-save.nvim as I often do) and it changed file like a lot. And on undo/redo if cursor line is simply kept the same then I might end up in different functions. That's much worse behavior than before IMO.\r\n\r\nAlso I thought a bit about how to avoid having to remember to clean up after enabling this behavior. It seems like it would make sense to automatically clean it up when closing undo block, e.g. when `b_u_synced` becomes `true`, IIUC.\r\n\r\nAnd also now I'm again not sure if extmarks should be used for that. It seems like basically it makes sense to only have 3 options for cursor behavior on undo:\r\n\r\n1. By default it behaves like it is now, moving cursor to the point of last change.\r\n2. Move cursor line based only on line count changes above the cursor. This seems to make sense for formatting.\r\n3. Move cursor exactly to `uh_cursor`. This seems to make sense for code actions and renaming.\r\n\r\nAnd there's also a case where import can happen on autocompletion using e.g. `nvim-cmp`, which ideally should also behave as \"3\". Though I'm not entirely sure if we control that part.\r\n\r\nAnd there may be more cases I can't remember right now.",
            "created_at": "2023-09-14T04:46:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1718758016",
            "id": 1718758016,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mciqA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718758016/reactions"
            },
            "updated_at": "2023-09-14T04:46:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1718758016",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Those are good and informed conclusions to share in https://github.com/neovim/neovim/issues/24297 . \r\n\r\n> basically it makes sense to only have 3 options for cursor behavior on undo\r\n\r\nIf we need that then the next question is what the interface should be, i.e. how will scripts make this decision. \r\n\r\nbtw are `:help i_CTRL-G_u` + `:help i_CTRL-G_U` of any use? https://github.com/neovim/neovim/issues/24297#issuecomment-1717347673",
            "created_at": "2023-09-14T10:40:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1719207063",
            "id": 1719207063,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5meQSX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1719207063/reactions"
            },
            "updated_at": "2023-09-14T10:40:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1719207063",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> If we need that then the next question is what the interface should be, i.e. how will scripts make this decision.\r\n\r\nOne option would be adding back something similar to what I was doing initially, e.g. some `nvim_buf_*` function, which would allow controlling undo behavior, but only for the following undo block, until `b_u_synced` changes to `true`. I can't come up with a sensible name though. Something like `nvim_buf_set_undo_behavior(buf, { move_cursor = true | false | 'exact' })`? `true` should be the default then.\r\n\r\nInstead of having to choose between three options, we can leave only `true` and `false` and expect script to toggle it when needed. This is similar to what could be achieved with extmarks. So, for formatting it would simply be set to `true` for all changes. For rename and code actions it would be set to `true` for most changes, but then script would need to set it to `false` if it sees that cursor is inside the block which is about to be changed.\r\n\r\nProbably a buffer-local option could be used instead of a separate function. Though I'm not sure if there are any precedents where options are being reset automatically after some event or something like that.\r\n\r\n> btw are `:help i_CTRL-G_u` + `:help i_CTRL-G_U` of any use? [#24297 (comment)](https://github.com/neovim/neovim/issues/24297#issuecomment-1717347673)\r\n\r\nI don't think they're of any use for this problem. I commented in the original issue with a bit more details as well.",
            "created_at": "2023-09-15T04:47:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1720638205",
            "id": 1720638205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5mjtr9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1720638205/reactions"
            },
            "updated_at": "2023-09-15T04:47:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1720638205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "NONE",
            "body": "hmm it seems that if we call buf_set_lines only with \r\nstart less than the cursor row + 2 and\r\nend more than the cursor row - 1\r\nit doesn't move the cursor to the first change\r\n```lua\r\nvim.keymap.set(\"n\", \"<C-q>\", function()\r\n   vim.o.ul = vim.o.ul\r\n   local lines = vim.api.nvim_buf_get_lines(0,3,-2,false)\r\n   lines[1] = 'foobar'\r\n   vim.api.nvim_buf_set_lines(0,3,-2,false,lines)\r\nend)\r\n```\r\ni am not sure why this happens but it might help\r\n\r\nwe can also still insert lines with something like this\r\n```lua\r\n   local lines = vim.api.nvim_buf_get_lines(0,0,-2,false)\r\n   local final = {'foobar',unpack(lines)}\r\n   vim.api.nvim_buf_set_lines(0,0,-2,false,final)\r\n```\r\n",
            "created_at": "2023-10-21T15:30:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/25119#issuecomment-1773831611",
            "id": 1773831611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
            "node_id": "IC_kwDOAPphoM5puoW7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1773831611/reactions"
            },
            "updated_at": "2023-10-21T16:49:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1773831611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/130783534?v=4",
                "events_url": "https://api.github.com/users/Sam-programs/events{/privacy}",
                "followers_url": "https://api.github.com/users/Sam-programs/followers",
                "following_url": "https://api.github.com/users/Sam-programs/following{/other_user}",
                "gists_url": "https://api.github.com/users/Sam-programs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/Sam-programs",
                "id": 130783534,
                "login": "Sam-programs",
                "node_id": "U_kgDOB8uZLg",
                "organizations_url": "https://api.github.com/users/Sam-programs/orgs",
                "received_events_url": "https://api.github.com/users/Sam-programs/received_events",
                "repos_url": "https://api.github.com/users/Sam-programs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/Sam-programs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Sam-programs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/Sam-programs"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25119/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25119/commits",
    "created_at": "2023-09-12T13:14:46Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25119.diff",
    "draft": false,
    "head": {
        "label": "faergeek:do-not-move-cursor-after-undoing-buf-set-text",
        "ref": "do-not-move-cursor-after-undoing-buf-set-text",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/faergeek/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/faergeek/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/faergeek/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/faergeek/neovim/branches{/branch}",
            "clone_url": "https://github.com/faergeek/neovim.git",
            "collaborators_url": "https://api.github.com/repos/faergeek/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/faergeek/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/faergeek/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/faergeek/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/faergeek/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/faergeek/neovim/contributors",
            "created_at": "2023-08-26T07:35:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/faergeek/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/faergeek/neovim/downloads",
            "events_url": "https://api.github.com/repos/faergeek/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/faergeek/neovim/forks",
            "full_name": "faergeek/neovim",
            "git_commits_url": "https://api.github.com/repos/faergeek/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/faergeek/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/faergeek/neovim/git/tags{/sha}",
            "git_url": "git://github.com/faergeek/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/faergeek/neovim/hooks",
            "html_url": "https://github.com/faergeek/neovim",
            "id": 683323221,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/faergeek/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/faergeek/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/faergeek/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/faergeek/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/faergeek/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/faergeek/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/faergeek/neovim/merges",
            "milestones_url": "https://api.github.com/repos/faergeek/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKLqvVQ",
            "notifications_url": "https://api.github.com/repos/faergeek/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/faergeek/neovim/pulls{/number}",
            "pushed_at": "2023-10-15T03:37:28Z",
            "releases_url": "https://api.github.com/repos/faergeek/neovim/releases{/id}",
            "size": 247102,
            "ssh_url": "git@github.com:faergeek/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/faergeek/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/faergeek/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/faergeek/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/faergeek/neovim/subscription",
            "svn_url": "https://github.com/faergeek/neovim",
            "tags_url": "https://api.github.com/repos/faergeek/neovim/tags",
            "teams_url": "https://api.github.com/repos/faergeek/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/faergeek/neovim/git/trees{/sha}",
            "updated_at": "2023-08-27T03:17:57Z",
            "url": "https://api.github.com/repos/faergeek/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "159a40218e65419da1b2762e4f055ad85d2af2ea",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
            "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
            "followers_url": "https://api.github.com/users/faergeek/followers",
            "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/faergeek",
            "id": 3524621,
            "login": "faergeek",
            "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
            "organizations_url": "https://api.github.com/users/faergeek/orgs",
            "received_events_url": "https://api.github.com/users/faergeek/received_events",
            "repos_url": "https://api.github.com/users/faergeek/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/faergeek"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25119",
    "id": 1512115110,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25119",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "b2d220e2b187d4318ac8aa317923bfe47edb398f",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5aIQum",
    "number": 25119,
    "patch_url": "https://github.com/neovim/neovim/pull/25119.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25119/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/159a40218e65419da1b2762e4f055ad85d2af2ea",
    "title": "fix(undo): don't move cursor to first changed line on undo/redo",
    "updated_at": "2023-10-21T16:49:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25119",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
        "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/faergeek/followers",
        "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/faergeek",
        "id": 3524621,
        "login": "faergeek",
        "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
        "organizations_url": "https://api.github.com/users/faergeek/orgs",
        "received_events_url": "https://api.github.com/users/faergeek/received_events",
        "repos_url": "https://api.github.com/users/faergeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/faergeek"
    }
}