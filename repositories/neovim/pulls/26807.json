{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26807/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26807/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26807"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26807"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26807/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/52abad8ecc3689a90ba044e502e2f11770abd52f"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5121,
            "forks_count": 5121,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1744,
            "open_issues_count": 1744,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-09T01:46:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248837,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72546,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-09T01:49:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72546,
            "watchers_count": 72546,
            "web_commit_signoff_required": false
        },
        "sha": "6fa0f303d7f0823bfc5ba6cc7b4e7a7cd76143ac",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem: Getting diagnostic count based on the output of\r\n  `vim.diagnostic.get()` might become costly as number of diagnostic\r\n  entries grows. This is because it returns a copy of diagnostic cache\r\n  entries (so as to not allow users to change them in place).\r\n  Getting information about diagnostic count is frequently used in\r\n  statusline, so it is important to be as fast as reasonbly possible.\r\n\r\nSolution: Add `vim.diagnostic.count()` which computes severity\r\n  counts without making copies.\r\n\r\n------\r\n\r\nRelated to [this comment](https://github.com/neovim/neovim/pull/25010#issuecomment-1870500448).",
    "closed_at": "2024-01-01T21:03:51Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438654115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438654115"
                }
            },
            "author_association": "MEMBER",
            "body": "This could be more elaborated (like explaining what keys are), or with more concrete examples.",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T16:54:53Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity counts.",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438654115",
            "id": 1438654115,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwB6j",
            "original_commit_id": "ca349d82dd747230a8a42c320f6f8e0b728e6137",
            "original_line": 769,
            "original_position": 32,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799572358,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438654115/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T16:54:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438654115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438654378"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438654378"
                }
            },
            "author_association": "MEMBER",
            "body": "They're the same as in `vim.diagnostic.get()`, from where this is copied. _That_ would be the place for improvements.",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T16:55:39Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity counts.",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438654378",
            "id": 1438654378,
            "in_reply_to_id": 1438654115,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwB-q",
            "original_commit_id": "ca349d82dd747230a8a42c320f6f8e0b728e6137",
            "original_line": 769,
            "original_position": 32,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799572410,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438654378/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T16:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438654378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438656417"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438656417"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think this was more about the return table.\r\n\r\nSo something like `A table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.`?",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T17:03:25Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity counts.",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438656417",
            "id": 1438656417,
            "in_reply_to_id": 1438654115,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwCeh",
            "original_commit_id": "ca349d82dd747230a8a42c320f6f8e0b728e6137",
            "original_line": 769,
            "original_position": 32,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799573031,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438656417/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T17:03:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438656417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438685373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438685373"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nfunction M.count(bufnr, opts)\r\n```",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T18:58:32Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.\n+function M.get_count(bufnr, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438685373",
            "id": 1438685373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwJi9",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 770,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799580903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438685373/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:05:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438685373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438685905"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438685905"
                }
            },
            "author_association": "MEMBER",
            "body": "Modulo word-wrap:\r\n\r\n```suggestion\r\n• |vim.diagnostic.count()| returns the number of diagnostics for a given buffer and/or namespace, by severity. This is a faster alternative to `vim.diagnostic.get()` when only the number of diagnostics is needed, but not the diagnostics themselves.\r\n```",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:00:45Z",
            "diff_hunk": "@@ -275,6 +275,9 @@ The following new APIs and features were added.\n • |v_Q-default| and |v_@-default| repeat a register for each line of a visual\n   selection.\n \n+• |vim.diagnostic.get_count()| returns severity count. It is designed to be\n+  a faster alternative to counting output of `vim.diagnostic.get()`.",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438685905",
            "id": 1438685905,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwJrR",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 279,
            "original_position": 5,
            "original_start_line": 278,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1799580903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438685905/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:05:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438685905",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438686368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686368"
                }
            },
            "author_association": "MEMBER",
            "body": "Moving the `deepcopy` out of `get_diagnostics` and into `vim.diagnostic.get()` is a good change regardless, and should have been in the first place. There are a lot of call sites of `get_diagnostics` where a copy is not needed at all, so we've been wastefully copying diagnostics this whole time.",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:02:33Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438686368",
            "id": 1438686368,
            "line": 758,
            "node_id": "PRRC_kwDOAPphoM5VwJyg",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 758,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 21,
            "pull_request_review_id": 1799580903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686368/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:05:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438686509"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686509"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not sure this comment is necessary.\r\n```suggestion\r\n```",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:03:07Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.\n+function M.get_count(bufnr, opts)\n+  vim.validate({\n+    bufnr = { bufnr, 'n', true },\n+    opts = { opts, 't', true },\n+  })\n+\n+  -- A faster version of `get()` which doesn't create copies",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438686509",
            "id": 1438686509,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwJ0t",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 776,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799580903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686509/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:05:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438686718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686718"
                }
            },
            "author_association": "MEMBER",
            "body": "Since the _raison d'être_ of this function is performance, might as well go all-in:\r\n\r\n```suggestion\r\n  for i = 1, #diagnostics do\r\n    local d = diagnostics[i]\r\n    count[d.severity] = (count[d.severity] or 0) + 1\r\n  end\r\n```",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:04:04Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.\n+function M.get_count(bufnr, opts)\n+  vim.validate({\n+    bufnr = { bufnr, 'n', true },\n+    opts = { opts, 't', true },\n+  })\n+\n+  -- A faster version of `get()` which doesn't create copies\n+  local diagnostics = get_diagnostics(bufnr, opts, false)\n+  local count = {}\n+  for _, d in ipairs(diagnostics) do\n+    count[d.severity] = (count[d.severity] or 0) + 1\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438686718",
            "id": 1438686718,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwJ3-",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 781,
            "original_position": 44,
            "original_start_line": 779,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799580903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686718/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:05:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438686718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438696440"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438696440"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sure. My main logic here is that this function is almost identical to `get()` but does counting afterwards.",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:44:29Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.\n+function M.get_count(bufnr, opts)",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438696440",
            "id": 1438696440,
            "in_reply_to_id": 1438685373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwMP4",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 770,
            "original_position": 33,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799583818,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438696440/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:44:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438696440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438696867"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438696867"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Yeah, I also realized this during making the PR.",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:46:26Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438696867",
            "id": 1438696867,
            "in_reply_to_id": 1438686368,
            "line": 758,
            "node_id": "PRRC_kwDOAPphoM5VwMWj",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 758,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 21,
            "pull_request_review_id": 1799583971,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438696867/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-30T19:46:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438696867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438698689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438698689"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I see this optimization and raise with `local severity = diagnostics[i].severity`.",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-30T19:53:46Z",
            "diff_hunk": "@@ -755,7 +755,31 @@ function M.get(bufnr, opts)\n     opts = { opts, 't', true },\n   })\n \n-  return get_diagnostics(bufnr, opts, false)\n+  return vim.deepcopy(get_diagnostics(bufnr, opts, false))\n+end\n+\n+--- Get current diagnostics count.\n+---\n+---@param bufnr integer|nil Buffer number to get diagnostics from. Use 0 for\n+---                        current buffer or nil for all buffers.\n+---@param opts table|nil A table with the following keys:\n+---                        - namespace: (number) Limit diagnostics to the given namespace.\n+---                        - lnum: (number) Limit diagnostics to the given line number.\n+---                        - severity: See |diagnostic-severity|.\n+---@return table A table with actually present severity values as keys (see |diagnostic-severity|) and integer counts as values.\n+function M.get_count(bufnr, opts)\n+  vim.validate({\n+    bufnr = { bufnr, 'n', true },\n+    opts = { opts, 't', true },\n+  })\n+\n+  -- A faster version of `get()` which doesn't create copies\n+  local diagnostics = get_diagnostics(bufnr, opts, false)\n+  local count = {}\n+  for _, d in ipairs(diagnostics) do\n+    count[d.severity] = (count[d.severity] or 0) + 1\n+  end",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438698689",
            "id": 1438698689,
            "in_reply_to_id": 1438686718,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VwMzB",
            "original_commit_id": "c8a812f88a5197d75214d59d57e6471cd80cbad3",
            "original_line": 781,
            "original_position": 44,
            "original_start_line": 779,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1799584424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438698689/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-30T19:53:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438698689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438918375"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438918375"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  |vim.diagnostic.get()| when only the number of diagnostics is needed, but\r\n```",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-31T18:48:01Z",
            "diff_hunk": "@@ -275,6 +275,11 @@ The following new APIs and features were added.\n • |v_Q-default| and |v_@-default| repeat a register for each line of a visual\n   selection.\n \n+• |vim.diagnostic.count()| returns the number of diagnostics for a given\n+  buffer and/or namespace, by severity. This is a faster alternative to\n+  `vim.diagnostic.get()` when only the number of diagnostics is needed, but",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438918375",
            "id": 1438918375,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VxCbn",
            "original_commit_id": "c17726675ca45055bd5681dba210e46a0db87b92",
            "original_line": 280,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1799684459,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438918375/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-31T18:48:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438918375",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26807#discussion_r1438919406"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26807"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438919406"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Missed it! Thanks!",
            "commit_id": "52abad8ecc3689a90ba044e502e2f11770abd52f",
            "created_at": "2023-12-31T19:00:38Z",
            "diff_hunk": "@@ -275,6 +275,11 @@ The following new APIs and features were added.\n • |v_Q-default| and |v_@-default| repeat a register for each line of a visual\n   selection.\n \n+• |vim.diagnostic.count()| returns the number of diagnostics for a given\n+  buffer and/or namespace, by severity. This is a faster alternative to\n+  `vim.diagnostic.get()` when only the number of diagnostics is needed, but",
            "html_url": "https://github.com/neovim/neovim/pull/26807#discussion_r1438919406",
            "id": 1438919406,
            "in_reply_to_id": 1438918375,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VxCru",
            "original_commit_id": "c17726675ca45055bd5681dba210e46a0db87b92",
            "original_line": 280,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1799684991,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438919406/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-31T19:00:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438919406",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Would it be possible to include this in `get` via `{ counts_only = true }` or somesuch? (The fast path can still be a separate function if that makes the code simpler, but it would allow keeping the exposed API surface smaller.)",
            "created_at": "2023-12-30T16:48:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1872563346",
            "id": 1872563346,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vnQyS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872563346/reactions"
            },
            "updated_at": "2023-12-30T16:50:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872563346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Would it be possible to include this in `get` via `{ counts_only = true }` or somesuch? (The fast path can still be a separate function if that makes the code simpler, but it would allow keeping the exposed API surface smaller.)\r\n\r\nYes, it is possible. I personally don't really like making output structure depend on the value of the input parameter. Of course, will update as necessary if this approach is considered better. @gpanders?",
            "created_at": "2023-12-30T16:53:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1872564035",
            "id": 1872564035,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vnQ9D",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872564035/reactions"
            },
            "updated_at": "2023-12-30T16:53:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872564035",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That is a good argument against my proposal, yes. I just wanted to bring it up.",
            "created_at": "2023-12-30T16:54:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1872564340",
            "id": 1872564340,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vnRB0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872564340/reactions"
            },
            "updated_at": "2023-12-30T16:54:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872564340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Addressed all review comments in a separate commit. CI failures seem to be the consequence of that which should go away after squash (after approve).",
            "created_at": "2023-12-30T20:10:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1872596531",
            "id": 1872596531,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vnY4z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872596531/reactions"
            },
            "updated_at": "2023-12-30T20:10:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872596531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Functional test errors look relevant (need to regenerate docs?)",
            "created_at": "2023-12-30T20:19:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1872598300",
            "id": 1872598300,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vnZUc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872598300/reactions"
            },
            "updated_at": "2023-12-30T20:19:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872598300",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Functional test errors look relevant (need to regenerate docs?)\r\n\r\nI thought it was because there were two commits. I was wrong: didn't replace `vim.diagnostic.get_count()` in 'doc/deprecated.txt' as an alternative to `vim.lsp.diagnostic.get_count()`.",
            "created_at": "2023-12-30T20:34:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1872601231",
            "id": 1872601231,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vnaCP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872601231/reactions"
            },
            "updated_at": "2023-12-30T20:34:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872601231",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks, Gregory!",
            "created_at": "2024-01-02T09:18:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/26807#issuecomment-1873773796",
            "id": 1873773796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
            "node_id": "IC_kwDOAPphoM5vr4Tk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873773796/reactions"
            },
            "updated_at": "2024-01-02T09:18:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873773796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26807/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26807/commits",
    "created_at": "2023-12-30T16:46:05Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26807.diff",
    "draft": false,
    "head": {
        "label": "echasnovski:diagnostic-get-count",
        "ref": "diagnostic-get-count",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/echasnovski/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/echasnovski/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/echasnovski/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/echasnovski/neovim/branches{/branch}",
            "clone_url": "https://github.com/echasnovski/neovim.git",
            "collaborators_url": "https://api.github.com/repos/echasnovski/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/echasnovski/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/echasnovski/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/echasnovski/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/echasnovski/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/echasnovski/neovim/contributors",
            "created_at": "2021-12-02T09:43:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/echasnovski/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/echasnovski/neovim/downloads",
            "events_url": "https://api.github.com/repos/echasnovski/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/echasnovski/neovim/forks",
            "full_name": "echasnovski/neovim",
            "git_commits_url": "https://api.github.com/repos/echasnovski/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/echasnovski/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/echasnovski/neovim/git/tags{/sha}",
            "git_url": "git://github.com/echasnovski/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/echasnovski/neovim/hooks",
            "html_url": "https://github.com/echasnovski/neovim",
            "id": 434162461,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/echasnovski/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/echasnovski/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/echasnovski/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/echasnovski/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/echasnovski/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/echasnovski/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/echasnovski/neovim/merges",
            "milestones_url": "https://api.github.com/repos/echasnovski/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGeDLHQ",
            "notifications_url": "https://api.github.com/repos/echasnovski/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/echasnovski/neovim/pulls{/number}",
            "pushed_at": "2024-01-06T16:26:09Z",
            "releases_url": "https://api.github.com/repos/echasnovski/neovim/releases{/id}",
            "size": 244998,
            "ssh_url": "git@github.com:echasnovski/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/echasnovski/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/echasnovski/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/echasnovski/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/echasnovski/neovim/subscription",
            "svn_url": "https://github.com/echasnovski/neovim",
            "tags_url": "https://api.github.com/repos/echasnovski/neovim/tags",
            "teams_url": "https://api.github.com/repos/echasnovski/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/echasnovski/neovim/git/trees{/sha}",
            "updated_at": "2022-10-17T11:26:13Z",
            "url": "https://api.github.com/repos/echasnovski/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "52abad8ecc3689a90ba044e502e2f11770abd52f",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26807",
    "id": 1660459279,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26807",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "4ee656e4f35766bef4e27c5afbfa8e3d8d74a76c",
    "merged_at": "2024-01-01T21:03:51Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5i-JkP",
    "number": 26807,
    "patch_url": "https://github.com/neovim/neovim/pull/26807.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26807/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/52abad8ecc3689a90ba044e502e2f11770abd52f",
    "title": "feature(diagnostic): add `vim.diagnostic.count()`",
    "updated_at": "2024-01-02T09:18:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26807",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
        "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
        "followers_url": "https://api.github.com/users/echasnovski/followers",
        "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
        "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/echasnovski",
        "id": 24854248,
        "login": "echasnovski",
        "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
        "organizations_url": "https://api.github.com/users/echasnovski/orgs",
        "received_events_url": "https://api.github.com/users/echasnovski/received_events",
        "repos_url": "https://api.github.com/users/echasnovski/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/echasnovski"
    }
}