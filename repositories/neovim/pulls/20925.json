{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20925/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20925/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20925"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20925"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20925/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/87938f37f98a8cb432885dffb08ee69cd1d34930"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5531,
            "forks_count": 5531,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1778,
            "open_issues_count": 1778,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-08-20T01:30:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 282327,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80980,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-08-20T00:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80980,
            "watchers_count": 80980,
            "web_commit_signoff_required": false
        },
        "sha": "81722896e4a6d17dbf33325d344253e44a11e9ed",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Un-deprecate the 'exrc' option by introducing a new `read_secure` function that prompts the user whether the `.nvimrc` or `.exrc` file found in the current directory should be trusted and only sources the file if the user indicates that it is. The user's decision is persisted in a \"trust database\" at `$XDG_STATE_HOME/nvim/trust`.\r\n\r\nThe format of the \"trust database\" is shamelessly cribbed from https://github.com/ii14/exrc.vim.\r\n\r\nA Lua interface to the `read_secure()` function is provided at `vim.readsecure()` to expose this functionality to plugins.\r\n\r\nTODO:\r\n\r\n- [x] Tests\r\n\r\nCloses #20911.",
    "closed_at": "2022-11-06T01:41:30Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1013733013"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1013733013"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The filename may actually start with a `!` character which will need to be escaped when it's added to the file.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T08:21:52Z",
            "diff_hunk": "@@ -1841,6 +1845,183 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [path, hash] pairs. A path can be marked as blacklisted by using a '!'\n+/// character for the hash.\n+///\n+/// @param path Path to file\n+///\n+/// @return A pointer to file contents if the file should be trusted, or NULL\n+///         otherwise. Caller owns returned memory.\n+const char *read_secure(const char *path)\n+  FUNC_ATTR_NONNULL_ALL\n+{\n+  char *contents = NULL;\n+\n+  // Exit early if file can't be read\n+  FILE *fp = fopen(path, \"r\");\n+  if (!fp) {\n+    return NULL;\n+  }\n+\n+  PMap(cstr_t) file_hashes = MAP_INIT;\n+  char *fullpath = os_realpath(path, NULL);\n+  char *trustdb = stdpaths_user_state_subpath(\"trust\", 0, false);\n+  FILE *trust_fp = os_fopen(trustdb, \"r\");\n+  if (trust_fp) {\n+    char *line = NULL;\n+    size_t len = 0;\n+    while ((line = fgetln(trust_fp, &len)) != NULL) {\n+      char *p = strsep(&line, \" \\n\");\n+      char *h = strsep(&line, \" \\n\");\n+      if (p == NULL || h == NULL) {\n+        // Malformed line\n+        continue;\n+      }\n+      (void)pmap_put(cstr_t)(&file_hashes, p, xstrdup(h));\n+    }\n+\n+    fclose(trust_fp);\n+  }\n+\n+  const char *curhash = pmap_get(cstr_t)(&file_hashes, fullpath);\n+  if (curhash != NULL && strcmp(curhash, \"!\") == 0) {",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1013733013",
            "id": 1013733013,
            "line": 1902,
            "node_id": "PRRC_kwDOAPphoM48bFaV",
            "original_commit_id": "fb6e5b81553d3e89986c890d8e9ef2ad8cf9d8be",
            "original_line": 1902,
            "original_position": 67,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": 79,
            "pull_request_review_id": 1168113401,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1013733013/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T08:21:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1013733013",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24971970?v=4",
                "events_url": "https://api.github.com/users/ObserverOfTime/events{/privacy}",
                "followers_url": "https://api.github.com/users/ObserverOfTime/followers",
                "following_url": "https://api.github.com/users/ObserverOfTime/following{/other_user}",
                "gists_url": "https://api.github.com/users/ObserverOfTime/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ObserverOfTime",
                "id": 24971970,
                "login": "ObserverOfTime",
                "node_id": "MDQ6VXNlcjI0OTcxOTcw",
                "organizations_url": "https://api.github.com/users/ObserverOfTime/orgs",
                "received_events_url": "https://api.github.com/users/ObserverOfTime/received_events",
                "repos_url": "https://api.github.com/users/ObserverOfTime/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ObserverOfTime/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ObserverOfTime/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ObserverOfTime"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014036505"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014036505"
                }
            },
            "author_association": "MEMBER",
            "body": "I believe this is the hash column, not path, so there is no conflict here.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T13:42:05Z",
            "diff_hunk": "@@ -1841,6 +1845,183 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [path, hash] pairs. A path can be marked as blacklisted by using a '!'\n+/// character for the hash.\n+///\n+/// @param path Path to file\n+///\n+/// @return A pointer to file contents if the file should be trusted, or NULL\n+///         otherwise. Caller owns returned memory.\n+const char *read_secure(const char *path)\n+  FUNC_ATTR_NONNULL_ALL\n+{\n+  char *contents = NULL;\n+\n+  // Exit early if file can't be read\n+  FILE *fp = fopen(path, \"r\");\n+  if (!fp) {\n+    return NULL;\n+  }\n+\n+  PMap(cstr_t) file_hashes = MAP_INIT;\n+  char *fullpath = os_realpath(path, NULL);\n+  char *trustdb = stdpaths_user_state_subpath(\"trust\", 0, false);\n+  FILE *trust_fp = os_fopen(trustdb, \"r\");\n+  if (trust_fp) {\n+    char *line = NULL;\n+    size_t len = 0;\n+    while ((line = fgetln(trust_fp, &len)) != NULL) {\n+      char *p = strsep(&line, \" \\n\");\n+      char *h = strsep(&line, \" \\n\");\n+      if (p == NULL || h == NULL) {\n+        // Malformed line\n+        continue;\n+      }\n+      (void)pmap_put(cstr_t)(&file_hashes, p, xstrdup(h));\n+    }\n+\n+    fclose(trust_fp);\n+  }\n+\n+  const char *curhash = pmap_get(cstr_t)(&file_hashes, fullpath);\n+  if (curhash != NULL && strcmp(curhash, \"!\") == 0) {",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014036505",
            "id": 1014036505,
            "in_reply_to_id": 1013733013,
            "line": 1902,
            "node_id": "PRRC_kwDOAPphoM48cPgZ",
            "original_commit_id": "fb6e5b81553d3e89986c890d8e9ef2ad8cf9d8be",
            "original_line": 1902,
            "original_position": 67,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": 79,
            "pull_request_review_id": 1168549001,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014036505/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T13:42:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014036505",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014042864"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014042864"
                }
            },
            "author_association": "MEMBER",
            "body": "The column order is PATH, HASH? It should be the opposite, hash (or `!`) first, as hashes can't have whitespace in them, while file paths can.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T13:48:09Z",
            "diff_hunk": "@@ -1841,6 +1845,183 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [path, hash] pairs. A path can be marked as blacklisted by using a '!'\n+/// character for the hash.\n+///\n+/// @param path Path to file\n+///\n+/// @return A pointer to file contents if the file should be trusted, or NULL\n+///         otherwise. Caller owns returned memory.\n+const char *read_secure(const char *path)\n+  FUNC_ATTR_NONNULL_ALL\n+{\n+  char *contents = NULL;\n+\n+  // Exit early if file can't be read\n+  FILE *fp = fopen(path, \"r\");\n+  if (!fp) {\n+    return NULL;\n+  }\n+\n+  PMap(cstr_t) file_hashes = MAP_INIT;\n+  char *fullpath = os_realpath(path, NULL);\n+  char *trustdb = stdpaths_user_state_subpath(\"trust\", 0, false);\n+  FILE *trust_fp = os_fopen(trustdb, \"r\");\n+  if (trust_fp) {\n+    char *line = NULL;\n+    size_t len = 0;\n+    while ((line = fgetln(trust_fp, &len)) != NULL) {\n+      char *p = strsep(&line, \" \\n\");",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014042864",
            "id": 1014042864,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48cRDw",
            "original_commit_id": "fb6e5b81553d3e89986c890d8e9ef2ad8cf9d8be",
            "original_line": 1877,
            "original_position": 54,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": null,
            "pull_request_review_id": 1168558536,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014042864/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T13:48:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014042864",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014111205"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014111205"
                }
            },
            "author_association": "MEMBER",
            "body": "That is correct.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T14:44:25Z",
            "diff_hunk": "@@ -1841,6 +1845,183 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [path, hash] pairs. A path can be marked as blacklisted by using a '!'\n+/// character for the hash.\n+///\n+/// @param path Path to file\n+///\n+/// @return A pointer to file contents if the file should be trusted, or NULL\n+///         otherwise. Caller owns returned memory.\n+const char *read_secure(const char *path)\n+  FUNC_ATTR_NONNULL_ALL\n+{\n+  char *contents = NULL;\n+\n+  // Exit early if file can't be read\n+  FILE *fp = fopen(path, \"r\");\n+  if (!fp) {\n+    return NULL;\n+  }\n+\n+  PMap(cstr_t) file_hashes = MAP_INIT;\n+  char *fullpath = os_realpath(path, NULL);\n+  char *trustdb = stdpaths_user_state_subpath(\"trust\", 0, false);\n+  FILE *trust_fp = os_fopen(trustdb, \"r\");\n+  if (trust_fp) {\n+    char *line = NULL;\n+    size_t len = 0;\n+    while ((line = fgetln(trust_fp, &len)) != NULL) {\n+      char *p = strsep(&line, \" \\n\");\n+      char *h = strsep(&line, \" \\n\");\n+      if (p == NULL || h == NULL) {\n+        // Malformed line\n+        continue;\n+      }\n+      (void)pmap_put(cstr_t)(&file_hashes, p, xstrdup(h));\n+    }\n+\n+    fclose(trust_fp);\n+  }\n+\n+  const char *curhash = pmap_get(cstr_t)(&file_hashes, fullpath);\n+  if (curhash != NULL && strcmp(curhash, \"!\") == 0) {",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014111205",
            "id": 1014111205,
            "in_reply_to_id": 1013733013,
            "line": 1902,
            "node_id": "PRRC_kwDOAPphoM48chvl",
            "original_commit_id": "fb6e5b81553d3e89986c890d8e9ef2ad8cf9d8be",
            "original_line": 1902,
            "original_position": 67,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": 79,
            "pull_request_review_id": 1168663178,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014111205/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T14:44:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014111205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014163630"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014163630"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// of [hash, path] pairs. A path can be marked as blacklisted by using a '!'\r\n```",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T15:23:43Z",
            "diff_hunk": "@@ -1841,6 +1845,183 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [path, hash] pairs. A path can be marked as blacklisted by using a '!'",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014163630",
            "id": 1014163630,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48cuiu",
            "original_commit_id": "8039e8aca1cf187431637e5b3877cc2dc0b75c4a",
            "original_line": 1851,
            "original_position": 28,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": null,
            "pull_request_review_id": 1168750393,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014163630/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T15:30:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014163630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014171800"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014171800"
                }
            },
            "author_association": "MEMBER",
            "body": "I think there is a leak here and you need to free `contents`.\r\n\r\nAlso this could be optimized by additionally returning the length of a file and using `lua_pushlstring` instead, so lua doesn't have to find the null byte.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T15:29:37Z",
            "diff_hunk": "@@ -541,6 +542,31 @@ static int nlua_iconv(lua_State *lstate)\n \n #endif\n \n+int nlua_read_secure(lua_State *L)\n+{\n+  if (lua_gettop(L) < 1) {\n+    return luaL_error(L, \"Expected 1 argument\");\n+  }\n+\n+  if (lua_type(L, 1) != LUA_TSTRING) {\n+    luaL_argerror(L, 1, \"expected string\");\n+  }\n+\n+  const char *contents = NULL;\n+  size_t len = 0;\n+  const char *path = lua_tolstring(L, 1, &len);\n+  if (path != NULL) {\n+    contents = read_secure(path);\n+  }\n+\n+  if (contents != NULL) {\n+    lua_pushstring(L, contents);",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014171800",
            "id": 1014171800,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48cwiY",
            "original_commit_id": "8039e8aca1cf187431637e5b3877cc2dc0b75c4a",
            "original_line": 563,
            "original_position": 30,
            "original_start_line": null,
            "path": "src/nvim/lua/stdlib.c",
            "position": null,
            "pull_request_review_id": 1168750393,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014171800/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T15:30:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014171800",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014243945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014243945"
                }
            },
            "author_association": "MEMBER",
            "body": "Good catch, thanks.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T16:35:39Z",
            "diff_hunk": "@@ -541,6 +542,31 @@ static int nlua_iconv(lua_State *lstate)\n \n #endif\n \n+int nlua_read_secure(lua_State *L)\n+{\n+  if (lua_gettop(L) < 1) {\n+    return luaL_error(L, \"Expected 1 argument\");\n+  }\n+\n+  if (lua_type(L, 1) != LUA_TSTRING) {\n+    luaL_argerror(L, 1, \"expected string\");\n+  }\n+\n+  const char *contents = NULL;\n+  size_t len = 0;\n+  const char *path = lua_tolstring(L, 1, &len);\n+  if (path != NULL) {\n+    contents = read_secure(path);\n+  }\n+\n+  if (contents != NULL) {\n+    lua_pushstring(L, contents);",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014243945",
            "id": 1014243945,
            "in_reply_to_id": 1014171800,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dCJp",
            "original_commit_id": "8039e8aca1cf187431637e5b3877cc2dc0b75c4a",
            "original_line": 563,
            "original_position": 30,
            "original_start_line": null,
            "path": "src/nvim/lua/stdlib.c",
            "position": null,
            "pull_request_review_id": 1168865642,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014243945/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T16:35:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014243945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014255954"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014255954"
                }
            },
            "author_association": "MEMBER",
            "body": "If caller has to free the memory, the return type shouldn't be `const`\r\n```suggestion\r\nchar *read_secure(const char *path, size_t *len)\r\n```",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T16:48:37Z",
            "diff_hunk": "@@ -1841,6 +1845,195 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [hash, path] pairs. A path can be marked as blacklisted by using a '!'\n+/// character for the hash.\n+///\n+/// @param path[in] Path to file\n+/// @param len[out] Pointer which is populated with the length of the returned contents without the\n+///                 trailing NUL byte.\n+///\n+/// @return A pointer to file contents if the file should be trusted, or NULL\n+///         otherwise. Caller owns returned memory.\n+const char *read_secure(const char *path, size_t *len)",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014255954",
            "id": 1014255954,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dFFS",
            "original_commit_id": "55478dc6c0cb478e386c1b2247c9a1cc9b8c791b",
            "original_line": 1860,
            "original_position": 37,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": null,
            "pull_request_review_id": 1168884470,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014255954/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T17:01:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014255954",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014267078"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014267078"
                }
            },
            "author_association": "MEMBER",
            "body": "`do_source_str` doesn't seem to take the ownership over the string, so this probably has to be freed too.",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T16:59:17Z",
            "diff_hunk": "@@ -1987,7 +1987,11 @@ static void source_startup_scripts(const mparm_T *const parmp)\n #endif\n       secure = p_secure;\n \n-      if (do_source(VIMRC_FILE, true, DOSO_VIMRC) == FAIL) {\n+      size_t dummy;\n+      const char *init_str = read_secure(VIMRC_FILE, &dummy);",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014267078",
            "id": 1014267078,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dHzG",
            "original_commit_id": "55478dc6c0cb478e386c1b2247c9a1cc9b8c791b",
            "original_line": 1991,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": 1168884470,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014267078/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T17:01:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014267078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014269101"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014269101"
                }
            },
            "author_association": "MEMBER",
            "body": "When `read_secure` no longer returns `const`, `contents` can just be `char*` and the cast here will no longer be necessary.\r\n```suggestion\r\n    xfree(contents);\r\n```",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T17:01:39Z",
            "diff_hunk": "@@ -541,6 +542,32 @@ static int nlua_iconv(lua_State *lstate)\n \n #endif\n \n+int nlua_read_secure(lua_State *L)\n+{\n+  if (lua_gettop(L) < 1) {\n+    return luaL_error(L, \"Expected 1 argument\");\n+  }\n+\n+  if (lua_type(L, 1) != LUA_TSTRING) {\n+    luaL_argerror(L, 1, \"expected string\");\n+  }\n+\n+  const char *contents = NULL;\n+  size_t len = 0;\n+  const char *path = lua_tolstring(L, 1, &len);\n+  if (path != NULL) {\n+    contents = read_secure(path, &len);\n+  }\n+\n+  if (contents != NULL) {\n+    lua_pushlstring(L, contents, len);\n+    xfree((void *)contents);",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014269101",
            "id": 1014269101,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dISt",
            "original_commit_id": "55478dc6c0cb478e386c1b2247c9a1cc9b8c791b",
            "original_line": 564,
            "original_position": 31,
            "original_start_line": null,
            "path": "src/nvim/lua/stdlib.c",
            "position": null,
            "pull_request_review_id": 1168884470,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014269101/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T17:01:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014269101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014279469"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279469"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed in 4365a6f3f4319764aac66ff814848253e50b6fee",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T17:12:53Z",
            "diff_hunk": "@@ -1987,7 +1987,11 @@ static void source_startup_scripts(const mparm_T *const parmp)\n #endif\n       secure = p_secure;\n \n-      if (do_source(VIMRC_FILE, true, DOSO_VIMRC) == FAIL) {\n+      size_t dummy;\n+      const char *init_str = read_secure(VIMRC_FILE, &dummy);",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014279469",
            "id": 1014279469,
            "in_reply_to_id": 1014267078,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dK0t",
            "original_commit_id": "55478dc6c0cb478e386c1b2247c9a1cc9b8c791b",
            "original_line": 1991,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": 1168920155,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279469/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T17:12:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014279543"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279543"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed in 4365a6f3f4319764aac66ff814848253e50b6fee",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T17:12:59Z",
            "diff_hunk": "@@ -541,6 +542,32 @@ static int nlua_iconv(lua_State *lstate)\n \n #endif\n \n+int nlua_read_secure(lua_State *L)\n+{\n+  if (lua_gettop(L) < 1) {\n+    return luaL_error(L, \"Expected 1 argument\");\n+  }\n+\n+  if (lua_type(L, 1) != LUA_TSTRING) {\n+    luaL_argerror(L, 1, \"expected string\");\n+  }\n+\n+  const char *contents = NULL;\n+  size_t len = 0;\n+  const char *path = lua_tolstring(L, 1, &len);\n+  if (path != NULL) {\n+    contents = read_secure(path, &len);\n+  }\n+\n+  if (contents != NULL) {\n+    lua_pushlstring(L, contents, len);\n+    xfree((void *)contents);",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014279543",
            "id": 1014279543,
            "in_reply_to_id": 1014269101,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dK13",
            "original_commit_id": "55478dc6c0cb478e386c1b2247c9a1cc9b8c791b",
            "original_line": 564,
            "original_position": 31,
            "original_start_line": null,
            "path": "src/nvim/lua/stdlib.c",
            "position": null,
            "pull_request_review_id": 1168920266,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279543/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T17:12:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20925#discussion_r1014279616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20925"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279616"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed in 4365a6f3f4319764aac66ff814848253e50b6fee",
            "commit_id": "87938f37f98a8cb432885dffb08ee69cd1d34930",
            "created_at": "2022-11-04T17:13:04Z",
            "diff_hunk": "@@ -1841,6 +1845,195 @@ static void cmd_source_buffer(const exarg_T *const eap)\n   ga_clear(&ga);\n }\n \n+/// Read a file, prompting the user if the file should be trusted or not.\n+///\n+/// Maintain a \"trust database\" at stdpath('state')/trust containing a sequence\n+/// of [hash, path] pairs. A path can be marked as blacklisted by using a '!'\n+/// character for the hash.\n+///\n+/// @param path[in] Path to file\n+/// @param len[out] Pointer which is populated with the length of the returned contents without the\n+///                 trailing NUL byte.\n+///\n+/// @return A pointer to file contents if the file should be trusted, or NULL\n+///         otherwise. Caller owns returned memory.\n+const char *read_secure(const char *path, size_t *len)",
            "html_url": "https://github.com/neovim/neovim/pull/20925#discussion_r1014279616",
            "id": 1014279616,
            "in_reply_to_id": 1014255954,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM48dK3A",
            "original_commit_id": "55478dc6c0cb478e386c1b2247c9a1cc9b8c791b",
            "original_line": 1860,
            "original_position": 37,
            "original_start_line": null,
            "path": "src/nvim/runtime.c",
            "position": null,
            "pull_request_review_id": 1168920378,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279616/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-04T17:13:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014279616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Update `vim_diff.txt`?",
            "created_at": "2022-11-04T23:12:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/20925#issuecomment-1304328872",
            "id": 1304328872,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20925",
            "node_id": "IC_kwDOAPphoM5Nvnqo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1304328872/reactions"
            },
            "updated_at": "2022-11-04T23:12:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1304328872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Writing a test for `'exrc'` is difficult because the nvim program is run with `-u NONE` in the test runners, which implicitly disables the exrc feature. Instead I wrote tests for `vim.readsecure()` which covers almost everything.",
            "created_at": "2022-11-05T02:32:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/20925#issuecomment-1304381552",
            "id": 1304381552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20925",
            "node_id": "IC_kwDOAPphoM5Nv0hw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1304381552/reactions"
            },
            "updated_at": "2022-11-05T02:32:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1304381552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing in favor of #20956.",
            "created_at": "2022-11-06T01:41:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/20925#issuecomment-1304692984",
            "id": 1304692984,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20925",
            "node_id": "IC_kwDOAPphoM5NxAj4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1304692984/reactions"
            },
            "updated_at": "2022-11-06T01:41:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1304692984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20925/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20925/commits",
    "created_at": "2022-11-04T03:44:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20925.diff",
    "draft": false,
    "head": {
        "label": "gpanders:exrc-trust",
        "ref": "exrc-trust",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-08-19T11:43:09Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 276474,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "87938f37f98a8cb432885dffb08ee69cd1d34930",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20925",
    "id": 1110328511,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20925",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "45127a7226bb3eee7485cefb7ea001f8e136e5e7",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5CLkS_",
    "number": 20925,
    "patch_url": "https://github.com/neovim/neovim/pull/20925.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20925/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/87938f37f98a8cb432885dffb08ee69cd1d34930",
    "title": "Un-deprecate 'exrc' option",
    "updated_at": "2024-08-18T02:21:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20925",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}