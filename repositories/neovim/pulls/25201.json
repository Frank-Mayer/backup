{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25201/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25201/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25201"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25201"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25201/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5b3b8005b670815151c0839887b976818c87d106"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5174,
            "forks_count": 5174,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1735,
            "open_issues_count": 1735,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-30T00:09:25Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 251558,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 73268,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-30T01:30:36Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 73268,
            "watchers_count": 73268,
            "web_commit_signoff_required": false
        },
        "sha": "50d5fcc0bc1a3a67b9c3cc7066d97593ea3cc22d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Fixes perf regression revealed by #25143",
    "closed_at": "2023-09-20T12:42:42Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328014897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328014897"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- @param hash_fn? integer|fun(...): any Hash function to create a hash to\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-16T22:12:21Z",
            "diff_hunk": "@@ -0,0 +1,36 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+--- Memoize a function using hash_fn to hash the arguments.\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|fun(...): any Hash function to to create a hash to",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328014897",
            "id": 1328014897,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PJ-Yx",
            "original_commit_id": "70c6751f96d465ed93f97c3852cbfac7bd0fbde2",
            "original_line": 8,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/lua/vim/_util.lua",
            "position": null,
            "pull_request_review_id": 1630017542,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328014897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-16T22:15:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328014897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328015045"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328015045"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- called too often\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-16T22:15:15Z",
            "diff_hunk": "@@ -727,12 +729,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- call too often",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328015045",
            "id": 1328015045,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PJ-bF",
            "original_commit_id": "70c6751f96d465ed93f97c3852cbfac7bd0fbde2",
            "original_line": 733,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630017542,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328015045/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-16T22:15:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328015045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328025275"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025275"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we should use the same verb tense as the other functions in this doc:\r\n```suggestion\r\n    Memoizes a function {fn} using {hash_fn} to hash the arguments. Internally\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T00:39:10Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328025275",
            "id": 1328025275,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKA67",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2000,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630025834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025275/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T00:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025275",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328025319"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025319"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                   refers to the argument index to use as the hash. When `'concat'`, the hash is determined by string concatenating all the\r\n```\r\n\r\nHmmm is the type generator script messing up the quotes?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T00:39:52Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally\n+    uses a weak table to cache the results of {fn}.\n+\n+    Parameters: ~\n+      • {fn}       (function) Function to memoize.\n+      • {hash_fn}  integer|'concat'|function|nil Hash function to create a\n+                   hash to use as a key to store results. When an integer,\n+                   refers to the argument index to use as the hash. When 'concat `, the hash is determined by string concatenating all the",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328025319",
            "id": 1328025319,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKA7n",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2007,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630025834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025319/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T00:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328025589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025589"
                }
            },
            "author_association": "MEMBER",
            "body": "`M` isn't needed anymore.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T00:43:05Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328025589",
            "id": 1328025589,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKA_1",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 3,
            "original_position": 3,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630025834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T00:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328025589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328039133"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328039133"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is it a must to deep copy the result of the cache, can't we reuse the result directly",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T03:48:55Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328039133",
            "id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKETd",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630035935,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328039133/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T03:48:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328039133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328041376"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328041376"
                }
            },
            "author_association": "MEMBER",
            "body": "Well yeah, you don't want to risk mutating the cached values.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T04:19:19Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328041376",
            "id": 1328041376,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKE2g",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630037638,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328041376/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T04:19:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328041376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328043273"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328043273"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Well yeah, you don't want to risk mutating the cached values.\r\n\r\nThen having a way not to copy it might be nice. I can see some query handling cases where I don't mutate the cached values, but don't want to repeatedly deepcopying a large table",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T04:46:14Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328043273",
            "id": 1328043273,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKFUJ",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630039169,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328043273/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T04:46:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328043273",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328054834"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328054834"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm not the expert here but I suspect that returning copies could mess up with the weak map.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:08:51Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328054834",
            "id": 1328054834,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIIy",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630048128,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328054834/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:08:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328054834",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055109"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055109"
                }
            },
            "author_association": "MEMBER",
            "body": "How come? The copies are unrelated to each other.\n\nIf the function is only returning strings|numbers|booleans|functions, then the copying should have no effect.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:11:37Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055109",
            "id": 1328055109,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKINF",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630048326,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055109/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:11:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055350"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055350"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Does this handle hash collision?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:14:01Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055350",
            "id": 1328055350,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIQ2",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630048511,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055350/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:14:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055627"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055627"
                }
            },
            "author_association": "MEMBER",
            "body": "No. The hash is just determined for a key. If there's a collision (via the same args or different) then the memoized value is returned.\n\nThis means you could use just the e.g. the buffer number as a key, if you know other arguments won't have an effect.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:17:09Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055627",
            "id": 1328055627,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIVL",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630048742,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055627/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:17:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055627",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055900"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055900"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think if it doesn't then it's a huge footgun since the default of `hash_fn` is `1` which is general not unique. Actually `\"concat\"` is not unique either since you can have \"foo\" + \"bar\" = \"foob\" + \"ar\".\r\n\r\nSo if we are not going to do a full hash table (array at each hash) we should probably add a big warning \"HASH MUST BE UNIQUE\" and adjust usages accordingly",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:19:48Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328055900",
            "id": 1328055900,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIZc",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630048934,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055900/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:19:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328055900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056026"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056026"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "sorry, not exactly that message since, as you noted, there is a use-case for non-unique hash, but something more nuanced that still brightly signals the behavior\r\n\r\n```\r\nNOTE: If there is a hash collision,\r\nany result matching the hash may be returned.\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:21:56Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056026",
            "id": 1328056026,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIba",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630049062,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056026/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:25:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056026",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056127"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056127"
                }
            },
            "author_association": "MEMBER",
            "body": "> How come? The copies are unrelated to each other.\r\n> \r\n> If the function is only returning strings|numbers|booleans|functions, then the copying should have no effect.\r\n\r\nYeah my comment was a reply to @lucario387 about not returning copies.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:23:20Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056127",
            "id": 1328056127,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIc_",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630049169,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056127/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:23:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056127",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056263"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056263"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "for the context of treesitter, the hash will mostly be unique. as `TSNode:id()` is unique, so even if we get two similar s-expr, the root node's id will still be different, leading to two different cache keys",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:24:55Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056263",
            "id": 1328056263,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIfH",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630049289,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056263/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:24:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056263",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056722"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056722"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "are `TSNode` immutable or can you change a child of the Node and still have the same parent ID? Because that should invalidate the query\r\n\r\nif we were really bikeshedding, we could add an invalidation API (though i suspect this PR might be most immediately useful for things with infinite TTL such as looking up files, so it wouldn't need it)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:30:35Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328056722",
            "id": 1328056722,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKImS",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630049713,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056722/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:30:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328056722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328057212"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057212"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "We could consider removing the default and making this parameter required, so that no one mistakenly accepts the default when they shouldn't (the percentage of cases where \"1\" is correct may not be high enough to justify it)\r\n",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:35:11Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally\n+    uses a weak table to cache the results of {fn}.\n+\n+    Parameters: ~\n+      • {fn}       (function) Function to memoize.\n+      • {hash_fn}  integer|'concat'|function|nil Hash function to create a\n+                   hash to use as a key to store results. When an integer,\n+                   refers to the argument index to use as the hash. When 'concat `, the hash is determined by string concatenating all the\n+                   arguments. Defaults to 1.",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328057212",
            "id": 1328057212,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIt8",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2008,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630050128,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057212/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:35:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057212",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328057441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057441"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Is it a must to deep copy the result of the cache\r\n\r\nThere's another issue with the deepcopy actually:\r\n\r\n```\r\nvim/shared.lua:0: Cannot deepcopy object of type userdata\r\n```\r\n\r\n(is it time for Another Flag?)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:38:42Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328057441",
            "id": 1328057441,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKIxh",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630050379,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:41:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328057865"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057865"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "w.r.t. https://github.com/neovim/neovim/pull/25154#issuecomment-1719266502, this is tricky since technically `hash_fn` and `fn` can both be functions, but given that `fn` is always a function, it may make most sense to put it last",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T07:42:39Z",
            "diff_hunk": "@@ -987,4 +987,17 @@ do\n   end\n end\n \n+--- Memoize a function {fn} using {hash_fn} to hash the arguments.\n+--- Internally uses a weak table to cache the results of {fn}.\n+--- @generic F: function\n+--- @param fn F Function to memoize.",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328057865",
            "id": 1328057865,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKI4J",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 1017,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630050714,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057865/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T07:42:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328057865",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328063179"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063179"
                }
            },
            "author_association": "MEMBER",
            "body": "Typo: mixed quotes?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T08:35:27Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally\n+    uses a weak table to cache the results of {fn}.\n+\n+    Parameters: ~\n+      • {fn}       (function) Function to memoize.\n+      • {hash_fn}  integer|'concat'|function|nil Hash function to create a\n+                   hash to use as a key to store results. When an integer,\n+                   refers to the argument index to use as the hash. When 'concat `, the hash is determined by string concatenating all the",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328063179",
            "id": 1328063179,
            "in_reply_to_id": 1328025319,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKKLL",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2007,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630055507,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063179/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T08:35:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328063225"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063225"
                }
            },
            "author_association": "MEMBER",
            "body": "No, it's just bad docgen.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T08:36:17Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally\n+    uses a weak table to cache the results of {fn}.\n+\n+    Parameters: ~\n+      • {fn}       (function) Function to memoize.\n+      • {hash_fn}  integer|'concat'|function|nil Hash function to create a\n+                   hash to use as a key to store results. When an integer,\n+                   refers to the argument index to use as the hash. When 'concat `, the hash is determined by string concatenating all the",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328063225",
            "id": 1328063225,
            "in_reply_to_id": 1328025319,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKKL5",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2007,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630055559,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063225/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T08:36:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063225",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328063973"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063973"
                }
            },
            "author_association": "MEMBER",
            "body": "Ah, I see now, the quotes in the type are unexpected. Should be `string`, anyway, as that's the type, and the text afterwards should make clear that `'concat'` is the only valid string?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T08:42:32Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally\n+    uses a weak table to cache the results of {fn}.\n+\n+    Parameters: ~\n+      • {fn}       (function) Function to memoize.\n+      • {hash_fn}  integer|'concat'|function|nil Hash function to create a\n+                   hash to use as a key to store results. When an integer,\n+                   refers to the argument index to use as the hash. When 'concat `, the hash is determined by string concatenating all the",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328063973",
            "id": 1328063973,
            "in_reply_to_id": 1328025319,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKKXl",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2007,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630056112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063973/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T08:42:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328063973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328064155"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328064155"
                }
            },
            "author_association": "MEMBER",
            "body": "The type is ok. Docgen doesn't like \n```\n`'concat'`\n```\n\nEDIT: And neither does github",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T08:44:25Z",
            "diff_hunk": "@@ -1996,6 +1996,20 @@ vim.list_slice({list}, {start}, {finish})                   *vim.list_slice()*\n     Return: ~\n         (list) Copy of table sliced from start to finish (inclusive)\n \n+vim.memoize({fn}, {hash_fn})                                   *vim.memoize()*\n+    Memoize a function {fn} using {hash_fn} to hash the arguments. Internally\n+    uses a weak table to cache the results of {fn}.\n+\n+    Parameters: ~\n+      • {fn}       (function) Function to memoize.\n+      • {hash_fn}  integer|'concat'|function|nil Hash function to create a\n+                   hash to use as a key to store results. When an integer,\n+                   refers to the argument index to use as the hash. When 'concat `, the hash is determined by string concatenating all the",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328064155",
            "id": 1328064155,
            "in_reply_to_id": 1328025319,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKKab",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 2007,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1630056263,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328064155/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T08:45:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328064155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328071853"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328071853"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Typo 😄 ",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T09:52:12Z",
            "diff_hunk": "@@ -0,0 +1,54 @@\n+--- Module for private utility functions\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @param hash_fn any\n+--- @return fun(...): any\n+local function reolve_hash_fn(hash_fn)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328071853",
            "id": 1328071853,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKMSt",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 15,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630062530,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328071853/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T09:52:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328071853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072018"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072018"
                }
            },
            "author_association": "MEMBER",
            "body": "Still needed now that it's not exposed?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T09:53:52Z",
            "diff_hunk": "@@ -361,6 +361,12 @@ local function process_line(line, in_stream, generics)\n     return process_block_comment(line:sub(5), in_stream)\n   end\n \n+  -- Hax... I'm sorry",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072018",
            "id": 1328072018,
            "line": 364,
            "node_id": "PRRC_kwDOAPphoM5PKMVS",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 364,
            "original_position": 4,
            "original_start_line": null,
            "path": "scripts/lua2dox.lua",
            "position": 4,
            "pull_request_review_id": 1630062683,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072018/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T09:53:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072021"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072021"
                }
            },
            "author_association": "MEMBER",
            "body": "These changes _seem_ unrelated? (@dundargoc)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T09:53:53Z",
            "diff_hunk": "@@ -878,16 +878,6 @@ set(VIMDOC_FILES\n   ${NVIM_RUNTIME_DIR}/doc/treesitter.txt\n )\n \n-glob_wrapper(API_SOURCES ${PROJECT_SOURCE_DIR}/src/nvim/api/*.c)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072021",
            "id": 1328072021,
            "line": 881,
            "node_id": "PRRC_kwDOAPphoM5PKMVV",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 881,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/CMakeLists.txt",
            "position": 3,
            "pull_request_review_id": 1630062683,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072021/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T09:53:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072021",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072115"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072115"
                }
            },
            "author_association": "MEMBER",
            "body": "add a (short) todo comment mentioning the plan in the commit message?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T09:54:51Z",
            "diff_hunk": "@@ -987,4 +987,18 @@ do\n   end\n end\n \n+--- Memoizes a function {fn} using {hash_fn} to hash the arguments.",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072115",
            "id": 1328072115,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKMWz",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 1000,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630062787,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072115/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T09:54:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072115",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072740"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes still needed so `vim.query.get` and `vim.query.parse` are doc'd correctly.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:00:40Z",
            "diff_hunk": "@@ -361,6 +361,12 @@ local function process_line(line, in_stream, generics)\n     return process_block_comment(line:sub(5), in_stream)\n   end\n \n+  -- Hax... I'm sorry",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072740",
            "id": 1328072740,
            "in_reply_to_id": 1328072018,
            "line": 364,
            "node_id": "PRRC_kwDOAPphoM5PKMgk",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 364,
            "original_position": 4,
            "original_start_line": null,
            "path": "scripts/lua2dox.lua",
            "position": 4,
            "pull_request_review_id": 1630063348,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:00:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072807"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072807"
                }
            },
            "author_association": "MEMBER",
            "body": "This is needed just so `make doc` triggers properly.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:01:17Z",
            "diff_hunk": "@@ -878,16 +878,6 @@ set(VIMDOC_FILES\n   ${NVIM_RUNTIME_DIR}/doc/treesitter.txt\n )\n \n-glob_wrapper(API_SOURCES ${PROJECT_SOURCE_DIR}/src/nvim/api/*.c)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072807",
            "id": 1328072807,
            "in_reply_to_id": 1328072021,
            "line": 881,
            "node_id": "PRRC_kwDOAPphoM5PKMhn",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 881,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/CMakeLists.txt",
            "position": 3,
            "pull_request_review_id": 1630063404,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072807/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:03:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072908"
                }
            },
            "author_association": "MEMBER",
            "body": "Eh, he just moved the code and added more dependent files to the doc gen. This is probably more correct as those files are likely used by `gen_vimdoc.py`. As for the relevancy to this PR, I', unsure.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:02:13Z",
            "diff_hunk": "@@ -878,16 +878,6 @@ set(VIMDOC_FILES\n   ${NVIM_RUNTIME_DIR}/doc/treesitter.txt\n )\n \n-glob_wrapper(API_SOURCES ${PROJECT_SOURCE_DIR}/src/nvim/api/*.c)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072908",
            "id": 1328072908,
            "in_reply_to_id": 1328072021,
            "line": 881,
            "node_id": "PRRC_kwDOAPphoM5PKMjM",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 881,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/CMakeLists.txt",
            "position": 3,
            "pull_request_review_id": 1630063476,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072908/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:02:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072974"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072974"
                }
            },
            "author_association": "MEMBER",
            "body": "So unrelated :) Should at least be an independent commit then.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:02:39Z",
            "diff_hunk": "@@ -878,16 +878,6 @@ set(VIMDOC_FILES\n   ${NVIM_RUNTIME_DIR}/doc/treesitter.txt\n )\n \n-glob_wrapper(API_SOURCES ${PROJECT_SOURCE_DIR}/src/nvim/api/*.c)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328072974",
            "id": 1328072974,
            "in_reply_to_id": 1328072021,
            "line": 881,
            "node_id": "PRRC_kwDOAPphoM5PKMkO",
            "original_commit_id": "6d9505639708990bb1728e61a5c82eba688dc607",
            "original_line": 881,
            "original_position": 4,
            "original_start_line": null,
            "path": "src/nvim/CMakeLists.txt",
            "position": 3,
            "pull_request_review_id": 1630063513,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072974/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:02:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328072974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328073121"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073121"
                }
            },
            "author_association": "MEMBER",
            "body": "Good catch. I'll add a comment.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:03:41Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328073121",
            "id": 1328073121,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKMmh",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630063604,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073121/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:03:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328073338"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073338"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`'concat'` duplicated",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:06:10Z",
            "diff_hunk": "@@ -262,20 +241,15 @@ end\n ---@param query string Query in s-expr syntax\n ---\n ---@return Query Parsed query\n-function M.parse(lang, query)\n+M.parse = vim._memoize('concat', function(lang, query)\n   language.add(lang)\n-  local cached = query_parse_cache[lang][query]\n-  if cached then\n-    return cached\n-  end\n \n   local self = setmetatable({}, Query)\n   self.query = vim._ts_parse_query(lang, query)\n   self.info = self.query:inspect()\n   self.captures = self.info.captures\n-  query_parse_cache[lang][query] = self\n   return self\n-end\n+end, 'concat')",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328073338",
            "id": 1328073338,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKMp6",
            "original_commit_id": "28bd492575f22e175f57be40c32dc726b7b0af20",
            "original_line": 252,
            "original_position": 69,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/query.lua",
            "position": null,
            "pull_request_review_id": 1630063834,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073338/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:06:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073338",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328073537"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073537"
                }
            },
            "author_association": "MEMBER",
            "body": "Decided to remove `deepcopy()` instead.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:08:52Z",
            "diff_hunk": "@@ -0,0 +1,42 @@\n+--- Module for private utility functions\n+\n+local M = {}\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @generic F: function\n+--- @param fn F\n+--- @param hash_fn? integer|'concat'|fun(...): any Hash function to to create a hash to\n+---                   stored results. When an integer, refers to the argument\n+---                   to use as a hash. Defaults to 1.\n+--- @return F\n+return function(fn, hash_fn)\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash_fn = hash_fn or 1\n+\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif hash_fn == 'concat' then\n+    hash_fn = concat_hash\n+  end\n+\n+  return function(...)\n+    local key = hash_fn(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))\n+    end\n+\n+    local v = vim.deepcopy(cache[key])",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328073537",
            "id": 1328073537,
            "in_reply_to_id": 1328039133,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKMtB",
            "original_commit_id": "66a1652bdb6b9d30e54ce672684e8e9a6aebb2f0",
            "original_line": 49,
            "original_position": 39,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630064093,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073537/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:08:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328073537",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328074833"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328074833"
                }
            },
            "author_association": "MEMBER",
            "body": "I worry about this not being robust with respect to lazy-loading shenanigans... Maybe `rtp` would be a reasonable hash?\r\n\r\nEven then, this will not pick up parsers installed with `:TSInstall`, which seems to be a definite regression.\r\n\r\n(Not requesting changes, as this fixes an unacceptable performance regression, which trumps convenience, but wanted to make a note of it.)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:19:21Z",
            "diff_hunk": "@@ -727,12 +727,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- called too often\n+--- @param lang string parser name\n+--- @return boolean # true if parser for {lang} exists on rtp\n+local has_parser = vim._memoize(1, function(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328074833",
            "id": 1328074833,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNBR",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 734,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630065129,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328074833/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:19:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328074833",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075147"
                }
            },
            "author_association": "MEMBER",
            "body": "That's why we use a weak table. The cache will be invalidated when lua runs garbage collection which is  often enough.\n\nIf we use a normal table, then invalidation as you describe is required.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:22:56Z",
            "diff_hunk": "@@ -727,12 +727,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- called too often\n+--- @param lang string parser name\n+--- @return boolean # true if parser for {lang} exists on rtp\n+local has_parser = vim._memoize(1, function(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075147",
            "id": 1328075147,
            "in_reply_to_id": 1328074833,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNGL",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 734,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630065457,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:22:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075312"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075312"
                }
            },
            "author_association": "MEMBER",
            "body": "I see. May be useful to mention in the memoize docs (or here), as I feel this will be a recurring question?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:24:38Z",
            "diff_hunk": "@@ -727,12 +727,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- called too often\n+--- @param lang string parser name\n+--- @return boolean # true if parser for {lang} exists on rtp\n+local has_parser = vim._memoize(1, function(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075312",
            "id": 1328075312,
            "in_reply_to_id": 1328074833,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNIw",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 734,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630065616,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075312/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:24:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075405"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075405"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There are only two hard things in Computer Science :)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:25:06Z",
            "diff_hunk": "@@ -727,12 +727,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- called too often\n+--- @param lang string parser name\n+--- @return boolean # true if parser for {lang} exists on rtp\n+local has_parser = vim._memoize(1, function(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075405",
            "id": 1328075405,
            "in_reply_to_id": 1328074833,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNKN",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 734,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630065665,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075405/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:25:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075513"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075513"
                }
            },
            "author_association": "MEMBER",
            "body": "Specifically: mention here that this means the cache will be invalidated by Lua(JIT) GC, which means it will expire automatically (but uncontrollably)?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:26:14Z",
            "diff_hunk": "@@ -987,4 +987,35 @@ do\n   end\n end\n \n+-- TODO(lewis6991): Private for now until:\n+-- - There are other places in the codebase that could benefit from this\n+--   (e.g. LSP), but might require other changes to accommodate.\n+-- - Invalidation of the cache needs to be controllable. Using weak tables\n+--   is an acceptable invalidation policy, but it shouldn't be the only\n+--   one.\n+-- - I don't think the story around `hash_fn` is completely thought out. We\n+--   may be able to have a good default hash_fn by hashing each argument,\n+--   so basically a better 'concat'.\n+--\n+--- Memoizes a function {fn} using {hash_fn} to hash the arguments.\n+--- Internally uses a weak table to cache the results of {fn}.",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075513",
            "id": 1328075513,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNL5",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 1001,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630065773,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075513/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:26:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075513",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075616"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075616"
                }
            },
            "author_association": "MEMBER",
            "body": "I already added: \r\n\r\n> Internally uses a weak table to cache the results of {fn}.\r\n\r\nIf people do not know what a weak table is then they can see `:h lua-weaktable`.\r\n\r\n",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:26:54Z",
            "diff_hunk": "@@ -727,12 +727,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- called too often\n+--- @param lang string parser name\n+--- @return boolean # true if parser for {lang} exists on rtp\n+local has_parser = vim._memoize(1, function(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075616",
            "id": 1328075616,
            "in_reply_to_id": 1328074833,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNNg",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 734,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630065843,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075616/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:26:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075739"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075739"
                }
            },
            "author_association": "MEMBER",
            "body": "Then maybe make this a link in the docs. (I still think the concrete consequence in this case is useful to point out.)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:27:47Z",
            "diff_hunk": "@@ -727,12 +727,14 @@ local function add_injection(t, tree_index, pattern, lang, combined, ranges)\n end\n \n -- TODO(clason): replace by refactored `ts.has_parser` API (without registering)\n----@param lang string parser name\n----@return boolean # true if parser for {lang} exists on rtp\n-local has_parser = function(lang)\n+--- The result of this function is cached to prevent nvim_get_runtime_file from being\n+--- called too often\n+--- @param lang string parser name\n+--- @return boolean # true if parser for {lang} exists on rtp\n+local has_parser = vim._memoize(1, function(lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075739",
            "id": 1328075739,
            "in_reply_to_id": 1328074833,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNPb",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 734,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/languagetree.lua",
            "position": null,
            "pull_request_review_id": 1630065917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075739/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:28:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075927"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075927"
                }
            },
            "author_association": "MEMBER",
            "body": "Not a LuaJIT specific thing, but sure.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:30:25Z",
            "diff_hunk": "@@ -987,4 +987,35 @@ do\n   end\n end\n \n+-- TODO(lewis6991): Private for now until:\n+-- - There are other places in the codebase that could benefit from this\n+--   (e.g. LSP), but might require other changes to accommodate.\n+-- - Invalidation of the cache needs to be controllable. Using weak tables\n+--   is an acceptable invalidation policy, but it shouldn't be the only\n+--   one.\n+-- - I don't think the story around `hash_fn` is completely thought out. We\n+--   may be able to have a good default hash_fn by hashing each argument,\n+--   so basically a better 'concat'.\n+--\n+--- Memoizes a function {fn} using {hash_fn} to hash the arguments.\n+--- Internally uses a weak table to cache the results of {fn}.",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075927",
            "id": 1328075927,
            "in_reply_to_id": 1328075513,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNSX",
            "original_commit_id": "9867b2d662488f9422ca0fc358d741ca80a5dc5a",
            "original_line": 1001,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630066127,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075927/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:30:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075927",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075945"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Since this is not doing deepcopy anymore, maybe the docs should clarify that you will get a shared reference (so be careful about mutating)",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:30:40Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+--- Module for private utility functions\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @param hash_fn any\n+--- @return fun(...): any\n+local function resolve_hash(hash_fn)\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif type(hash_fn) == 'string' then\n+    if hash_fn == 'concat' then\n+      hash_fn = concat_hash\n+    else\n+      error('invalid value for hash_fn: '..hash_fn)\n+    end\n+  end\n+  return hash_fn\n+end\n+\n+--- @generic F: function\n+--- @param hash? integer|'concat'|fun(...): any\n+--- @param fn F\n+--- @return F\n+return function(hash, fn)\n+  vim.validate({\n+    hash = { hash, {'integer', 'string', 'function' } },\n+    fn = { fn, 'function' },\n+  })\n+\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash = resolve_hash(hash)\n+\n+  return function(...)\n+    local key = hash(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328075945",
            "id": 1328075945,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNSp",
            "original_commit_id": "e656421eea74d9ec1725ba0970065349cefada37",
            "original_line": 51,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630066152,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075945/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:30:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328075945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328076721"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328076721"
                }
            },
            "author_association": "MEMBER",
            "body": "Sure. \r\n\r\nBtw, the reason I decided `deepcopy()` isn't worth it is that you can't protect against upvals being changed in closures, in addition to not being able to copy userdata.\r\n\r\nAlso the cache is invalidated fairly often, so mutation is _less_ likely to cause issues.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:38:06Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+--- Module for private utility functions\n+\n+local function concat_hash(...)\n+  return table.concat({...})\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @param hash_fn any\n+--- @return fun(...): any\n+local function resolve_hash(hash_fn)\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif type(hash_fn) == 'string' then\n+    if hash_fn == 'concat' then\n+      hash_fn = concat_hash\n+    else\n+      error('invalid value for hash_fn: '..hash_fn)\n+    end\n+  end\n+  return hash_fn\n+end\n+\n+--- @generic F: function\n+--- @param hash? integer|'concat'|fun(...): any\n+--- @param fn F\n+--- @return F\n+return function(hash, fn)\n+  vim.validate({\n+    hash = { hash, {'integer', 'string', 'function' } },\n+    fn = { fn, 'function' },\n+  })\n+\n+  ---@type table<any,table<any,any>>\n+  local cache = setmetatable({}, { __mode = 'kv' })\n+\n+  hash = resolve_hash(hash)\n+\n+  return function(...)\n+    local key = hash(...)\n+    if cache[key] == nil then\n+      cache[key] = vim.F.pack_len(fn(...))",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328076721",
            "id": 1328076721,
            "in_reply_to_id": 1328075945,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNex",
            "original_commit_id": "e656421eea74d9ec1725ba0970065349cefada37",
            "original_line": 51,
            "original_position": 46,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630066788,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328076721/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:38:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328076721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328077124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328077124"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- Memoizes a function {fn} using {hash} to hash the arguments.\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:41:11Z",
            "diff_hunk": "@@ -987,4 +987,38 @@ do\n   end\n end\n \n+-- TODO(lewis6991): Private for now until:\n+-- - There are other places in the codebase that could benefit from this\n+--   (e.g. LSP), but might require other changes to accommodate.\n+-- - Invalidation of the cache needs to be controllable. Using weak tables\n+--   is an acceptable invalidation policy, but it shouldn't be the only\n+--   one.\n+-- - I don't think the story around `hash_fn` is completely thought out. We\n+--   may be able to have a good default hash_fn by hashing each argument,\n+--   so basically a better 'concat'.\n+--\n+--- Memoizes a function {fn} using {hash_fn} to hash the arguments.",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328077124",
            "id": 1328077124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNlE",
            "original_commit_id": "94390651be92537583f14f286677db1253c24ce2",
            "original_line": 1000,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630067082,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328077124/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:41:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328077124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328077228"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328077228"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- @param hash integer|'concat'|function Hash function to create a hash to use as a key to\r\n```\r\n\r\nNo longer optional?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T10:41:49Z",
            "diff_hunk": "@@ -987,4 +987,38 @@ do\n   end\n end\n \n+-- TODO(lewis6991): Private for now until:\n+-- - There are other places in the codebase that could benefit from this\n+--   (e.g. LSP), but might require other changes to accommodate.\n+-- - Invalidation of the cache needs to be controllable. Using weak tables\n+--   is an acceptable invalidation policy, but it shouldn't be the only\n+--   one.\n+-- - I don't think the story around `hash_fn` is completely thought out. We\n+--   may be able to have a good default hash_fn by hashing each argument,\n+--   so basically a better 'concat'.\n+--\n+--- Memoizes a function {fn} using {hash_fn} to hash the arguments.\n+---\n+--- Internally uses a |lua-weaktable| to cache the results of {fn} meaning the\n+--- cache will be invalidated whenever Lua does garbage collection.\n+---\n+--- The memoized function returns shared references so be wary about\n+--- mutating return values.\n+---\n+--- @generic F: function\n+--- @param hash? integer|'concat'|function Hash function to create a hash to use as a key to",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328077228",
            "id": 1328077228,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKNms",
            "original_commit_id": "94390651be92537583f14f286677db1253c24ce2",
            "original_line": 1009,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630067172,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328077228/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T10:41:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328077228",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328118086"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118086"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not use the same type annotation from line 29?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T17:01:33Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+--- Module for private utility functions\n+\n+local function concat_hash(...)\n+  return table.concat({ ... })\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @param hash_fn any",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328118086",
            "id": 1328118086,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKXlG",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 13,
            "original_position": 13,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630103563,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118086/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T17:12:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118086",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328118215"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118215"
                }
            },
            "author_association": "MEMBER",
            "body": "Not optional anymore:\r\n```suggestion\r\n--- @param hash integer|'concat'|fun(...): any\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T17:02:31Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+--- Module for private utility functions\n+\n+local function concat_hash(...)\n+  return table.concat({ ... })\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @param hash_fn any\n+--- @return fun(...): any\n+local function resolve_hash(hash_fn)\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif type(hash_fn) == 'string' then\n+    if hash_fn == 'concat' then\n+      hash_fn = concat_hash\n+    else\n+      error('invalid value for hash_fn: ' .. hash_fn)\n+    end\n+  end\n+  return hash_fn\n+end\n+\n+--- @generic F: function\n+--- @param hash? integer|'concat'|fun(...): any",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328118215",
            "id": 1328118215,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKXnH",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 29,
            "original_position": 29,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630103563,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118215/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T17:12:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118215",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328118582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118582"
                }
            },
            "author_association": "MEMBER",
            "body": "Why are you removing the `@private` annotations?",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T17:05:49Z",
            "diff_hunk": "@@ -10,20 +10,12 @@ local M = {}\n \n --- @alias vim.treesitter.ParseError {msg: string, range: Range4}\n \n---- @private\n---- Caches parse results for queries for each language.\n---- Entries of parse_cache[lang][query_text] will either be true for successful parse or contain the\n---- message and range of the parse error.\n---- @type table<string,table<string,vim.treesitter.ParseError|true>>\n-local parse_cache = {}\n-\n --- Contains language dependent context for the query linter\n --- @class QueryLinterLanguageContext\n --- @field lang string? Current `lang` of the targeted parser\n --- @field parser_info table? Parser info returned by vim.treesitter.language.inspect\n --- @field is_first_lang boolean Whether this is the first language of a linter run checking queries for multiple `langs`\n \n---- @private",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328118582",
            "id": 1328118582,
            "line": 26,
            "node_id": "PRRC_kwDOAPphoM5PKXs2",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 26,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_query_linter.lua",
            "position": 17,
            "pull_request_review_id": 1630103563,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118582/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T17:12:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328118582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328119490"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328119490"
                }
            },
            "author_association": "MEMBER",
            "body": "Because these are local functions. The annotations are redundant.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T17:13:25Z",
            "diff_hunk": "@@ -10,20 +10,12 @@ local M = {}\n \n --- @alias vim.treesitter.ParseError {msg: string, range: Range4}\n \n---- @private\n---- Caches parse results for queries for each language.\n---- Entries of parse_cache[lang][query_text] will either be true for successful parse or contain the\n---- message and range of the parse error.\n---- @type table<string,table<string,vim.treesitter.ParseError|true>>\n-local parse_cache = {}\n-\n --- Contains language dependent context for the query linter\n --- @class QueryLinterLanguageContext\n --- @field lang string? Current `lang` of the targeted parser\n --- @field parser_info table? Parser info returned by vim.treesitter.language.inspect\n --- @field is_first_lang boolean Whether this is the first language of a linter run checking queries for multiple `langs`\n \n---- @private",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328119490",
            "id": 1328119490,
            "in_reply_to_id": 1328118582,
            "line": 26,
            "node_id": "PRRC_kwDOAPphoM5PKX7C",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 26,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_query_linter.lua",
            "position": 17,
            "pull_request_review_id": 1630104774,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328119490/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T17:14:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328119490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328120431"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328120431"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  line = line:gsub('^(.+) = vim%._memoize%([^,]+, function%((.*)%)$', 'function %1(%2)')\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T17:22:54Z",
            "diff_hunk": "@@ -361,6 +361,12 @@ local function process_line(line, in_stream, generics)\n     return process_block_comment(line:sub(5), in_stream)\n   end\n \n+  -- Hax... I'm sorry\n+  -- M.fun = vim.memoize(function(...)\n+  --   ->\n+  -- function M.fun(...)\n+  line = line:gsub('^(.*) = vim%._memoize%([^,]+, function%((.*)%)$', 'function %1(%2)')",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328120431",
            "id": 1328120431,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKYJv",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 368,
            "original_position": 8,
            "original_start_line": null,
            "path": "scripts/lua2dox.lua",
            "position": null,
            "pull_request_review_id": 1630105682,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328120431/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T17:22:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328120431",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328123360"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328123360"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    hash = { hash, { 'number', 'string', 'function' } },\r\n```\r\n`'integer'` is an invalid type name:\r\n<img width=\"1011\" alt=\"image\" src=\"https://github.com/neovim/neovim/assets/62502207/68ee7079-68ab-40d7-97c2-f025951f71e4\">\r\n",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-17T17:49:26Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+--- Module for private utility functions\n+\n+local function concat_hash(...)\n+  return table.concat({ ... })\n+end\n+\n+local function idx_hash(idx)\n+  return function(...)\n+    return select(idx, ...)\n+  end\n+end\n+\n+--- @param hash_fn any\n+--- @return fun(...): any\n+local function resolve_hash(hash_fn)\n+  if type(hash_fn) == 'number' then\n+    hash_fn = idx_hash(hash_fn)\n+  elseif type(hash_fn) == 'string' then\n+    if hash_fn == 'concat' then\n+      hash_fn = concat_hash\n+    else\n+      error('invalid value for hash_fn: ' .. hash_fn)\n+    end\n+  end\n+  return hash_fn\n+end\n+\n+--- @generic F: function\n+--- @param hash? integer|'concat'|fun(...): any\n+--- @param fn F\n+--- @return F\n+return function(hash, fn)\n+  vim.validate({\n+    hash = { hash, { 'integer', 'string', 'function' } },",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328123360",
            "id": 1328123360,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PKY3g",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 34,
            "original_position": 34,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630108112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328123360/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-17T17:49:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328123360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328670222"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328670222"
                }
            },
            "author_association": "MEMBER",
            "body": "Although this is private for now, I'd encourage putting it in `vim.func` since that is where we would likely want to expose it eventually. This is on my mind since we're also considering `traverse()`, which would also make sense in `vim.func`.",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-18T12:46:20Z",
            "diff_hunk": "@@ -0,0 +1,51 @@\n+--- Module for private utility functions",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328670222",
            "id": 1328670222,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PMeYO",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "runtime/lua/vim/_memoize.lua",
            "position": null,
            "pull_request_review_id": 1630963112,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328670222/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-18T12:46:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328670222",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328674808"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328674808"
                }
            },
            "author_association": "MEMBER",
            "body": "_Visibility_ is another important feature of these builtin mechanisms. Not only for `:checkhealth` , but eventually we should have periodic checking so that Nvim can warn about badly-behaving plugins that are using too much global state.\r\n\r\nThis topic is bigger than just \"memoize\", but \"memoize\" is an obvious use-case of a global cache that needs monitoring. ",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-18T12:50:18Z",
            "diff_hunk": "@@ -987,4 +987,38 @@ do\n   end\n end\n \n+-- TODO(lewis6991): Private for now until:\n+-- - There are other places in the codebase that could benefit from this\n+--   (e.g. LSP), but might require other changes to accommodate.\n+-- - Invalidation of the cache needs to be controllable. Using weak tables\n+--   is an acceptable invalidation policy, but it shouldn't be the only",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328674808",
            "id": 1328674808,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PMff4",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 994,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/lua/vim/shared.lua",
            "position": null,
            "pull_request_review_id": 1630970301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328674808/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-18T12:50:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328674808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1328675887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328675887"
                }
            },
            "author_association": "MEMBER",
            "body": "😆 ",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-18T12:51:15Z",
            "diff_hunk": "@@ -361,6 +361,12 @@ local function process_line(line, in_stream, generics)\n     return process_block_comment(line:sub(5), in_stream)\n   end\n \n+  -- Hax... I'm sorry",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1328675887",
            "id": 1328675887,
            "line": 364,
            "node_id": "PRRC_kwDOAPphoM5PMfwv",
            "original_commit_id": "2fd80f8f547f3dd0c3fa00d663073463edd55512",
            "original_line": 364,
            "original_position": 4,
            "original_start_line": null,
            "path": "scripts/lua2dox.lua",
            "position": 4,
            "pull_request_review_id": 1630972124,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328675887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-18T12:51:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1328675887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25201#discussion_r1330398437"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25201"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1330398437"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nlocal parse = vim.func._memoize(hash_parse, function(node, buf, lang)\r\n```",
            "commit_id": "5b3b8005b670815151c0839887b976818c87d106",
            "created_at": "2023-09-19T16:21:02Z",
            "diff_hunk": "@@ -112,38 +101,26 @@ local function get_error_entry(err, node)\n   }\n end\n \n---- @private\n --- @param node TSNode\n --- @param buf integer\n --- @param lang string\n---- @param diagnostics Diagnostic[]\n-local function check_toplevel(node, buf, lang, diagnostics)\n-  local query_text = vim.treesitter.get_node_text(node, buf)\n-\n-  if not parse_cache[lang] then\n-    parse_cache[lang] = {}\n-  end\n-\n-  local lang_cache = parse_cache[lang]\n-\n-  if lang_cache[query_text] == nil then\n-    local cache_val, err = pcall(vim.treesitter.query.parse, lang, query_text) ---@type boolean|vim.treesitter.ParseError, string|Query\n-\n-    if not cache_val and type(err) == 'string' then\n-      cache_val = get_error_entry(err, node)\n-    end\n-\n-    lang_cache[query_text] = cache_val\n-  end\n+local function hash_parse(node, buf, lang)\n+  return tostring(node:id()) .. tostring(buf) .. tostring(vim.b[buf].changedtick) .. lang\n+end\n \n-  local cache_entry = lang_cache[query_text]\n+--- @param node TSNode\n+--- @param buf integer\n+--- @param lang string\n+--- @return vim.treesitter.ParseError?\n+local parse = vim._memoize(hash_parse, function(node, buf, lang)",
            "html_url": "https://github.com/neovim/neovim/pull/25201#discussion_r1330398437",
            "id": 1330398437,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PTETl",
            "original_commit_id": "98410db34433d764802477565c4a7c9549d31293",
            "original_line": 115,
            "original_position": 81,
            "original_start_line": null,
            "path": "runtime/lua/vim/treesitter/_query_linter.lua",
            "position": null,
            "pull_request_review_id": 1633714666,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1330398437/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-19T16:21:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1330398437",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@MariaSolOs can you test?",
            "created_at": "2023-09-16T22:12:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722327595",
            "id": 1722327595,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqKIr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722327595/reactions"
            },
            "updated_at": "2023-09-16T22:12:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722327595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@lewis6991 besides the typos, it works for me :)",
            "created_at": "2023-09-16T22:16:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722328211",
            "id": 1722328211,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqKST",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722328211/reactions"
            },
            "updated_at": "2023-09-16T22:16:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722328211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Don't want to block a good fix, but as a \"todo\", \"note to self\": We should refactor and expose (a cached, side-effect free version) of `has_parser` and use it in `language.add` and friends.",
            "created_at": "2023-09-16T22:30:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722330595",
            "id": 1722330595,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqK3j",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722330595/reactions"
            },
            "updated_at": "2023-09-16T22:30:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722330595",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This is an extension of https://github.com/nvim-treesitter/nvim-treesitter-context/blob/master/lua/treesitter-context/cache.lua so I don't think there will be any issue with it 🤔 ",
            "created_at": "2023-09-17T03:13:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722378714",
            "id": 1722378714,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqWna",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722378714/reactions"
            },
            "updated_at": "2023-09-17T03:13:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722378714",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29790821?v=4",
                "events_url": "https://api.github.com/users/lucario387/events{/privacy}",
                "followers_url": "https://api.github.com/users/lucario387/followers",
                "following_url": "https://api.github.com/users/lucario387/following{/other_user}",
                "gists_url": "https://api.github.com/users/lucario387/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lucario387",
                "id": 29790821,
                "login": "lucario387",
                "node_id": "MDQ6VXNlcjI5NzkwODIx",
                "organizations_url": "https://api.github.com/users/lucario387/orgs",
                "received_events_url": "https://api.github.com/users/lucario387/received_events",
                "repos_url": "https://api.github.com/users/lucario387/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lucario387/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lucario387/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lucario387"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is an extension of https://github.com/nvim-treesitter/nvim-treesitter-context/blob/master/lua/treesitter-context/cache.lua so I don't think there will be any issue with it 🤔\r\n\r\nThat's right, it shouldn't be surprising that the same person wrote both implementations 😄 ",
            "created_at": "2023-09-17T03:16:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722379205",
            "id": 1722379205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqWvF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722379205/reactions"
            },
            "updated_at": "2023-09-17T03:16:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722379205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I've decided to re-re-pivot this PR and **not** expose `vim.memoize()` because:\r\n\r\n- I want to merge this soon to resolve the perf issue revealed by #25143\r\n- There are other places in the codebase that could benefit from this (e.g. LSP), but might require  other changes to accommodate.\r\n- Invalidation of the cache needs to be controllable. Using weak tables is an acceptable invalidation policy, but it shouldn't be the only one.\r\n- I don't think the story around `hash_fn` is completely thought out. We may be able to have a good default `hash_fn` by hashing each argument, so basically a better `'concat'`.\r\n\r\nI'll still expose this as `vim._memoize()`. It'll just be undocumented and not subject to our API and deprecation policies.\r\n\r\nAlso, thanks for all the review comments, they were very helpful.",
            "created_at": "2023-09-17T09:42:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722437759",
            "id": 1722437759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqlB_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722437759/reactions"
            },
            "updated_at": "2023-09-17T09:42:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722437759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Made some final changes to `_query_linter.lua` that might be worth looking at. Will try and target other caches in follow-ups.",
            "created_at": "2023-09-17T11:10:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722453075",
            "id": 1722453075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mqoxT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722453075/reactions"
            },
            "updated_at": "2023-09-17T11:11:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722453075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "For later research purposes:\r\n\r\nthere's an old forum thread about the hashing/lookup side of things: https://love2d.org/forums/viewtopic.php?t=2867\r\n\r\nthe innovation that this has is that the key is an array and you can look up like `cache[key[0]][key[1]][key[2]]...`. avoids edge cases with stringification/concat\r\n\r\n(n.b. I think the term [\"memoize\" connotes memoizing a deterministic function,](https://stackoverflow.com/a/6469677) i.e. no invalidation needed. probably \"cache\" is the more general term for a similar functionality with invalidation. if we're going to eventually expose something in the public API maybe we can just expose `vim.cached` instead of making `vim.memoize` do generalized caching, or having both `vim.cached` and `vim.memoize`)\r\n\r\nA number of ways to generalize the above \"memoize\" into \"cache\"\r\n- can return `cached, clear_all`\r\n- can extend the cache_key like this PR does, but supporting arrays, like `vim.cache(args => ({ ... args,  foo }), fn)` (sorry for JS syntax)\r\n- if you want to get fancy with it, you can add an add a time-based and/or capacity-based (LRU) invalidation parameter and/or even let user store and compare arbitrary fields into the cache upon population. scope creep?",
            "created_at": "2023-09-17T22:44:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1722586839",
            "id": 1722586839,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5mrJbX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722586839/reactions"
            },
            "updated_at": "2023-09-18T16:45:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1722586839",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If we're going to move this to a \"functional programming\" library I'd actually consider doubling down on the \"memoize\" vs \"cache\" distinction and just have\r\n- no customizable hash; always do [nested key](https://github.com/kikito/memoize.lua/blob/master/memoize.lua)\r\n- no need to allow customizing the invalidation here. weak table as the only option seems fine; maybe weak table and strong table in the future; long shot LRU (maybe overkill)\r\n\r\nAnything else we could say is in the scope of a non-functional programming \"cache\" util and out of the scope of \"memoize\" (the counterargument is that nothing we do is truly functional, and so `vim.func` wouldn't necessarily be a truly FP lib, but still feel like the name \"memoize\" has a particular connotation)\r\n\r\nNothing blocking the PR of course, just things to think about if/when some version of this goes public?",
            "created_at": "2023-09-19T21:33:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1726532729",
            "id": 1726532729,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5m6Mx5",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1726532729/reactions"
            },
            "updated_at": "2023-09-19T21:38:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1726532729",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/5601392?v=4",
                "events_url": "https://api.github.com/users/llllvvuu/events{/privacy}",
                "followers_url": "https://api.github.com/users/llllvvuu/followers",
                "following_url": "https://api.github.com/users/llllvvuu/following{/other_user}",
                "gists_url": "https://api.github.com/users/llllvvuu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/llllvvuu",
                "id": 5601392,
                "login": "llllvvuu",
                "node_id": "MDQ6VXNlcjU2MDEzOTI=",
                "organizations_url": "https://api.github.com/users/llllvvuu/orgs",
                "received_events_url": "https://api.github.com/users/llllvvuu/received_events",
                "repos_url": "https://api.github.com/users/llllvvuu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/llllvvuu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/llllvvuu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/llllvvuu"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> no customizable hash; \r\n\r\nWe need a hash function for both `userdata` and tables (so `{a=1} == {a=1}`).\r\n\r\n> the innovation that this has is that the key is an array and you can look up like cache[key[0]][key[1]][key[2]].... avoids edge cases with stringification/concat\r\n\r\nYes, a multi level cache is something we will need. However, there are times where having a multi level key can use too much memory since each level needs to allocate additional tables. \r\n\r\ne.g.\r\n```lua\r\nlocal multi_level = {\r\n  [1] = {\r\n    a = { foo = 1, bar = 2 },\r\n    b = { foo = 1, bar = 2 }\r\n  },\r\n  [2] = {\r\n    a = { foo = 1, bar = 2 },\r\n    b = { foo = 1, bar = 2 }\r\n  },\r\n  [3] = {\r\n    a = { foo = 1, bar = 2 },\r\n    b = { foo = 1, bar = 2 }\r\n  }\r\n}\r\n\r\nlocal single_level = {\r\n  ['1afoo'] = 1,\r\n  ['1abar'] = 2,\r\n  ['1bfoo'] = 1,\r\n  ['1bbar'] = 2,\r\n  ['2afoo'] = 1,\r\n  ['2abar'] = 2,\r\n  ['2bfoo'] = 1,\r\n  ['2bbar'] = 2,\r\n  ['3afoo'] = 1,\r\n  ['3abar'] = 2,\r\n  ['3bfoo'] = 1,\r\n  ['3bbar'] = 2,\r\n}\r\n```\r\n\r\nAbove `multi_level` needs to allocate 9 additional tables compared to `single_level`.\r\n\r\nBy using a hash function we can keep the internal cache as a single level table which can be much more memory efficient in situations in addition to being faster to index.\r\n\r\nHowever, what a multi-level cache does provide you is more fine grained invalidation. e.g. we can invalidate just the first level `1` with `multi_level[1] = nil`.\r\n\r\nSo we should aim to support both.\r\n\r\nI was thinking we could modify `hash` to return multiple values to enable a multi level cache.\r\n\r\ne.g. \r\n```lua\r\n--- @param bufnr integer\r\n--- @param node userdata\r\n--- @param region integer[]\r\n--- @param not_used any\r\n--- @return integer, integer, string\r\nlocal function hash_for_ts_fun(bufnr, node, region, not_used)\r\n    return bufnr, node:id(), hash_region(region)\r\nend\r\n```\r\n\r\nWhich will create a 3 level cache.",
            "created_at": "2023-09-20T08:40:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1727246655",
            "id": 1727246655,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5m87E_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727246655/reactions"
            },
            "updated_at": "2023-09-20T08:40:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727246655",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Above `multi_level` needs to allocate 9 additional tables compared to `single_level`.\r\n\r\nAt least for the public interface, a simpler interface at the cost of extra memory seems like a win. memoize() is not meant to store large amounts of data, it's saving expensive calculations. ",
            "created_at": "2023-09-20T09:20:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1727322032",
            "id": 1727322032,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5m9New",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727322032/reactions"
            },
            "updated_at": "2023-09-20T09:20:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727322032",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  a simpler interface at the cost of extra memory seems like a win.\r\n\r\nAs a hash function is required, a multi level cache will only complicate the interface _and_ cost extra memory. The main (only?) benefit to multi-level cache is fine-grained invalidation.",
            "created_at": "2023-09-20T09:39:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1727355166",
            "id": 1727355166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5m9Vke",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727355166/reactions"
            },
            "updated_at": "2023-09-20T09:39:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727355166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> there's an old forum thread about the hashing/lookup side of things: [love2d.org/forums/viewtopic.php?t=2867](https://love2d.org/forums/viewtopic.php?t=2867)\r\n\r\nJust quickly looking at that I can see several problems:\r\n- It will not properly cache functions with userdata or tables as arguments.\r\n  - Requires a hash function\r\n- It does not consider default argument values for functions\r\n   - Requires a hash function\r\n- It does not support functions with returns like `return val, nil, val2`, as it will cache this as `val`.\r\n  - This PR avoids that using `pack_len` and `unpack_len`\r\n\r\nOther than that we could borrow its `cache_get` and `cache_put` functions but just replace `params` with `hash(params)`.\r\n",
            "created_at": "2023-09-20T09:52:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/25201#issuecomment-1727377665",
            "id": 1727377665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
            "node_id": "IC_kwDOAPphoM5m9bEB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727377665/reactions"
            },
            "updated_at": "2023-09-20T09:52:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727377665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25201/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25201/commits",
    "created_at": "2023-09-16T22:10:49Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25201.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:perf/tsmemoizehp",
        "ref": "perf/tsmemoizehp",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-01-26T15:07:27Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 248056,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2023-01-31T18:36:52Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5b3b8005b670815151c0839887b976818c87d106",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25201",
    "id": 1518335902,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25201",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "877d04d0fb83b5fc602dbab22b58f26a793ec236",
    "merged_at": "2023-09-20T12:42:42Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 266,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 135,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-29T07:22:06Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5af_ee",
    "number": 25201,
    "patch_url": "https://github.com/neovim/neovim/pull/25201.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25201/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5b3b8005b670815151c0839887b976818c87d106",
    "title": "feat(lua): add vim.func._memoize() and use it",
    "updated_at": "2024-01-26T00:11:47Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25201",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}