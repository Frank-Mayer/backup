{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30917/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30917/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30917"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30917"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30917/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6460fc14d8ea46c4630fc46bf562f49e0b7a6229"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": {
        "commit_message": "Instead of keeping `P_ALLOCED` and `P_DEF_ALLOCED` flags to check if an\r\noption value is allocated, always allocate option values to simplify the\r\nlogic.\r\n\r\nRef: #25672",
        "commit_title": "refactor(options): always allocate option values (#30917)",
        "enabled_by": {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        },
        "merge_method": "squash"
    },
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5682,
            "forks_count": 5682,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1804,
            "open_issues_count": 1804,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-10-29T01:08:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 291853,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82872,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-29T01:08:09Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82872,
            "watchers_count": 82872,
            "web_commit_signoff_required": false
        },
        "sha": "123c0b6b4e2d3f0665774b70b6bec79afbef4509",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Instead of keeping `P_ALLOCED` and `P_DEF_ALLOCED` flags to check if an option value is allocated, always allocate option values to simplify the logic.\r\n\r\nRef: #25672",
    "closed_at": "2024-10-27T13:09:24Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816949008"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816949008"
                }
            },
            "author_association": "MEMBER",
            "body": "may be confusing for little gain to redefine (line 473 above) the meaning of `set_option_default` (compared to Vim). \r\n\r\ninstead we could keep that name here, and use a name like `def_option_default` (\"define\") or `init_option_default`.\r\n\r\np.s. maybe it's best if new functions use `option_` prefix in their names.",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T15:45:21Z",
            "diff_hunk": "@@ -463,12 +457,31 @@ static OptVal get_option_default(const OptIndex opt_idx, int opt_flags)\n   }\n }\n \n+/// Allocate the default values for all options by copying them from the stack.\n+/// This ensures that we don't need to always check if the option default is allocated or not.\n+static void alloc_options_default(void)\n+{\n+  for (OptIndex opt_idx = 0; opt_idx < kOptIndexCount; opt_idx++) {\n+    options[opt_idx].def_val = optval_copy(options[opt_idx].def_val);\n+  }\n+}\n+\n+/// Change the default value for an option.\n+///\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  value    New default value. Must be allocated.\n+static void set_option_default(const OptIndex opt_idx, OptVal value)\n+{\n+  optval_free(options[opt_idx].def_val);\n+  options[opt_idx].def_val = value;\n+}\n+\n /// Set an option to its default value.\n /// This does not take care of side effects!\n ///\n /// @param  opt_idx    Option index in options[] table.\n /// @param  opt_flags  Option flags.\n-static void set_option_default(const OptIndex opt_idx, int opt_flags)\n+static void set_option_to_default(const OptIndex opt_idx, int opt_flags)",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816949008",
            "id": 1816949008,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sTHEQ",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 484,
            "original_position": 84,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2395705588,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816949008/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T15:46:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816949008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816952506"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816952506"
                }
            },
            "author_association": "MEMBER",
            "body": "is this defining/initializing the default or \"setting the option to its default\" ? ",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T15:47:34Z",
            "diff_hunk": "@@ -512,17 +525,8 @@ static void set_options_default(int opt_flags)\n static void set_string_default(OptIndex opt_idx, char *val, bool allocated)",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816952506",
            "id": 1816952506,
            "line": 525,
            "node_id": "PRRC_kwDOAPphoM5sTH66",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 525,
            "original_position": 103,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": 73,
            "pull_request_review_id": 2395711850,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816952506/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T15:47:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816952506",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816956852"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816956852"
                }
            },
            "author_association": "MEMBER",
            "body": "is it really required to bump all these flags or could we keep them as-is and just comment-out the P_ALLOCED line and explain that it's unused",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T15:50:07Z",
            "diff_hunk": "@@ -8,49 +8,43 @@\n // option_vars.h: definition of global variables for settable options\n \n // Option Flags\n-#define P_ALLOCED      0x01U        ///< the option is in allocated memory,\n-                                    ///< must use free_string_option() when\n-                                    ///< assigning new value. Not set if default is\n-                                    ///< the same.\n-#define P_EXPAND       0x02U        ///< environment expansion.  NOTE: P_EXPAND can\n+#define P_EXPAND       0x01U        ///< environment expansion.  NOTE: P_EXPAND can",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816956852",
            "id": 1816956852,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sTI-0",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 11,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/option_vars.h",
            "position": null,
            "pull_request_review_id": 2395720987,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816956852/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T15:50:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816956852",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816992155"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816992155"
                }
            },
            "author_association": "MEMBER",
            "body": "`init_option_default` seems reasonable. I'll revert the other functions to their previous name",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T16:16:27Z",
            "diff_hunk": "@@ -463,12 +457,31 @@ static OptVal get_option_default(const OptIndex opt_idx, int opt_flags)\n   }\n }\n \n+/// Allocate the default values for all options by copying them from the stack.\n+/// This ensures that we don't need to always check if the option default is allocated or not.\n+static void alloc_options_default(void)\n+{\n+  for (OptIndex opt_idx = 0; opt_idx < kOptIndexCount; opt_idx++) {\n+    options[opt_idx].def_val = optval_copy(options[opt_idx].def_val);\n+  }\n+}\n+\n+/// Change the default value for an option.\n+///\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  value    New default value. Must be allocated.\n+static void set_option_default(const OptIndex opt_idx, OptVal value)\n+{\n+  optval_free(options[opt_idx].def_val);\n+  options[opt_idx].def_val = value;\n+}\n+\n /// Set an option to its default value.\n /// This does not take care of side effects!\n ///\n /// @param  opt_idx    Option index in options[] table.\n /// @param  opt_flags  Option flags.\n-static void set_option_default(const OptIndex opt_idx, int opt_flags)\n+static void set_option_to_default(const OptIndex opt_idx, int opt_flags)",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816992155",
            "id": 1816992155,
            "in_reply_to_id": 1816949008,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sTRmb",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 484,
            "original_position": 84,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2395782704,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816992155/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T16:16:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816992155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816992423"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816992423"
                }
            },
            "author_association": "MEMBER",
            "body": "It's changing the default value of an option, so the former",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T16:16:42Z",
            "diff_hunk": "@@ -512,17 +525,8 @@ static void set_options_default(int opt_flags)\n static void set_string_default(OptIndex opt_idx, char *val, bool allocated)",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816992423",
            "id": 1816992423,
            "in_reply_to_id": 1816952506,
            "line": 525,
            "node_id": "PRRC_kwDOAPphoM5sTRqn",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 525,
            "original_position": 103,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": 73,
            "pull_request_review_id": 2395783147,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816992423/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T16:16:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816992423",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816994681"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816994681"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not required but it can be useful to free up flag space as we can only have up to 32 flags\r\nLet me know if I should revert this change\r\n\r\nPS: I plan to rework the whole option flag system in the future anyway to no longer use macros, if that matters",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T16:18:15Z",
            "diff_hunk": "@@ -8,49 +8,43 @@\n // option_vars.h: definition of global variables for settable options\n \n // Option Flags\n-#define P_ALLOCED      0x01U        ///< the option is in allocated memory,\n-                                    ///< must use free_string_option() when\n-                                    ///< assigning new value. Not set if default is\n-                                    ///< the same.\n-#define P_EXPAND       0x02U        ///< environment expansion.  NOTE: P_EXPAND can\n+#define P_EXPAND       0x01U        ///< environment expansion.  NOTE: P_EXPAND can",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816994681",
            "id": 1816994681,
            "in_reply_to_id": 1816956852,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sTSN5",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 11,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/option_vars.h",
            "position": null,
            "pull_request_review_id": 2395786860,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816994681/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T16:19:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816994681",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1816997676"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816997676"
                }
            },
            "author_association": "MEMBER",
            "body": "On second thought, `modify_option_default` or `change_option_default` seem like better names",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T16:21:01Z",
            "diff_hunk": "@@ -463,12 +457,31 @@ static OptVal get_option_default(const OptIndex opt_idx, int opt_flags)\n   }\n }\n \n+/// Allocate the default values for all options by copying them from the stack.\n+/// This ensures that we don't need to always check if the option default is allocated or not.\n+static void alloc_options_default(void)\n+{\n+  for (OptIndex opt_idx = 0; opt_idx < kOptIndexCount; opt_idx++) {\n+    options[opt_idx].def_val = optval_copy(options[opt_idx].def_val);\n+  }\n+}\n+\n+/// Change the default value for an option.\n+///\n+/// @param  opt_idx  Option index in options[] table.\n+/// @param  value    New default value. Must be allocated.\n+static void set_option_default(const OptIndex opt_idx, OptVal value)\n+{\n+  optval_free(options[opt_idx].def_val);\n+  options[opt_idx].def_val = value;\n+}\n+\n /// Set an option to its default value.\n /// This does not take care of side effects!\n ///\n /// @param  opt_idx    Option index in options[] table.\n /// @param  opt_flags  Option flags.\n-static void set_option_default(const OptIndex opt_idx, int opt_flags)\n+static void set_option_to_default(const OptIndex opt_idx, int opt_flags)",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1816997676",
            "id": 1816997676,
            "in_reply_to_id": 1816949008,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sTS8s",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 484,
            "original_position": 84,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2395792302,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816997676/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T16:21:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1816997676",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817032074"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817032074"
                }
            },
            "author_association": "MEMBER",
            "body": "> plan to rework the whole option flag system in the future anyway to no longer use macros\r\n\r\nit's probably worth avoiding the churn here, until then.",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T16:44:56Z",
            "diff_hunk": "@@ -8,49 +8,43 @@\n // option_vars.h: definition of global variables for settable options\n \n // Option Flags\n-#define P_ALLOCED      0x01U        ///< the option is in allocated memory,\n-                                    ///< must use free_string_option() when\n-                                    ///< assigning new value. Not set if default is\n-                                    ///< the same.\n-#define P_EXPAND       0x02U        ///< environment expansion.  NOTE: P_EXPAND can\n+#define P_EXPAND       0x01U        ///< environment expansion.  NOTE: P_EXPAND can",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817032074",
            "id": 1817032074,
            "in_reply_to_id": 1816956852,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sTbWK",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 11,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/option_vars.h",
            "position": null,
            "pull_request_review_id": 2395853958,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817032074/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T16:44:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817032074",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817201050"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817201050"
                }
            },
            "author_association": "MEMBER",
            "body": "Should be fine now",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T18:47:53Z",
            "diff_hunk": "@@ -8,49 +8,43 @@\n // option_vars.h: definition of global variables for settable options\n \n // Option Flags\n-#define P_ALLOCED      0x01U        ///< the option is in allocated memory,\n-                                    ///< must use free_string_option() when\n-                                    ///< assigning new value. Not set if default is\n-                                    ///< the same.\n-#define P_EXPAND       0x02U        ///< environment expansion.  NOTE: P_EXPAND can\n+#define P_EXPAND       0x01U        ///< environment expansion.  NOTE: P_EXPAND can",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817201050",
            "id": 1817201050,
            "in_reply_to_id": 1816956852,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sUEma",
            "original_commit_id": "c8a4d6c7eaad0f4119fa09db16edb8b53621af4e",
            "original_line": 11,
            "original_position": 9,
            "original_start_line": null,
            "path": "src/nvim/option_vars.h",
            "position": null,
            "pull_request_review_id": 2396172637,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817201050/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-25T18:47:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817201050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817218995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817218995"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n// #define P_ALLOCED      0x01U        ///< Not used. TODO(famiu): change to enum?\r\n```",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-25T19:06:19Z",
            "diff_hunk": "@@ -8,16 +8,18 @@\n // option_vars.h: definition of global variables for settable options\n \n // Option Flags\n-#define P_ALLOCED      0x01U        ///< the option is in allocated memory,\n-                                    ///< must use free_string_option() when\n-                                    ///< assigning new value. Not set if default is\n-                                    ///< the same.\n+// #define P_ALLOCED      0x01U        ///< the option is in allocated memory,\n+//                                     ///< must use free_string_option() when\n+//                                     ///< assigning new value. Not set if default is\n+//                                     ///< the same.\n+//                                     ///< No longer used since option value is always allocated.",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817218995",
            "id": 1817218995,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sUI-z",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 15,
            "original_position": 12,
            "original_start_line": 11,
            "path": "src/nvim/option_vars.h",
            "position": null,
            "pull_request_review_id": 2396201265,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817218995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-25T19:07:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817218995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817580177"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817580177"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this check really needed? If an option hasn't been allocated, freeing it should be no-op. Plus, having a static array here is no better than having the `P_ALLOCED` flag, as a flag doesn't require additional static memory like this.",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T02:20:06Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817580177",
            "id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sVhKR",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397022522,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817580177/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T02:22:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817580177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817840832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817840832"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes this check is needed. Using `free` on unallocated memory is in fact not no-op and will cause a segfault.\r\nAnd using a static flag is not the same as `P_ALLOCED`, as it's only used once to check if the option has been initialized at all or not\r\n\r\nEDIT: I guess you could mitigate this by always setting an option to a null value\r\n",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T12:11:58Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817840832",
            "id": 1817840832,
            "in_reply_to_id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sWgzA",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397236532,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817840832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T12:25:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817840832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817843456"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817843456"
                }
            },
            "author_association": "MEMBER",
            "body": "What unallocated memory? AFAIK there is no string option value that isn't initially NULL.",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T12:31:27Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817843456",
            "id": 1817843456,
            "in_reply_to_id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sWhcA",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397243435,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817843456/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T12:32:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817843456",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817844172"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817844172"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, there is a single option: `p_vfile`",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T12:36:55Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817844172",
            "id": 1817844172,
            "in_reply_to_id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sWhnM",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397244651,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817844172/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T12:36:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817844172",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817845621"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817845621"
                }
            },
            "author_association": "MEMBER",
            "body": "It works if you use `empty_string_option` for that:\r\n```diff\r\ndiff --git a/src/nvim/globals.h b/src/nvim/globals.h\r\nindex 45a31ce6b0..1cdb38f5f8 100644\r\n--- a/src/nvim/globals.h\r\n+++ b/src/nvim/globals.h\r\n@@ -713,12 +713,6 @@ EXTERN char *escape_chars INIT( = \" \\t\\\\\\\"|\");  // need backslash in cmd line\r\n \r\n EXTERN bool keep_help_flag INIT( = false);  // doing :ta from help file\r\n \r\n-// When a string option is NULL (which only happens in out-of-memory situations), it is set to\r\n-// empty_string_option, to avoid having to check for NULL everywhere.\r\n-//\r\n-// TODO(famiu): Remove this when refcounted strings are used for string options.\r\n-EXTERN char *empty_string_option INIT( = \"\");\r\n-\r\n EXTERN bool redir_off INIT( = false);        // no redirection for a moment\r\n EXTERN FILE *redir_fd INIT( = NULL);         // message redirection file\r\n EXTERN int redir_reg INIT( = 0);             // message redirection register\r\ndiff --git a/src/nvim/option.c b/src/nvim/option.c\r\nindex a0f58eaa16..72f8a5d2f3 100644\r\n--- a/src/nvim/option.c\r\n+++ b/src/nvim/option.c\r\n@@ -3442,7 +3442,6 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\r\n   bool restore_chartab = false;\r\n   bool value_changed = false;\r\n   bool value_checked = false;\r\n-  static bool opt_initialized[kOptIndexCount] = { 0 };\r\n \r\n   optset_T did_set_cb_args = {\r\n     .os_varp = varp,\r\n@@ -3516,14 +3515,7 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\r\n     set_option_sctx(opt_idx, opt_flags, script_ctx);\r\n   }\r\n \r\n-  // Free options that are in allocated memory.\r\n-  // NOTE: When initializing an option for the first time, don't try to free its value as it has\r\n-  // not been allocated yet.\r\n-  if (opt_initialized[opt_idx]) {\r\n-    optval_free(old_value);\r\n-  } else {\r\n-    opt_initialized[opt_idx] = true;\r\n-  }\r\n+  optval_free(old_value);\r\n \r\n   const bool scope_both = (opt_flags & (OPT_LOCAL | OPT_GLOBAL)) == 0;\r\n \r\ndiff --git a/src/nvim/option_vars.h b/src/nvim/option_vars.h\r\nindex bf72d4a18a..a4a7b8aaa8 100644\r\n--- a/src/nvim/option_vars.h\r\n+++ b/src/nvim/option_vars.h\r\n@@ -350,6 +350,12 @@ enum {\r\n #define LISPWORD_VALUE \\\r\n   \"defun,define,defmacro,set!,lambda,if,case,let,flet,let*,letrec,do,do*,define-syntax,let-syntax,letrec-syntax,destructuring-bind,defpackage,defparameter,defstruct,deftype,defvar,do-all-symbols,do-external-symbols,do-symbols,dolist,dotimes,ecase,etypecase,eval-when,labels,macrolet,multiple-value-bind,multiple-value-call,multiple-value-prog1,multiple-value-setq,prog1,progv,typecase,unless,unwind-protect,when,with-input-from-string,with-open-file,with-open-stream,with-output-to-string,with-package-iterator,define-condition,handler-bind,handler-case,restart-bind,restart-case,with-simple-restart,store-value,use-value,muffle-warning,abort,continue,with-slots,with-slots*,with-accessors,with-accessors*,defclass,defmethod,print-unreadable-object\"\r\n \r\n+// When a string option is NULL, it is set to empty_string_option,\r\n+// to avoid having to check for NULL everywhere.\r\n+//\r\n+// TODO(famiu): Remove this when refcounted strings are used for string options.\r\n+EXTERN char empty_string_option[] INIT( = \"\");\r\n+\r\n // The following are actual variables for the options\r\n \r\n EXTERN char *p_ambw;             ///< 'ambiwidth'\r\n@@ -772,7 +778,7 @@ EXTERN unsigned ve_flags;\r\n #define VE_NONEU       32U      // \"NONE\"\r\n EXTERN OptInt p_verbose;        ///< 'verbose'\r\n #ifdef IN_OPTION_C\r\n-char *p_vfile = \"\";             ///< used before options are initialized\r\n+char *p_vfile = empty_string_option;  ///< used before options are initialized\r\n #else\r\n extern char *p_vfile;           ///< 'verbosefile'\r\n #endif\r\n```",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T12:46:48Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817845621",
            "id": 1817845621,
            "in_reply_to_id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sWh91",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397246617,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817845621/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T12:46:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817845621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817877867"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817877867"
                }
            },
            "author_association": "MEMBER",
            "body": "@zeertzjq  I wonder how future-proof this is, like whether this would work if we add Callback, Array and Dictionary types for options in the future",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T16:05:22Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817877867",
            "id": 1817877867,
            "in_reply_to_id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sWp1r",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397287104,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817877867/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T16:05:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817877867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30917#discussion_r1817878337"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30917"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817878337"
                }
            },
            "author_association": "MEMBER",
            "body": "surely those would be initialized to null?",
            "commit_id": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
            "created_at": "2024-10-26T16:08:41Z",
            "diff_hunk": "@@ -3518,11 +3517,13 @@ static const char *did_set_option(OptIndex opt_idx, void *varp, OptVal old_value\n   }\n \n   // Free options that are in allocated memory.\n-  // Use \"free_oldval\", because recursiveness may change the flags (esp. init_highlight()).\n-  if (free_oldval) {\n+  // NOTE: When initializing an option for the first time, don't try to free its value as it has\n+  // not been allocated yet.\n+  if (opt_initialized[opt_idx]) {",
            "html_url": "https://github.com/neovim/neovim/pull/30917#discussion_r1817878337",
            "id": 1817878337,
            "in_reply_to_id": 1817580177,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sWp9B",
            "original_commit_id": "823d2c7867716f5c29f11380ba05398d21516746",
            "original_line": 3522,
            "original_position": 187,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": null,
            "pull_request_review_id": 2397287545,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817878337/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-26T16:08:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1817878337",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "coverity:\r\n\r\n```\r\n*** CID 511434:  Memory - corruptions  (BAD_FREE)\r\n/src/nvim/option.c: 5369 in buf_copy_options()\r\n5363               tabstop_set(p_vts, &buf->b_p_vts_array);\r\n5364             } else {\r\n5365               buf->b_p_vts_array = NULL;\r\n5366             }\r\n5367             buf->b_help = false;\r\n5368             if (buf->b_p_bt[0] == 'h') {\r\n>>>     CID 511434:  Memory - corruptions  (BAD_FREE)\r\n>>>     \"clear_string_option\" frees incorrect pointer \"buf->b_p_bt\".\r\n5369               clear_string_option(&buf->b_p_bt);\r\n5370             }\r\n5371             buf->b_p_ma = p_ma;\r\n5372             COPY_OPT_SCTX(buf, BV_MA);\r\n5373           }\r\n5374         }\r\n\r\n** CID 511433:  Memory - illegal accesses  (OVERRUN)\r\n/src/nvim/optionstr.c: 322 in check_signcolumn()\r\n\r\n\r\n________________________________________________________________________________________________________\r\n*** CID 511433:  Memory - illegal accesses  (OVERRUN)\r\n/src/nvim/optionstr.c: 322 in check_signcolumn()\r\n316           wp->w_maxscwidth = val[5] - '0';\r\n317         } else {  // auto\r\n318           wp->w_minscwidth = 0;\r\n319           wp->w_maxscwidth = 1;\r\n320         }\r\n321       } else {\r\n>>>     CID 511433:  Memory - illegal accesses  (OVERRUN)\r\n>>>     Overrunning array of 1 bytes at byte offset 5 by dereferencing pointer \"val + 5\".\r\n322         if (strncmp(val, \"auto:\", 5) != 0\r\n323             || strlen(val) != 8\r\n324             || !ascii_isdigit(val[5])\r\n325             || val[6] != '-'\r\n326             || !ascii_isdigit(val[7])) {\r\n327           return FAIL;\r\n```",
            "created_at": "2024-10-28T12:11:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/30917#issuecomment-2441414553",
            "id": 2441414553,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30917",
            "node_id": "IC_kwDOAPphoM6RhQeZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2441414553/reactions"
            },
            "updated_at": "2024-10-28T12:11:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2441414553",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30917/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30917/commits",
    "created_at": "2024-10-23T16:36:49Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30917.diff",
    "draft": false,
    "head": {
        "label": "famiu:refactor/options/P_ALLOCED",
        "ref": "refactor/options/P_ALLOCED",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/famiu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/famiu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/famiu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/famiu/neovim/branches{/branch}",
            "clone_url": "https://github.com/famiu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/famiu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/famiu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/famiu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/famiu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/famiu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/famiu/neovim/contributors",
            "created_at": "2021-10-11T04:58:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/famiu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/famiu/neovim/downloads",
            "events_url": "https://api.github.com/repos/famiu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/famiu/neovim/forks",
            "full_name": "famiu/neovim",
            "git_commits_url": "https://api.github.com/repos/famiu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/famiu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/famiu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/famiu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/famiu/neovim/hooks",
            "html_url": "https://github.com/famiu/neovim",
            "id": 415783665,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/famiu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/famiu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/famiu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/famiu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/famiu/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/famiu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/famiu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/famiu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGMha8Q",
            "notifications_url": "https://api.github.com/repos/famiu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/famiu/neovim/pulls{/number}",
            "pushed_at": "2024-10-28T22:00:11Z",
            "releases_url": "https://api.github.com/repos/famiu/neovim/releases{/id}",
            "size": 286249,
            "ssh_url": "git@github.com:famiu/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/famiu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/famiu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/famiu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/famiu/neovim/subscription",
            "svn_url": "https://github.com/famiu/neovim",
            "tags_url": "https://api.github.com/repos/famiu/neovim/tags",
            "teams_url": "https://api.github.com/repos/famiu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/famiu/neovim/git/trees{/sha}",
            "updated_at": "2024-10-28T13:28:47Z",
            "url": "https://api.github.com/repos/famiu/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30917",
    "id": 2141544746,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30917",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b136a9ee4c5689c655713ab006be84ae9e7a313a",
    "merged_at": "2024-10-27T13:09:24Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5_pWEq",
    "number": 30917,
    "patch_url": "https://github.com/neovim/neovim/pull/30917.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30917/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6460fc14d8ea46c4630fc46bf562f49e0b7a6229",
    "title": "refactor(options): always allocate option values",
    "updated_at": "2024-10-28T12:11:50Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30917",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu",
        "user_view_type": "public"
    }
}