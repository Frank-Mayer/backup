{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29327/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29327/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29327"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29327"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29327/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/025214c73c62002d7b3fab2acc810603b1f450d5"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5467,
            "forks_count": 5467,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1738,
            "open_issues_count": 1738,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-06-18T01:52:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 274862,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 79235,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-06-18T01:56:59Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 79235,
            "watchers_count": 79235,
            "web_commit_signoff_required": false
        },
        "sha": "4a2494098025c9e9b3aa205bdc2d357315831dc3",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "As stated in  https://github.com/neovim/neovim/pull/29104#issuecomment-2165443624 this PR aims to simply provide `vim.net.download`.\r\n\r\nNotes:\r\n- What minimal version of `curl` should be supported? I annotated the options that were introduced in a specific version (at least the ones that `man curl` mentions) in the code for now (e.g. `(Added in 7.88.0)`)\r\n- Only downloads via GET are being handled right now. I wanted to ask for feedback before adding support for other methods.\r\n- What auth/proxy options should be supported? Right now, the PR only contemplates the basic options for both\r\n- Are the current defaults ok? I copied the `curl` defaults (i.e. `curl` does not follow redirects by default, so neither does `vim.net.download`).\r\n- What `curl` options shouldn't be supported? I introduced options like `compressed` that may be overkill (?). For example, it seems like the `curl` shipped with Windows [did not supported this option](https://curl.se/windows/microsoft.html#:~:text=it%20has%20no%20compression%20support%2C%20making%20%2D%2Dcompressed%20fail) (at least when it was first introduced. The shipped `curl` in my windows machine does not complain when I use `--compressed`)",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639327011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639327011"
                }
            },
            "author_association": "MEMBER",
            "body": "For curl, we _really_ need the full output (including supported protocols and features!), as well as the location (in case people have multiple curl versions installed); see https://github.com/nvim-treesitter/nvim-treesitter/blob/36aee737214f5577d8b5c7715067f2498db97a7b/lua/nvim-treesitter/health.lua",
            "commit_id": "025214c73c62002d7b3fab2acc810603b1f450d5",
            "created_at": "2024-06-14T06:25:53Z",
            "diff_hunk": "@@ -397,6 +397,23 @@ local function check_external_tools()\n   end\n end\n \n+local function check_net()\n+  health.start('External Tools (vim.net)')\n+\n+  if vim.fn.executable('curl') == 1 then\n+    local curl = vim.fn.exepath('curl')\n+    local cmd = { 'curl', ' --version' }\n+    local result = vim.system(cmd, { text = true }):wait()\n+\n+    health.ok(('%s\\n(%s)'):format(vim.trim(result.stdout), curl))",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639327011",
            "id": 1639327011,
            "line": 408,
            "node_id": "PRRC_kwDOAPphoM5htiUj",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 408,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/health/health.lua",
            "position": 12,
            "pull_request_review_id": 2117579059,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639327011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-14T06:25:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639327011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639332373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639332373"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe `as` or `to` or `target` would be shorter? People will specify this virtually always.",
            "commit_id": "025214c73c62002d7b3fab2acc810603b1f450d5",
            "created_at": "2024-06-14T06:30:43Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639332373",
            "id": 1639332373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5htjoV",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4526,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2117587849,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639332373/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-14T06:30:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639332373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639334292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639334292"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we could use a table option (or `string|table`) instead: `proxy = { url = 'foo', credentials = 'bar:baz }`",
            "commit_id": "025214c73c62002d7b3fab2acc810603b1f450d5",
            "created_at": "2024-06-14T06:32:15Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",\n+                    })\n+\n+                    -- Download a file while following redirects\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      follow_redirects = true,\n+                    })\n+\n+                    -- Download a file while sending headers\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      headers = {\n+                        Authorization = { \"Bearer foo\" },\n+                      },\n+                    })\n+\n+                    -- Download a file while handling basic auth\n+                    vim.net.download(\"https://httpbingo.org/basic-auth/user/password\", {\n+                      credentials = \"user:password\",\n+                    })\n+\n+                    -- Download a file without overriding a previous file with the same name\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      override = false,\n+                    })\n+<\n+                • {download_location}? (`string`) Path to write the downloaded\n+                  file to. If not provided, the one inferred form the URL will\n+                  be used. Defaults to `nil`\n+                • {try_suggested_remote_name}? (`boolean`) Whether the\n+                  `Content-Disposition` response header should be taken into\n+                  account to decide the name of the downloaded file. Fallbacks\n+                  to `download_location`. Defaults to `false`\n+                • {credentials}? (`string`) Credentials with the format\n+                  `username:password`. Defaults to `nil`\n+                • {override}? (`boolean`) Whether the file should be\n+                  overridden if it already exists. Defaults to `true`\n+                • {remove_leftover_on_error}? (`boolean`) Whether the file\n+                  should be removed if an error happens while downloading it.\n+                  Defaults to `false`\n+                • {compressed}? (`boolean`) Whether the file should be\n+                  requested in a compressed format (and decompressed\n+                  automatically). Defaults to `false`\n+                • {max_filesize}? (`integer`) Maximum size in bytes of the\n+                  file to downlaod. The download will fail if the file\n+                  requested is larger. Defaults to `nil`\n+                • {raw}? (`boolean`) Disables all internal HTTP decoding of\n+                  content or transfer encodings. Unaltered, raw, data is\n+                  passed. Defaults to `false`\n+                • {headers}? (`table`) string[]> Request headers. Defaults to\n+                  `nil`\n+                • {proxy}? (`string`) Proxy URL in the format\n+                  `scheme \":\" [\"//\" authority] path [\"?\" query]` where\n+                  authority follows the format\n+                  `[userinfo \"@\"] host [\":\" port]`. Defaults to `nil`\n+                • {proxy_credentials}? (`string`) Proxy credentials with the\n+                  format `username:password`. Defaults to `nil`",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639334292",
            "id": 1639334292,
            "line": 4581,
            "node_id": "PRRC_kwDOAPphoM5htkGU",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4581,
            "original_position": 149,
            "original_start_line": 4576,
            "path": "runtime/doc/lua.txt",
            "position": 149,
            "pull_request_review_id": 2117590926,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639334292/reactions"
            },
            "side": "RIGHT",
            "start_line": 4576,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-06-14T06:32:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639334292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639396056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639396056"
                }
            },
            "author_association": "MEMBER",
            "body": "Does this also support specifying a target _directory_? I think this would be useful, too.",
            "commit_id": "025214c73c62002d7b3fab2acc810603b1f450d5",
            "created_at": "2024-06-14T07:30:59Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639396056",
            "id": 1639396056,
            "in_reply_to_id": 1639332373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5htzLY",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4526,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2117691739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639396056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-14T07:30:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639396056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1641569995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1641569995"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Does this also support specifying a target directory? I think this would be useful, too.\r\n\r\nCurrently, no. A workaround may be to let users pass a `cwd` to execute `curl` there (and hence download the file on that directory)",
            "commit_id": "025214c73c62002d7b3fab2acc810603b1f450d5",
            "created_at": "2024-06-15T22:15:40Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1641569995",
            "id": 1641569995,
            "in_reply_to_id": 1639332373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5h2F7L",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4526,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2121037482,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1641569995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-15T22:15:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1641569995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Huh, it looks like Ubuntu 22 [has curl version 7.81](https://launchpad.net/ubuntu/jammy/+source/curl)",
            "created_at": "2024-06-14T00:21:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2166994761",
            "id": 2166994761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BKbdJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2166994761/reactions"
            },
            "updated_at": "2024-06-14T00:21:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2166994761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Regarding curl, I think we have to take what we get: check version (and features! distros can and do compile the same version differently) and fail gracefully if an requested option is not supported. In my opinion, _this_ is the most important feature a `vim.net.download` would provide over `vim.system(`curl`):wait()`!\r\n\r\nRegarding flags and options, I would start simple and add things on request. From painful experience with nvim-treesitter, proxies are a very common request, so that should work out-of-the-box. (We also need to follow redirects because of Github moving cheese frequently (repo renaming etc.))\r\n\r\nOne thing we could add as part of this PR is use it for downloading spellfiles (mostly as a way for free testing). ",
            "created_at": "2024-06-14T06:35:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2167324002",
            "id": 2167324002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BLr1i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167324002/reactions"
            },
            "updated_at": "2024-06-14T08:13:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167324002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think we need to also discuss _global_ configuration, as things like proxy settings are user-specific, while the caller of `vim.net.download` will in general be Nvim or a plugin.\r\n\r\nSomething like `vim.net.config` that takes a table of default options to `download()` (or later `request`) which the actual passed table extends? If in doubt, we should model this after `vim.diagnostic.config`.\r\n",
            "created_at": "2024-06-14T07:32:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2167412973",
            "id": 2167412973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BMBjt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167412973/reactions"
            },
            "updated_at": "2024-06-14T07:32:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167412973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was adding checks for curls versions and I had a thought (regarding the returned metadata mostly). I fell like this may be the wrong approach (?). If a plugin (or even neovim core itself) relies in feature A that's not available in some user's curl installation, `vim.net.download` will fail gracefully with a message stating that feature A is not available. Should we encourage this? Or shoud this features be excluded from `vim.net.download`?\r\n\r\nThe main examples I can think of right now are:\r\n\r\n- not overriding a previous file with the same name as the downloaded one being available since `curl` 7.83.0\r\n- json formatted metadata being available since 7.70.0\r\n- json formatted request headers metadata being available since 7.83.0 (currently removed because Ubuntu 22 has version 7.81)\r\n\r\nFor some features, the download could continue with a warning (metadata), but for others (avoid overriding files) it may be dangerous to do so.",
            "created_at": "2024-06-16T00:30:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2170989912",
            "id": 2170989912,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BZq1Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2170989912/reactions"
            },
            "updated_at": "2024-06-16T00:30:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2170989912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's not overcomplicate this. Pick a minimum version that includes all features we may want, and then abort with error if that minimum version isn't available.",
            "created_at": "2024-06-16T09:37:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2171338656",
            "id": 2171338656,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6Ba_-g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2171338656/reactions"
            },
            "updated_at": "2024-06-16T09:37:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2171338656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29327/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29327/commits",
    "created_at": "2024-06-13T22:11:40Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29327.diff",
    "draft": false,
    "head": {
        "label": "TheLeoP:vim.net",
        "ref": "vim.net",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TheLeoP/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TheLeoP/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TheLeoP/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TheLeoP/neovim/branches{/branch}",
            "clone_url": "https://github.com/TheLeoP/neovim.git",
            "collaborators_url": "https://api.github.com/repos/TheLeoP/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TheLeoP/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/TheLeoP/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TheLeoP/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TheLeoP/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TheLeoP/neovim/contributors",
            "created_at": "2024-04-26T13:23:21Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TheLeoP/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TheLeoP/neovim/downloads",
            "events_url": "https://api.github.com/repos/TheLeoP/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/TheLeoP/neovim/forks",
            "full_name": "TheLeoP/neovim",
            "git_commits_url": "https://api.github.com/repos/TheLeoP/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TheLeoP/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TheLeoP/neovim/git/tags{/sha}",
            "git_url": "git://github.com/TheLeoP/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/TheLeoP/neovim/hooks",
            "html_url": "https://github.com/TheLeoP/neovim",
            "id": 792341236,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TheLeoP/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TheLeoP/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TheLeoP/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/TheLeoP/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TheLeoP/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/TheLeoP/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/TheLeoP/neovim/merges",
            "milestones_url": "https://api.github.com/repos/TheLeoP/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOLzoq9A",
            "notifications_url": "https://api.github.com/repos/TheLeoP/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TheLeoP/neovim/pulls{/number}",
            "pushed_at": "2024-06-16T03:40:31Z",
            "releases_url": "https://api.github.com/repos/TheLeoP/neovim/releases{/id}",
            "size": 267866,
            "ssh_url": "git@github.com:TheLeoP/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/TheLeoP/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/TheLeoP/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TheLeoP/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/TheLeoP/neovim/subscription",
            "svn_url": "https://github.com/TheLeoP/neovim",
            "tags_url": "https://api.github.com/repos/TheLeoP/neovim/tags",
            "teams_url": "https://api.github.com/repos/TheLeoP/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/TheLeoP/neovim/git/trees{/sha}",
            "updated_at": "2024-06-13T14:37:03Z",
            "url": "https://api.github.com/repos/TheLeoP/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "025214c73c62002d7b3fab2acc810603b1f450d5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
            "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
            "followers_url": "https://api.github.com/users/TheLeoP/followers",
            "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TheLeoP",
            "id": 53507599,
            "login": "TheLeoP",
            "node_id": "MDQ6VXNlcjUzNTA3NTk5",
            "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
            "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
            "repos_url": "https://api.github.com/users/TheLeoP/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/TheLeoP"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29327",
    "id": 1919606396,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 5415073845,
            "name": "network",
            "node_id": "LA_kwDOAPphoM8AAAABQsN4NQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/network"
        }
    ],
    "locked": false,
    "merge_commit_sha": "50ba1f4072ae9258453f7535ecae9dcf0af18166",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5yat58",
    "number": 29327,
    "patch_url": "https://github.com/neovim/neovim/pull/29327.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29327/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/025214c73c62002d7b3fab2acc810603b1f450d5",
    "title": "feat(vim.net): vim.net.download",
    "updated_at": "2024-06-16T09:37:43Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
        "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
        "followers_url": "https://api.github.com/users/TheLeoP/followers",
        "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
        "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TheLeoP",
        "id": 53507599,
        "login": "TheLeoP",
        "node_id": "MDQ6VXNlcjUzNTA3NTk5",
        "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
        "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
        "repos_url": "https://api.github.com/users/TheLeoP/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TheLeoP"
    }
}