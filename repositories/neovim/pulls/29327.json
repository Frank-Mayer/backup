{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29327/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29327/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29327"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29327"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29327/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5c3d6cac34db010f0d9f511e46461af0c8ed152e"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5490,
            "forks_count": 5490,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1763,
            "open_issues_count": 1763,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-07-01T23:59:24Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 275993,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 79695,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-07-02T01:57:38Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 79695,
            "watchers_count": 79695,
            "web_commit_signoff_required": false
        },
        "sha": "d82efeccc7e89230ba6673da0fdf62c09fa38c17",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "As stated in  https://github.com/neovim/neovim/pull/29104#issuecomment-2165443624 this PR aims to simply provide `vim.net.download`.\r\n\r\nNotes:\r\n- What minimal version of `curl` should be supported? I annotated the options that were introduced in a specific version (at least the ones that `man curl` mentions) in the code for now (e.g. `(Added in 7.88.0)`)\r\n- Only downloads via GET are being handled right now. I wanted to ask for feedback before adding support for other methods.\r\n- What auth/proxy options should be supported? Right now, the PR only contemplates the basic options for both\r\n- ~Are the current defaults ok? I copied the `curl` defaults (i.e. `curl` does not follow redirects by default, so neither does `vim.net.download`).~\r\n- What `curl` options shouldn't be supported? I introduced options like `compressed` that may be overkill (?). For example, it seems like the `curl` shipped with Windows [did not supported this option](https://curl.se/windows/microsoft.html#:~:text=it%20has%20no%20compression%20support%2C%20making%20%2D%2Dcompressed%20fail) (at least when it was first introduced. The shipped `curl` in my windows machine does not complain when I use `--compressed`)",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639327011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639327011"
                }
            },
            "author_association": "MEMBER",
            "body": "For curl, we _really_ need the full output (including supported protocols and features!), as well as the location (in case people have multiple curl versions installed); see https://github.com/nvim-treesitter/nvim-treesitter/blob/36aee737214f5577d8b5c7715067f2498db97a7b/lua/nvim-treesitter/health.lua",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-14T06:25:53Z",
            "diff_hunk": "@@ -397,6 +397,23 @@ local function check_external_tools()\n   end\n end\n \n+local function check_net()\n+  health.start('External Tools (vim.net)')\n+\n+  if vim.fn.executable('curl') == 1 then\n+    local curl = vim.fn.exepath('curl')\n+    local cmd = { 'curl', ' --version' }\n+    local result = vim.system(cmd, { text = true }):wait()\n+\n+    health.ok(('%s\\n(%s)'):format(vim.trim(result.stdout), curl))",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639327011",
            "id": 1639327011,
            "line": 408,
            "node_id": "PRRC_kwDOAPphoM5htiUj",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 408,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/health/health.lua",
            "position": 12,
            "pull_request_review_id": 2117579059,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639327011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-14T06:25:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639327011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639332373"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639332373"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe `as` or `to` or `target` would be shorter? People will specify this virtually always.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-14T06:30:43Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639332373",
            "id": 1639332373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5htjoV",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4526,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2117587849,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639332373/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-14T06:30:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639332373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639334292"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639334292"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we could use a table option (or `string|table`) instead: `proxy = { url = 'foo', credentials = 'bar:baz }`",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-14T06:32:15Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",\n+                    })\n+\n+                    -- Download a file while following redirects\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      follow_redirects = true,\n+                    })\n+\n+                    -- Download a file while sending headers\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      headers = {\n+                        Authorization = { \"Bearer foo\" },\n+                      },\n+                    })\n+\n+                    -- Download a file while handling basic auth\n+                    vim.net.download(\"https://httpbingo.org/basic-auth/user/password\", {\n+                      credentials = \"user:password\",\n+                    })\n+\n+                    -- Download a file without overriding a previous file with the same name\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      override = false,\n+                    })\n+<\n+                • {download_location}? (`string`) Path to write the downloaded\n+                  file to. If not provided, the one inferred form the URL will\n+                  be used. Defaults to `nil`\n+                • {try_suggested_remote_name}? (`boolean`) Whether the\n+                  `Content-Disposition` response header should be taken into\n+                  account to decide the name of the downloaded file. Fallbacks\n+                  to `download_location`. Defaults to `false`\n+                • {credentials}? (`string`) Credentials with the format\n+                  `username:password`. Defaults to `nil`\n+                • {override}? (`boolean`) Whether the file should be\n+                  overridden if it already exists. Defaults to `true`\n+                • {remove_leftover_on_error}? (`boolean`) Whether the file\n+                  should be removed if an error happens while downloading it.\n+                  Defaults to `false`\n+                • {compressed}? (`boolean`) Whether the file should be\n+                  requested in a compressed format (and decompressed\n+                  automatically). Defaults to `false`\n+                • {max_filesize}? (`integer`) Maximum size in bytes of the\n+                  file to downlaod. The download will fail if the file\n+                  requested is larger. Defaults to `nil`\n+                • {raw}? (`boolean`) Disables all internal HTTP decoding of\n+                  content or transfer encodings. Unaltered, raw, data is\n+                  passed. Defaults to `false`\n+                • {headers}? (`table`) string[]> Request headers. Defaults to\n+                  `nil`\n+                • {proxy}? (`string`) Proxy URL in the format\n+                  `scheme \":\" [\"//\" authority] path [\"?\" query]` where\n+                  authority follows the format\n+                  `[userinfo \"@\"] host [\":\" port]`. Defaults to `nil`\n+                • {proxy_credentials}? (`string`) Proxy credentials with the\n+                  format `username:password`. Defaults to `nil`",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639334292",
            "id": 1639334292,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5htkGU",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4581,
            "original_position": 149,
            "original_start_line": 4576,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2117590926,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639334292/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-06-14T06:32:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639334292",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1639396056"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639396056"
                }
            },
            "author_association": "MEMBER",
            "body": "Does this also support specifying a target _directory_? I think this would be useful, too.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-14T07:30:59Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1639396056",
            "id": 1639396056,
            "in_reply_to_id": 1639332373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5htzLY",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4526,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2117691739,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639396056/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-14T07:30:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1639396056",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1641569995"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1641569995"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Does this also support specifying a target directory? I think this would be useful, too.\r\n\r\nCurrently, no. A workaround may be to let users pass a `cwd` to execute `curl` there (and hence download the file on that directory)",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-15T22:15:40Z",
            "diff_hunk": "@@ -4433,4 +4433,160 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)\n+      • {url.port}?                 (`string`) (Added in 8.1.0)\n+      • {url.path}?                 (`string`) (Added in 8.1.0)\n+      • {url.query}?                (`string`) (Added in 8.1.0)\n+      • {url.fragment}?             (`string`) (Added in 8.1.0)\n+      • {url.zoneid}?               (`string`) (Added in 8.1.0)\n+      • {urle.scheme}?              (`string`) (Added in 8.1.0)\n+      • {urle.user}?                (`string`) (Added in 8.1.0)\n+      • {urle.password}?            (`string`) (Added in 8.1.0)\n+      • {urle.options}?             (`string`) (Added in 8.1.0)\n+      • {urle.host}?                (`string`) (Added in 8.1.0)\n+      • {urle.port}?                (`string`) (Added in 8.1.0)\n+      • {urle.path}?                (`string`) (Added in 8.1.0)\n+      • {urle.query}?               (`string`) (Added in 8.1.0)\n+      • {urle.fragment}?            (`string`) (Added in 8.1.0)\n+      • {urle.zoneid}?              (`string`) (Added in 8.1.0)\n+      • {urlnum}?                   (`number`) (Added in 7.75.0)\n+      • {url_effective}?            (`string`)\n+      • {xfer_id}?                  (`number`) (Added in 8.2.0)\n+\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      download_location = \"tmp/somefile\",",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1641569995",
            "id": 1641569995,
            "in_reply_to_id": 1639332373,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5h2F7L",
            "original_commit_id": "9c2380edafac71579b88e4a07682d28bd02154e5",
            "original_line": 4526,
            "original_position": 94,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2121037482,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1641569995/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-15T22:15:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1641569995",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1645226523"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1645226523"
                }
            },
            "author_association": "MEMBER",
            "body": "This looks like way too much. I mentioned in https://github.com/neovim/neovim/pull/29104#issuecomment-2144055981 and https://github.com/neovim/neovim/pull/23461#issuecomment-1660446261 that the first step should be a very simple interface. Adding all of these complex structures is a sign that something is going wrong.\r\n\r\nThe purpose is to download files. A simple use-case is downloading spellfiles, to start. There should be no need for elaborate structures.\r\n\r\nSupporting all of curl's options is not maintainable. Why would we do that instead of just letting the user specify a curl rc file?\r\n\r\nAnd proxy support is not something that is needed in the first PR. Please, just start with the common case. ",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-18T23:47:40Z",
            "diff_hunk": "@@ -4433,4 +4433,250 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.Proxy*\n+\n+    Fields: ~\n+      • {url}?          (`string`) Proxy URL in the format\n+                        `scheme \":\" [\"//\" authority] path [\"?\" query]` where\n+                        authority follows the format\n+                        `[userinfo \"@\"] host [\":\" port]`\n+      • {credentials}?  (`string`) Proxy credentials with the format\n+                        `username:password`\n+\n+*vim.net.curl.Metadata*\n+    See the `--write-out` section in `man curl`\n+\n+    Fields: ~\n+      • {certs}?                    (`string`) (Added in 7.88.0)\n+      • {conn_id}?                  (`number`) (Added in 8.2.0)\n+      • {content_type}?             (`string`)\n+      • {errormsg}?                 (`string`) (Added in 7.75.0)\n+      • {exitcode}?                 (`number`) (Added in 7.75.0)\n+      • {filename_effective}?       (`string`) (Added in 7.26.0)\n+      • {ftp_entry_path}?           (`string`)\n+      • {headers}?                  (`table<string, string[]>`) (Added in\n+                                    7.83.0) parsed result of ${header_json}\n+      • {http_code}?                (`number`)\n+      • {http_connect}?             (`number`)\n+      • {http_version}?             (`string`) (Added in 7.50.0)\n+      • {local_ip}?                 (`string`)\n+      • {local_port}?               (`number`)\n+      • {method}?                   (`string`) (Added in 7.72.0)\n+      • {num_certs}?                (`number`) (Added in 7.88.0)\n+      • {num_connects}?             (`number`)\n+      • {num_headers}?              (`number`) (Added in 7.73.0)\n+      • {num_redirects}?            (`number`)\n+      • {num_retries}?              (`number`) (Added in 8.9.0)\n+      • {proxy_ssl_verify_result}?  (`number`) (Added in 7.52.0)\n+      • {proxy_used}?               (`number`) (Added in 8.7.0)\n+      • {redirect_url}?             (`string`)\n+      • {referer}?                  (`string`) (Added in 7.76.0)\n+      • {remote_ip}?                (`string`)\n+      • {remote_port}?              (`number`)\n+      • {response_code}?            (`number`)\n+      • {scheme}?                   (`string`) (Added in 7.52.0)\n+      • {size_download}?            (`number`)\n+      • {size_header}?              (`number`)\n+      • {size_request}?             (`number`)\n+      • {size_upload}?              (`number`)\n+      • {speed_download}?           (`number`)\n+      • {speed_upload}?             (`number`)\n+      • {ssl_verify_result}?        (`number`)\n+      • {time_appconnect}?          (`number`)\n+      • {time_connect}?             (`number`)\n+      • {time_namelookup}?          (`number`)\n+      • {time_pretransfer}?         (`number`)\n+      • {time_redirect}?            (`number`)\n+      • {time_starttransfer}?       (`number`)\n+      • {time_total}?               (`number`)\n+      • {url}?                      (`string`) (Added in 7.75.0)\n+      • {url.scheme}?               (`string`) (Added in 8.1.0)\n+      • {url.user}?                 (`string`) (Added in 8.1.0)\n+      • {url.password}?             (`string`) (Added in 8.1.0)\n+      • {url.options}?              (`string`) (Added in 8.1.0)\n+      • {url.host}?                 (`string`) (Added in 8.1.0)",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1645226523",
            "id": 1645226523,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iECob",
            "original_commit_id": "4121d12aa0cefc313baff10a2a0424c1bd125e2b",
            "original_line": 4500,
            "original_position": 68,
            "original_start_line": 4492,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2126739640,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1645226523/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-06-18T23:55:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1645226523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647189210"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647189210"
                }
            },
            "author_association": "MEMBER",
            "body": "Only reading this help, I am not sure if this is a typo or an intended behavior: is setting `as = \"tmp/somefile\"` indeed result into saving in '/tmp/somefile'? Because the first one doesn't have leading `/` which means it is a relative path and should result into saving as 'somefile' file in the 'tmp' subdirectory of current working directory.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T08:29:13Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      as = \"tmp/somefile\",\n+                    })",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647189210",
            "id": 1647189210,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iLhza",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4455,
            "original_position": 23,
            "original_start_line": 4451,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2129789503,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647189210/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-06-20T08:29:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647189210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647535546"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647535546"
                }
            },
            "author_association": "MEMBER",
            "body": "surely `file` is the natural name for this?\r\n```suggestion\r\n                • {file}? (`string`) Path to write the downloaded file to. If\r\n```",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T12:58:03Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      as = \"tmp/somefile\",\n+                    })\n+\n+                    -- Download a file while sending headers\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      headers = {\n+                        Authorization = { \"Bearer foo\" },\n+                      },\n+                    })\n+\n+                    -- Download a file while handling basic auth\n+                    vim.net.download(\"https://httpbingo.org/basic-auth/user/password\", {\n+                      credentials = \"user:password\",\n+                    })\n+<\n+                • {as}? (`string`) Path to write the downloaded file to. If",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647535546",
            "id": 1647535546,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iM2W6",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4469,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130356839,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647535546/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T12:58:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647535546",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647539190"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647539190"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                  to showing a notification when the file has been downloaded.\r\n                  To disable the notification, pass an empty function.\r\n```",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T13:00:40Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      as = \"tmp/somefile\",\n+                    })\n+\n+                    -- Download a file while sending headers\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      headers = {\n+                        Authorization = { \"Bearer foo\" },\n+                      },\n+                    })\n+\n+                    -- Download a file while handling basic auth\n+                    vim.net.download(\"https://httpbingo.org/basic-auth/user/password\", {\n+                      credentials = \"user:password\",\n+                    })\n+<\n+                • {as}? (`string`) Path to write the downloaded file to. If\n+                  not provided, the one inferred from the URL will be used.\n+                  Defaults to `nil`\n+                • {credentials}? (`string`) Credentials with the format\n+                  `username:password`. Defaults to `nil`\n+                • {raw}? (`boolean`) Disables all internal HTTP decoding of\n+                  content or transfer encodings. Unaltered, raw, data is\n+                  passed. Defaults to `false`\n+                • {headers}? (`table<string, string[]>`) Request headers.\n+                  Defaults to `nil`\n+                • {redirect_credentials}? (`boolean`) Whether `credentials`\n+                  should be send to host after a redirect. Defaults to `false`\n+                • {on_exit}? (`fun(err: string?)`) Optional callback. Defaults\n+                  to showing a notification when the file has been downloaded.",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647539190",
            "id": 1647539190,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iM3P2",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4482,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130364017,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647539190/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T13:00:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647539190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647548662"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647548662"
                }
            },
            "author_association": "MEMBER",
            "body": "A typical pattern is that passing a callback makes it async, and omitting a callback makes it synchronous.\r\n\r\nSomething to ask is, why is the `as` (aka `file`) option necessary? Is it awkward for the caller to write the result to a file using Nvim's stdlib? If so, why, and can we fix that? I would expect it to be as simple as:\r\n\r\n```lua\r\n-- Asyndc\r\nvim.net.request('https://...', {}, function(r)\r\n  vim.fn.writefile(r.data, '/my/file')\r\nend)\r\n\r\n-- Sync\r\nlocal r = vim.net.request('https://...', {})\r\n```\r\n\r\nAlso: we are currently figuring out a [long-term story for promises/async](https://github.com/neovim/neovim/issues/19624). But until then, we should try to use common patterns. `vim.system()` returns an object that provides `:wait()`. Should we mimic that pattern here? I think I prefer the \"optional callback\" pattern of libuv/luv, but @lewis6991  may be able to comment on whether the `:wait()` pattern has advantages.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T13:07:33Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647548662",
            "id": 1647548662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iM5j2",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4440,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130380878,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647548662/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T13:07:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647548662",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647549758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647549758"
                }
            },
            "author_association": "MEMBER",
            "body": "Should be named fetch() or request(). Since we already have `rpcrequest()`, probably `request()` is the right choice.\r\n```suggestion\r\nvim.net.request({url}, {opts})                           *vim.net.download()*\r\n```",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T13:08:25Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647549758",
            "id": 1647549758,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iM50-",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4439,
            "original_position": 7,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130383181,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647549758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T13:08:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647549758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647556229"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647556229"
                }
            },
            "author_association": "MEMBER",
            "body": "If these options map to `curl` options, in most cases it's probably a very good idea to use the same names as curl. That kind of entropy-reduction helps greatly for discovery and intuition. In some cases it may make sense to violate this, but otherwise it's a very good default guideline.\r\n\r\nFor example, curl names this `--user`.\r\n\r\n```suggestion\r\n                • {user}? (`string`) Credentials with the format\r\n```",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T13:12:32Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      as = \"tmp/somefile\",\n+                    })\n+\n+                    -- Download a file while sending headers\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      headers = {\n+                        Authorization = { \"Bearer foo\" },\n+                      },\n+                    })\n+\n+                    -- Download a file while handling basic auth\n+                    vim.net.download(\"https://httpbingo.org/basic-auth/user/password\", {\n+                      credentials = \"user:password\",\n+                    })\n+<\n+                • {as}? (`string`) Path to write the downloaded file to. If\n+                  not provided, the one inferred from the URL will be used.\n+                  Defaults to `nil`\n+                • {credentials}? (`string`) Credentials with the format",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647556229",
            "id": 1647556229,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iM7aF",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4472,
            "original_position": 40,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130396220,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647556229/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T13:12:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647556229",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647643918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647643918"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Nice catch, it was a typo",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T14:08:35Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      as = \"tmp/somefile\",\n+                    })",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647643918",
            "id": 1647643918,
            "in_reply_to_id": 1647189210,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iNQ0O",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4455,
            "original_position": 23,
            "original_start_line": 4451,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130550356,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647643918/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-06-20T14:08:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647643918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647655302"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647655302"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have not strongs opinions about it. I'll change it to `file`",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T14:11:40Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file\n+\n+    Parameters: ~\n+      • {url}   (`string`) Request URL\n+      • {opts}  (`table?`) Additional options\n+\n+                Example: >lua\n+                    -- Download a file\n+                    -- The file will be saved in the `cwd` with the name `anything`\n+                    vim.net.download(\"https://httpbingo.org/anything\")\n+\n+                    -- Download a file to a path\n+                    -- The file will be saved in `/tmp/somefile`\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      as = \"tmp/somefile\",\n+                    })\n+\n+                    -- Download a file while sending headers\n+                    vim.net.download(\"https://httpbingo.org/anything\", {\n+                      headers = {\n+                        Authorization = { \"Bearer foo\" },\n+                      },\n+                    })\n+\n+                    -- Download a file while handling basic auth\n+                    vim.net.download(\"https://httpbingo.org/basic-auth/user/password\", {\n+                      credentials = \"user:password\",\n+                    })\n+<\n+                • {as}? (`string`) Path to write the downloaded file to. If",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647655302",
            "id": 1647655302,
            "in_reply_to_id": 1647535546,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iNTmG",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4469,
            "original_position": 37,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130567036,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647655302/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T14:11:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647655302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647667836"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647667836"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Something to ask is, why is the as (aka file) option necessary?\r\n\r\nI haven't thought this thoroughly. The first reason I can think of is that it may not always be desirable to **need** to pass the downloaded file through Neovim to write it. Downloading a big file may cause memory issues (?) (but then, this may be an edge case(?))",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T14:19:48Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647667836",
            "id": 1647667836,
            "in_reply_to_id": 1647548662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iNWp8",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4440,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130588473,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647667836/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T14:19:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647667836",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1647683558"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647683558"
                }
            },
            "author_association": "MEMBER",
            "body": "Advantages of `wait()` is that it:\r\n- makes it slightly easier to type annotate as the object always returns the same type.\r\n- generally more versatile. I.e. you might want to submit multiple tasks and then wait on all of them. It's possible to do this with the other method of providing a dummy callback, but is ugly.\r\n\r\n  ```lua\r\n   local a = foo(function() end)\r\n   local b = foo(function() end)\r\n   local c = foo(function() end)\r\n\r\n   a:wait()\r\n   b:wait()\r\n   c:cancel()\r\n  ````\r\n\r\nI think there is merit in the other pattern, and I don't think we need to restrict ourselves to either one.\r\n\r\nI think for `vim.net`, the `wait()` pattern might pan out better longer term. For low level uv functions, the other pattern works well.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-20T14:30:07Z",
            "diff_hunk": "@@ -4433,4 +4433,53 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+vim.net.download({url}, {opts})                           *vim.net.download()*\n+    Asynchronously download a file",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1647683558",
            "id": 1647683558,
            "in_reply_to_id": 1647548662,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5iNafm",
            "original_commit_id": "5b21c9e5f0a75258e3a7a2429c40fb389dab9979",
            "original_line": 4440,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 2130615005,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647683558/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-20T14:30:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1647683558",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1649110562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649110562"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Does someone know if this is a bug with `gen_vimdoc.lua`? Or am I doing something wrongly?",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-21T15:22:51Z",
            "diff_hunk": "@@ -4433,4 +4433,79 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.Request*\n+\n+    Fields: ~\n+      • {wait}  (`fun(self: vim.net.Requesttimeout: integer?)`)",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1649110562",
            "id": 1649110562,
            "line": 4442,
            "node_id": "PRRC_kwDOAPphoM5iS24i",
            "original_commit_id": "bc95b53469fc0cd2e5d7f2018df2a19ec0ca1b91",
            "original_line": 4442,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 10,
            "pull_request_review_id": 2132900911,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649110562/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-21T15:22:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649110562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1649118569"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649118569"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks correct to me. If `Request` had other non-method field, they would also be documented here.\r\n\r\nWe could try and improve `gen_vimdoc.lua` not to do this, but at least the current behaviour is consistent.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-21T15:29:33Z",
            "diff_hunk": "@@ -4433,4 +4433,79 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.Request*\n+\n+    Fields: ~\n+      • {wait}  (`fun(self: vim.net.Requesttimeout: integer?)`)",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1649118569",
            "id": 1649118569,
            "in_reply_to_id": 1649110562,
            "line": 4442,
            "node_id": "PRRC_kwDOAPphoM5iS41p",
            "original_commit_id": "bc95b53469fc0cd2e5d7f2018df2a19ec0ca1b91",
            "original_line": 4442,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 10,
            "pull_request_review_id": 2132913429,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649118569/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-21T15:29:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649118569",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1649145965"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649145965"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I wasn't clear with my question. I was referring to the fact that this should be`fun(self: vim.net.Request, timeout: integer?)` not `fun(self: vim.net.Requesttimeout: integer?)`",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-21T15:51:22Z",
            "diff_hunk": "@@ -4433,4 +4433,79 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.Request*\n+\n+    Fields: ~\n+      • {wait}  (`fun(self: vim.net.Requesttimeout: integer?)`)",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1649145965",
            "id": 1649145965,
            "in_reply_to_id": 1649110562,
            "line": 4442,
            "node_id": "PRRC_kwDOAPphoM5iS_ht",
            "original_commit_id": "bc95b53469fc0cd2e5d7f2018df2a19ec0ca1b91",
            "original_line": 4442,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 10,
            "pull_request_review_id": 2132956222,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649145965/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-21T15:51:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649145965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1649149576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649149576"
                }
            },
            "author_association": "MEMBER",
            "body": "ah I see, that's weird. Must be a bug. Could be in the parser.",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-21T15:54:46Z",
            "diff_hunk": "@@ -4433,4 +4433,79 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.Request*\n+\n+    Fields: ~\n+      • {wait}  (`fun(self: vim.net.Requesttimeout: integer?)`)",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1649149576",
            "id": 1649149576,
            "in_reply_to_id": 1649110562,
            "line": 4442,
            "node_id": "PRRC_kwDOAPphoM5iTAaI",
            "original_commit_id": "bc95b53469fc0cd2e5d7f2018df2a19ec0ca1b91",
            "original_line": 4442,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 10,
            "pull_request_review_id": 2132962615,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649149576/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-21T15:54:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649149576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29327#discussion_r1649157955"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29327"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649157955"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Changing\r\n\r\nhttps://github.com/neovim/neovim/blob/d82efeccc7e89230ba6673da0fdf62c09fa38c17/scripts/luacats_parser.lua#L252-L276\r\n\r\nlike:\r\n\r\n\r\n```diff\r\ndiff --git a/scripts/luacats_parser.lua b/scripts/luacats_parser.lua\r\nindex e73a42111..18cc869b7 100644\r\n--- a/scripts/luacats_parser.lua\r\n+++ b/scripts/luacats_parser.lua\r\n@@ -253,9 +253,11 @@ end\r\n --- @return nvim.luacats.parser.field\r\n local function fun2field(fun)\r\n   local parts = { 'fun(' }\r\n+  local params = {} ---@type string[]\r\n   for _, p in ipairs(fun.params or {}) do\r\n-    parts[#parts + 1] = string.format('%s: %s', p.name, p.type)\r\n+    params[#params + 1] = string.format('%s: %s', p.name, p.type)\r\n   end\r\n+  parts[#parts + 1] = table.concat(params, ', ')\r\n   parts[#parts + 1] = ')'\r\n   if fun.returns then\r\n     parts[#parts + 1] = ': '\r\n\r\n```\r\n\r\nseems to solve the issue",
            "commit_id": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
            "created_at": "2024-06-21T16:02:20Z",
            "diff_hunk": "@@ -4433,4 +4433,79 @@ tohtml.tohtml({winid}, {opt})                         *tohtml.tohtml.tohtml()*\n         (`string[]`)\n \n \n+==============================================================================\n+Lua module: vim.net                                                  *vim.net*\n+\n+*vim.net.Request*\n+\n+    Fields: ~\n+      • {wait}  (`fun(self: vim.net.Requesttimeout: integer?)`)",
            "html_url": "https://github.com/neovim/neovim/pull/29327#discussion_r1649157955",
            "id": 1649157955,
            "in_reply_to_id": 1649110562,
            "line": 4442,
            "node_id": "PRRC_kwDOAPphoM5iTCdD",
            "original_commit_id": "bc95b53469fc0cd2e5d7f2018df2a19ec0ca1b91",
            "original_line": 4442,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 10,
            "pull_request_review_id": 2132976052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649157955/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-06-21T16:03:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1649157955",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Huh, it looks like Ubuntu 22 [has curl version 7.81](https://launchpad.net/ubuntu/jammy/+source/curl)",
            "created_at": "2024-06-14T00:21:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2166994761",
            "id": 2166994761,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BKbdJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2166994761/reactions"
            },
            "updated_at": "2024-06-14T00:21:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2166994761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Regarding curl, I think we have to take what we get: check version (and features! distros can and do compile the same version differently) and fail gracefully if an requested option is not supported. In my opinion, _this_ is the most important feature a `vim.net.download` would provide over `vim.system(`curl`):wait()`!\r\n\r\nRegarding flags and options, I would start simple and add things on request. From painful experience with nvim-treesitter, proxies are a very common request, so that should work out-of-the-box. (We also need to follow redirects because of Github moving cheese frequently (repo renaming etc.))\r\n\r\nOne thing we could add as part of this PR is use it for downloading spellfiles (mostly as a way for free testing). ",
            "created_at": "2024-06-14T06:35:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2167324002",
            "id": 2167324002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BLr1i",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167324002/reactions"
            },
            "updated_at": "2024-06-14T08:13:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167324002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think we need to also discuss _global_ configuration, as things like proxy settings are user-specific, while the caller of `vim.net.download` will in general be Nvim or a plugin.\r\n\r\nSomething like `vim.net.config` that takes a table of default options to `download()` (or later `request`) which the actual passed table extends? If in doubt, we should model this after `vim.diagnostic.config`.\r\n",
            "created_at": "2024-06-14T07:32:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2167412973",
            "id": 2167412973,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BMBjt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167412973/reactions"
            },
            "updated_at": "2024-06-14T07:32:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167412973",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I was adding checks for curls versions and I had a thought (regarding the returned metadata mostly). I fell like this may be the wrong approach (?). If a plugin (or even neovim core itself) relies in feature A that's not available in some user's curl installation, `vim.net.download` will fail gracefully with a message stating that feature A is not available. Should we encourage this? Or shoud this features be excluded from `vim.net.download`?\r\n\r\nThe main examples I can think of right now are:\r\n\r\n- not overriding a previous file with the same name as the downloaded one being available since `curl` 7.83.0\r\n- json formatted metadata being available since 7.70.0\r\n- json formatted request headers metadata being available since 7.83.0 (currently removed because Ubuntu 22 has version 7.81)\r\n\r\nFor some features, the download could continue with a warning (metadata), but for others (avoid overriding files) it may be dangerous to do so.",
            "created_at": "2024-06-16T00:30:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2170989912",
            "id": 2170989912,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BZq1Y",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2170989912/reactions"
            },
            "updated_at": "2024-06-16T00:30:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2170989912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Let's not overcomplicate this. Pick a minimum version that includes all features we may want, and then abort with error if that minimum version isn't available.",
            "created_at": "2024-06-16T09:37:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2171338656",
            "id": 2171338656,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6Ba_-g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2171338656/reactions"
            },
            "updated_at": "2024-06-16T09:37:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2171338656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Is there some requirement for picking a minimal `curl` version? What is the oldest know `curl` in a supported platform?",
            "created_at": "2024-06-18T03:09:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2174879451",
            "id": 2174879451,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6Bogbb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174879451/reactions"
            },
            "updated_at": "2024-06-18T03:09:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174879451",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Another question. My initial implementation of `spellfile.lua` is async, but it looks like when `:set spell` triggers the `SpellFileMissing` event, Neovim expects the spell file to be downloaded before the autocmd callback has finished (i.e. sync). Would it be ok to use `vim.wait` for this? Or should something else be changed?\r\n\r\nedit: https://github.com/neovim/neovim/pull/3027 seems to simply `:set spell` again at the end, so that may be a solution (?)",
            "created_at": "2024-06-18T03:58:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2174939114",
            "id": 2174939114,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6Bou_q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174939114/reactions"
            },
            "updated_at": "2024-06-18T04:10:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2174939114",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there some requirement for picking a minimal `curl` version?\r\n\r\nWhatever version is needed to allow vim.net.download to do what it needs to do. If you can't come up with a minimum version for now don't force it, it should become apparent anyway when some operation doesn't work.\r\n\r\n> What is the oldest know `curl` in a supported platform?\r\n\r\nDoesn't matter.",
            "created_at": "2024-06-18T09:08:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2175595378",
            "id": 2175595378,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BrPNy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2175595378/reactions"
            },
            "updated_at": "2024-06-18T09:08:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2175595378",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Wait, is a rewrite of spellfile from vim to lua necessary in this PR? Could we not split these up into two PRs?",
            "created_at": "2024-06-18T09:13:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2175605016",
            "id": 2175605016,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6BrRkY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2175605016/reactions"
            },
            "updated_at": "2024-06-19T10:47:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2175605016",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Wait, is a rewrite of spellfile from vim to lua necessary in this PR? Could we not split these up into two PRs?\r\n\r\nI could move it into its own PR. Initially, I included it here because of clason's comment\r\n\r\n> One thing we could add as part of this PR is use it for downloading spellfiles (mostly as a way for free testing).",
            "created_at": "2024-06-18T23:18:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2177240578",
            "id": 2177240578,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6Bxg4C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2177240578/reactions"
            },
            "updated_at": "2024-06-19T10:47:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2177240578",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "- This again looks like it's getting overcomplicated. And no, it's not because \"the topic requires it to be complicated\". \r\n    - netrw downloads spellfiles and `:edit https://...` files and I've never had to set any configuration. That is the initial goal here. \r\n    - The first step is just to download files for the common case. Do not worry about proxies or other edge cases. Those can be considered the next phase. Not this phase. (And we may decide to tell users to configure a curl rc file, instead of duplicating all of that in Nvim.)\r\n- [Why](https://github.com/neovim/neovim/pull/29104#discussion_r1623666921) do we need both download() and fetch()/request()? can we have 1 function with multiple \"overloads\"?",
            "created_at": "2024-06-18T23:54:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2177268381",
            "id": 2177268381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6Bxnqd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2177268381/reactions"
            },
            "updated_at": "2024-06-18T23:54:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2177268381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Why do we need both download() and fetch()/request()? can we have 1 function with multiple \"overloads\"?\r\n\r\nWe don't need both, they do behave very similarly. The last commit on #29104 only uses `fetch` .",
            "created_at": "2024-06-19T20:13:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2179404305",
            "id": 2179404305,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6B5xIR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2179404305/reactions"
            },
            "updated_at": "2024-06-19T20:13:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2179404305",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk is there something else you would like to be removed from the interface?",
            "created_at": "2024-06-19T22:27:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/29327#issuecomment-2179524942",
            "id": 2179524942,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
            "node_id": "IC_kwDOAPphoM6B6OlO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2179524942/reactions"
            },
            "updated_at": "2024-06-19T22:27:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2179524942",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29327/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29327/commits",
    "created_at": "2024-06-13T22:11:40Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29327.diff",
    "draft": false,
    "head": {
        "label": "TheLeoP:vim.net",
        "ref": "vim.net",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/TheLeoP/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/TheLeoP/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/TheLeoP/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/TheLeoP/neovim/branches{/branch}",
            "clone_url": "https://github.com/TheLeoP/neovim.git",
            "collaborators_url": "https://api.github.com/repos/TheLeoP/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/TheLeoP/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/TheLeoP/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/TheLeoP/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/TheLeoP/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/TheLeoP/neovim/contributors",
            "created_at": "2024-04-26T13:23:21Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/TheLeoP/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/TheLeoP/neovim/downloads",
            "events_url": "https://api.github.com/repos/TheLeoP/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/TheLeoP/neovim/forks",
            "full_name": "TheLeoP/neovim",
            "git_commits_url": "https://api.github.com/repos/TheLeoP/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/TheLeoP/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/TheLeoP/neovim/git/tags{/sha}",
            "git_url": "git://github.com/TheLeoP/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/TheLeoP/neovim/hooks",
            "html_url": "https://github.com/TheLeoP/neovim",
            "id": 792341236,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/TheLeoP/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/TheLeoP/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/TheLeoP/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/TheLeoP/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/TheLeoP/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/TheLeoP/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/TheLeoP/neovim/merges",
            "milestones_url": "https://api.github.com/repos/TheLeoP/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOLzoq9A",
            "notifications_url": "https://api.github.com/repos/TheLeoP/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
                "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
                "followers_url": "https://api.github.com/users/TheLeoP/followers",
                "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
                "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/TheLeoP",
                "id": 53507599,
                "login": "TheLeoP",
                "node_id": "MDQ6VXNlcjUzNTA3NTk5",
                "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
                "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
                "repos_url": "https://api.github.com/users/TheLeoP/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/TheLeoP"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/TheLeoP/neovim/pulls{/number}",
            "pushed_at": "2024-06-22T05:14:37Z",
            "releases_url": "https://api.github.com/repos/TheLeoP/neovim/releases{/id}",
            "size": 269746,
            "ssh_url": "git@github.com:TheLeoP/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/TheLeoP/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/TheLeoP/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/TheLeoP/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/TheLeoP/neovim/subscription",
            "svn_url": "https://github.com/TheLeoP/neovim",
            "tags_url": "https://api.github.com/repos/TheLeoP/neovim/tags",
            "teams_url": "https://api.github.com/repos/TheLeoP/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/TheLeoP/neovim/git/trees{/sha}",
            "updated_at": "2024-06-21T15:12:50Z",
            "url": "https://api.github.com/repos/TheLeoP/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5c3d6cac34db010f0d9f511e46461af0c8ed152e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
            "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
            "followers_url": "https://api.github.com/users/TheLeoP/followers",
            "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/TheLeoP",
            "id": 53507599,
            "login": "TheLeoP",
            "node_id": "MDQ6VXNlcjUzNTA3NTk5",
            "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
            "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
            "repos_url": "https://api.github.com/users/TheLeoP/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/TheLeoP"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29327",
    "id": 1919606396,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29327",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 5415073845,
            "name": "network",
            "node_id": "LA_kwDOAPphoM8AAAABQsN4NQ",
            "url": "https://api.github.com/repos/neovim/neovim/labels/network"
        }
    ],
    "locked": false,
    "merge_commit_sha": "19ebeeb5f0b9131233de17d6e5c591d08ed332ce",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5yat58",
    "number": 29327,
    "patch_url": "https://github.com/neovim/neovim/pull/29327.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
            "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
            "followers_url": "https://api.github.com/users/echasnovski/followers",
            "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
            "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/echasnovski",
            "id": 24854248,
            "login": "echasnovski",
            "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
            "organizations_url": "https://api.github.com/users/echasnovski/orgs",
            "received_events_url": "https://api.github.com/users/echasnovski/received_events",
            "repos_url": "https://api.github.com/users/echasnovski/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/echasnovski"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29327/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5c3d6cac34db010f0d9f511e46461af0c8ed152e",
    "title": "feat(vim.net): vim.net.download",
    "updated_at": "2024-06-28T02:55:18Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29327",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/53507599?v=4",
        "events_url": "https://api.github.com/users/TheLeoP/events{/privacy}",
        "followers_url": "https://api.github.com/users/TheLeoP/followers",
        "following_url": "https://api.github.com/users/TheLeoP/following{/other_user}",
        "gists_url": "https://api.github.com/users/TheLeoP/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/TheLeoP",
        "id": 53507599,
        "login": "TheLeoP",
        "node_id": "MDQ6VXNlcjUzNTA3NTk5",
        "organizations_url": "https://api.github.com/users/TheLeoP/orgs",
        "received_events_url": "https://api.github.com/users/TheLeoP/received_events",
        "repos_url": "https://api.github.com/users/TheLeoP/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/TheLeoP/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/TheLeoP/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/TheLeoP"
    }
}