{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26519/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26519/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26519"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26519"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26519/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26519"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/f5d225a4daf60619761a795f59376db0c52cd59d"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5077,
            "forks_count": 5077,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-26T01:26:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247838,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-26T01:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72074,
            "watchers_count": 72074,
            "web_commit_signoff_required": false
        },
        "sha": "8097b4a7252ec37dbf14bcc1b7c50c12343e54c4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Moving the logic for using vim.lpeg to create a match pattern from a glob into `vim.lsp.util`. There are several places in the LSP spec that use globs, and it's very useful to have it as a generally-available utility.\r\n\r\nThis was pulled out of #26516 to make that PR simpler",
    "closed_at": "2023-12-22T10:40:01Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26519#discussion_r1422937449"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26519"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422937449"
                }
            },
            "author_association": "MEMBER",
            "body": "Let's drop this, it doesn't have a clear purpose. Calling `:match()` on its argument is not a strong motivation.",
            "commit_id": "f5d225a4daf60619761a795f59376db0c52cd59d",
            "created_at": "2023-12-11T18:26:26Z",
            "diff_hunk": "@@ -0,0 +1,84 @@\n+local lpeg = vim.lpeg\n+\n+local M = {}\n+\n+--- Parses the raw glob into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n+--- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n+---\n+---@param pattern string The raw glob pattern\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+function M.parse(pattern)\n+  local l = lpeg\n+\n+  local P, S, V = lpeg.P, lpeg.S, lpeg.V\n+  local C, Cc, Ct, Cf = lpeg.C, lpeg.Cc, lpeg.Ct, lpeg.Cf\n+\n+  local pathsep = '/'\n+\n+  local function class(inv, ranges)\n+    for i, r in ipairs(ranges) do\n+      ranges[i] = r[1] .. r[2]\n+    end\n+    local patt = l.R(unpack(ranges))\n+    if inv == '!' then\n+      patt = P(1) - patt\n+    end\n+    return patt\n+  end\n+\n+  local function add(acc, a)\n+    return acc + a\n+  end\n+\n+  local function mul(acc, m)\n+    return acc * m\n+  end\n+\n+  local function star(stars, after)\n+    return (-after * (l.P(1) - pathsep)) ^ #stars * after\n+  end\n+\n+  local function dstar(after)\n+    return (-after * l.P(1)) ^ 0 * after\n+  end\n+\n+  local p = P({\n+    'Pattern',\n+    Pattern = V('Elem') ^ -1 * V('End'),\n+    Elem = Cf(\n+      (V('DStar') + V('Star') + V('Ques') + V('Class') + V('CondList') + V('Literal'))\n+        * (V('Elem') + V('End')),\n+      mul\n+    ),\n+    DStar = P('**') * (P(pathsep) * (V('Elem') + V('End')) + V('End')) / dstar,\n+    Star = C(P('*') ^ 1) * (V('Elem') + V('End')) / star,\n+    Ques = P('?') * Cc(l.P(1) - pathsep),\n+    Class = P('[') * C(P('!') ^ -1) * Ct(Ct(C(1) * '-' * C(P(1) - ']')) ^ 1 * ']') / class,\n+    CondList = P('{') * Cf(V('Cond') * (P(',') * V('Cond')) ^ 0, add) * '}',\n+    -- TODO: '*' inside a {} condition is interpreted literally but should probably have the same\n+    -- wildcard semantics it usually has.\n+    -- Fixing this is non-trivial because '*' should match non-greedily up to \"the rest of the\n+    -- pattern\" which in all other cases is the entire succeeding part of the pattern, but at the end of a {}\n+    -- condition means \"everything after the {}\" where several other options separated by ',' may\n+    -- exist in between that should not be matched by '*'.\n+    Cond = Cf((V('Ques') + V('Class') + V('CondList') + (V('Literal') - S(',}'))) ^ 1, mul)\n+      + Cc(l.P(0)),\n+    Literal = P(1) / l.P,\n+    End = P(-1) * Cc(l.P(-1)),\n+  })\n+\n+  return p:match(pattern) --[[@as vim.lpeg.Pattern?]]\n+end\n+\n+---@param pattern string|vim.lpeg.Pattern The glob pattern (raw or parsed) to match.\n+---@param s string The string to match against pattern.\n+---@return boolean Whether or not pattern matches s.\n+function M.match(pattern, s)",
            "html_url": "https://github.com/neovim/neovim/pull/26519#discussion_r1422937449",
            "id": 1422937449,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5U0E1p",
            "original_commit_id": "e8dcccf3ef9454a2b7fadcde61e3083b49470c71",
            "original_line": 76,
            "original_position": 76,
            "original_start_line": null,
            "path": "runtime/lua/vim/glob.lua",
            "position": null,
            "pull_request_review_id": 1775875177,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26519",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422937449/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-11T19:04:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1422937449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26519#discussion_r1423004334"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26519"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1423004334"
                }
            },
            "author_association": "MEMBER",
            "body": "If we name this `lpeg()` or `to_lpeg`, that leaves the door open for `to_regex` in the future, and also a `Glob` class if needed. But for now, `glob.lua` is just a namespace for glob-related things.\r\n\r\n```suggestion\r\nfunction M.to_lpeg(pattern)\r\n```",
            "commit_id": "f5d225a4daf60619761a795f59376db0c52cd59d",
            "created_at": "2023-12-11T19:03:03Z",
            "diff_hunk": "@@ -0,0 +1,84 @@\n+local lpeg = vim.lpeg\n+\n+local M = {}\n+\n+--- Parses the raw glob into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n+--- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n+---\n+---@param pattern string The raw glob pattern\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+function M.parse(pattern)",
            "html_url": "https://github.com/neovim/neovim/pull/26519#discussion_r1423004334",
            "id": 1423004334,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5U0VKu",
            "original_commit_id": "e8dcccf3ef9454a2b7fadcde61e3083b49470c71",
            "original_line": 10,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/lua/vim/glob.lua",
            "position": null,
            "pull_request_review_id": 1775974143,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26519",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1423004334/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-11T19:03:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1423004334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26519#discussion_r1423008872"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26519"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1423008872"
                }
            },
            "author_association": "MEMBER",
            "body": "this should be mentioned in glob.lua",
            "commit_id": "f5d225a4daf60619761a795f59376db0c52cd59d",
            "created_at": "2023-12-11T19:08:09Z",
            "diff_hunk": "@@ -1,93 +1,12 @@\n local bit = require('bit')\n+local glob = require(\"vim.glob\")\n local watch = require('vim._watch')\n local protocol = require('vim.lsp.protocol')\n local ms = protocol.Methods\n local lpeg = vim.lpeg\n \n local M = {}\n \n---- Parses the raw pattern into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n---- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n----\n----@param pattern string The raw glob pattern\n----@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n-local function parse(pattern)\n-  local l = lpeg\n-\n-  local P, S, V = lpeg.P, lpeg.S, lpeg.V\n-  local C, Cc, Ct, Cf = lpeg.C, lpeg.Cc, lpeg.Ct, lpeg.Cf\n-\n-  local pathsep = '/'\n-\n-  local function class(inv, ranges)\n-    for i, r in ipairs(ranges) do\n-      ranges[i] = r[1] .. r[2]\n-    end\n-    local patt = l.R(unpack(ranges))\n-    if inv == '!' then\n-      patt = P(1) - patt\n-    end\n-    return patt\n-  end\n-\n-  local function add(acc, a)\n-    return acc + a\n-  end\n-\n-  local function mul(acc, m)\n-    return acc * m\n-  end\n-\n-  local function star(stars, after)\n-    return (-after * (l.P(1) - pathsep)) ^ #stars * after\n-  end\n-\n-  local function dstar(after)\n-    return (-after * l.P(1)) ^ 0 * after\n-  end\n-\n-  local p = P({\n-    'Pattern',\n-    Pattern = V('Elem') ^ -1 * V('End'),\n-    Elem = Cf(\n-      (V('DStar') + V('Star') + V('Ques') + V('Class') + V('CondList') + V('Literal'))\n-        * (V('Elem') + V('End')),\n-      mul\n-    ),\n-    DStar = P('**') * (P(pathsep) * (V('Elem') + V('End')) + V('End')) / dstar,\n-    Star = C(P('*') ^ 1) * (V('Elem') + V('End')) / star,\n-    Ques = P('?') * Cc(l.P(1) - pathsep),\n-    Class = P('[') * C(P('!') ^ -1) * Ct(Ct(C(1) * '-' * C(P(1) - ']')) ^ 1 * ']') / class,\n-    CondList = P('{') * Cf(V('Cond') * (P(',') * V('Cond')) ^ 0, add) * '}',\n-    -- TODO: '*' inside a {} condition is interpreted literally but should probably have the same\n-    -- wildcard semantics it usually has.\n-    -- Fixing this is non-trivial because '*' should match non-greedily up to \"the rest of the\n-    -- pattern\" which in all other cases is the entire succeeding part of the pattern, but at the end of a {}\n-    -- condition means \"everything after the {}\" where several other options separated by ',' may\n-    -- exist in between that should not be matched by '*'.\n-    Cond = Cf((V('Ques') + V('Class') + V('CondList') + (V('Literal') - S(',}'))) ^ 1, mul)\n-      + Cc(l.P(0)),\n-    Literal = P(1) / l.P,\n-    End = P(-1) * Cc(l.P(-1)),\n-  })\n-\n-  return p:match(pattern) --[[@as vim.lpeg.Pattern?]]\n-end\n-\n----@private\n---- Implementation of LSP 3.17.0's pattern matching: https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#pattern",
            "html_url": "https://github.com/neovim/neovim/pull/26519#discussion_r1423008872",
            "id": 1423008872,
            "line": 78,
            "node_id": "PRRC_kwDOAPphoM5U0WRo",
            "original_commit_id": "e8dcccf3ef9454a2b7fadcde61e3083b49470c71",
            "original_line": 78,
            "original_position": 79,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 79,
            "pull_request_review_id": 1775982074,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26519",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1423008872/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-11T19:08:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1423008872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Should this not live on `vim.lpeg` (e.g. `vim.lpeg.parse_glob()`)? (That module is currently entirely \"vendored\", but that doesn't mean we can't add new members to it.) @neovim/core \r\n\r\n`vim.lsp.util` should be avoided, see https://github.com/neovim/neovim/issues/25272 and https://github.com/neovim/neovim/pull/26516#discussion_r1422756107\r\n",
            "created_at": "2023-12-11T16:30:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850431791",
            "id": 1850431791,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uS1kv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850431791/reactions"
            },
            "updated_at": "2023-12-11T16:35:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850431791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think `vim.fs` is a better place, since this seems to be specifically a \"file glob\". @gpanders \r\n\r\nIn general, moving such \"local\" functions to an exposed location should be accompanied -- and justified -- by code reuse in other parts of the API.",
            "created_at": "2023-12-11T16:34:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850439975",
            "id": 1850439975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uS3kn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850439975/reactions"
            },
            "updated_at": "2023-12-11T16:34:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850439975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Happy to move this into something more global, like `vim.fs` or `vim.glob`, but it's worth mentioning that LSP globs _do_ behave a bit differently than globs in some other contexts.\r\n\r\n> `**` to match any number of path segments, **including none**\r\n\r\nThis means that a LSP glob of `**/*.js` will match `foo.js`, but that is not the case in bash, for example.\r\n\r\n```bash\r\ntouch foo.js\r\nls **/*.js\r\n# ls: cannot access '**/*.js': No such file or directory\r\n```",
            "created_at": "2023-12-11T17:05:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850496201",
            "id": 1850496201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTFTJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850496201/reactions"
            },
            "updated_at": "2023-12-11T17:05:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850496201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There's precedent for using LSP specifications outside of the LSP API, if that specification is deemed globally useful (e.g., snippet format). If the \"LSP glob\" is simply more permissive without breaking other globs we would like to support, that'd be fine.",
            "created_at": "2023-12-11T17:07:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850500051",
            "id": 1850500051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTGPT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850500051/reactions"
            },
            "updated_at": "2023-12-11T17:07:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850500051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think vim.fs is a better place, since this seems to be specifically a \"file glob\".\r\n\r\nWhen I wrote https://github.com/neovim/neovim/issues/23291#issuecomment-1817873088 I was a bit unsure about `vim.fs` because although it is related to file globbing, it is actually not touching the filesystem.\r\n\r\nE.g. python has it's dedicated module: https://docs.python.org/3/library/glob.html?highlight=glob#glob.glob\r\nBut a dedicated module for a single function also feels overkill.\r\n\r\nJust to have it mentioned - I'm not opposed to vim.fs\r\n\r\n\r\n---\r\n\r\n\r\n> This means that a LSP glob of **/*.js will match foo.js, but that is not the case in bash, for example.\r\n\r\nIn zsh `**/*.js` also matches `foo.js`. Afaik there is no real glob pattern standard?\r\n\r\n\r\n\r\n",
            "created_at": "2023-12-11T17:12:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850509166",
            "id": 1850509166,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTIdu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850509166/reactions"
            },
            "updated_at": "2023-12-11T17:12:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850509166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can we pull this out without adding it to the API?",
            "created_at": "2023-12-11T17:14:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850512621",
            "id": 1850512621,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTJTt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850512621/reactions"
            },
            "updated_at": "2023-12-11T17:14:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850512621",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That was just a suggestion (and assuming the function could be used in `vim.fs`); a single `vim.glob` top-level function could also make sense (without making it `lpeg` specific, which seems to me an implementation detail)?\r\n\r\nAlternatively, we could think about a generic `vim.regex` module that aims to fill the gap between (and maybe consolidate) Lua patterns and full Vim regex; this could specialize several common patterns, one of them globs. (Not 100% convinced of this myself, but if it would allow removing the distinction between `#match?` and `#lua-match?` in treesitter, it might be worth it?)",
            "created_at": "2023-12-11T17:17:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850517419",
            "id": 1850517419,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTKer",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850517419/reactions"
            },
            "updated_at": "2023-12-11T17:17:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850517419",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Just refactored it to be in `vim.glob` so we can see how that would look.\r\n\r\nRegarding the \"single top-level function\": I think it's actually important to have two top-level functions. One for parsing the glob, and one for matching the glob. We want to allow the caller to parse a glob once and match many times so they don't have to pay that overhead every time they match with the glob.",
            "created_at": "2023-12-11T17:33:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850545765",
            "id": 1850545765,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTRZl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850545765/reactions"
            },
            "updated_at": "2023-12-11T17:33:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850545765",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Then I would look at `vim.regex` for a model of how to expose this (basically, use Lua's fake-OO to make a `Glob` object with a `match` method); see `runtime/vim/lua/vim/_meta/regex.lua`.",
            "created_at": "2023-12-11T17:35:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850549807",
            "id": 1850549807,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTSYv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 1,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850549807/reactions"
            },
            "updated_at": "2023-12-11T17:36:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850549807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> use Lua's fake-OO to make a `Glob` object\r\n\r\nan abstraction on top of the (lpeg) abstraction?",
            "created_at": "2023-12-11T17:45:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850570296",
            "id": 1850570296,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTXY4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850570296/reactions"
            },
            "updated_at": "2023-12-11T17:45:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850570296",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Beats having `parse` and `match`, which is a pattern we have nowhere else. (And the same argument applies to `vim.regex`.) If we _don't_ need this abstraction, why are we refactoring it out in the first place?",
            "created_at": "2023-12-11T17:48:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850576069",
            "id": 1850576069,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTYzF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850576069/reactions"
            },
            "updated_at": "2023-12-11T17:48:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850576069",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This may not be a pattern that neovim currently uses, but it is somewhat similar to how python does [re.compile](https://docs.python.org/3/library/re.html#re.compile) and [re.match](https://docs.python.org/3/library/re.html#re.match)\r\n\r\nI think it's reasonable to add a new wrapper object if we want to avoid exposing the internal lpeg object, but I would also like to keep the bare `match` method so for simple cases users don't have to first parse then match.",
            "created_at": "2023-12-11T18:08:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850611388",
            "id": 1850611388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTha8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850611388/reactions"
            },
            "updated_at": "2023-12-11T18:08:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850611388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For the record, here's how `vim.regex` works: you can either do `vim.regex([[...]]):match_str(string)` or\r\n```lua\r\nlocal re = vim.regex([[...]])\r\nre:match_str(string1)\r\nre:match_str(string2)\r\n...\r\n```\r\n(There is also `match_line`, which is irrelevant here.) Note how the parsing is hidden in the \"constructor\".\r\nThat has served us quite well, e.g., in `filetype.lua`.",
            "created_at": "2023-12-11T18:13:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850620155",
            "id": 1850620155,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTjj7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850620155/reactions"
            },
            "updated_at": "2023-12-11T18:15:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850620155",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (And the same argument applies to `vim.regex`.) \r\n\r\nCan't do anything about `vim.regex` right now, also it doesn't wrap lpeg or any other thing that already has its own interface.\r\n\r\n> If we _don't_ need this abstraction, why are we refactoring it out in the first place?\r\n\r\nOnly goal here was to put `parse_glob` somewhere other than `vim.lsp.util`. \r\n\r\n`vim.lpeg.Pattern` already has its own `:match()` method, there's no reason to wrap that with a `Glob` class. Can always consider a `Glob` class in the future if needed, but there's no reason to right now.\r\n\r\n> if we want to avoid exposing the internal lpeg object\r\n\r\nwe added `vim.lpeg` as a core module, why are we trying to avoid \"exposing\" it? lpegs are just like patterns/strings/regexes, they are just ways of representing a pattern. A Glob abstraction would be additive, it doesn't hide anything; wouldn't it need `to_regex` and `to_lpeg` methods?.\r\n\r\n",
            "created_at": "2023-12-11T18:42:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850674982",
            "id": 1850674982,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uTw8m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850674982/reactions"
            },
            "updated_at": "2023-12-11T18:53:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850674982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't want to waste time debating, but I feel I'm not being understood, so let me (one last time) try to explain my point:  \n\n* we do not need nor want a dedicated \"Glob\" object with a slew of fields and methods\n\n* we do not need or want to convert \"Globs\" between different representations. \n\nI only suggested to expose the \"glob matching\" functionality exactly (!) the same way as we expose the \"vim regex matching\" functionality -- which happens to be via Lua \"objects\", but that is not the point here. It's just about hiding (and this not needing to document or worry about keeping compatibility for) the internal representation (lpeg), which is just a means to an end.\n\nIf the Lpeg representation happens to be important, of course, then my point is moot.",
            "created_at": "2023-12-11T19:20:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850731007",
            "id": 1850731007,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uT-n_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850731007/reactions"
            },
            "updated_at": "2023-12-11T19:21:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850731007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If the Lpeg representation happens to be important, of course, then my point is moot.\r\n\r\nI'm not sure how important it is, but one aspect of the lpeg object is that you can combine it with further lpeg patterns. In the watchfile module that's afaik used.\r\n\r\n*Edit*, that's what I meant:\r\n\r\nhttps://github.com/neovim/neovim/blob/529498685bbcd4783bc0e816d6247118c9ffb9a7/runtime/lua/vim/lsp/_watchfiles.lua#L162\r\n\r\n`pattern` here is the result of the parse/to_lpeg function\r\n\r\nI agree that we shouldn't add an additional match function, the `:match` _method_ should be enough\r\n\r\n---\r\n\r\n`vim.glob2lpeg(...)` could be another option if we want to avoid the dedicated module.\r\nNeither option seems like a clear winner to me. All fine by me, but I think the docs should include the supported glob characters:\r\n\r\n```\r\nGlob patterns can have the following syntax:\r\n- `*` to match one or more characters in a path segment\r\n- `?` to match on one character in a path segment\r\n- `**` to match any number of path segments, including none\r\n- `{}` to group conditions (e.g. `**​/*.{ts,js}` matches all TypeScript and JavaScript files)\r\n- `[]` to declare a range of characters to match in a path segment (e.g., `example.[0-9]` to match on `example.0`, `example.1`, …)\r\n- `[!...]` to negate a range of characters to match in a path segment (e.g., `example.[!0-9]` to match on `example.a`, `example.b`, but not `example.0`)\r\n```\r\n",
            "created_at": "2023-12-11T19:35:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850755892",
            "id": 1850755892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uUEs0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850755892/reactions"
            },
            "updated_at": "2023-12-11T20:03:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850755892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Refactored to the `vim.glob.to_lpeg` form. Happy to continue massaging it as desired",
            "created_at": "2023-12-11T20:58:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/26519#issuecomment-1850878246",
            "id": 1850878246,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
            "node_id": "IC_kwDOAPphoM5uUikm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850878246/reactions"
            },
            "updated_at": "2023-12-11T20:58:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1850878246",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26519/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26519/commits",
    "created_at": "2023-12-11T16:15:05Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26519.diff",
    "draft": false,
    "head": {
        "label": "stevearc:stevearc-lpeg-glob",
        "ref": "stevearc-lpeg-glob",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/stevearc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/stevearc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/stevearc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/stevearc/neovim/branches{/branch}",
            "clone_url": "https://github.com/stevearc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/stevearc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/stevearc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/stevearc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/stevearc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/stevearc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/stevearc/neovim/contributors",
            "created_at": "2022-09-01T22:04:11Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/stevearc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/stevearc/neovim/downloads",
            "events_url": "https://api.github.com/repos/stevearc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/stevearc/neovim/forks",
            "full_name": "stevearc/neovim",
            "git_commits_url": "https://api.github.com/repos/stevearc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/stevearc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/stevearc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/stevearc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/stevearc/neovim/hooks",
            "html_url": "https://github.com/stevearc/neovim",
            "id": 531699540,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/stevearc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/stevearc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/stevearc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/stevearc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/stevearc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/stevearc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/stevearc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/stevearc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOH7EXVA",
            "notifications_url": "https://api.github.com/repos/stevearc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
                "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
                "followers_url": "https://api.github.com/users/stevearc/followers",
                "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
                "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/stevearc",
                "id": 506791,
                "login": "stevearc",
                "node_id": "MDQ6VXNlcjUwNjc5MQ==",
                "organizations_url": "https://api.github.com/users/stevearc/orgs",
                "received_events_url": "https://api.github.com/users/stevearc/received_events",
                "repos_url": "https://api.github.com/users/stevearc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/stevearc"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/stevearc/neovim/pulls{/number}",
            "pushed_at": "2023-12-23T16:01:44Z",
            "releases_url": "https://api.github.com/repos/stevearc/neovim/releases{/id}",
            "size": 237864,
            "ssh_url": "git@github.com:stevearc/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/stevearc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/stevearc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/stevearc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/stevearc/neovim/subscription",
            "svn_url": "https://github.com/stevearc/neovim",
            "tags_url": "https://api.github.com/repos/stevearc/neovim/tags",
            "teams_url": "https://api.github.com/repos/stevearc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/stevearc/neovim/git/trees{/sha}",
            "updated_at": "2022-10-14T15:42:57Z",
            "url": "https://api.github.com/repos/stevearc/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "f5d225a4daf60619761a795f59376db0c52cd59d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
            "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
            "followers_url": "https://api.github.com/users/stevearc/followers",
            "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
            "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/stevearc",
            "id": 506791,
            "login": "stevearc",
            "node_id": "MDQ6VXNlcjUwNjc5MQ==",
            "organizations_url": "https://api.github.com/users/stevearc/orgs",
            "received_events_url": "https://api.github.com/users/stevearc/received_events",
            "repos_url": "https://api.github.com/users/stevearc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/stevearc"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26519",
    "id": 1639155586,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26519",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "92204b06e7365cf4c68e6ea8258dce801f0a5df9",
    "merged_at": "2023-12-22T10:40:01Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5hs4eC",
    "number": 26519,
    "patch_url": "https://github.com/neovim/neovim/pull/26519.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26519/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/f5d225a4daf60619761a795f59376db0c52cd59d",
    "title": "refactor(lsp): move glob parsing to util",
    "updated_at": "2023-12-23T16:01:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26519",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/506791?v=4",
        "events_url": "https://api.github.com/users/stevearc/events{/privacy}",
        "followers_url": "https://api.github.com/users/stevearc/followers",
        "following_url": "https://api.github.com/users/stevearc/following{/other_user}",
        "gists_url": "https://api.github.com/users/stevearc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/stevearc",
        "id": 506791,
        "login": "stevearc",
        "node_id": "MDQ6VXNlcjUwNjc5MQ==",
        "organizations_url": "https://api.github.com/users/stevearc/orgs",
        "received_events_url": "https://api.github.com/users/stevearc/received_events",
        "repos_url": "https://api.github.com/users/stevearc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/stevearc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/stevearc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/stevearc"
    }
}