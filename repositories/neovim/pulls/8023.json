{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/8023/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/8023/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/8023"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/8023"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/8023/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/8023"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/132caa485977e15d76487584eb7e89f8eba82c08"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5704,
            "forks_count": 5704,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1834,
            "open_issues_count": 1834,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-18T23:26:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 295086,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83399,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-19T02:35:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83399,
            "watchers_count": 83399,
            "web_commit_signoff_required": false
        },
        "sha": "15670ca1ad657945f69350b663e127f71f81d51c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "# Motivation\r\n\r\nI spent some time using kakoune in the past and I liked the multicursor approach a lot. It gives you much more power, feedback and undo-capacity than simple vim usage (e.g. with macros and regexes). Most of the modern editors have multi-cursor support and I think neovim needs that support to stay in the competition.\r\n\r\nThere are plugins like [vim-multiple-cursors](https://github.com/terryma/vim-multiple-cursors) to do that. vim-multiple-cursors is a great plugin, but it does crash sometimes, leaving the editor in a strange state with virtualedit enabled. The undo command feels weird and the plugin does seem like a hack.\r\n\r\nI think multiple cursors must be implemented as a core feature to be usable.\r\n\r\n# What is this?\r\n\r\nI don't mean to merge this pull request to master as-is. This is a weekend-long PoC to try to implement multiple cursors in neovim.\r\n\r\nI wanted to see if multiple cursors could be implemented incrementally without breaking existing code and features.\r\n\r\nThis branch binds ^A to spawn a cursor on the line below. It handles moving the cursor left and right and using x to delete a character.\r\n\r\n# Demo time!\r\n\r\n[![asciicast](https://asciinema.org/a/pXnLdcCEodfF4emgDRjliNzCc.png)](https://asciinema.org/a/pXnLdcCEodfF4emgDRjliNzCc)\r\n\r\n# Review instructions\r\n\r\nI split my work in multiple commits, some of which don't compile.\r\n\r\nCommits tagged with [sed] are just search-and-replace commits, you don't need to read them. Some commits are tagged with [failcompile], as the name implies they don't compile and are split just to ease the review.\r\n\r\nCommits should be reviewed with the \"ignore whitespace changes\" option enabled because a lot of code has been indented to be put in a loop. I am not sure github supports that, but you can use the -w switch on most git commands that show a diff for that.\r\n\r\n# Issues\r\n\r\n~~I could not find how to refresh specific lines when cursors are spawned or moved, so some functions call ui_schedule_refresh() which redraw the whole screen.~~ FIXED\r\n\r\nSome functions leak. I didn't implement proper memory management. They will be easy to find with clang ASAN anyway.\r\n\r\n~~I couldn't manage to run the tests but they are most likely broken since this is still a draft.~~ FIXED\r\n\r\n# My impressions\r\n\r\nThis is the first time I hack into neovim and I find it quite hard to get into. Yet, I think this feature can be implemented incrementally. The add_cursor function could be hidden behind a feature gate until the feature is fully usable and neovim could be refactored progressively to support multiple cursors.\r\n\r\nDespite all the work that has been done, neovim still needs lots of refactoring. There are still a *lot* of global variable accesses, a lot of ways of doing the same thing, a lot of very very long functions (what is that 7500 lines long screen.c with that 2200 lines long function there!). I assume all this is due to its legacy.\r\n\r\nAs a side-note, I am a C++ developper and I think that C++ could really make the project smaller and more maintainable. Similarly to the multiple cursor migration, I think that neovim's code can be slowly migrated to C++ without some major rewrite. It doesn't need to make use of all of C++ advanced features but I would have liked using `std::vector` here and there, letting the compiler do the memory management for me. Constructors would have helped with the structure I changed, where cursors are now allocated, I needed to find and modify everywhere such a structure was allocated and I probably missed some of them.\r\n\r\nI don't think I will be able to spend much time on this feature in the near-future, forget about finishing the feature alone. I just hope this can help figure out if and how this feature can be implemented.\r\n\r\nSo, what do you think of all this? Are there some parts of neovim that may be much harder to migrate to multiple cursors? Is there any chance that this feature lands on master someday? Do you think this is the right approach?\r\n\r\n# Related issues\r\n\r\nRelated to: #211, #3845, #7257\r\n\r\nPS: Actually I just discovered #7257 while writing this post, I didn't know that someone was actually working on this ^^",
    "closed_at": "2024-11-17T02:57:44Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> This is a weekend-long PoC to try to implement multiple cursors in neovim.\r\n\r\nI have a weeks-long PoC that I haven't published. Guess I should get on that. \r\n\r\nIt will take time to go through yours, but I'll note that mine did not involve a tree-wide change; instead the cursors are implemented \"mostly\" out-of-band, they work with the legacy code transparently.\r\n\r\n>  think that C++ could really make the project smaller and more maintainable. Similarly to the multiple cursor migration, I think that neovim's code can be slowly migrated to C++ without some major rewrite. \r\n\r\nNo thanks, see #153 . We would like to move towards using Lua for internal logic where possible, and we are working towards that.\r\n\r\n> Despite all the work that has been done, neovim still needs lots of refactoring. There are still a lot of global variable accesses, a lot of ways of doing the same thing, a lot of very very long functions (what is that 7500 lines long screen.c with that 2200 lines long function there!). I assume all this is due to its legacy.\r\n\r\nIndeed. If we haven't _already_ proven by construction that such an \"incremental\" refactor that you alluded to is a delicate endeavor that involves much, much, much more work that you think, then I don't know how else to express it. \r\n",
            "created_at": "2018-02-18T16:08:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366526510",
            "id": 366526510,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUyNjUxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366526510/reactions"
            },
            "updated_at": "2018-02-18T16:19:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366526510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Does this PR implement the following:\r\n\r\n- per-cursor registers\r\n- chunky undo and dot-repeat\r\n- insert-mode completion (CTRL-P, CTRL-N, etc.)",
            "created_at": "2018-02-18T16:14:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366526934",
            "id": 366526934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUyNjkzNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366526934/reactions"
            },
            "updated_at": "2018-02-18T16:18:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366526934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Looks like cursors are per-window, instead of per-buffer, any reason you chose to do that?\r\n\r\nAlso I have been wondering if there is really any reason to support cursor persistence after buffer-switch or window-switch.",
            "created_at": "2018-02-18T16:23:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366527472",
            "id": 366527472,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUyNzQ3Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366527472/reactions"
            },
            "updated_at": "2018-02-18T16:24:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366527472",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> For C++ see #153 .\r\n\r\nI didn't read the whole thread, but as I said I am not suggesting a rewrite, just allowing to use some features here and there. As for the understandability of C++, it's not hard, if one can understand C, they can understand C++, it's just a matter of learning it. Anyway, I'll stop here on c++ since it's not the main point of this.\r\n\r\n> Indeed. If we haven't already proven by construction that such an \"incremental\" refactor that you alluded to is a delicate endeavor that involves much, much, much more work that you think, then I don't know how else to express it.\r\n\r\nIt is just because it's a delicate endeavor that I think an incremental approach is the best. I'm sure it involves much more work than I can think of, but the question is: will there be any insurmountable roadblock?\r\n\r\nFor per-cursor registers, can't we store the registers in the cursor_T structure? I do know that it is not a simple thing, but I still think that it can be done incrementally. Such a reasoning can surely be applied to undo, dot-repeat and completion. Support for multi-cursor for these features can be done step-by-step.\r\n\r\n> Looks like cursors are per-window, instead of per-buffer, any reason you chose to do that?\r\n\r\nAs I said, this is my first time hacking into vim, I only did what seemed to be the simplest approach. However, I think this is the most intuitive approach. As vim does not keep memory of what was the visual selection when leaving a buffer (or does it?), I don't think we should keep memory of multiple cursors in a buffer that's not on the screen.\r\n\r\n> It will take time to go through yours\r\n\r\nIf you skip the [sed] commits, there shouldn't be much to review.\r\n\r\n> but I'll note that mine did not involve a tree-wide change; instead the cursors are implemented out-of-band, they work with the legacy code transparently.\r\n\r\nThat's another approach I did not think of, I would like to see how you did that. Doesn't it add tons of code? I was hoping that my approach would help at refactoring existing code to make it more maintainable and actually reduce the number of lines.",
            "created_at": "2018-02-18T16:42:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366528715",
            "id": 366528715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUyODcxNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366528715/reactions"
            },
            "updated_at": "2018-02-18T16:42:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366528715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
                "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/blastrock/followers",
                "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blastrock",
                "id": 1370530,
                "login": "blastrock",
                "node_id": "MDQ6VXNlcjEzNzA1MzA=",
                "organizations_url": "https://api.github.com/users/blastrock/orgs",
                "received_events_url": "https://api.github.com/users/blastrock/received_events",
                "repos_url": "https://api.github.com/users/blastrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blastrock",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I don't like the `sed` changes either, but also for _semantic_ reasons: now you have a lot of code that hard-code array index zero. If this element so works much differently than the rest of the array, it can just as well be its own variables, thus the existing codes. (As `screen.c` was mentioned I can't resist comparing to my own multigrid PRs: I prototype floating windows #6619  and multiple toplevel windows #7541 with exactly zero changes to that 2200 function and very little changes to the helper functions it uses. Simply keep the old global grid variable instead for current grid, and add new variables for non-current grids. Maybe its ugly, but less of a horrowshow than refactoring those 5000 lines involved in screen.c)",
            "created_at": "2018-02-18T19:05:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366538895",
            "id": 366538895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjUzODg5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366538895/reactions"
            },
            "updated_at": "2018-02-18T19:06:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366538895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It doesn't need to make use of all of C++ advanced features but I would have liked using std::vector here and there, letting the compiler do the memory management for me. \r\n\r\nWe already use klib.h for some simple generic datatypes, including `kvec_t` for simple logarithmically allocating vector.",
            "created_at": "2018-02-18T19:28:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366540620",
            "id": 366540620,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU0MDYyMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366540620/reactions"
            },
            "updated_at": "2018-02-18T19:28:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366540620",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> I don't like the sed changes either, but also for semantic reasons: now you have a lot of code that hard-code array index zero. If this element so works much differently than the rest of the array, it can just as well be its own variables, thus the existing codes.\r\n\r\nI think this should be temporary and is only meant as a way to avoid breaking code. As the code gets refactored to support multiple cursors, hardcoded accesses to that first element should decrease.\r\n\r\nMy opinion is that functions that modify the cursor state through the window_S structure should instead access the cursor_T structure only, which can only be done if the \"cursor\" part of the window structure is split apart.\r\n\r\nI did duplicate the oneleft and oneright function, but my hope is that oneleft could be written later as `oneleftcursor(curwin->w_cursors[0])`. And when all of the code become multicursor-aware, oneleft will no longer need to exist. Also, it would make it a pure function that does not modify a global state.\r\n\r\n> Simply keep the old global grid variable instead for current grid, and add new variables for non-current grids. Maybe its ugly, but less of a horrowshow than refactoring those 5000 lines involved in screen.c)\r\n\r\nMy knowledge of vim's codebase prevents me from understanding what's really going on in these two PRs. I understand your approach, but shouldn't we refactor that code instead of adding more code to handle new features? Are you planning to remove the old global grid in the future and make all code depend on your new grid system?\r\n\r\n> We already use klib.h for some simple generic datatypes, including kvec_t for simple logarithmically allocating vector.\r\n\r\nThanks, that's good to know. However that doesn't help with memory management which would be so much easier to do in a constructor/destructor instead of everywhere in the program.",
            "created_at": "2018-02-18T20:45:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366546194",
            "id": 366546194,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU0NjE5NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366546194/reactions"
            },
            "updated_at": "2018-02-18T20:45:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366546194",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
                "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/blastrock/followers",
                "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blastrock",
                "id": 1370530,
                "login": "blastrock",
                "node_id": "MDQ6VXNlcjEzNzA1MzA=",
                "organizations_url": "https://api.github.com/users/blastrock/orgs",
                "received_events_url": "https://api.github.com/users/blastrock/received_events",
                "repos_url": "https://api.github.com/users/blastrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blastrock",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I did duplicate the oneleft and oneright function, but my hope is that oneleft could be written later as oneleftcursor(curwin->w_cursors[0]). And when all of the code become multicursor-aware, oneleft will no longer need to exist. Also, it would make it a pure function that does not modify a global state.\r\n\r\nWould be interested in a separate PR for that change.",
            "created_at": "2018-02-18T20:48:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366546417",
            "id": 366546417,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU0NjQxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366546417/reactions"
            },
            "updated_at": "2018-02-18T20:48:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366546417",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think this should be temporary and is only meant as a way to avoid breaking code.\r\n\r\nI think I understand your rationale better now. But temporary state has a tendency to become permanent... It would be really interesting to see @justinmk 's approach to determine the tradeoffs :)",
            "created_at": "2018-02-18T21:41:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366550317",
            "id": 366550317,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU1MDMxNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366550317/reactions"
            },
            "updated_at": "2018-02-18T21:41:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366550317",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "> Would be interested in a separate PR for that change.\r\n\r\nI am not sure what you mean... If we want a oneleft function that acts on a cursor structure, that structure must be split out from the window structure first which is what I start to do in 2e40a74f0a469de3bc111ae7bf3d68c65d24acfa but that commit isn't complete without the following 4 which include the big [sed] commits, so the PR for that change would be almost as big as this one.",
            "created_at": "2018-02-18T22:12:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366552658",
            "id": 366552658,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU1MjY1OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366552658/reactions"
            },
            "updated_at": "2018-02-18T22:12:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366552658",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
                "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/blastrock/followers",
                "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blastrock",
                "id": 1370530,
                "login": "blastrock",
                "node_id": "MDQ6VXNlcjEzNzA1MzA=",
                "organizations_url": "https://api.github.com/users/blastrock/orgs",
                "received_events_url": "https://api.github.com/users/blastrock/received_events",
                "repos_url": "https://api.github.com/users/blastrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blastrock",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@blastrock When you mentioned \"pure function\" I thought you meant a function that takes a position + other parameters and returns an integer. If it modifies e.g. a window structure then I misunderstood.",
            "created_at": "2018-02-18T22:51:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366555485",
            "id": 366555485,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjU1NTQ4NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366555485/reactions"
            },
            "updated_at": "2018-02-18T22:51:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366555485",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`oneleft` reads and modifies three values. In principle you could take three pointers as argument (+ buffer if not assume curbuf) and thus support any representation, window struct or other variables, without global struct refactor. Then it would be \"pure\" in the sense of non-const pointer arguments as multiple return values.",
            "created_at": "2018-02-19T11:11:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366658376",
            "id": 366658376,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjY1ODM3Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366658376/reactions"
            },
            "updated_at": "2018-02-19T11:11:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366658376",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "If we make such a function and leave the cursors variables as they are in the current window struct (so, we don't take the big changes I propose), when the user presses 'h', we would have to make one call for the main cursor with its variables in the window struct and one different call in a loop for all the additional cursors. Then to support all other move and edit actions the user can do, we would have to write two of such calls.\r\n\r\nThe pure function you guys are suggesting would indeed be better than the current function, but I don't think it would help much to reduce the quantity of code for multicursor support.",
            "created_at": "2018-02-19T20:18:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-366793616",
            "id": 366793616,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2Njc5MzYxNg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366793616/reactions"
            },
            "updated_at": "2018-02-19T20:18:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/366793616",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
                "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/blastrock/followers",
                "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blastrock",
                "id": 1370530,
                "login": "blastrock",
                "node_id": "MDQ6VXNlcjEzNzA1MzA=",
                "organizations_url": "https://api.github.com/users/blastrock/orgs",
                "received_events_url": "https://api.github.com/users/blastrock/received_events",
                "repos_url": "https://api.github.com/users/blastrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blastrock",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "I fixed the unit tests and the ui refresh thing. There is still a memory leak that makes the CI fail.",
            "created_at": "2018-02-22T17:09:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-367750970",
            "id": 367750970,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM2Nzc1MDk3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/367750970/reactions"
            },
            "updated_at": "2018-02-22T17:09:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/367750970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
                "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/blastrock/followers",
                "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blastrock",
                "id": 1370530,
                "login": "blastrock",
                "node_id": "MDQ6VXNlcjEzNzA1MzA=",
                "organizations_url": "https://api.github.com/users/blastrock/orgs",
                "received_events_url": "https://api.github.com/users/blastrock/received_events",
                "repos_url": "https://api.github.com/users/blastrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blastrock",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "NONE",
            "body": "Gentle ping, @blastrock. Also, @justinmk, could you please clarify whether you've decided to go further with this pull request or favor your own PoC that you mentioned earlier?",
            "created_at": "2018-03-13T15:50:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-372714168",
            "id": 372714168,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3MjcxNDE2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/372714168/reactions"
            },
            "updated_at": "2018-03-13T15:50:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/372714168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/340676?v=4",
                "events_url": "https://api.github.com/users/balta2ar/events{/privacy}",
                "followers_url": "https://api.github.com/users/balta2ar/followers",
                "following_url": "https://api.github.com/users/balta2ar/following{/other_user}",
                "gists_url": "https://api.github.com/users/balta2ar/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/balta2ar",
                "id": 340676,
                "login": "balta2ar",
                "node_id": "MDQ6VXNlcjM0MDY3Ng==",
                "organizations_url": "https://api.github.com/users/balta2ar/orgs",
                "received_events_url": "https://api.github.com/users/balta2ar/received_events",
                "repos_url": "https://api.github.com/users/balta2ar/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/balta2ar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/balta2ar/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/balta2ar",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@balta2ar This PR isn't anywhere close to complete AFAICT. That's not meant as a slight, just making  clear  my current understanding of the status.  \r\n\r\nI would not encourage further work on this PR until I can revisit my local branch. I don't have a timeline for that, I am juggling many things.",
            "created_at": "2018-03-13T17:37:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-372753469",
            "id": 372753469,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM3Mjc1MzQ2OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/372753469/reactions"
            },
            "updated_at": "2018-03-13T17:39:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/372753469",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "If you plan to revisit this, reopen with an approach that does not make changes that are spread out across many files. It shouldn't be necessary.",
            "created_at": "2024-11-17T02:57:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/8023#issuecomment-2480902364",
            "id": 2480902364,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
            "node_id": "IC_kwDOAPphoM6T35Dc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2480902364/reactions"
            },
            "updated_at": "2024-11-17T02:57:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2480902364",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/8023/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/8023/commits",
    "created_at": "2018-02-18T15:20:39Z",
    "diff_url": "https://github.com/neovim/neovim/pull/8023.diff",
    "draft": false,
    "head": {
        "label": "blastrock:multi_cursor3",
        "ref": "multi_cursor3",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/blastrock/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/blastrock/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/blastrock/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/blastrock/neovim/branches{/branch}",
            "clone_url": "https://github.com/blastrock/neovim.git",
            "collaborators_url": "https://api.github.com/repos/blastrock/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/blastrock/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/blastrock/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/blastrock/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/blastrock/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/blastrock/neovim/contributors",
            "created_at": "2018-02-18T15:12:38Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/blastrock/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/blastrock/neovim/downloads",
            "events_url": "https://api.github.com/repos/blastrock/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/blastrock/neovim/forks",
            "full_name": "blastrock/neovim",
            "git_commits_url": "https://api.github.com/repos/blastrock/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/blastrock/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/blastrock/neovim/git/tags{/sha}",
            "git_url": "git://github.com/blastrock/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://salt.bountysource.com/teams/neovim",
            "hooks_url": "https://api.github.com/repos/blastrock/neovim/hooks",
            "html_url": "https://github.com/blastrock/neovim",
            "id": 121962573,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/blastrock/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/blastrock/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/blastrock/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/blastrock/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/blastrock/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/blastrock/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/blastrock/neovim/merges",
            "milestones_url": "https://api.github.com/repos/blastrock/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxMjE5NjI1NzM=",
            "notifications_url": "https://api.github.com/repos/blastrock/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
                "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
                "followers_url": "https://api.github.com/users/blastrock/followers",
                "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
                "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blastrock",
                "id": 1370530,
                "login": "blastrock",
                "node_id": "MDQ6VXNlcjEzNzA1MzA=",
                "organizations_url": "https://api.github.com/users/blastrock/orgs",
                "received_events_url": "https://api.github.com/users/blastrock/received_events",
                "repos_url": "https://api.github.com/users/blastrock/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blastrock",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/blastrock/neovim/pulls{/number}",
            "pushed_at": "2018-02-22T15:32:39Z",
            "releases_url": "https://api.github.com/repos/blastrock/neovim/releases{/id}",
            "size": 65960,
            "ssh_url": "git@github.com:blastrock/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/blastrock/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/blastrock/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/blastrock/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/blastrock/neovim/subscription",
            "svn_url": "https://github.com/blastrock/neovim",
            "tags_url": "https://api.github.com/repos/blastrock/neovim/tags",
            "teams_url": "https://api.github.com/repos/blastrock/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/blastrock/neovim/git/trees{/sha}",
            "updated_at": "2018-02-18T15:12:47Z",
            "url": "https://api.github.com/repos/blastrock/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "132caa485977e15d76487584eb7e89f8eba82c08",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
            "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
            "followers_url": "https://api.github.com/users/blastrock/followers",
            "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/blastrock",
            "id": 1370530,
            "login": "blastrock",
            "node_id": "MDQ6VXNlcjEzNzA1MzA=",
            "organizations_url": "https://api.github.com/users/blastrock/orgs",
            "received_events_url": "https://api.github.com/users/blastrock/received_events",
            "repos_url": "https://api.github.com/users/blastrock/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/blastrock",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/8023",
    "id": 169834848,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/8023",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "issue needs attention from an expert, or PR proposes significant changes to architecture or API",
            "id": 212680983,
            "name": "needs:discussion",
            "node_id": "MDU6TGFiZWwyMTI2ODA5ODM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:discussion"
        }
    ],
    "locked": false,
    "merge_commit_sha": null,
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0MTY5ODM0ODQ4",
    "number": 8023,
    "patch_url": "https://github.com/neovim/neovim/pull/8023.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/8023/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/132caa485977e15d76487584eb7e89f8eba82c08",
    "title": "Multiple cursors support",
    "updated_at": "2024-11-17T02:57:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/8023",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1370530?v=4",
        "events_url": "https://api.github.com/users/blastrock/events{/privacy}",
        "followers_url": "https://api.github.com/users/blastrock/followers",
        "following_url": "https://api.github.com/users/blastrock/following{/other_user}",
        "gists_url": "https://api.github.com/users/blastrock/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/blastrock",
        "id": 1370530,
        "login": "blastrock",
        "node_id": "MDQ6VXNlcjEzNzA1MzA=",
        "organizations_url": "https://api.github.com/users/blastrock/orgs",
        "received_events_url": "https://api.github.com/users/blastrock/received_events",
        "repos_url": "https://api.github.com/users/blastrock/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/blastrock/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/blastrock/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/blastrock",
        "user_view_type": "public"
    }
}