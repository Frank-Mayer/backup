{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30457/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30457/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30457"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30457"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30457/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/63722d848327212a99a1924b47c74c003ffc1561"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5602,
            "forks_count": 5602,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1781,
            "open_issues_count": 1781,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-23T23:14:14Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 286529,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 81930,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-09-24T02:10:57Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 81930,
            "watchers_count": 81930,
            "web_commit_signoff_required": false
        },
        "sha": "e697c1b43dfbeab132fee4149157f7abd08c51a0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Analogous to the shell `rm` command.\n",
    "closed_at": "2024-09-22T14:05:24Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1769600708"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769600708"
                }
            },
            "author_association": "MEMBER",
            "body": "This is effectively just a wrapper to `uv_fs_unlink()`.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-21T15:31:02Z",
            "diff_hunk": "@@ -759,58 +759,21 @@ function M.assert_visible(bufnr, visible)\n   end\n end\n \n---- @param path string\n-local function do_rmdir(path)\n-  local stat = uv.fs_stat(path)\n-  if stat == nil then\n-    return\n-  end\n-  if stat.type ~= 'directory' then\n-    error(string.format('rmdir: not a directory: %s', path))\n-  end\n-  for file in vim.fs.dir(path) do\n-    if file ~= '.' and file ~= '..' then\n-      local abspath = path .. '/' .. file\n-      if t.isdir(abspath) then\n-        do_rmdir(abspath) -- recurse\n-      else\n-        local ret, err = os.remove(abspath)\n-        if not ret then\n-          if not session then\n-            error('os.remove: ' .. err)\n-          else\n-            -- Try Nvim delete(): it handles `readonly` attribute on Windows,\n-            -- and avoids Lua cross-version/platform incompatibilities.\n-            if -1 == M.call('delete', abspath) then",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1769600708",
            "id": 1769600708,
            "line": 784,
            "node_id": "PRRC_kwDOAPphoM5pefbE",
            "original_commit_id": "7c4d053ad1149dc9a13fc7b8cb7159efc9425fc8",
            "original_line": 784,
            "original_position": 26,
            "original_start_line": null,
            "path": "test/functional/testnvim.lua",
            "position": 26,
            "pull_request_review_id": 2319842198,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769600708/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-21T15:31:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769600708",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1769600740"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769600740"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- @param recursive? boolean\r\n```\r\n\r\nSuggestion; I feel like that's the more common term here.\r\n\r\n(`rm` itself uses neither:\r\n> Attempt to remove the file hierarchy rooted in each file argument.\r\n\r\nwhich is just... weird.)",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-21T15:31:11Z",
            "diff_hunk": "@@ -609,4 +611,56 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recurse? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1769600740",
            "id": 1769600740,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pefbk",
            "original_commit_id": "7c4d053ad1149dc9a13fc7b8cb7159efc9425fc8",
            "original_line": 616,
            "original_position": 88,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2319842213,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769600740/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-21T15:39:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769600740",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1769601582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769601582"
                }
            },
            "author_association": "MEMBER",
            "body": "Coreutils `rm` has\r\n\r\n```\r\n       -r, -R, --recursive\r\n              remove directories and their contents recursively\r\n```",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-21T15:37:18Z",
            "diff_hunk": "@@ -609,4 +611,56 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recurse? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1769601582",
            "id": 1769601582,
            "in_reply_to_id": 1769600740,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pefou",
            "original_commit_id": "7c4d053ad1149dc9a13fc7b8cb7159efc9425fc8",
            "original_line": 616,
            "original_position": 88,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2319842913,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769601582/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-21T15:37:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769601582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1769601804"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769601804"
                }
            },
            "author_association": "MEMBER",
            "body": "fruitrm gotta be different :)",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-21T15:39:21Z",
            "diff_hunk": "@@ -609,4 +611,56 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recurse? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1769601804",
            "id": 1769601804,
            "in_reply_to_id": 1769600740,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5pefsM",
            "original_commit_id": "7c4d053ad1149dc9a13fc7b8cb7159efc9425fc8",
            "original_line": 616,
            "original_position": 88,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": null,
            "pull_request_review_id": 2319843096,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769601804/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-21T15:39:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1769601804",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770530158"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770530158"
                }
            },
            "author_association": "MEMBER",
            "body": "what's meant by the \"and arguments\" part? \r\n\r\nshould we make `force` behavior the default? it's probably the common intention, so would save some toil. it is the default in https://github.com/jprichardson/node-fs-extra/blob/master/docs/remove.md for example.\r\n\r\ntrying to delete a non-existent file doesn't seem like an error-worthy situation by default.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T11:34:37Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770530158",
            "id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piCVu",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320829601,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770530158/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T11:34:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770530158",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770531254"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770531254"
                }
            },
            "author_association": "MEMBER",
            "body": "perhaps not needed anymore now that we have luv (previously were using Lua stdlib or \"lfs\", which didn't work well for Windows).\r\n\r\nbut the main problem that was being solved here is when files are still open in another process on Windows, delete will fail and it can be annoying to troubleshoot (especially for new contributors). we can revisit in `vim.fs.rm` if needed.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T11:40:20Z",
            "diff_hunk": "@@ -759,58 +759,21 @@ function M.assert_visible(bufnr, visible)\n   end\n end\n \n---- @param path string\n-local function do_rmdir(path)\n-  local stat = uv.fs_stat(path)\n-  if stat == nil then\n-    return\n-  end\n-  if stat.type ~= 'directory' then\n-    error(string.format('rmdir: not a directory: %s', path))\n-  end\n-  for file in vim.fs.dir(path) do\n-    if file ~= '.' and file ~= '..' then\n-      local abspath = path .. '/' .. file\n-      if t.isdir(abspath) then\n-        do_rmdir(abspath) -- recurse\n-      else\n-        local ret, err = os.remove(abspath)\n-        if not ret then\n-          if not session then\n-            error('os.remove: ' .. err)\n-          else\n-            -- Try Nvim delete(): it handles `readonly` attribute on Windows,\n-            -- and avoids Lua cross-version/platform incompatibilities.\n-            if -1 == M.call('delete', abspath) then",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770531254",
            "id": 1770531254,
            "in_reply_to_id": 1769600708,
            "line": 784,
            "node_id": "PRRC_kwDOAPphoM5piCm2",
            "original_commit_id": "7c4d053ad1149dc9a13fc7b8cb7159efc9425fc8",
            "original_line": 784,
            "original_position": 26,
            "original_start_line": null,
            "path": "test/functional/testnvim.lua",
            "position": 26,
            "pull_request_review_id": 2320830737,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770531254/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T11:40:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770531254",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770535085"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770535085"
                }
            },
            "author_association": "MEMBER",
            "body": "I've tried to match the semantics of the shell `rm` command as much as possible in order to not create any new patterns. Anyone familiar with `rm` will be familiar with `vim.fs.rm()`. These field descriptions are copied from the [man page](https://man7.org/linux/man-pages/man1/rm.1.html) of coreutils `rm`.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T11:52:21Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770535085",
            "id": 1770535085,
            "in_reply_to_id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piDit",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320835228,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770535085/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T11:52:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770535085",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770535312"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770535312"
                }
            },
            "author_association": "MEMBER",
            "body": "It's good to use familiar tools as a baseline, but `vim.fs` is also positioned as a high-level, ergonomic interface. We don't have a requirement to match shell tools. The \"common case\" is higher priority (but I can't say for sure if \"force\" is the common case).",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T11:54:03Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770535312",
            "id": 1770535312,
            "in_reply_to_id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piDmQ",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320835493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770535312/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T11:54:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770535312",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770539796"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770539796"
                }
            },
            "author_association": "MEMBER",
            "body": "`rm` is a high level interface as it gets; something a user literally has to type and execute by hand, and does regularly.\r\n\r\nWe don't have a _requirement_ to match shell tools, I just think it's a good idea, especially with one that's as simple and as prolific as `rm` and deviating from that in any way has a mental cost.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T12:18:31Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770539796",
            "id": 1770539796,
            "in_reply_to_id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piEsU",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320840056,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770539796/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T12:18:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770539796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770545163"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770545163"
                }
            },
            "author_association": "MEMBER",
            "body": "> as prolific as `rm` and deviating from that in any way has a mental cost.\r\n\r\nfs-extra is downloaded 93 million times per week: https://www.npmjs.com/package/fs-extra\r\n\r\npeople prefer the \"don't bug me\" DWIM behavior. and because Nvim is an editor, DWIM is a central tenet.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T12:37:09Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770545163",
            "id": 1770545163,
            "in_reply_to_id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piGAL",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320846238,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770545163/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T12:37:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770545163",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770548652"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770548652"
                }
            },
            "author_association": "MEMBER",
            "body": "Nothing indicates the popularity of that library because of the `remove()` function. It's probably a dependency in a few js frameworks that probably make up a good portion of that number.\n\nI could similarly correlate how much people like the `rm` command to how much Linux is installed, which would be much greater than 93 million.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T12:54:53Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770548652",
            "id": 1770548652,
            "in_reply_to_id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piG2s",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320849307,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770548652/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T12:54:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770548652",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770550177"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770550177"
                }
            },
            "author_association": "MEMBER",
            "body": "They are both signals. In our case, we're building an ergonomic API, not a CLI.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T13:03:20Z",
            "diff_hunk": "@@ -609,4 +611,55 @@ function M.normalize(path, opts)\n   return path\n end\n \n+--- @param path string Path to remove\n+--- @param ty string type of path\n+--- @param recursive? boolean\n+--- @param force? boolean\n+local function rm(path, ty, recursive, force)\n+  --- @diagnostic disable-next-line:no-unknown\n+  local rm_fn\n+\n+  if ty == 'directory' then\n+    if recursive then\n+      for file, fty in vim.fs.dir(path) do\n+        rm(M.joinpath(path, file), fty, true, force)\n+      end\n+    elseif not force then\n+      error(string.format('%s is a directory', path))\n+    end\n+\n+    rm_fn = uv.fs_rmdir\n+  else\n+    rm_fn = uv.fs_unlink\n+  end\n+\n+  local ret, err, errnm = rm_fn(path)\n+  if ret == nil and (not force or errnm ~= 'ENOENT') then\n+    error(err)\n+  end\n+end\n+\n+--- @class vim.fs.rm.Opts\n+--- @inlinedoc\n+---\n+--- Remove directories and their contents recursively\n+--- @field recursive? boolean\n+---\n+--- Ignore nonexistent files and arguments\n+--- @field force? boolean",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770550177",
            "id": 1770550177,
            "in_reply_to_id": 1770530158,
            "line": 649,
            "node_id": "PRRC_kwDOAPphoM5piHOh",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 649,
            "original_position": 121,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 121,
            "pull_request_review_id": 2320850831,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770550177/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-09-22T13:03:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770550177",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770564768"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770564768"
                }
            },
            "author_association": "MEMBER",
            "body": "in these pcall() cases I think we need `force = false`, otherwise they never fail.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T14:17:06Z",
            "diff_hunk": "@@ -759,58 +759,21 @@ function M.assert_visible(bufnr, visible)\n   end\n end\n \n---- @param path string\n-local function do_rmdir(path)\n-  local stat = uv.fs_stat(path)\n-  if stat == nil then\n-    return\n-  end\n-  if stat.type ~= 'directory' then\n-    error(string.format('rmdir: not a directory: %s', path))\n-  end\n-  for file in vim.fs.dir(path) do\n-    if file ~= '.' and file ~= '..' then\n-      local abspath = path .. '/' .. file\n-      if t.isdir(abspath) then\n-        do_rmdir(abspath) -- recurse\n-      else\n-        local ret, err = os.remove(abspath)\n-        if not ret then\n-          if not session then\n-            error('os.remove: ' .. err)\n-          else\n-            -- Try Nvim delete(): it handles `readonly` attribute on Windows,\n-            -- and avoids Lua cross-version/platform incompatibilities.\n-            if -1 == M.call('delete', abspath) then\n-              local hint = (is_os('win') and ' (hint: try :%bwipeout! before rmdir())' or '')\n-              error('delete() failed' .. hint .. ': ' .. abspath)\n-            end\n-          end\n-        end\n-      end\n-    end\n-  end\n-  local ret, err = uv.fs_rmdir(path)\n-  if not ret then\n-    error('luv.fs_rmdir(' .. path .. '): ' .. err)\n-  end\n-end\n-\n local start_dir = uv.cwd()\n \n function M.rmdir(path)\n-  local ret, _ = pcall(do_rmdir, path)\n+  local ret, _ = pcall(vim.fs.rm, path, { recursive = true, force = true })\n   if not ret and is_os('win') then\n     -- Maybe \"Permission denied\"; try again after changing the nvim\n     -- process to the top-level directory.\n     M.command([[exe 'cd '.fnameescape(']] .. start_dir .. \"')\")\n-    ret, _ = pcall(do_rmdir, path)\n+    ret, _ = pcall(vim.fs.rm, path, { recursive = true, force = true })\n   end\n   -- During teardown, the nvim process may not exit quickly enough, then rmdir()\n   -- will fail (on Windows).\n   if not ret then -- Try again.\n     sleep(1000)\n-    do_rmdir(path)\n+    vim.fs.rm(path, { recursive = true, force = true })",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770564768",
            "id": 1770564768,
            "line": 776,
            "node_id": "PRRC_kwDOAPphoM5piKyg",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 776,
            "original_position": 58,
            "original_start_line": 765,
            "path": "test/functional/testnvim.lua",
            "position": 58,
            "pull_request_review_id": 2320864235,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770564768/reactions"
            },
            "side": "RIGHT",
            "start_line": 765,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-22T14:17:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770564768",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30457#discussion_r1770570007"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30457"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770570007"
                }
            },
            "author_association": "MEMBER",
            "body": "`force` only catches `ENOENT`. It will error for other cases.",
            "commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "created_at": "2024-09-22T14:42:02Z",
            "diff_hunk": "@@ -759,58 +759,21 @@ function M.assert_visible(bufnr, visible)\n   end\n end\n \n---- @param path string\n-local function do_rmdir(path)\n-  local stat = uv.fs_stat(path)\n-  if stat == nil then\n-    return\n-  end\n-  if stat.type ~= 'directory' then\n-    error(string.format('rmdir: not a directory: %s', path))\n-  end\n-  for file in vim.fs.dir(path) do\n-    if file ~= '.' and file ~= '..' then\n-      local abspath = path .. '/' .. file\n-      if t.isdir(abspath) then\n-        do_rmdir(abspath) -- recurse\n-      else\n-        local ret, err = os.remove(abspath)\n-        if not ret then\n-          if not session then\n-            error('os.remove: ' .. err)\n-          else\n-            -- Try Nvim delete(): it handles `readonly` attribute on Windows,\n-            -- and avoids Lua cross-version/platform incompatibilities.\n-            if -1 == M.call('delete', abspath) then\n-              local hint = (is_os('win') and ' (hint: try :%bwipeout! before rmdir())' or '')\n-              error('delete() failed' .. hint .. ': ' .. abspath)\n-            end\n-          end\n-        end\n-      end\n-    end\n-  end\n-  local ret, err = uv.fs_rmdir(path)\n-  if not ret then\n-    error('luv.fs_rmdir(' .. path .. '): ' .. err)\n-  end\n-end\n-\n local start_dir = uv.cwd()\n \n function M.rmdir(path)\n-  local ret, _ = pcall(do_rmdir, path)\n+  local ret, _ = pcall(vim.fs.rm, path, { recursive = true, force = true })\n   if not ret and is_os('win') then\n     -- Maybe \"Permission denied\"; try again after changing the nvim\n     -- process to the top-level directory.\n     M.command([[exe 'cd '.fnameescape(']] .. start_dir .. \"')\")\n-    ret, _ = pcall(do_rmdir, path)\n+    ret, _ = pcall(vim.fs.rm, path, { recursive = true, force = true })\n   end\n   -- During teardown, the nvim process may not exit quickly enough, then rmdir()\n   -- will fail (on Windows).\n   if not ret then -- Try again.\n     sleep(1000)\n-    do_rmdir(path)\n+    vim.fs.rm(path, { recursive = true, force = true })",
            "html_url": "https://github.com/neovim/neovim/pull/30457#discussion_r1770570007",
            "id": 1770570007,
            "in_reply_to_id": 1770564768,
            "line": 776,
            "node_id": "PRRC_kwDOAPphoM5piMEX",
            "original_commit_id": "63722d848327212a99a1924b47c74c003ffc1561",
            "original_line": 776,
            "original_position": 58,
            "original_start_line": 765,
            "path": "test/functional/testnvim.lua",
            "position": 58,
            "pull_request_review_id": 2320868630,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770570007/reactions"
            },
            "side": "RIGHT",
            "start_line": 765,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-09-22T14:42:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1770570007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This should already be effectively tested since we use it in `testnvim.lua` and `lsp/util.lua`",
            "created_at": "2024-09-21T15:43:12Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2365231461",
            "id": 2365231461,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6M-pFl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365231461/reactions"
            },
            "updated_at": "2024-09-21T15:43:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2365231461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes I did consider this, but for now I opted for the more simple naive route whilst keeping the door open for these kinds of changes. `vim.fs.rm()` has an `opts` argument with no return value, so the door is pretty wide open.\r\n\r\nI do a lot of dev-ops stuff at work, and in my personal experience `rm` has always sufficed. If there has ever been any issues with things like failures because of permissions, etc, then it always means there's a nuanced problem that needs special attention. Anyway, we can wait for a concrete usecase. This is only a wrapper on `vim.fs.dir` and `uv.fs_unlink|rmdir`, so it may be that more complex usecases are better served by using those functions directly.",
            "created_at": "2024-09-22T12:03:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2366751783",
            "id": 2366751783,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6NEcQn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366751783/reactions"
            },
            "updated_at": "2024-09-22T12:03:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366751783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Makes sense. But the choice of `force:boolean` vs `on_error:function` is somewhat of a one-way door, because introducing `on_error` later will \"conflict\" with `force`. It's cheap to choose `on_error` now.\r\n\r\n> may be that more complex usecases are better served by using those functions directly\r\n\r\nThat's true, but we have the opportunity to improve patterns. `on_error` pattern is something derived from my own experience, which is that the lack of a \"collect\" usually means developers don't bother to collect messages because it's too much work. Providing `on_error` fixes that.\r\n\r\nThis PR isn't blocked though.",
            "created_at": "2024-09-22T12:16:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2366758384",
            "id": 2366758384,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6NEd3w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366758384/reactions"
            },
            "updated_at": "2024-09-22T12:17:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366758384",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Makes sense. But the choice of force:boolean vs on_error:function is somewhat of a one-way door, because introducing on_error later will \"conflict\" with force. It's cheap to choose on_error now.\r\n\r\n`force` only ignores `ENOENT` errors (though this is up for discussion) so it would quite easy for these to work together, we just need to define which one gets priority, and I'd imagine `on_error` gets processed **after** `force`. Otherwise, we can say \"`force` is ignored if `on_error` is provided\". I don't think it matters either way.",
            "created_at": "2024-09-22T12:29:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2366765737",
            "id": 2366765737,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6NEfqp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366765737/reactions"
            },
            "updated_at": "2024-09-22T12:29:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366765737",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Otherwise, we can say \"`force` is ignored if `on_error` is provided\".\r\n\r\nthat is what i was trying to avoid. at that point, `force` is just legacy.",
            "created_at": "2024-09-22T12:37:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2366768353",
            "id": 2366768353,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6NEgTh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366768353/reactions"
            },
            "updated_at": "2024-09-22T12:37:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366768353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not really. Providing on_error is more tedious than providing a boolean option. There's nothing wrong with having some overlap.\n\nHowever it seems for you `rm` was a bad choice and you would prefer we simply mimic the JS equivalent.",
            "created_at": "2024-09-22T13:17:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2366785430",
            "id": 2366785430,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6NEkeW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366785430/reactions"
            },
            "updated_at": "2024-09-22T13:17:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366785430",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> it seems for you `rm` was a bad choice and you would prefer we simply mimic the JS equivalent.\r\n\r\nI don't know what you mean. I approved the PR and am glad to see it. I'd also like to find patterns that we can use for all parts of `vim.fs` and I don't think we plan to mimic shell tools in other parts of `vim.fs`, though using shell tools to inform us is a good starting point.\r\n\r\nfs-extra has a lot of bad decisions, but I've noticed that people really like the default \"don't bug me\" behavior of its `remove()`, and I've also noticed that is usually what programmers want when they delete a file (bubbling up a \"file doesn't exist\" after deletion is rarely useful information).\r\n\r\nWhen it comes to writing editor plugins, DWIM is important and useful.\r\n\r\n",
            "created_at": "2024-09-22T13:57:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/30457#issuecomment-2366802646",
            "id": 2366802646,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
            "node_id": "IC_kwDOAPphoM6NEorW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366802646/reactions"
            },
            "updated_at": "2024-09-22T14:03:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2366802646",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30457/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30457/commits",
    "created_at": "2024-09-21T15:24:09Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30457.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:feat/fsrm",
        "ref": "feat/fsrm",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-09-22T14:05:26Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 277197,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "63722d848327212a99a1924b47c74c003ffc1561",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30457",
    "id": 2084567924,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30457",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "file metadata/attributes, filenames, path manipulation",
            "id": 3386070083,
            "name": "filesystem",
            "node_id": "LA_kwDOAPphoM7J01RD",
            "url": "https://api.github.com/repos/neovim/neovim/labels/filesystem"
        }
    ],
    "locked": false,
    "merge_commit_sha": "511b991e66892b4bb8176ce64c0e8fefb300f638",
    "merged_at": "2024-09-22T14:05:24Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 53,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2024-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 60,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-09-23T13:48:25Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM58P_t0",
    "number": 30457,
    "patch_url": "https://github.com/neovim/neovim/pull/30457.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30457/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/63722d848327212a99a1924b47c74c003ffc1561",
    "title": "feat(fs.lua): add vim.fs.rm()",
    "updated_at": "2024-09-23T12:56:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30457",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}