{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20779/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20779/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20779"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20779"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20779/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20779"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/f5bac69330f7eb7db3765dfdcc63c815c6a200cc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5077,
            "forks_count": 5077,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-26T01:26:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247838,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-26T01:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72074,
            "watchers_count": 72074,
            "web_commit_signoff_required": false
        },
        "sha": "2f9b94a26836ecb081c717e23913f5b6576cce99",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "### Description\r\n\r\nExtend `vim.lsp.start` to handle multi-root workspaces by utilizing \"workspace_markers\"\r\n\r\nstate diagram of this workflow\r\n\r\n<p align=\"center\">\r\n\t<img height=\"600\" src=\"https://user-images.githubusercontent.com/59826753/197349124-4cc2faa4-2fcc-4afe-a825-2632a045716c.svg\">\r\n</p>\r\n\r\n### How to test\r\n\r\ncreate `ftplugin/lua.lua` and add the following\r\n<details>\r\n<summary>expand</summary>\r\n\r\n```lua\r\nlocal install_prefix = vim.fn.stdpath \"data\" .. \"/mason/bin\"\r\nlocal bin_name = install_prefix .. \"/\" .. \"lua-language-server\"\r\nlocal cmd = { bin_name }\r\n\r\nlocal root_files = {\r\n  \".luarc.json\",\r\n  \".luacheckrc\",\r\n  \".stylua.toml\",\r\n  \"stylua.toml\",\r\n  \"selene.toml\",\r\n  \"lua/\",\r\n  \".git\",\r\n}\r\n\r\nlocal config = {\r\n  cmd = cmd,\r\n  name = \"sumneko_lua\",\r\n  filetypes = { \"lua\" },\r\n  workspace_markers = root_files,\r\n  single_file_support = true,\r\n  -- log_level = vim.lsp.protocol.MessageType.Warning,\r\n  settings = {\r\n    Lua = {\r\n      telemetry = { enable = false },\r\n      library = {\r\n        vim.fn.expand \"$VIMRUNTIME\",\r\n      },\r\n      runtime = {\r\n        version = \"LuaJIT\",\r\n        special = {\r\n          reload = \"require\",\r\n        },\r\n      },\r\n      diagnostics = {\r\n        globals = { \"vim\", \"packer_plugins\" },\r\n      },\r\n      maxPreload = 5000,\r\n      preloadFileSize = 10000,\r\n    },\r\n  },\r\n  -- on_attach = require(\"user.lsp\").common_on_attach,\r\n  -- on_init = require(\"user.lsp\").common_on_init,\r\n  -- on_exit = require(\"user.lsp\").common_on_exit,\r\n  -- capabilities = require(\"user.lsp\").common_capabilities(),\r\n  flags = {\r\n    debounce_text_changes = 150,\r\n  },\r\n}\r\n\r\nvim.lsp.start(config, {})\r\n```\r\n\r\n</details>\r\n\r\nnow start neovim in your config folder for example, and then try to open different lua files:\r\n- if the file is inside `vim.fn.stdpath(\"config\")` then you won't notice anything new\r\n- if the file is outside `vim.fn.stdpath(\"config\")` then you will be prompted to add it to the\r\ncurrent workspace folders, see the chart above for the full workflow.\r\n\r\n\r\n### Background\r\n\r\n`vim.lsp.start()` can re-use a client, but is not sending `workspace/didChangeWorkspaceFolders`, this PR makes that possible\r\n\r\n- previous work\r\n  - https://github.com/neovim/neovim/pull/16369\r\n  - https://github.com/neovim/neovim/pull/17149\r\n- currently related work\r\n  - https://github.com/neovim/neovim/pull/18839\r\n\r\n### TODOs\r\n\r\n- [ ] is `workspace_markers` a good name?\r\n- [ ] should `workspace_markers` be a config key for `lsp.start_client` or leave it as an opt in `lsp.start`\r\nfor now?\r\n- [ ] do we need a deprecation notice for `vim.lsp.buf.{add,remove,list}_workspace_folders`?\r\n",
    "closed_at": "2023-12-22T11:33:04Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20779#discussion_r1002669778"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20779"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1002669778"
                }
            },
            "author_association": "MEMBER",
            "body": "Just FYI: This would be broken if `vim.ui.input` would have a async implementation. \r\n\r\nBut see my overall review comment",
            "commit_id": "f5bac69330f7eb7db3765dfdcc63c815c6a200cc",
            "created_at": "2022-10-23T08:54:50Z",
            "diff_hunk": "@@ -808,6 +808,72 @@ function lsp.client()\n   error()\n end\n \n+---@private\n+---Resolve a workspace for a client\n+---\n+---@param markers string[] list of search patterns\n+---@param bufnr number\n+---@return table|nil list of `{ uri:string, name: string }`\n+local function resolve_workspace(markers, bufnr)\n+  if not markers then\n+    return\n+  end\n+  bufnr = resolve_bufnr(bufnr)\n+  local bufname = vim.api.nvim_buf_get_name(bufnr)\n+  local buf_path = vim.fs.dirname(bufname)\n+  local anchor =\n+    vim.fs.find(markers, { path = buf_path, stop = vim.loop.os_homedir(), upward = true })[1]\n+  if not anchor then\n+    return\n+  end\n+  local root_dir = vim.fs.dirname(anchor)\n+  if not root_dir then\n+    return\n+  end\n+  local ws = {\n+    name = root_dir,\n+    uri = vim.uri_from_fname(root_dir),\n+  }\n+  return ws\n+end\n+\n+---@private\n+---Returns true if a workspace marker for a given client is found\n+---\n+---@param client table see |vim.lsp.client|\n+---@param config table\n+---@param bufnr number\n+---@return boolean|nil\n+local function should_reuse_client(client, config, bufnr)\n+  if client.name ~= config.name then\n+    return\n+  end\n+  bufnr = resolve_bufnr(bufnr)\n+  local ws = resolve_workspace(config.workspace_markers, bufnr)\n+  if not ws then\n+    return\n+  end\n+  for _, folder in ipairs(client.workspace_folders or {}) do\n+    if ws.uri == folder.uri then\n+      local _ = log.debug() and log.debug('found existing workspace_folders for', ws.uri)\n+      return true\n+    end\n+  end\n+  local prompt_opts = {\n+    prompt = string.format('add %s to current workspaces?\\n[y]es or [n]o:\\t', ws.uri),\n+    default = 'n',\n+  }\n+  local should_add\n+  vim.ui.input(prompt_opts, function(input)\n+    if input == 'y' or input == 'Y' or input == 'yes' or input == 'Yes' then\n+      should_add = lsp.add_workspace_folder(ws, { id = client.id })\n+    end\n+    -- TODO: is there another way to dismiss the prompt?\n+    api.nvim_command('redraw')\n+  end)\n+  return should_add",
            "html_url": "https://github.com/neovim/neovim/pull/20779#discussion_r1002669778",
            "id": 1002669778,
            "line": 874,
            "node_id": "PRRC_kwDOAPphoM47w4bS",
            "original_commit_id": "f5bac69330f7eb7db3765dfdcc63c815c6a200cc",
            "original_line": 874,
            "original_position": 67,
            "original_start_line": 866,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 67,
            "pull_request_review_id": 1152265954,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20779",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1002669778/reactions"
            },
            "side": "RIGHT",
            "start_line": 866,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-10-23T08:54:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1002669778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20779#discussion_r1002698791"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20779"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1002698791"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The original logic existed in `vim.lsp.buf.add_workspace_folder`.\r\n\r\nI just switched it from `input()` to `vim.ui.input`, but yeah I was wonder if it's a better idea to use `vim.ui.select` instead.",
            "commit_id": "f5bac69330f7eb7db3765dfdcc63c815c6a200cc",
            "created_at": "2022-10-23T12:01:50Z",
            "diff_hunk": "@@ -808,6 +808,72 @@ function lsp.client()\n   error()\n end\n \n+---@private\n+---Resolve a workspace for a client\n+---\n+---@param markers string[] list of search patterns\n+---@param bufnr number\n+---@return table|nil list of `{ uri:string, name: string }`\n+local function resolve_workspace(markers, bufnr)\n+  if not markers then\n+    return\n+  end\n+  bufnr = resolve_bufnr(bufnr)\n+  local bufname = vim.api.nvim_buf_get_name(bufnr)\n+  local buf_path = vim.fs.dirname(bufname)\n+  local anchor =\n+    vim.fs.find(markers, { path = buf_path, stop = vim.loop.os_homedir(), upward = true })[1]\n+  if not anchor then\n+    return\n+  end\n+  local root_dir = vim.fs.dirname(anchor)\n+  if not root_dir then\n+    return\n+  end\n+  local ws = {\n+    name = root_dir,\n+    uri = vim.uri_from_fname(root_dir),\n+  }\n+  return ws\n+end\n+\n+---@private\n+---Returns true if a workspace marker for a given client is found\n+---\n+---@param client table see |vim.lsp.client|\n+---@param config table\n+---@param bufnr number\n+---@return boolean|nil\n+local function should_reuse_client(client, config, bufnr)\n+  if client.name ~= config.name then\n+    return\n+  end\n+  bufnr = resolve_bufnr(bufnr)\n+  local ws = resolve_workspace(config.workspace_markers, bufnr)\n+  if not ws then\n+    return\n+  end\n+  for _, folder in ipairs(client.workspace_folders or {}) do\n+    if ws.uri == folder.uri then\n+      local _ = log.debug() and log.debug('found existing workspace_folders for', ws.uri)\n+      return true\n+    end\n+  end\n+  local prompt_opts = {\n+    prompt = string.format('add %s to current workspaces?\\n[y]es or [n]o:\\t', ws.uri),\n+    default = 'n',\n+  }\n+  local should_add\n+  vim.ui.input(prompt_opts, function(input)\n+    if input == 'y' or input == 'Y' or input == 'yes' or input == 'Yes' then\n+      should_add = lsp.add_workspace_folder(ws, { id = client.id })\n+    end\n+    -- TODO: is there another way to dismiss the prompt?\n+    api.nvim_command('redraw')\n+  end)\n+  return should_add",
            "html_url": "https://github.com/neovim/neovim/pull/20779#discussion_r1002698791",
            "id": 1002698791,
            "in_reply_to_id": 1002669778,
            "line": 874,
            "node_id": "PRRC_kwDOAPphoM47w_gn",
            "original_commit_id": "f5bac69330f7eb7db3765dfdcc63c815c6a200cc",
            "original_line": 874,
            "original_position": 67,
            "original_start_line": 866,
            "path": "runtime/lua/vim/lsp.lua",
            "position": 67,
            "pull_request_review_id": 1152299420,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20779",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1002698791/reactions"
            },
            "side": "RIGHT",
            "start_line": 866,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-10-23T12:01:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1002698791",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Please wait for comments from LSP folks before further work on this.",
            "created_at": "2022-10-23T05:36:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/20779#issuecomment-1288010193",
            "id": 1288010193,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20779",
            "node_id": "IC_kwDOAPphoM5MxXnR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1288010193/reactions"
            },
            "updated_at": "2022-10-23T05:36:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1288010193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> This would break existing uses of `vim.lsp.start`. We shouldn't do that unless there is a _very_ good reason.\r\n\r\nIt's definitely not my intent to break backwards compatibility for `vim.lsp.start`, since it should be fairly straightforward to maintain behavior for `reuse_client` by doing a check for `root_dir` as well.\r\n \r\n>     * If `reuse_client` returns true, `vim.lsp.start` checks if the `root_dir` or `workspace_folders` from the `config` are different then the one from the client.\r\n\r\nJust to clarify, `root_dir` is a _string_ in `vim.lsp` it's only lspconfig that defines it internally as function. \r\nThis means that the current `reuse-client` will always return as long as the client name is the same (unless there's a way to dynamically update `root_dir` that I'm not seeing)  \r\n\r\n> This allows users to provide a different `reuse_client` function - e.g. if a client is known to handle multiple projects with a single language server instance, they could call `start` with something like `reuse_client = function(client, config) return client.name == config.name) end`.\r\n\r\nthe way I see it there are 3 alternatives for `reuse_client`\r\n1. extend it while maintaining backwards compat\r\n2. leave it alone, and hard-code the logic directly into `vim.lsp.start`\r\n3. leave it alone, and create another function to handle the new functionality\r\n\r\nI went with alternative (1) because it's the least friction imo, since (2) would leave implicit look-ups behind, which could possibly be expensive (think sshfs traversal), while choice (3) seems that'd be introducing yet another \"reuse\" function with a different name.\r\n\r\n> There also doesn't seem to be a reason to move the workspace folder functions from the `.buf` module to the `.lsp` module? I think I understand the motivation to add additional functions on the client, but it wouldn't be necessary either and increases the API surface further. Not sure if this is a win. \r\n\r\nWe need `{add,remove,list}_workspace_folders` API that works _per_ client and _regardless_ of the buffer, and #18839 only handles one part of that equation.\r\n\r\nOverall: I don't really have any strong opinions one way or another over what the API should _look_ like as long as it can cover the basic requirements :smiley:",
            "created_at": "2022-10-23T11:57:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/20779#issuecomment-1288095594",
            "id": 1288095594,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20779",
            "node_id": "IC_kwDOAPphoM5Mxsdq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1288095594/reactions"
            },
            "updated_at": "2022-10-23T11:57:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1288095594",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing this as it's stale and as mentioned in https://github.com/neovim/neovim/pull/20779#pullrequestreview-1152265645 would need a different design to account for BWC",
            "created_at": "2023-12-22T11:33:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/20779#issuecomment-1867579937",
            "id": 1867579937,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20779",
            "node_id": "IC_kwDOAPphoM5vUQIh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867579937/reactions"
            },
            "updated_at": "2023-12-22T11:33:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867579937",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20779/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20779/commits",
    "created_at": "2022-10-22T15:40:52Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20779.diff",
    "draft": true,
    "head": {
        "label": "kylo252:lsp-workspaces",
        "ref": "lsp-workspaces",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/kylo252/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/kylo252/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/kylo252/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/kylo252/neovim/branches{/branch}",
            "clone_url": "https://github.com/kylo252/neovim.git",
            "collaborators_url": "https://api.github.com/repos/kylo252/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/kylo252/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/kylo252/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/kylo252/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/kylo252/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/kylo252/neovim/contributors",
            "created_at": "2021-08-11T10:54:53Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/kylo252/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/kylo252/neovim/downloads",
            "events_url": "https://api.github.com/repos/kylo252/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/kylo252/neovim/forks",
            "full_name": "kylo252/neovim",
            "git_commits_url": "https://api.github.com/repos/kylo252/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/kylo252/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/kylo252/neovim/git/tags{/sha}",
            "git_url": "git://github.com/kylo252/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/kylo252/neovim/hooks",
            "html_url": "https://github.com/kylo252/neovim",
            "id": 394956966,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/kylo252/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/kylo252/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/kylo252/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/kylo252/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/kylo252/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/kylo252/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/kylo252/neovim/merges",
            "milestones_url": "https://api.github.com/repos/kylo252/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzOTQ5NTY5NjY=",
            "notifications_url": "https://api.github.com/repos/kylo252/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/kylo252/neovim/pulls{/number}",
            "pushed_at": "2023-07-18T12:59:10Z",
            "releases_url": "https://api.github.com/repos/kylo252/neovim/releases{/id}",
            "size": 242993,
            "ssh_url": "git@github.com:kylo252/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/kylo252/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/kylo252/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/kylo252/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/kylo252/neovim/subscription",
            "svn_url": "https://github.com/kylo252/neovim",
            "tags_url": "https://api.github.com/repos/kylo252/neovim/tags",
            "teams_url": "https://api.github.com/repos/kylo252/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/kylo252/neovim/git/trees{/sha}",
            "updated_at": "2021-08-11T10:54:56Z",
            "url": "https://api.github.com/repos/kylo252/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "f5bac69330f7eb7db3765dfdcc63c815c6a200cc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
            "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
            "followers_url": "https://api.github.com/users/kylo252/followers",
            "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/kylo252",
            "id": 59826753,
            "login": "kylo252",
            "node_id": "MDQ6VXNlcjU5ODI2NzUz",
            "organizations_url": "https://api.github.com/users/kylo252/orgs",
            "received_events_url": "https://api.github.com/users/kylo252/received_events",
            "repos_url": "https://api.github.com/users/kylo252/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/kylo252"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20779",
    "id": 1096225881,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20779",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "cdacac8d839c89e3e17895a973a2e1d9bc5d8609",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5BVxRZ",
    "number": 20779,
    "patch_url": "https://github.com/neovim/neovim/pull/20779.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20779/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/f5bac69330f7eb7db3765dfdcc63c815c6a200cc",
    "title": "feat(lsp): handle multi-root workspaces",
    "updated_at": "2023-12-22T11:33:05Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20779",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
        "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
        "followers_url": "https://api.github.com/users/kylo252/followers",
        "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
        "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/kylo252",
        "id": 59826753,
        "login": "kylo252",
        "node_id": "MDQ6VXNlcjU5ODI2NzUz",
        "organizations_url": "https://api.github.com/users/kylo252/orgs",
        "received_events_url": "https://api.github.com/users/kylo252/received_events",
        "repos_url": "https://api.github.com/users/kylo252/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/kylo252"
    }
}