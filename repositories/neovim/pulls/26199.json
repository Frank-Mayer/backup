{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26199/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26199/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26199"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26199"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26199/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26199"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a298a090e8a08ddb6614e33a91fda65a2a566881"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5077,
            "forks_count": 5077,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-26T01:26:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247838,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-26T01:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72074,
            "watchers_count": 72074,
            "web_commit_signoff_required": false
        },
        "sha": "0da62b579fbd3a21c7ab808f1bb10263d469a1e9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "addition of documentation for lpeg and re in lua.txt file for issue #26194 ",
    "closed_at": "2023-12-26T01:48:10Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26199#discussion_r1404829935"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404829935"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nVIM.RE                                                              *lua-re*\r\n```\r\nDuplicate tag.",
            "commit_id": "a298a090e8a08ddb6614e33a91fda65a2a566881",
            "created_at": "2023-11-25T10:06:07Z",
            "diff_hunk": "@@ -573,10 +573,180 @@ VIM.LPEG                                                            *lua-lpeg*\n \n                                                              *vim.lpeg* *vim.re*\n The Lpeg library for parsing expression grammars is being included as\n-`vim.lpeg` (https://www.inf.puc-rio.br/~roberto/lpeg/). In addition, its regex-like\n-interface is available as `vim.re` (https://www.inf.puc-rio.br/~roberto/lpeg/re.html).\n+`vim.lpeg` (https://www.inf.puc-rio.br/~roberto/lpeg/).\n+==============================================================================\n+\n+vim.lpeg.Pattern                                             *vim.lpeg.Pattern*\n+    A pattern-matching library for Lua based on Parsing Expression Grammars (PEGs).\n+\n+vim.lpeg.match(pattern, subject, init)           *vim.lpeg.match()*\n+    Matches the given `pattern` against the `subject` string.\n+\n+    Parameters: ~\n+      • {pattern} (vim.lpeg.Pattern) The pattern to match.\n+      • {subject} (string) The input string to match against.\n+      • {init} (integer|nil) Optional starting position in the subject.\n+\n+vim.lpeg.R(...)                                                    *vim.lpeg.R()*\n+    Returns a pattern that matches any single character belonging to the given ranges.\n+\n+    Parameters: ~\n+      • {...} (string) Ranges of characters as strings.\n+\n+vim.lpeg.S(string)                                               *vim.lpeg.S()*\n+    Returns a pattern that matches any single character that appears in the given string.\n+\n+    Parameters: ~\n+      • {string} (string) The characters to match.\n+\n+vim.lpeg.P(value)                                                  *vim.lpeg.P()*\n+    Converts the given value into a proper pattern.\n+\n+    Parameters: ~\n+      • {value} (vim.lpeg.Pattern|string|integer|boolean|table|function) The value to convert.\n+\n+vim.lpeg.B(pattern)                                              *vim.lpeg.B()*\n+    Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n+\n+    Parameters: ~\n+      • {pattern} (vim.lpeg.Pattern) The preceding pattern.\n+\n+vim.lpeg.V(v)                                                         *vim.lpeg.V()*\n+    Creates a non-terminal (a variable) for a grammar.\n+\n+    Parameters: ~\n+      • {v} (string|integer) The rule index or name.\n+\n+vim.lpeg.locale(tab)                                          *vim.lpeg.locale()*\n+    Returns a table with patterns for matching character classes according to the current locale.\n+\n+    Parameters: ~\n+      • {tab} (table|nil) Optional table to create fields in.\n+\n+vim.lpeg.C(patt)                                                   *vim.lpeg.C()*\n+    Creates a simple capture, which captures the substring of the subject that matches `patt`.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+\n+vim.lpeg.Carg(n)                                                   *vim.lpeg.Carg()*\n+    Creates an argument capture.\n+\n+    Parameters: ~\n+      • {n} (integer) The index of the extra argument.\n+\n+vim.lpeg.Cb(name)                                                 *vim.lpeg.Cb()*\n+    Creates a back capture.\n+\n+    Parameters: ~\n+      • {name} (any) The name of the capture.\n+\n+vim.lpeg.Cc(...)                                                   *vim.lpeg.Cc()*\n+    Creates a constant capture.\n+\n+    Parameters: ~\n+      • {...} (any) Values to capture.\n+\n+vim.lpeg.Cf(patt, func)                                       *vim.lpeg.Cf()*\n+    Creates a fold capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to fold.\n+      • {func} (function) The fold function.\n+\n+vim.lpeg.Cg(patt, name)                                     *vim.lpeg.Cg()*\n+    Creates a group capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to group.\n+      • {name} (string|nil) The name of the group.\n+\n+vim.lpeg.Cp()                                                          *vim.lpeg.Cp()*\n+    Creates a position capture.\n+\n+vim.lpeg.Cs(patt)                                                  *vim.lpeg.Cs()*\n+    Creates a substitution capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+\n+vim.lpeg.Ct(patt)                                                  *vim.lpeg.Ct()*\n+    Creates a table capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern|'') The pattern to capture.\n+\n+vim.lpeg.Cmt(patt, fn)                                         *vim.lpeg.Cmt()*\n+    Creates a match-time capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+      • {fn} (function) The match-time function.\n+\n+vim.lpeg.version()                                                *vim.lpeg.version()*\n+    Returns a string with the running version of LPeg.\n+\n+vim.lpeg.setmaxstack(max)                                 *vim.lpeg.setmaxstack()*\n+    Sets a limit for the size of the backtrack stack used by LPeg.\n+\n+    Parameters: ~\n+      • {max} (integer) The maximum size of the stack.\n+\n+------------------------------------------------------------------------------\n+VIM.RE                                                              *lua-lpeg*",
            "html_url": "https://github.com/neovim/neovim/pull/26199#discussion_r1404829935",
            "id": 1404829935,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TvADv",
            "original_commit_id": "31381e66afd5156022cd402da129762191c71ea1",
            "original_line": 696,
            "original_position": 126,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1748811301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404829935/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T10:06:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404829935",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26199#discussion_r1404863944"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404863944"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                                                                     *vim.lpeg*\r\n```",
            "commit_id": "a298a090e8a08ddb6614e33a91fda65a2a566881",
            "created_at": "2023-11-25T12:08:16Z",
            "diff_hunk": "@@ -573,10 +573,180 @@ VIM.LPEG                                                            *lua-lpeg*\n \n                                                              *vim.lpeg* *vim.re*",
            "html_url": "https://github.com/neovim/neovim/pull/26199#discussion_r1404863944",
            "id": 1404863944,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TvIXI",
            "original_commit_id": "257b29d5df878f2a202d47390debd73c768ed117",
            "original_line": 574,
            "original_position": 2,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1748823497,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404863944/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T12:08:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404863944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26199#discussion_r1404864255"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404864255"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nVIM.RE                                                              *vim.re*\r\n```\r\n(and squash the commits; commit linter requires a space after the colon: `docs(lua): add docs for vim.lpeg, vim.re`)",
            "commit_id": "a298a090e8a08ddb6614e33a91fda65a2a566881",
            "created_at": "2023-11-25T12:09:19Z",
            "diff_hunk": "@@ -573,10 +573,180 @@ VIM.LPEG                                                            *lua-lpeg*\n \n                                                              *vim.lpeg* *vim.re*\n The Lpeg library for parsing expression grammars is being included as\n-`vim.lpeg` (https://www.inf.puc-rio.br/~roberto/lpeg/). In addition, its regex-like\n-interface is available as `vim.re` (https://www.inf.puc-rio.br/~roberto/lpeg/re.html).\n+`vim.lpeg` (https://www.inf.puc-rio.br/~roberto/lpeg/).\n+==============================================================================\n+\n+vim.lpeg.Pattern                                             *vim.lpeg.Pattern*\n+    A pattern-matching library for Lua based on Parsing Expression Grammars (PEGs).\n+\n+vim.lpeg.match(pattern, subject, init)           *vim.lpeg.match()*\n+    Matches the given `pattern` against the `subject` string.\n+\n+    Parameters: ~\n+      • {pattern} (vim.lpeg.Pattern) The pattern to match.\n+      • {subject} (string) The input string to match against.\n+      • {init} (integer|nil) Optional starting position in the subject.\n+\n+vim.lpeg.R(...)                                                    *vim.lpeg.R()*\n+    Returns a pattern that matches any single character belonging to the given ranges.\n+\n+    Parameters: ~\n+      • {...} (string) Ranges of characters as strings.\n+\n+vim.lpeg.S(string)                                               *vim.lpeg.S()*\n+    Returns a pattern that matches any single character that appears in the given string.\n+\n+    Parameters: ~\n+      • {string} (string) The characters to match.\n+\n+vim.lpeg.P(value)                                                  *vim.lpeg.P()*\n+    Converts the given value into a proper pattern.\n+\n+    Parameters: ~\n+      • {value} (vim.lpeg.Pattern|string|integer|boolean|table|function) The value to convert.\n+\n+vim.lpeg.B(pattern)                                              *vim.lpeg.B()*\n+    Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n+\n+    Parameters: ~\n+      • {pattern} (vim.lpeg.Pattern) The preceding pattern.\n+\n+vim.lpeg.V(v)                                                         *vim.lpeg.V()*\n+    Creates a non-terminal (a variable) for a grammar.\n+\n+    Parameters: ~\n+      • {v} (string|integer) The rule index or name.\n+\n+vim.lpeg.locale(tab)                                          *vim.lpeg.locale()*\n+    Returns a table with patterns for matching character classes according to the current locale.\n+\n+    Parameters: ~\n+      • {tab} (table|nil) Optional table to create fields in.\n+\n+vim.lpeg.C(patt)                                                   *vim.lpeg.C()*\n+    Creates a simple capture, which captures the substring of the subject that matches `patt`.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+\n+vim.lpeg.Carg(n)                                                   *vim.lpeg.Carg()*\n+    Creates an argument capture.\n+\n+    Parameters: ~\n+      • {n} (integer) The index of the extra argument.\n+\n+vim.lpeg.Cb(name)                                                 *vim.lpeg.Cb()*\n+    Creates a back capture.\n+\n+    Parameters: ~\n+      • {name} (any) The name of the capture.\n+\n+vim.lpeg.Cc(...)                                                   *vim.lpeg.Cc()*\n+    Creates a constant capture.\n+\n+    Parameters: ~\n+      • {...} (any) Values to capture.\n+\n+vim.lpeg.Cf(patt, func)                                       *vim.lpeg.Cf()*\n+    Creates a fold capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to fold.\n+      • {func} (function) The fold function.\n+\n+vim.lpeg.Cg(patt, name)                                     *vim.lpeg.Cg()*\n+    Creates a group capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to group.\n+      • {name} (string|nil) The name of the group.\n+\n+vim.lpeg.Cp()                                                          *vim.lpeg.Cp()*\n+    Creates a position capture.\n+\n+vim.lpeg.Cs(patt)                                                  *vim.lpeg.Cs()*\n+    Creates a substitution capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+\n+vim.lpeg.Ct(patt)                                                  *vim.lpeg.Ct()*\n+    Creates a table capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern|'') The pattern to capture.\n+\n+vim.lpeg.Cmt(patt, fn)                                         *vim.lpeg.Cmt()*\n+    Creates a match-time capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+      • {fn} (function) The match-time function.\n+\n+vim.lpeg.version()                                                *vim.lpeg.version()*\n+    Returns a string with the running version of LPeg.\n+\n+vim.lpeg.setmaxstack(max)                                 *vim.lpeg.setmaxstack()*\n+    Sets a limit for the size of the backtrack stack used by LPeg.\n+\n+    Parameters: ~\n+      • {max} (integer) The maximum size of the stack.\n+\n+------------------------------------------------------------------------------\n+VIM.RE                                                              *lua-re*",
            "html_url": "https://github.com/neovim/neovim/pull/26199#discussion_r1404864255",
            "id": 1404864255,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TvIb_",
            "original_commit_id": "257b29d5df878f2a202d47390debd73c768ed117",
            "original_line": 696,
            "original_position": 126,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1748823606,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404864255/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T12:09:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404864255",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26199#discussion_r1404865044"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26199"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404865044"
                }
            },
            "author_association": "NONE",
            "body": "okay let me fix that",
            "commit_id": "a298a090e8a08ddb6614e33a91fda65a2a566881",
            "created_at": "2023-11-25T12:12:15Z",
            "diff_hunk": "@@ -573,10 +573,180 @@ VIM.LPEG                                                            *lua-lpeg*\n \n                                                              *vim.lpeg* *vim.re*\n The Lpeg library for parsing expression grammars is being included as\n-`vim.lpeg` (https://www.inf.puc-rio.br/~roberto/lpeg/). In addition, its regex-like\n-interface is available as `vim.re` (https://www.inf.puc-rio.br/~roberto/lpeg/re.html).\n+`vim.lpeg` (https://www.inf.puc-rio.br/~roberto/lpeg/).\n+==============================================================================\n+\n+vim.lpeg.Pattern                                             *vim.lpeg.Pattern*\n+    A pattern-matching library for Lua based on Parsing Expression Grammars (PEGs).\n+\n+vim.lpeg.match(pattern, subject, init)           *vim.lpeg.match()*\n+    Matches the given `pattern` against the `subject` string.\n+\n+    Parameters: ~\n+      • {pattern} (vim.lpeg.Pattern) The pattern to match.\n+      • {subject} (string) The input string to match against.\n+      • {init} (integer|nil) Optional starting position in the subject.\n+\n+vim.lpeg.R(...)                                                    *vim.lpeg.R()*\n+    Returns a pattern that matches any single character belonging to the given ranges.\n+\n+    Parameters: ~\n+      • {...} (string) Ranges of characters as strings.\n+\n+vim.lpeg.S(string)                                               *vim.lpeg.S()*\n+    Returns a pattern that matches any single character that appears in the given string.\n+\n+    Parameters: ~\n+      • {string} (string) The characters to match.\n+\n+vim.lpeg.P(value)                                                  *vim.lpeg.P()*\n+    Converts the given value into a proper pattern.\n+\n+    Parameters: ~\n+      • {value} (vim.lpeg.Pattern|string|integer|boolean|table|function) The value to convert.\n+\n+vim.lpeg.B(pattern)                                              *vim.lpeg.B()*\n+    Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n+\n+    Parameters: ~\n+      • {pattern} (vim.lpeg.Pattern) The preceding pattern.\n+\n+vim.lpeg.V(v)                                                         *vim.lpeg.V()*\n+    Creates a non-terminal (a variable) for a grammar.\n+\n+    Parameters: ~\n+      • {v} (string|integer) The rule index or name.\n+\n+vim.lpeg.locale(tab)                                          *vim.lpeg.locale()*\n+    Returns a table with patterns for matching character classes according to the current locale.\n+\n+    Parameters: ~\n+      • {tab} (table|nil) Optional table to create fields in.\n+\n+vim.lpeg.C(patt)                                                   *vim.lpeg.C()*\n+    Creates a simple capture, which captures the substring of the subject that matches `patt`.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+\n+vim.lpeg.Carg(n)                                                   *vim.lpeg.Carg()*\n+    Creates an argument capture.\n+\n+    Parameters: ~\n+      • {n} (integer) The index of the extra argument.\n+\n+vim.lpeg.Cb(name)                                                 *vim.lpeg.Cb()*\n+    Creates a back capture.\n+\n+    Parameters: ~\n+      • {name} (any) The name of the capture.\n+\n+vim.lpeg.Cc(...)                                                   *vim.lpeg.Cc()*\n+    Creates a constant capture.\n+\n+    Parameters: ~\n+      • {...} (any) Values to capture.\n+\n+vim.lpeg.Cf(patt, func)                                       *vim.lpeg.Cf()*\n+    Creates a fold capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to fold.\n+      • {func} (function) The fold function.\n+\n+vim.lpeg.Cg(patt, name)                                     *vim.lpeg.Cg()*\n+    Creates a group capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to group.\n+      • {name} (string|nil) The name of the group.\n+\n+vim.lpeg.Cp()                                                          *vim.lpeg.Cp()*\n+    Creates a position capture.\n+\n+vim.lpeg.Cs(patt)                                                  *vim.lpeg.Cs()*\n+    Creates a substitution capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+\n+vim.lpeg.Ct(patt)                                                  *vim.lpeg.Ct()*\n+    Creates a table capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern|'') The pattern to capture.\n+\n+vim.lpeg.Cmt(patt, fn)                                         *vim.lpeg.Cmt()*\n+    Creates a match-time capture.\n+\n+    Parameters: ~\n+      • {patt} (vim.lpeg.Pattern) The pattern to capture.\n+      • {fn} (function) The match-time function.\n+\n+vim.lpeg.version()                                                *vim.lpeg.version()*\n+    Returns a string with the running version of LPeg.\n+\n+vim.lpeg.setmaxstack(max)                                 *vim.lpeg.setmaxstack()*\n+    Sets a limit for the size of the backtrack stack used by LPeg.\n+\n+    Parameters: ~\n+      • {max} (integer) The maximum size of the stack.\n+\n+------------------------------------------------------------------------------\n+VIM.RE                                                              *lua-re*",
            "html_url": "https://github.com/neovim/neovim/pull/26199#discussion_r1404865044",
            "id": 1404865044,
            "in_reply_to_id": 1404864255,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TvIoU",
            "original_commit_id": "257b29d5df878f2a202d47390debd73c768ed117",
            "original_line": 696,
            "original_position": 126,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1748823894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26199",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404865044/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-25T12:12:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1404865044",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "You do know how to squash commits, right?",
            "created_at": "2023-11-25T12:16:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826294776",
            "id": 1826294776,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2wv4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826294776/reactions"
            },
            "updated_at": "2023-11-25T12:57:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826294776",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "is it like gathering all your commits and pushing them all together?",
            "created_at": "2023-11-25T12:19:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826295310",
            "id": 1826295310,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2w4O",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826295310/reactions"
            },
            "updated_at": "2023-11-25T12:58:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826295310",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes. `git rebase -i HEAD~4`, `squash` the commits, then `git push -f`.",
            "created_at": "2023-11-25T12:38:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826298696",
            "id": 1826298696,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2xtI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826298696/reactions"
            },
            "updated_at": "2023-11-25T12:58:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826298696",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "![image](https://github.com/neovim/neovim/assets/96385473/c349cbb3-e492-41de-8464-b8d762e0dfac)\r\nokay did so\r\ni replaced each commit with squash except of the first commit",
            "created_at": "2023-11-25T12:45:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826299971",
            "id": 1826299971,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2yBD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826299971/reactions"
            },
            "updated_at": "2023-11-25T12:58:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826299971",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            }
        },
        {
            "author_association": "NONE",
            "body": "they got squashed ",
            "created_at": "2023-11-25T12:50:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826300837",
            "id": 1826300837,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2yOl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826300837/reactions"
            },
            "updated_at": "2023-11-25T12:58:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826300837",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "yes, but with the wrong commit message ;)",
            "created_at": "2023-11-25T12:50:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826300934",
            "id": 1826300934,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2yQG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826300934/reactions"
            },
            "updated_at": "2023-11-25T12:58:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826300934",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "let me change the commit message one second",
            "created_at": "2023-11-25T12:51:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826301017",
            "id": 1826301017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2yRZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826301017/reactions"
            },
            "updated_at": "2023-11-25T12:58:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826301017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            }
        },
        {
            "author_association": "NONE",
            "body": "Done",
            "created_at": "2023-11-25T12:56:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1826301828",
            "id": 1826301828,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5s2yeE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826301828/reactions"
            },
            "updated_at": "2023-11-25T12:58:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1826301828",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This has been closed since a request for information has not been answered for 30 days. It can be reopened when the requested information is provided.",
            "created_at": "2023-12-26T01:48:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/26199#issuecomment-1869189635",
            "id": 1869189635,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
            "node_id": "IC_kwDOAPphoM5vaZID",
            "performed_via_github_app": {
                "created_at": "2018-07-30T09:30:17Z",
                "description": "Automate your workflow from idea to production",
                "events": [
                    "branch_protection_rule",
                    "check_run",
                    "check_suite",
                    "create",
                    "delete",
                    "deployment",
                    "deployment_status",
                    "discussion",
                    "discussion_comment",
                    "fork",
                    "gollum",
                    "issues",
                    "issue_comment",
                    "label",
                    "merge_group",
                    "milestone",
                    "page_build",
                    "project",
                    "project_card",
                    "project_column",
                    "public",
                    "pull_request",
                    "pull_request_review",
                    "pull_request_review_comment",
                    "push",
                    "registry_package",
                    "release",
                    "repository",
                    "repository_dispatch",
                    "status",
                    "watch",
                    "workflow_dispatch",
                    "workflow_run"
                ],
                "external_url": "https://help.github.com/en/actions",
                "html_url": "https://github.com/apps/github-actions",
                "id": 15368,
                "name": "GitHub Actions",
                "node_id": "MDM6QXBwMTUzNjg=",
                "owner": {
                    "avatar_url": "https://avatars.githubusercontent.com/u/9919?v=4",
                    "events_url": "https://api.github.com/users/github/events{/privacy}",
                    "followers_url": "https://api.github.com/users/github/followers",
                    "following_url": "https://api.github.com/users/github/following{/other_user}",
                    "gists_url": "https://api.github.com/users/github/gists{/gist_id}",
                    "gravatar_id": "",
                    "html_url": "https://github.com/github",
                    "id": 9919,
                    "login": "github",
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjk5MTk=",
                    "organizations_url": "https://api.github.com/users/github/orgs",
                    "received_events_url": "https://api.github.com/users/github/received_events",
                    "repos_url": "https://api.github.com/users/github/repos",
                    "site_admin": false,
                    "starred_url": "https://api.github.com/users/github/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/github/subscriptions",
                    "type": "Organization",
                    "url": "https://api.github.com/users/github"
                },
                "permissions": {
                    "actions": "write",
                    "administration": "read",
                    "checks": "write",
                    "contents": "write",
                    "deployments": "write",
                    "discussions": "write",
                    "issues": "write",
                    "merge_queues": "write",
                    "metadata": "read",
                    "packages": "write",
                    "pages": "write",
                    "pull_requests": "write",
                    "repository_hooks": "write",
                    "repository_projects": "write",
                    "security_events": "write",
                    "statuses": "write",
                    "vulnerability_alerts": "read"
                },
                "slug": "github-actions",
                "updated_at": "2019-12-10T19:04:12Z"
            },
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1869189635/reactions"
            },
            "updated_at": "2023-12-26T01:48:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1869189635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/github-actions",
                "id": 41898282,
                "login": "github-actions[bot]",
                "node_id": "MDM6Qm90NDE4OTgyODI=",
                "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/github-actions%5Bbot%5D"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26199/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26199/commits",
    "created_at": "2023-11-24T14:11:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26199.diff",
    "draft": false,
    "head": {
        "label": "EraldCaka:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/EraldCaka/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/EraldCaka/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/EraldCaka/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/EraldCaka/neovim/branches{/branch}",
            "clone_url": "https://github.com/EraldCaka/neovim.git",
            "collaborators_url": "https://api.github.com/repos/EraldCaka/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/EraldCaka/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/EraldCaka/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/EraldCaka/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/EraldCaka/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/EraldCaka/neovim/contributors",
            "created_at": "2023-11-24T13:26:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/EraldCaka/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/EraldCaka/neovim/downloads",
            "events_url": "https://api.github.com/repos/EraldCaka/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/EraldCaka/neovim/forks",
            "full_name": "EraldCaka/neovim",
            "git_commits_url": "https://api.github.com/repos/EraldCaka/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/EraldCaka/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/EraldCaka/neovim/git/tags{/sha}",
            "git_url": "git://github.com/EraldCaka/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/EraldCaka/neovim/hooks",
            "html_url": "https://github.com/EraldCaka/neovim",
            "id": 723014458,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/EraldCaka/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/EraldCaka/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/EraldCaka/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/EraldCaka/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/EraldCaka/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/EraldCaka/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/EraldCaka/neovim/merges",
            "milestones_url": "https://api.github.com/repos/EraldCaka/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKxhTOg",
            "notifications_url": "https://api.github.com/repos/EraldCaka/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
                "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
                "followers_url": "https://api.github.com/users/EraldCaka/followers",
                "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
                "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/EraldCaka",
                "id": 96385473,
                "login": "EraldCaka",
                "node_id": "U_kgDOBb65wQ",
                "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
                "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
                "repos_url": "https://api.github.com/users/EraldCaka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/EraldCaka"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/EraldCaka/neovim/pulls{/number}",
            "pushed_at": "2023-11-25T12:56:18Z",
            "releases_url": "https://api.github.com/repos/EraldCaka/neovim/releases{/id}",
            "size": 228309,
            "ssh_url": "git@github.com:EraldCaka/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/EraldCaka/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/EraldCaka/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/EraldCaka/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/EraldCaka/neovim/subscription",
            "svn_url": "https://github.com/EraldCaka/neovim",
            "tags_url": "https://api.github.com/repos/EraldCaka/neovim/tags",
            "teams_url": "https://api.github.com/repos/EraldCaka/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/EraldCaka/neovim/git/trees{/sha}",
            "updated_at": "2023-11-24T14:11:10Z",
            "url": "https://api.github.com/repos/EraldCaka/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "a298a090e8a08ddb6614e33a91fda65a2a566881",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
            "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
            "followers_url": "https://api.github.com/users/EraldCaka/followers",
            "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
            "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/EraldCaka",
            "id": 96385473,
            "login": "EraldCaka",
            "node_id": "U_kgDOBb65wQ",
            "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
            "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
            "repos_url": "https://api.github.com/users/EraldCaka/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/EraldCaka"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26199",
    "id": 1615850791,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26199",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c74cc3eb53069257b6faa565c45c1d548eeb19b8",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5gT-0n",
    "number": 26199,
    "patch_url": "https://github.com/neovim/neovim/pull/26199.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
            "events_url": "https://api.github.com/users/clason/events{/privacy}",
            "followers_url": "https://api.github.com/users/clason/followers",
            "following_url": "https://api.github.com/users/clason/following{/other_user}",
            "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/clason",
            "id": 2361214,
            "login": "clason",
            "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
            "organizations_url": "https://api.github.com/users/clason/orgs",
            "received_events_url": "https://api.github.com/users/clason/received_events",
            "repos_url": "https://api.github.com/users/clason/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/clason"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26199/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a298a090e8a08ddb6614e33a91fda65a2a566881",
    "title": "docs(lua): add docs for vim.lpeg, vim.re",
    "updated_at": "2023-12-26T01:48:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26199",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/96385473?v=4",
        "events_url": "https://api.github.com/users/EraldCaka/events{/privacy}",
        "followers_url": "https://api.github.com/users/EraldCaka/followers",
        "following_url": "https://api.github.com/users/EraldCaka/following{/other_user}",
        "gists_url": "https://api.github.com/users/EraldCaka/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/EraldCaka",
        "id": 96385473,
        "login": "EraldCaka",
        "node_id": "U_kgDOBb65wQ",
        "organizations_url": "https://api.github.com/users/EraldCaka/orgs",
        "received_events_url": "https://api.github.com/users/EraldCaka/received_events",
        "repos_url": "https://api.github.com/users/EraldCaka/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/EraldCaka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/EraldCaka/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/EraldCaka"
    }
}