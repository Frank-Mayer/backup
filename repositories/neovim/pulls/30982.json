{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30982/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30982/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30982"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30982"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30982/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/6841a0c484f4bf4b0b1df5271eff90ebc25f78c5"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5688,
            "forks_count": 5688,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1831,
            "open_issues_count": 1831,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-04T23:26:33Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 292457,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83048,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-05T01:27:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83048,
            "watchers_count": 83048,
            "web_commit_signoff_required": false
        },
        "sha": "1d4ba8c1edba064421b34c1197c3470a09798218",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "## Problem\r\n\r\nThe model `vim.lsp.handlers` only works for a subset of LSP methods, and doesn't work for method where the results from multiple clients need to be combined. \r\n\r\n## Solution\r\n\r\n- Maintain `lsp.handlers` but for server request or notification handling, not for client request responses.\r\n- Mark all handlers for client request handling as `@deprecated`.\r\n- Deprecate `vim.lsp.with`\r\n- ~Introduce `client:on_request()` and `client:on_response()` as hooks points which can intercept messages between the client and server.~\r\n\r\n### Todo\r\n\r\n- [x] distinguish between server requests and server notifications because they have different signatures \r\n  - one has a response, the other doesn't.\r\n- [x] Provide alternatives for the config sent to `vim.lsp.with`.\r\n   - [x] `vim.lsp.buf.signature_help`\r\n\r\n\r\n---\r\n\r\nRelated: `vim.on` #21811\r\n\r\nCloses: #20568 ",
    "closed_at": "2024-11-01T09:17:39Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1822917022"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822917022"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    vim.diagnostic.config(config, vim.lsp.diagnostic.get_namespace(client_id))\r\n```\r\n\r\nI think?",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-30T15:51:41Z",
            "diff_hunk": "@@ -87,7 +87,13 @@ LSP\n   but no longer trigger the global handlers from `vim.lsp.handlers`\n • |vim.lsp.buf.typehierarchy()| now passes the correct params for each\n   client request.\n-\n+• |vim.lsp.handlers.signature_help()| is no longer used.\n+• |vim.lsp.diagnostic.on_publish_diagnostics()| and\n+  |vim.lsp.diagnostic.on_diagnostic()| no longer accept a config parameter and\n+  can no longer be configured with |vim.lsp.with()|.\n+  Instead use: >lua\n+    vim.diagnostic.config(config, M.get_namespace(client_id))",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1822917022",
            "id": 1822917022,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sp4Ge",
            "original_commit_id": "15abb1bdc6879f84722cfe1bcd8bc7de3a5ed75d",
            "original_line": 95,
            "original_position": 10,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2405414686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822917022/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-30T15:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822917022",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1822918287"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822918287"
                }
            },
            "author_association": "MEMBER",
            "body": "I assume proper merging of the results will be a follow up?\r\n",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-30T15:52:26Z",
            "diff_hunk": "@@ -258,10 +258,72 @@ function M.implementation(opts)\n   get_locations(ms.textDocument_implementation, opts)\n end\n \n+local sig_help_ns = api.nvim_create_namespace('vim_lsp_signature_help')\n+\n+--- @class vim.lsp.buf.signature_help.Opts : vim.lsp.util.open_floating_preview.Opts\n+--- @field silent? boolean\n+\n+-- TODO(lewis6991): support multiple clients\n --- Displays signature information about the symbol under the cursor in a\n --- floating window.\n-function M.signature_help()\n-  lsp.buf_request(0, ms.textDocument_signatureHelp, client_positional_params())\n+--- @param config? vim.lsp.buf.signature_help.Opts\n+function M.signature_help(config)\n+  local method = ms.textDocument_signatureHelp\n+\n+  config = config or {}\n+  config.focus_id = method\n+\n+  lsp.buf_request(0, method, client_positional_params(), function(err, result, ctx)",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1822918287",
            "id": 1822918287,
            "line": 276,
            "node_id": "PRRC_kwDOAPphoM5sp4aP",
            "original_commit_id": "15abb1bdc6879f84722cfe1bcd8bc7de3a5ed75d",
            "original_line": 276,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 21,
            "pull_request_review_id": 2405414686,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822918287/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-30T15:55:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822918287",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1822928706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822928706"
                }
            },
            "author_association": "MEMBER",
            "body": "Yeah, out of scope for this PR. I added a TODO on line 266",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-30T15:58:35Z",
            "diff_hunk": "@@ -258,10 +258,72 @@ function M.implementation(opts)\n   get_locations(ms.textDocument_implementation, opts)\n end\n \n+local sig_help_ns = api.nvim_create_namespace('vim_lsp_signature_help')\n+\n+--- @class vim.lsp.buf.signature_help.Opts : vim.lsp.util.open_floating_preview.Opts\n+--- @field silent? boolean\n+\n+-- TODO(lewis6991): support multiple clients\n --- Displays signature information about the symbol under the cursor in a\n --- floating window.\n-function M.signature_help()\n-  lsp.buf_request(0, ms.textDocument_signatureHelp, client_positional_params())\n+--- @param config? vim.lsp.buf.signature_help.Opts\n+function M.signature_help(config)\n+  local method = ms.textDocument_signatureHelp\n+\n+  config = config or {}\n+  config.focus_id = method\n+\n+  lsp.buf_request(0, method, client_positional_params(), function(err, result, ctx)",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1822928706",
            "id": 1822928706,
            "in_reply_to_id": 1822918287,
            "line": 276,
            "node_id": "PRRC_kwDOAPphoM5sp69C",
            "original_commit_id": "15abb1bdc6879f84722cfe1bcd8bc7de3a5ed75d",
            "original_line": 276,
            "original_position": 21,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/buf.lua",
            "position": 21,
            "pull_request_review_id": 2405434813,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822928706/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-30T16:02:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1822928706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1823744552"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823744552"
                }
            },
            "author_association": "MEMBER",
            "body": "Guess the `lsp-handler` section also needs to be removed?\r\nhttps://github.com/neovim/neovim/blob/ac761ff642948e5ee00dfa7802553e0de391450e/runtime/doc/lsp.txt#L234",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T03:57:42Z",
            "diff_hunk": "@@ -1823,32 +1715,6 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n-==============================================================================\n-Lua module: vim.lsp.handlers                                    *lsp-handlers*",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1823744552",
            "id": 1823744552,
            "line": 1827,
            "node_id": "PRRC_kwDOAPphoM5stCIo",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 1827,
            "original_position": 247,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 349,
            "pull_request_review_id": 2406893179,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823744552/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T04:01:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823744552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1823751160"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823751160"
                }
            },
            "author_association": "MEMBER",
            "body": "I would appreciate a comment explaining why these are indexed by string literals instead of `vim.lsp.protocol.Methods`. Without the context from this PR I would certainly try to change that.",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T04:11:34Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1823751160",
            "id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5stDv4",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2406901963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823751160/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T04:11:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823751160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1823938704"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823938704"
                }
            },
            "author_association": "MEMBER",
            "body": "They are indexed with `vim.lsp.protocol.Method.ClientToServer` so it is type checked and LuaLS has a stronger understanding of literals. If you use a symbol, then it doesn't understand it as much, or at least that's what I've found.\n\nI also never understood the use of the enum here, it just seems to add a level of indirection. In a statically compiled language it would make some sense since that's usually how you achieve type checking, however in a dynamic language I'm not sure what benefit it provides. It's not like it prevents typos or anything. Was there a reason for adding them I haven't understood?",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T07:24:55Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1823938704",
            "id": 1823938704,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5stxiQ",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2407137684,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823938704/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T07:24:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1823938704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824072161"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824072161"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it's still needed for the lower level API (`client.request` and `vim.lsp.buf_request_all`).",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T08:32:03Z",
            "diff_hunk": "@@ -1823,32 +1715,6 @@ stop({bufnr}, {client_id})                    *vim.lsp.semantic_tokens.stop()*\n       • {client_id}  (`integer`) The ID of the |vim.lsp.Client|\n \n \n-==============================================================================\n-Lua module: vim.lsp.handlers                                    *lsp-handlers*",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824072161",
            "id": 1824072161,
            "in_reply_to_id": 1823744552,
            "line": 1827,
            "node_id": "PRRC_kwDOAPphoM5suSHh",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 1827,
            "original_position": 247,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": 349,
            "pull_request_review_id": 2407354557,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824072161/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T08:32:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824072161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824145724"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824145724"
                }
            },
            "author_association": "MEMBER",
            "body": "> however in a dynamic language I'm not sure what benefit it provides. It's not like it prevents typos or anything. Was there a reason for adding them I haven't understood?\r\n\r\nThe completion you get with `protocol.Methods.|` is a nice aspect, and using the enum for table indexing works too - although we should probably account for off-spec extensions in some areas. E.g. not sure if we want to cause warnings for `lsp.handlers[\"custom\"] = ...` ",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T09:31:27Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824145724",
            "id": 1824145724,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5sukE8",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2407465440,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824145724/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T09:31:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824145724",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824152778"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824152778"
                }
            },
            "author_association": "MEMBER",
            "body": "You get completion with this too in LuaLS since the index type is `vim.lsp.protocol.Method.ClientToServer`. You won't get that completion in a `:` command line, but is anyone really using that for this?\r\n\r\n> and using the enum for table indexing works too\r\n\r\nIs there any reason to prefer that though? It seems redundant when you can type check this without introducing runtime code.\r\n\r\nIn Lua, IMO, enums are best used for mapping names onto ids, e.g. `vim.lsp.rpc.client_errors`, as they add meaningful names onto magic numbers. Here, the enums themselves are just mutated versions of the actual literals.\r\n\r\n> E.g. not sure if we want to cause warnings for lsp.handlers[\"custom\"] = ...\r\n\r\nI think `@diagnostic disable` is a pretty good use case for that. Otherwise, `lsp.handlers` can be aliased.",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T09:37:04Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824152778",
            "id": 1824152778,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5sulzK",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2407476253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824152778/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T09:45:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824152778",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824201070"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824201070"
                }
            },
            "author_association": "MEMBER",
            "body": "> You get completion with this too in LuaLS since the index type is vim.lsp.protocol.Method.ClientToServer.\r\n\r\nMaybe it's my luals settings, but it appears to me that with enum's it is more reliable.\r\nAt least after typing `protocol.Methods.|` I get only the enum options.\r\nWith `RSC[\"|` I see lots of other things too.\r\n\r\nI don't mind either way in this case - just pointed it out since you mentioned that you don't see the benefit.\r\n\r\n>  It seems redundant when you can type check this without introducing runtime code.\r\n\r\nGood point, I wasn't considering the runtime costs so far. ",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T10:08:20Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824201070",
            "id": 1824201070,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5suxlu",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2407551687,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824201070/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T10:09:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824201070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824208906"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824208906"
                }
            },
            "author_association": "MEMBER",
            "body": "I do get something similar:\r\n\r\n<img width=\"556\" alt=\"image\" src=\"https://github.com/user-attachments/assets/7506e41c-0aa1-4b61-8e74-05600a3d23e0\">\r\n\r\nbut the completions are at least there.\r\n\r\nI wonder if there's a reason for LuaLS providing the other completions, or maybe it's just a bug.",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T10:14:34Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824208906",
            "id": 1824208906,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5suzgK",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2407563115,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824208906/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T10:14:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824208906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824422981"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824422981"
                }
            },
            "author_association": "MEMBER",
            "body": "What I meant with my original comment is that adding an explanation to the code explaining why this bit differs from the convention of using the enum as it’s done everywhere else.",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T13:06:23Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824422981",
            "id": 1824422981,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5svnxF",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2407887404,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824422981/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T13:06:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824422981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30982#discussion_r1824658715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30982"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824658715"
                }
            },
            "author_association": "MEMBER",
            "body": "Decided to revert this since the enums have hover information and the type checking with either isn't that reliable.",
            "commit_id": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
            "created_at": "2024-10-31T15:17:13Z",
            "diff_hunk": "@@ -5,10 +5,21 @@ local util = require('vim.lsp.util')\n local api = vim.api\n local completion = require('vim.lsp.completion')\n \n---- @type table<string,lsp.Handler>\n+--- @type table<string, lsp.Handler>\n local M = {}\n \n--- FIXME: DOC: Expose in vimdocs\n+--- @deprecated\n+--- Client to server response handlers.\n+--- @type table<vim.lsp.protocol.Method.ClientToServer, lsp.Handler>\n+local RCS = {}",
            "html_url": "https://github.com/neovim/neovim/pull/30982#discussion_r1824658715",
            "id": 1824658715,
            "in_reply_to_id": 1823751160,
            "line": 14,
            "node_id": "PRRC_kwDOAPphoM5swhUb",
            "original_commit_id": "ac761ff642948e5ee00dfa7802553e0de391450e",
            "original_line": 14,
            "original_position": 12,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/handlers.lua",
            "position": 12,
            "pull_request_review_id": 2408271221,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824658715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-31T15:17:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1824658715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I don't think this is the way to go.\r\n\r\nlsp.handlers aren't just for response handlers to client requests, but also for server requests where the client needs to send a response to the server or server notifications. (publish diagnostics, `$/progress`, `window/showMessageRequest`, etc.`)\r\n\r\nI think the problem is that we conflated the two\r\nGoing forward I think we should have:\r\n\r\n- Keep lsp.handlers but call them _only_ for server request or notification handling, not for client request responses.\r\n    - We could even distinguish between server requests and server notifications because they have different signatures - one has a response, the other doesn't. But not sure if that's worth doing as it would imply more breaking changes.\r\n- Client request/response handling only via client.request\r\n- Justin's `on_func` (or whatever it's called) approach for client.request wrapping (no new `on_response`, `on_request`)\r\n- Kill lsp.with\r\n",
            "created_at": "2024-10-29T11:24:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2443945758",
            "id": 2443945758,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6Rq6ce",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2443945758/reactions"
            },
            "updated_at": "2024-10-29T11:26:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2443945758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> lsp.handlers aren't just for response handlers to client requests, but also for server requests where the client needs to send a response to the server or server notifications. (publish diagnostics, $/progress, window/showMessageRequest, etc.`)\r\n\r\nI've accounted for that in the solution section: \"shall we maintain this model for server-to-client requests?\"\r\n\r\nAnd in the PR, I've separated out these server requests by placing them in an `S` table (that currently gets merged into `M`).\r\n\r\n> - Keep lsp.handlers but call them only for server request or notification handling, not for client request responses.\r\n>\r\n>   -  We could even distinguish between server requests and server notifications because they have different signatures one has a response, the other doesn't. But not sure if that's worth doing as it would imply more breaking changes.\r\n> - Client request/response handling only via client.request\r\n\r\n👍 \r\n\r\n> - Justin's on_func (or whatever it's called) approach for client.request wrapping (no new on_response, on_request)\r\n\r\nWhy not both? The exposed `client` methods are lower level, and would be preferable to call in something like `LspAttach` or via config to the `vim.lsp.start`.\r\n\r\nI also have some reservations about centralising **everything** in `on_func`. It'll be hard to statically type and doesn't provide any benefits to straight forward functions for setting callbacks. We already have `on_attach`, `on_error` and `on_exit` so these 2 new ones fit nicely.\r\n\r\n> - Kill lsp.with\r\n\r\n:+1:, but I guess we need to move the config they support to somewhere else?\r\n\r\n",
            "created_at": "2024-10-29T11:37:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2443970967",
            "id": 2443970967,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6RrAmX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2443970967/reactions"
            },
            "updated_at": "2024-10-29T11:40:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2443970967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I've accounted for that in the solution section: \"shall we maintain this model for server-to-client requests?\"\r\n\r\n👍\r\nIn that case: yes\r\n\r\n> Why not both? The exposed client methods are lower level, and would be preferable to call in something like LspAttach or via config to the vim.lsp.start.\r\n\r\nBecause so far the main use-case for intercepting requests/responses where you modify the result is to work around server bugs, I don't think it's warranted to create dedicated interfaces to support that.\r\nTo only listen one can use `LspRequest` autocmds.\r\n\r\nAt the very least I'd wait with it until we've more concrete use-cases\r\n\r\n\r\n> Only one server should format.\r\n\r\nI think there can be cases where one client/formatter takes care of import ordering and another formats the rest. Afaik the current implementation uses one client after another. Unless there are concrete issues with that approach I wouldn't change that(?)\r\n\r\n> but I guess we need to move the config they support to somewhere else?\r\n\r\nI think we'll need to evaluate on a case by case basis. For some the methods in lsp.buf already take parameters to allow the same as lsp.with did",
            "created_at": "2024-10-29T11:47:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2443990320",
            "id": 2443990320,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6RrFUw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2443990320/reactions"
            },
            "updated_at": "2024-10-29T11:58:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2443990320",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Because so far the main use-case for intercepting requests/responses where you modify the result is to work around server bugs, I don't think it's warranted to create dedicated interfaces to support that.\r\n\r\n- The maintenance burden is exactly the same. The current proposal of `vim.on` is to add convenience wrappers around autocommands and other stuff. All that other stuff still has a dedicated interface.\r\n- The documentation for it won't be in `lsp.txt`, which makes discoverability more difficult.\r\n- It doesn't exist yet.\r\n\r\n> At the very least I'd wait with it until we've more concrete use-cases\r\n\r\nOk. I think I know at least one person who will yell at us for this, so I can mark it as private so it can be at least tested during the dev cycle. If it ever (or never) becomes useful then we can promote (or remove) it.",
            "created_at": "2024-10-29T11:58:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2444011727",
            "id": 2444011727,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6RrKjP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444011727/reactions"
            },
            "updated_at": "2024-10-29T11:59:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444011727",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">  I think there can be cases where one client/formatter takes care of import ordering and another formats the rest. Afaik the current implementation uses one client after another. Unless there are concrete issues with that approach I wouldn't change that(?)\r\n\r\nI don't plan on changing it since we don't already do it. AFAIK, the handlers are just blindly called. I would have thought if we wanted to support multiple clients then we'd have to request-edit-request... (in order) so the server gets all the correct edits before formatting?\r\n\r\nRegardless, I'm just trying to determine the technical aspects. I've just marked it not suitable for the `vim.lsp.handlers` model.\r\n\r\n> I think we'll need to evaluate on a case by case basis. For some the methods in lsp.buf already take parameters to allow the same as lsp.with did\r\n\r\nWell yes. These exist as API currently, so I think we do need to provide alternatives for these. The trickiest one might be the diagnostic handlers since they are initiated from the server so there would be no `vim.lsp.buf` method to move them to. Maybe we could just move them all to the client config and allow that client config to be updated (if it can't already).",
            "created_at": "2024-10-29T12:07:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2444029381",
            "id": 2444029381,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6RrO3F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444029381/reactions"
            },
            "updated_at": "2024-10-29T12:07:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444029381",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The maintenance burden is exactly the same. The current proposal of vim.on is to add convenience wrappers around autocommands and other stuff. All that other stuff still has a dedicated interface.\r\n\r\nMy understanding was that `vim.on` will happen either way, unrelated to LSP's current `lsp.with`.\r\nSo the choices are between only `vim.on` or `vim.on` and custom LSP variant.\r\n\r\n> The documentation for it won't be in lsp.txt, which makes discoverability more difficult.\r\n\r\nOne can add a reference to it under lsp.txt. I don't think that's a deal breaker.\r\n\r\n> It doesn't exist yet\r\n\r\nTrue, but even without it, it's not too much effort to monkey patch manually within a `LspAttach` event:\r\n\r\n```lua\r\nlocal client = assert(lsp.get_client_by_id(args.data.client_id))\r\nlocal req = client.request\r\nclient.request = function (method, params, handler, bufnr)\r\n  if method == \"method-to-patch\" then\r\n    -- handler = ...\r\n  end\r\n  req(method, params, handler, bufnr)\r\nend\r\n```\r\n\r\n> I think I know at least one person who will yell at us for this\r\n\r\nFine by me to be yelled at for that. As long as it's only one person I don't see why we'd jump immediately on that. I see a slight push for people to fix things upstream in servers as a plus.\r\n\r\n\r\n> AFAIK, the handlers are just blindly called. I would have thought if we wanted to support multiple clients then we'd have to request-edit-request... (in order) so the server gets all the correct edits before formatting?\r\n\r\nAh, I see what you mean. The client.requests are done one after another, see:\r\n\r\nhttps://github.com/neovim/neovim/blob/8f9401f5c80a8a72128b8bd8279689daf13f3a04/runtime/lua/vim/lsp/buf.lua#L348-L372\r\n\r\nSo the logic itself should work for multiple clients as far as I can tell but we can inline the handler instead of doing the lookup.\r\n\r\n\r\n> The trickiest one might be the diagnostic handlers since they are initiated from the server so there would be no vim.lsp.buf method to move them to\r\n\r\nIsn't diagnostic the easiest due to vim.diagnostic.config?\r\n",
            "created_at": "2024-10-29T12:16:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2444049191",
            "id": 2444049191,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6RrTsn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444049191/reactions"
            },
            "updated_at": "2024-10-29T12:26:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444049191",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My understanding was that vim.on will happen either way\r\n\r\nSo are lots of things. I consider it vapourware until there's at least a working draft PR.\r\n\r\n> Fine by me to be yelled at for that.\r\n\r\nLol, fine. I'll just remove it then.\r\n\r\n> Isn't diagnostic the easiest due to vim.diagnostic.config?\r\n\r\nAh, I now see the config type is `vim.diagnostic.Opts`. I guess that means we can just remove it then?\r\n\r\nWhat's the API strategy here? Are we deprecating first, or are we just going full breaking? Since we've had to make breaking changes already, there's a stronger argument for the latter than there would be normally.",
            "created_at": "2024-10-29T13:43:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/30982#issuecomment-2444273917",
            "id": 2444273917,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
            "node_id": "IC_kwDOAPphoM6RsKj9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444273917/reactions"
            },
            "updated_at": "2024-10-29T13:43:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2444273917",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30982/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30982/commits",
    "created_at": "2024-10-29T09:37:56Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30982.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:feat/lsphandlers",
        "ref": "feat/lsphandlers",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-11-04T16:22:18Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 286207,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30982",
    "id": 2151079527,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30982",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        },
        {
            "color": "F9D0C4",
            "default": false,
            "description": "",
            "id": 3968935075,
            "name": "breaking-change",
            "node_id": "LA_kwDOAPphoM7skSSj",
            "url": "https://api.github.com/repos/neovim/neovim/labels/breaking-change"
        }
    ],
    "locked": false,
    "merge_commit_sha": "9b357e30fdd0a575480182872331fdb87e9cc331",
    "merged_at": "2024-11-01T09:17:39Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6ANt5n",
    "number": 30982,
    "patch_url": "https://github.com/neovim/neovim/pull/30982.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30982/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/6841a0c484f4bf4b0b1df5271eff90ebc25f78c5",
    "title": "feat(lsp)!: deprecate client-server handlers in `vim.lsp.handlers`",
    "updated_at": "2024-11-01T15:42:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30982",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991",
        "user_view_type": "public"
    }
}