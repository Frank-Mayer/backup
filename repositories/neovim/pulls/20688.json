{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20688/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20688/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20688"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20688"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20688/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20688"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/970ce79cbacf1879c7a61baf7a07ce3e028303c6"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "NONE",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4786,
            "forks_count": 4786,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1682,
            "open_issues_count": 1682,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-07-24T00:01:55Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 245746,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 67664,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-07-24T01:30:51Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 67664,
            "watchers_count": 67664,
            "web_commit_signoff_required": false
        },
        "sha": "8617101b6bf21bf27ba5194db5fb42c73ff67160",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem:\r\nExtra highlighting after jumping to search result currently requires adding mappings that override N, n, #, * and expr mapping <CR> for / and ?.\r\n\r\nThis is brittle.\r\n\r\nSolution:\r\nWe can provide users with an autocommand event similar TextYankPost that provides them with start and end position of the match.\r\n\r\nMostly to greatly simplify https://github.com/ivyl/bling.nvim",
    "closed_at": "2023-07-21T11:11:43Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20688#discussion_r1236659704"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20688"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236659704"
                }
            },
            "author_association": "MEMBER",
            "body": "\"Post\" is probably always unnecessary in event names (we can always add a \"Pre\" event in the future if needed).\r\n```suggestion\r\n\t\t\t\t\t\t\t*Search*\r\n```",
            "commit_id": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
            "created_at": "2023-06-21T09:01:28Z",
            "diff_hunk": "@@ -844,6 +844,12 @@ RemoteReply\t\t\tWhen a reply from a Vim that functions as\n \t\t\t\tNote that even if an autocommand is defined,\n \t\t\t\tthe reply should be read with remote_read()\n \t\t\t\tto consume it.\n+\t\t\t\t\t\t\t*SearchPost*",
            "html_url": "https://github.com/neovim/neovim/pull/20688#discussion_r1236659704",
            "id": 1236659704,
            "line": 847,
            "node_id": "PRRC_kwDOAPphoM5Jte34",
            "original_commit_id": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
            "original_line": 847,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/autocmd.txt",
            "position": 4,
            "pull_request_review_id": 1490206989,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20688",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236659704/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-21T09:01:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236659704",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20688#discussion_r1236663138"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20688"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236663138"
                }
            },
            "author_association": "MEMBER",
            "body": "Can the logic be extracted to a `do_autocmd_search` function?",
            "commit_id": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
            "created_at": "2023-06-21T09:02:53Z",
            "diff_hunk": "@@ -1301,6 +1301,38 @@ int do_search(oparg_T *oap, int dirc, int search_delim, char_u *pat, long count,\n     }\n     retval = 1;                     // pattern found\n \n+    if (!(options & SEARCH_PEEK))\n+    {\n+      save_v_event_T save_v_event;",
            "html_url": "https://github.com/neovim/neovim/pull/20688#discussion_r1236663138",
            "id": 1236663138,
            "line": 1306,
            "node_id": "PRRC_kwDOAPphoM5Jtfti",
            "original_commit_id": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
            "original_line": 1306,
            "original_position": 24,
            "original_start_line": null,
            "path": "src/nvim/search.c",
            "position": 24,
            "pull_request_review_id": 1490214628,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20688",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236663138/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-21T09:02:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236663138",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20688#discussion_r1236665325"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20688"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236665325"
                }
            },
            "author_association": "MEMBER",
            "body": "\"should\" is redundant in test descriptions\r\n\r\n```suggestion\r\n  it('is executed after search and provides positions', function()\r\n```",
            "commit_id": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
            "created_at": "2023-06-21T09:03:53Z",
            "diff_hunk": "@@ -0,0 +1,55 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear, eval, eq = helpers.clear, helpers.eval, helpers.eq\n+local feed, command, curbufmeths = helpers.feed, helpers.command, helpers.curbufmeths\n+\n+describe('SearchPost', function()\n+  before_each(function()\n+    clear()\n+\n+    command('let g:count = 0')\n+    command('autocmd SearchPost * let g:event = copy(v:event)')\n+    command('autocmd SearchPost * let g:count += 1')\n+\n+    curbufmeths.set_lines(0, -1, true, {\n+      'foo\\0bar',\n+      'baz text',\n+    })\n+  end)\n+\n+  it('is executed after search and should provide positions', function()",
            "html_url": "https://github.com/neovim/neovim/pull/20688#discussion_r1236665325",
            "id": 1236665325,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM5JtgPt",
            "original_commit_id": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "test/functional/autocmd/searchpost_spec.lua",
            "position": 19,
            "pull_request_review_id": 1490220279,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20688",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236665325/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-06-21T09:03:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1236665325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "How can one determine what search event triggered the autocmd?",
            "created_at": "2022-10-17T07:22:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1280404455",
            "id": 1280404455,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5MUWvn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280404455/reactions"
            },
            "updated_at": "2022-10-17T07:22:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280404455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Related: https://github.com/neovim/neovim/issues/18879\n\nWhich mentions such an autocmd also needs to detect `nohlsearch`.",
            "created_at": "2022-10-17T07:26:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1280408968",
            "id": 1280408968,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5MUX2I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280408968/reactions"
            },
            "updated_at": "2022-10-17T07:27:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1280408968",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "> How can one determine what search event triggered the autocmd?\r\n\r\nMy main interest was in getting the information about the range that was found. I don't think we can currently tell from within `do_search()` if it was `/`, `?`, `*`, `#`, `n` or `N`.\r\n\r\nIs the source of the search important? At this point it may be better to use cmd expr mapping / nmap if you are interested in specific types.\r\n\r\n> Related: https://github.com/neovim/neovim/issues/18879\r\n> \r\n> Which mentions such an autocmd also needs to detect nohlsearch.\r\n\r\nFeels like a separate thing. `:nohlsearch` doesn't trigger anything search-related. Making the current value part of the `v:event` is easy, but detecting the change is not.\r\n\r\n`:nohlsearch` is implemented as follows:\r\n\r\n```c\r\nvoid set_no_hlsearch(bool flag)\r\n{\r\n  no_hlsearch = flag;\r\n  set_vim_var_nr(VV_HLSEARCH, !no_hlsearch && p_hls);\r\n}\r\n\r\n/// \":nohlsearch\"\r\nstatic void ex_nohlsearch(exarg_T *eap)\r\n{\r\n  set_no_hlsearch(true);\r\n  redraw_all_later(UPD_SOME_VALID);\r\n}\r\n```\r\nSo it's roughly equal to:\r\n```vim\r\nlet v:hlsearch = 0\r\nredraw\r\n```\r\n\r\nRedraw seems to be the one responsible for handling the effect of `:nohlsearch`, see `src/nvim/drawline.c`. It doesn't use anything form the high-level `do_search()/searchit()`. Instead, it operates on the low level regexps and uses the last precompiled regex stored in `screen_search_hl` to do the highlighting.\r\n\r\nI don't see any sensible way to plug into that or to share any code with the proposed implementation of `SearchPost`. I think a completely different mechanism to watch for it would be better.\r\n\r\n> User typing in the search `/` command line. We already have `CmdlineChanged/Enter/Leave` for this, but a first class event for `Search` would be nice.\r\n\r\nThat should be easy to cover. I believe it uses `SEARCH_PEEK` so instead of ignoring it we can have the value as a bool in `v:event`.",
            "created_at": "2022-10-17T21:42:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1281532593",
            "id": 1281532593,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5MYqKx",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1281532593/reactions"
            },
            "updated_at": "2022-10-17T21:44:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1281532593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16490?v=4",
                "events_url": "https://api.github.com/users/ivyl/events{/privacy}",
                "followers_url": "https://api.github.com/users/ivyl/followers",
                "following_url": "https://api.github.com/users/ivyl/following{/other_user}",
                "gists_url": "https://api.github.com/users/ivyl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ivyl",
                "id": 16490,
                "login": "ivyl",
                "node_id": "MDQ6VXNlcjE2NDkw",
                "organizations_url": "https://api.github.com/users/ivyl/orgs",
                "received_events_url": "https://api.github.com/users/ivyl/received_events",
                "repos_url": "https://api.github.com/users/ivyl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ivyl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ivyl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ivyl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> My main interest was in getting the information about the range that was found. I don't think we can currently tell from within do_search() if it was /, ?, *, #, n or N.\r\n\r\nOf course we can, it just requires more work. However, on second thought knowing the direction gives us most of what we want (via `start_pos` and `end_pos`). However, I think it might be important to be able to distinguish between `/ ?`, `* #` and `n N`, since they change what is being searched for.\r\n\r\n> Is the source of the search important? At this point it may be better to use cmd expr mapping / nmap if you are interested in specific types.\r\n\r\nThat is exactly what we want to avoid. See https://github.com/lewis6991/satellite.nvim/blob/main/lua/satellite/autocmd/search.lua which implements a `Search` user autocmd.\r\n\r\n> Feels like a separate thing. :nohlsearch doesn't trigger anything search-related. Making the current value part of the v:event is easy, but detecting the change is not.\r\n\r\nIt triggers whether search is displayed or not. Detecting is easy, you just need to fire the autocmd in a different place.\r\n\r\n> Redraw seems to be the one responsible for handling the effect of :nohlsearch, see src/nvim/drawline.c. It doesn't use anything form the high-level do_search()/searchit(). Instead, it operates on the low level regexps and uses the last precompiled regex stored in screen_search_hl to do the highlighting.\r\n\r\nPlease don't get dragged up in implementation and keep focus on the API.\r\n\r\n> I don't see any sensible way to plug into that or to share any code with the proposed implementation of SearchPost. I think a completely different mechanism to watch for it would be better.\r\n\r\nA different mechanism increases surface area. You don't need to share any code, we are just triggering autocmds and passing different arguments. The only consideration we should make is whether detecting too many events on the same autocmd will cause too much noise, which I don't think is a problem for `hlsearch`.\r\n\r\n> That should be easy to cover. I believe it uses SEARCH_PEEK so instead of ignoring it we can have the value as a bool in v:event.\r\n\r\nWe should also consider not using `v:event` and just define a data structure that gets passed to the Lua callback. `v:event` is a bad idiom IMO, and Lua autocmds have the ability to pass any specific data to their callbacks.\r\n\r\n",
            "created_at": "2022-10-18T08:39:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1282021895",
            "id": 1282021895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5MahoH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282021895/reactions"
            },
            "updated_at": "2022-10-18T08:39:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282021895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "> > My main interest was in getting the information about the range that was found. I don't think we can currently tell from within do_search() if it was /, ?, *, #, n or N.\r\n> \r\n> Of course we can, it just requires more work. However, on second thought knowing the direction gives us most of what we want (via `start_pos` and `end_pos`). However, I think it might be important to be able to distinguish between `/ ?`, `* #` and `n N`, since they change what is being searched for.\r\n\r\nThe keyword there was \"currently\". I am aware that anything can be changed. You would need to alter `do_search()` so it has a knowledge about what has called it or \"return\" match positions to the caller and emit autocmds from there. Not sure if it's worth it though.\r\n\r\n> > Is the source of the search important? At this point it may be better to use cmd expr mapping / nmap if you are interested in specific types.\r\n> \r\n> That is exactly what we want to avoid. See https://github.com/lewis6991/satellite.nvim/blob/main/lua/satellite/autocmd/search.lua which implements a `Search` user autocmd.\r\n\r\nFrom a quick study of the plugin looks like the relevant bits would be:\r\n* `SEARCH_PEEK` - to tell if the search performed is a part of the preview\r\n* `dirc` & `SEARCH_REV` to tell the direction\r\n\r\nLooks like satellite.nvim is hooking normal mode search commands and `CmdLine` no because the exact source is important but to infer the values listed above.\r\n\r\nWhen it would be important what exact mapping was used it may be better to just nmap those.\r\n\r\n> > Feels like a separate thing. :nohlsearch doesn't trigger anything search-related. Making the current value part of the v:event is easy, but detecting the change is not.\r\n> \r\n> It triggers whether search is displayed or not. Detecting is easy, you just need to fire the autocmd in a different place.\r\n> \r\n> > Redraw seems to be the one responsible for handling the effect of :nohlsearch, see src/nvim/drawline.c. It doesn't use anything form the high-level do_search()/searchit(). Instead, it operates on the low level regexps and uses the last precompiled regex stored in screen_search_hl to do the highlighting.\r\n> \r\n> Please don't get dragged up in implementation and keep focus on the API.\r\n\r\n`:nohlsearch` doesn't seem to fit `SearchPost` (or `Search`) event. It doesn't affect the current search. Doesn't change the pattern. Doesn't jump. Doesn't peek. It just affects how things are drawn.\r\n\r\nIMO implementation highlights how different / detached those two concepts are.\r\n\r\n> > I don't see any sensible way to plug into that or to share any code with the proposed implementation of SearchPost. I think a completely different mechanism to watch for it would be better.\r\n> \r\n> A different mechanism increases surface area. You don't need to share any code, we are just triggering autocmds and passing different arguments. The only consideration we should make is whether detecting too many events on the same autocmd will cause too much noise, which I don't think is a problem for `hlsearch`.\r\n\r\nTriggering `SearchPost` (or `Search`) event for highlight change with most of the other keys empty or missing to detect a visual change doesn't seem right to me. It adds a lot of special casing when handling the event.\r\n \r\n> > That should be easy to cover. I believe it uses SEARCH_PEEK so instead of ignoring it we can have the value as a bool in v:event.\r\n> \r\n> We should also consider not using `v:event` and just define a data structure that gets passed to the Lua callback. `v:event` is a bad idiom IMO, and Lua autocmds have the ability to pass any specific data to their callbacks.\r\n\r\nWhile `v:event` is janky I see value in maintaining some level of viml compatibility. Not sure what's the nvim's direction is here, I'm new to trying to contribute here :-)",
            "created_at": "2022-10-18T11:11:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1282216824",
            "id": 1282216824,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5MbRN4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282216824/reactions"
            },
            "updated_at": "2022-10-18T11:11:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1282216824",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16490?v=4",
                "events_url": "https://api.github.com/users/ivyl/events{/privacy}",
                "followers_url": "https://api.github.com/users/ivyl/followers",
                "following_url": "https://api.github.com/users/ivyl/following{/other_user}",
                "gists_url": "https://api.github.com/users/ivyl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ivyl",
                "id": 16490,
                "login": "ivyl",
                "node_id": "MDQ6VXNlcjE2NDkw",
                "organizations_url": "https://api.github.com/users/ivyl/orgs",
                "received_events_url": "https://api.github.com/users/ivyl/received_events",
                "repos_url": "https://api.github.com/users/ivyl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ivyl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ivyl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ivyl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Which mentions such an autocmd also needs to detect `nohlsearch`.\r\n\r\n@lewis6991 is this a blocker? Seems like we could track it as a followup without incurring any debt.",
            "created_at": "2023-06-21T09:06:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1600471872",
            "id": 1600471872,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5fZUNA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600471872/reactions"
            },
            "updated_at": "2023-06-21T09:06:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600471872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wanted the event to be named `Search` and also merge in and deprecate `SearchWrapped`.\n\nIn fact, none of my concerns have been addressed.",
            "created_at": "2023-06-21T09:10:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1600479079",
            "id": 1600479079,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5fZV9n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600479079/reactions"
            },
            "updated_at": "2023-06-21T09:17:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1600479079",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "This has been closed since a request for information has not been answered for 30 days. It can be reopened when the requested information is provided.",
            "created_at": "2023-07-21T11:11:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/20688#issuecomment-1645413319",
            "id": 1645413319,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
            "node_id": "IC_kwDOAPphoM5iEwPH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1645413319/reactions"
            },
            "updated_at": "2023-07-21T11:11:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1645413319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/in/15368?v=4",
                "events_url": "https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}",
                "followers_url": "https://api.github.com/users/github-actions%5Bbot%5D/followers",
                "following_url": "https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}",
                "gists_url": "https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/apps/github-actions",
                "id": 41898282,
                "login": "github-actions[bot]",
                "node_id": "MDM6Qm90NDE4OTgyODI=",
                "organizations_url": "https://api.github.com/users/github-actions%5Bbot%5D/orgs",
                "received_events_url": "https://api.github.com/users/github-actions%5Bbot%5D/received_events",
                "repos_url": "https://api.github.com/users/github-actions%5Bbot%5D/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/github-actions%5Bbot%5D/subscriptions",
                "type": "Bot",
                "url": "https://api.github.com/users/github-actions%5Bbot%5D"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20688/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20688/commits",
    "created_at": "2022-10-17T00:10:27Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20688.diff",
    "draft": false,
    "head": {
        "label": "ivyl:feat/autocmds/searchpost",
        "ref": "feat/autocmds/searchpost",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ivyl/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ivyl/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ivyl/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ivyl/neovim/branches{/branch}",
            "clone_url": "https://github.com/ivyl/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ivyl/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ivyl/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ivyl/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ivyl/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ivyl/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ivyl/neovim/contributors",
            "created_at": "2022-10-17T00:05:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ivyl/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ivyl/neovim/downloads",
            "events_url": "https://api.github.com/repos/ivyl/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ivyl/neovim/forks",
            "full_name": "ivyl/neovim",
            "git_commits_url": "https://api.github.com/repos/ivyl/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ivyl/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ivyl/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ivyl/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ivyl/neovim/hooks",
            "html_url": "https://github.com/ivyl/neovim",
            "id": 552608262,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ivyl/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ivyl/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ivyl/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ivyl/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ivyl/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/ivyl/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ivyl/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ivyl/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIPAiBg",
            "notifications_url": "https://api.github.com/repos/ivyl/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/16490?v=4",
                "events_url": "https://api.github.com/users/ivyl/events{/privacy}",
                "followers_url": "https://api.github.com/users/ivyl/followers",
                "following_url": "https://api.github.com/users/ivyl/following{/other_user}",
                "gists_url": "https://api.github.com/users/ivyl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ivyl",
                "id": 16490,
                "login": "ivyl",
                "node_id": "MDQ6VXNlcjE2NDkw",
                "organizations_url": "https://api.github.com/users/ivyl/orgs",
                "received_events_url": "https://api.github.com/users/ivyl/received_events",
                "repos_url": "https://api.github.com/users/ivyl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ivyl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ivyl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ivyl"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ivyl/neovim/pulls{/number}",
            "pushed_at": "2022-10-17T00:08:50Z",
            "releases_url": "https://api.github.com/repos/ivyl/neovim/releases{/id}",
            "size": 202445,
            "ssh_url": "git@github.com:ivyl/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ivyl/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ivyl/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ivyl/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ivyl/neovim/subscription",
            "svn_url": "https://github.com/ivyl/neovim",
            "tags_url": "https://api.github.com/repos/ivyl/neovim/tags",
            "teams_url": "https://api.github.com/repos/ivyl/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ivyl/neovim/git/trees{/sha}",
            "updated_at": "2022-10-16T22:58:33Z",
            "url": "https://api.github.com/repos/ivyl/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "970ce79cbacf1879c7a61baf7a07ce3e028303c6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/16490?v=4",
            "events_url": "https://api.github.com/users/ivyl/events{/privacy}",
            "followers_url": "https://api.github.com/users/ivyl/followers",
            "following_url": "https://api.github.com/users/ivyl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ivyl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ivyl",
            "id": 16490,
            "login": "ivyl",
            "node_id": "MDQ6VXNlcjE2NDkw",
            "organizations_url": "https://api.github.com/users/ivyl/orgs",
            "received_events_url": "https://api.github.com/users/ivyl/received_events",
            "repos_url": "https://api.github.com/users/ivyl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ivyl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ivyl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ivyl"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20688",
    "id": 1088556787,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20688",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "waiting for reply from the author",
            "id": 248229439,
            "name": "needs:response",
            "node_id": "MDU6TGFiZWwyNDgyMjk0Mzk=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:response"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "locked": false,
    "merge_commit_sha": "e4b22b86818f25ca57f341f57c79a2894a667718",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5A4g7z",
    "number": 20688,
    "patch_url": "https://github.com/neovim/neovim/pull/20688.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20688/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/970ce79cbacf1879c7a61baf7a07ce3e028303c6",
    "title": "feat(autocmds): add SearchPost event",
    "updated_at": "2023-07-21T11:11:44Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20688",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/16490?v=4",
        "events_url": "https://api.github.com/users/ivyl/events{/privacy}",
        "followers_url": "https://api.github.com/users/ivyl/followers",
        "following_url": "https://api.github.com/users/ivyl/following{/other_user}",
        "gists_url": "https://api.github.com/users/ivyl/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ivyl",
        "id": 16490,
        "login": "ivyl",
        "node_id": "MDQ6VXNlcjE2NDkw",
        "organizations_url": "https://api.github.com/users/ivyl/orgs",
        "received_events_url": "https://api.github.com/users/ivyl/received_events",
        "repos_url": "https://api.github.com/users/ivyl/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ivyl/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ivyl/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ivyl"
    }
}