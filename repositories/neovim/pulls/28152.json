{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28152/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28152/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28152"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28152"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28152/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28152"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/620ca70c5c2a9e3df222b9da28633677d5223302"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5250,
            "forks_count": 5250,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1713,
            "open_issues_count": 1713,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-04-09T01:48:31Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 266306,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 75972,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-04-09T00:12:02Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 75972,
            "watchers_count": 75972,
            "web_commit_signoff_required": false
        },
        "sha": "ffe3002568f849df1b155b90d6ea0e1f48d8c6d5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "- Changed `reuse_client` to check workspace folders in addition to\r\n  root_dir.",
    "closed_at": "2024-04-02T15:47:17Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@mfussenegger I saw your feedback on https://github.com/neovim/neovim/pull/20779#pullrequestreview-1152265645 but didn't fully understand it.\r\n\r\n> This would break existing uses of vim.lsp.start. We shouldn't do that unless there is a very good reason.\r\n\r\nI'm not sure why this is. Can you explain?\r\n\r\n> If reuse_client returns true, vim.lsp.start checks if the root_dir or workspace_folders from the config are different then the one from the client. If so, it extends the clients workspace_folders. This allows users to provide a different reuse_client function - e.g. if a client is known to handle multiple projects with a single language server instance, they could call start with something like reuse_client = function(client, config) return client.name == config.name) end.\r\n\r\nThis means by default, that `vim.lsp.start()` won't be reused even if the client supports multiple workspaces. Why would this be desirable? Surely this kind of stuff should be automatic and not something the general user should configure?\r\n\r\n> There also doesn't seem to be a reason to move the workspace folder functions from the .buf module to the .lsp module?\r\n\r\nI've maintained the API, but just moved some client specific logic into `client.lua`. Tbh, I'm not really sure of the purpose of the workspace functions in `vim.lsp.buf` as workspace folders are client specific, not buffer specific.",
            "created_at": "2024-04-02T11:02:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/28152#issuecomment-2031707174",
            "id": 2031707174,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
            "node_id": "IC_kwDOAPphoM55GWQm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2031707174/reactions"
            },
            "updated_at": "2024-04-02T11:08:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2031707174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Why would this be desirable? Surely this kind of stuff should be automatic and not something the general user should configure?\r\n\r\nBecause there's a difference between opening multiple separate projects and opening a single project spanning different root folders. \r\nIf we change lsp.start to always auto extend to workspace folders if the server supports it, we change the behaviour from the first use case to the second.\r\n\r\nGranted, for language servers that are mostly single file (like css), or for cases like luals for plugin development the second scenario might make more sense, but for other languages it's rarer.\r\n\r\nAs a compromise, maybe we could expose an alternative reuse_client function to make it convenient to opt into multi-root behaviour. `lsp.start(... reuse_client = vim.lsp...)`\r\n\r\n> Tbh, I'm not really sure of the purpose of the workspace functions in vim.lsp.buf as workspace folders are client specific, not buffer specific.\r\n\r\nThey don't really make much sense. We should deprecate them and replace them with methods on the client\r\n",
            "created_at": "2024-04-02T11:23:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/28152#issuecomment-2031752325",
            "id": 2031752325,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
            "node_id": "IC_kwDOAPphoM55GhSF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2031752325/reactions"
            },
            "updated_at": "2024-04-02T11:23:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2031752325",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Because there's a difference between opening multiple separate projects and opening a single project spanning different root folders.\r\n\r\nAh I see. I guess vscode solves this by defining projects as directories with a `.vscode` folder, which we obviously can't do.\r\n\r\n> As a compromise, maybe we could expose an alternative reuse_client function to make it convenient to opt into multi-root behaviour. lsp.start(... reuse_client = vim.lsp...)\r\n\r\nI'm happy to walk this back. To solve this we need some mechanism for Nvim to recognise projects.\r\n\r\nFWIW, I've only done this because lspconfig does, but I understand now that this isn't strictly sound.\r\n\r\n> They don't really make much sense. We should deprecate them and replace them with methods on the client\r\n\r\nOk, I'll pivot this PR to deprecate these.\r\n\r\nThe only other thing to review here is the change to `reuse_client` which properly checks `workspace_folders` and accepts `root_dir` if it exists within some other `root_dir`. I'm not 100% sure the latter is sound either.",
            "created_at": "2024-04-02T13:13:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/28152#issuecomment-2032008785",
            "id": 2032008785,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
            "node_id": "IC_kwDOAPphoM55Hf5R",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032008785/reactions"
            },
            "updated_at": "2024-04-02T13:13:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032008785",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Ok, I'll pivot this PR to deprecate these.\r\n\r\nOn second thought, maybe it's actually not that wrong.\r\n\r\nE.g. looking at vscode, they have a \"Add folder to workspace\" menu-option that leads to a file/directory dialog. I'm not entirely sure what they then do afterwards, but I assume the selected folders always end up being reported as workspace folder to all active language servers too?\r\n\r\nThe `add_workspace_folder` kinda mirrors that, but imho they shouldn't be buffer specific, but global (given we have no workspace or project concept), so they'd probably need to be in `vim.lsp` and optionally support client filtering?\r\n\r\nI think the `Client:..` methods are good enough for programatic access, but for ad-hoc use it seems a bit too low level. Another alternative could be to go ahead with the lsp.buf. function deprecation but add something like `:LspWorkspaceAddFolder`.\r\n\r\nNot sure if we want to open that box, as there are also a few other command candidates (`LspStop` / ` LspRestart` could be added in core already - there's no need for a registry to implement them)  \r\n\r\n\r\n> [...] and accepts root_dir if it exists within some other root_dir. I'm not 100% sure the latter is sound either.\r\n\r\nI'm not sure either. Ad-hoc I can't think of a scenario where you'd want to have a workspace folder that's a child of another workspace folder. Sounds more like a misconfiguration scenario to me.\r\n",
            "created_at": "2024-04-02T14:09:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/28152#issuecomment-2032150454",
            "id": 2032150454,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
            "node_id": "IC_kwDOAPphoM55ICe2",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032150454/reactions"
            },
            "updated_at": "2024-04-02T14:13:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032150454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> E.g. looking at vscode, they have a \"Add folder to workspace\" menu-option that leads to a file/directory dialog. I'm not entirely sure what they then do afterwards, but I assume the selected folders always end up being reported as workspace folder to all active language servers too?\r\n\r\nYes I believe that's true, however I believe in vscode \"workspace\" means \"project\", so when you do \"add folder to workspace\", it is adding a folder to the current project, and the current servers are encapsulated to that project. \r\n\r\nTo open another project you need to run \"New window\" which will open a new workspace/project.\r\n\r\n> The add_workspace_folder kinda mirrors that, but imho they shouldn't be buffer specific, but global (given we have no workspace or project concept), so they'd probably need to be in vim.lsp and optionally support client filtering?\r\n\r\nNot quite as it isn't project scoped like it is in vscode. Unless we want to add the restriction that each Nvim instance should represent a specific project. For now we can probably leave that sort of stuff to third party plugins until we can come up with a better proposal to support multiple projects.\r\n\r\n> I think the Client:.. methods are good enough for programatic access, but for ad-hoc use it seems a bit too low level. Another alternative could be to go ahead with the lsp.buf. function deprecation but add something like :LspWorkspaceAddFolder.\r\n\r\nThat was the intention. Is ad-hoc use important? It's not something I would personally be keen on using, but if it is, then we probably shouldn't deprecate these functions since buffers are about the only thing we scope. I don't think global functions are a good idea, again unless we introduce the above restriction.\r\n\r\n> Not sure if we want to open that box, as there are also a few other command candidates (LspStop /  LspRestart could be added in core already - there's no need for a registry to implement them)\r\n\r\nI totally think we should add those. Personally, I'd prefer `:Lsp stop`/`:Lsp restart`, but I'm already bikeshedding so that should be discussed separately.\r\n\r\n> I'm not sure either. Ad-hoc I can't think of a scenario where you'd want to have a workspace folder that's a child of another workspace folder. Sounds more like a misconfiguration scenario to me.\r\n\r\nHmm ok, I'll back that off too.",
            "created_at": "2024-04-02T14:36:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/28152#issuecomment-2032218598",
            "id": 2032218598,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
            "node_id": "IC_kwDOAPphoM55ITHm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032218598/reactions"
            },
            "updated_at": "2024-04-02T14:37:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032218598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> however I believe in vscode \"workspace\" means \"project\", so when you do \"add folder to workspace\", it is adding a folder to the current project, and the current servers are encapsulated to that project.\r\n> To open another project you need to run \"New window\" which will open a new workspace/project.\r\n\r\nYes, that's how I understood it as well.\r\n\r\n\r\n> Not quite as it isn't project scoped like it is in vscode. Unless we want to add the restriction that each Nvim instance should represent a specific project. For now we can probably leave that sort of stuff to third party plugins until we can come up with a better proposal to support multiple projects.\r\n\r\n> That was the intention. Is ad-hoc use important? It's not something I would personally be keen on using, but if it is, then we probably shouldn't deprecate these functions since buffers are about the only thing we scope. I don't think global functions are a good idea, again unless we introduce the above restriction.\r\n\r\nGood point about the project scoping.\r\nI don't really know if ad-hoc use is important, but after this discussion I'd tend to keep the lsp.buf functions for now (no deprecation).\r\n\r\n> Personally, I'd prefer :Lsp stop/:Lsp restart, but I'm already bikeshedding so that should be discussed separately.\r\n\r\nNo strong opinions and either is fine for me. In my plugins/dotfiles I tend to go with dedicated commands per action, but that's mostly because the command completion system has no sub-command concept. These are the ones I currently use:\r\n\r\nhttps://github.com/mfussenegger/dotfiles/blob/1d205713cdb10e2f89a228170f4b23e921142fe1/vim/.config/nvim/lua/me/lsp.lua#L210-L249\r\n",
            "created_at": "2024-04-02T14:59:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/28152#issuecomment-2032290459",
            "id": 2032290459,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
            "node_id": "IC_kwDOAPphoM55Ikqb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032290459/reactions"
            },
            "updated_at": "2024-04-02T14:59:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2032290459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28152/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28152/commits",
    "created_at": "2024-04-02T10:59:09Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28152.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:multiroot",
        "ref": "multiroot",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-04-08T05:17:22Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 259340,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "620ca70c5c2a9e3df222b9da28633677d5223302",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28152",
    "id": 1802226656,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28152",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d9235efa76229708586d3c9db3dcbac46127ca0a",
    "merged_at": "2024-04-02T15:47:17Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5ra8vg",
    "number": 28152,
    "patch_url": "https://github.com/neovim/neovim/pull/28152.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28152/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/620ca70c5c2a9e3df222b9da28633677d5223302",
    "title": "refactor(lsp): move workspace folder logic into the client",
    "updated_at": "2024-04-02T15:51:08Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28152",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}