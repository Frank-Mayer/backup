{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/17197/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17197/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/17197"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/17197"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17197/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/87b6cb600fa0a67ac8822941a698646bd2afde6c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4980,
            "forks_count": 4980,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1684,
            "open_issues_count": 1684,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-14T01:55:00Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 230575,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70869,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-14T01:48:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70869,
            "watchers_count": 70869,
            "web_commit_signoff_required": false
        },
        "sha": "6f0baa0bb7a57ec4451047876321eb6f24130b10",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This PR updates `terminal.c` so that the terminal responds to OSC foreground/background color requests.\r\n\r\n#### Motivation\r\n\r\nThe motivation for this update is Issue #15365, where `background=light` is not properly set for Neovim running from a Neovim `:terminal`. I encounter this when opening a terminal to make git commits, which opens `EDITOR=nvim` in the nested terminal.\r\n\r\n#### Caveat\r\n\r\nUnder the current code in this PR, the terminal does not return the actual foreground/background colors, but rather returns:\r\n-  `foreground=white` and `background=black` when Neovim option `background` is `dark`\r\n-  `foreground=black` and `background=white` when Neovim option `background` is `light`\r\n\r\nTo return the actual foreground/background colors, an OSC foreground/background request would presumably have to be made to the host terminal. For `background`, this is done at startup, so a subsequent request could be avoided by retaining the color values from then.\r\n\r\nAlthough the OSC responses are not correct, responding with black or white for background is sufficient to have nested Neovim sessions set `background` properly. I believe, but am not certain, this is how Vim handles the situation (https://github.com/vim/vim/blob/0023f82a76cf43a12b41e71f97a2e860d0444e1b/src/terminal.c#L4109-L4120). Loading Vim within a nested terminal of Vim has background set to match the host Vim.\r\n\r\n#### Tests\r\n\r\nI've added two tests in `test/functional/terminal/tui_spec.lua` to check that the update works as expected.\r\n\r\nSome existing tests in `test/functional/terminal/tui_spec.lua`, added as part of #12004, were depending on the nested terminal not responding to an OSC background request. Because `background` was not automatically set at startup, the tests could trigger the option being set by simulating the OSC responses. I've removed these existing tests, porting two of the split OSC response tests to `test/unit/tui_spec.lua`. These new unit tests have no dependence on the nested terminal not responding to an OSC background request.\r\n\r\nThe `sleep` and `retry` calls were added to tests to accommodate the delay in automatically setting `background`. Additionally the `nottimeout` setting was set in a `main_spec.lua` to avoid a failed test with the second part of the OSC response written to the command line.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857220951"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857220951"
                }
            },
            "author_association": "MEMBER",
            "body": "why isn't OptionSet being tested now? is it no longer triggered?",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-04-25T02:31:23Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857220951",
            "id": 857220951,
            "line": 1610,
            "node_id": "PRRC_kwDOAPphoM4zGCdX",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 1610,
            "original_position": 68,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 68,
            "pull_request_review_id": 951294043,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857220951/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T02:31:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857220951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857221186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221186"
                }
            },
            "author_association": "MEMBER",
            "body": "\"neovim\" is the project name. Nvim is the editor name. nvim is the cli name.\r\n```suggestion\r\n  it('is properly set in a nested Nvim instance when background=light', function()\r\n```",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-04-25T02:32:07Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the OSC command part split.\n-    feed_data('\\027]11;rgb')\n-    feed_data(':ffff/ffff/ffff\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the Pt portion split.\n-    feed_data('\\027]11;rgba:ffff/fff')\n-    feed_data('f/ffff/8000\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=light', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857221186",
            "id": 857221186,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zGChC",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 1585,
            "original_position": 103,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 951294424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T02:32:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857221289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221289"
                }
            },
            "author_association": "MEMBER",
            "body": "You can use the `S_LEN` macro here\r\n\r\n```suggestion\r\n      terminal_send(term, S_LEN(data));\r\n```",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-04-25T02:32:20Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)\n+{\n+  // Check for an OSC foreground/background color request, and respond\n+  // accordingly.\n+  if (cmdlen == 4) {\n+    bool fg_request = strncmp(command, \"10;?\", 4) == 0;\n+    bool bg_request = !fg_request && strncmp(command, \"11;?\", 4) == 0;\n+    if (fg_request || bg_request) {\n+      // WARN: This does not return the actual foreground/background color, but\n+      // rather returns:\n+      //   - fg=white/bg=black when Neovim option 'background' is 'dark'\n+      //   - fg=black/bg=white when Neovim option 'background' is 'light'\n+      char_u *bg_option;\n+      long dummy;\n+      get_option_value(\"background\", &dummy, &bg_option, OPT_GLOBAL);\n+      bool bg_option_dark = STRNCMP(bg_option, \"dark\", 4) == 0;\n+      xfree(bg_option);\n+      Terminal *term = user;\n+      int red = 0x00, green = 0x00, blue = 0x00;\n+      if ((fg_request && bg_option_dark) || (bg_request && !bg_option_dark)) {\n+        red = green = blue = 0xff;\n+      }\n+      char data[25];\n+      snprintf(\n+          data, sizeof(data), \"\\x1b]%.3srgb:%02x%02x/%02x%02x/%02x%02x\\x07\",\n+          command, red, red, green, green, blue, blue);\n+      terminal_send(term, data, sizeof(data) - 1);  // excludes null byte",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857221289",
            "id": 857221289,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zGCip",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 202,
            "original_position": 38,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 951294517,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221289/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T02:32:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857269398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857269398"
                }
            },
            "author_association": "MEMBER",
            "body": "I would rename this function parse_osc in order to match the [name used by Vim](https://github.com/vim/vim/blob/af59e34f1bf214ec6f2d0304c1c5b11ecda25a83/src/terminal.c#L4466), which could potentially make porting future patches easier ",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-04-25T05:33:06Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857269398",
            "id": 857269398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zGOSW",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 176,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 951361413,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857269398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T05:34:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857269398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876391495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391495"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (f30cc5376df62449956f9700afa903c689c7986b).",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-05-18T21:19:08Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876391495",
            "id": 876391495,
            "in_reply_to_id": 857269398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40PKxH",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 176,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 977663597,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391495/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-18T21:19:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876391761"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391761"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (f30cc5376df62449956f9700afa903c689c7986b).",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-05-18T21:19:31Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)\n+{\n+  // Check for an OSC foreground/background color request, and respond\n+  // accordingly.\n+  if (cmdlen == 4) {\n+    bool fg_request = strncmp(command, \"10;?\", 4) == 0;\n+    bool bg_request = !fg_request && strncmp(command, \"11;?\", 4) == 0;\n+    if (fg_request || bg_request) {\n+      // WARN: This does not return the actual foreground/background color, but\n+      // rather returns:\n+      //   - fg=white/bg=black when Neovim option 'background' is 'dark'\n+      //   - fg=black/bg=white when Neovim option 'background' is 'light'\n+      char_u *bg_option;\n+      long dummy;\n+      get_option_value(\"background\", &dummy, &bg_option, OPT_GLOBAL);\n+      bool bg_option_dark = STRNCMP(bg_option, \"dark\", 4) == 0;\n+      xfree(bg_option);\n+      Terminal *term = user;\n+      int red = 0x00, green = 0x00, blue = 0x00;\n+      if ((fg_request && bg_option_dark) || (bg_request && !bg_option_dark)) {\n+        red = green = blue = 0xff;\n+      }\n+      char data[25];\n+      snprintf(\n+          data, sizeof(data), \"\\x1b]%.3srgb:%02x%02x/%02x%02x/%02x%02x\\x07\",\n+          command, red, red, green, green, blue, blue);\n+      terminal_send(term, data, sizeof(data) - 1);  // excludes null byte",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876391761",
            "id": 876391761,
            "in_reply_to_id": 857221289,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40PK1R",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 202,
            "original_position": 38,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 977663942,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391761/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-18T21:19:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876391987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391987"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (4b77699a973fa5a277f10ea1ded00e82ec8dd4a8).",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-05-18T21:19:49Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the OSC command part split.\n-    feed_data('\\027]11;rgb')\n-    feed_data(':ffff/ffff/ffff\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the Pt portion split.\n-    feed_data('\\027]11;rgba:ffff/fff')\n-    feed_data('f/ffff/8000\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=light', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876391987",
            "id": 876391987,
            "in_reply_to_id": 857221186,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40PK4z",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 1585,
            "original_position": 103,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 977664193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391987/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-18T21:34:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876399889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876399889"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That test was starting a nested Nvim instance. On startup, that nested instance would query for background color, but there would be no response. The test would then simulate a background color response and check that Nvim handled accordingly by setting a background option (`OptionSet` would be triggered).\r\n\r\nNow when the nested instance initially queries on startup for background color, there is a response, so a simulated response after startup doesn't work in this context since Nvim is no longer in a state to handle the response and trigger `OptionSet` at that point.\r\n\r\nThat test was added to test that the query response is properly handled when the response is not split (presumably the easier case relative to being split). This is still tested for in `test/unit/tui_spec.lua`, but not by relying on the `OptionSet` event.\r\n\r\n**Summary**\r\n\r\nThe existing test had a dependence on the nested terminal not responding to an OSC background request. Now that the nested terminal does respond to an OSC background request, that approach no longer works.",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2022-05-18T21:31:20Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876399889",
            "id": 876399889,
            "in_reply_to_id": 857220951,
            "line": 1610,
            "node_id": "PRRC_kwDOAPphoM40PM0R",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 1610,
            "original_position": 68,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 68,
            "pull_request_review_id": 977674906,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876399889/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-19T15:19:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876399889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1391794248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391794248"
                }
            },
            "author_association": "MEMBER",
            "body": "#25918 moves TUI bg response handling to Lua, and deletes this test file.",
            "commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "created_at": "2023-11-13T23:01:46Z",
            "diff_hunk": "@@ -153,6 +153,50 @@ itp('handle_background_color', function()\n   rbuffer.rbuffer_consumed(rbuf, #term_response)\n \n \n+  -- Handles background color with the OSC command part split.\n+  term_response = '\\027]11;rgb'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1391794248",
            "id": 1391794248,
            "line": 157,
            "node_id": "PRRC_kwDOAPphoM5S9RhI",
            "original_commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "original_line": 157,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/unit/tui_spec.lua",
            "position": 5,
            "pull_request_review_id": 1728421259,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391794248/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T23:01:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391794248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "LGTM. Can you rebase?\r\n\r\n@jamessan @erw7 care to review?\r\n\r\nThis looks like it will affect ~~https://github.com/neovim/neovim/pull/16740~~ https://github.com/neovim/neovim/pull/22159 (ping @glacambre).",
            "created_at": "2022-04-25T02:24:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1107998477",
            "id": 1107998477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5CCrcN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1107998477/reactions"
            },
            "updated_at": "2023-11-13T21:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1107998477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And this will also affect #17962",
            "created_at": "2022-04-25T02:29:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1108001019",
            "id": 1108001019,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5CCsD7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1108001019/reactions"
            },
            "updated_at": "2022-04-25T02:29:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1108001019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the feedback! Sorry for my delay in responding.\r\n\r\nI'm running tests locally with the following command:\r\n\r\n```\r\nTEST_FILE=test/functional/terminal/tui_spec.lua make functionaltest\r\n```\r\n\r\nHowever, I'm seeing the following error 28 times:\r\n\r\n```\r\nstack traceback:\r\n        test/functional/helpers.lua:106: in function 'eval'\r\n        test/functional/helpers.lua:787: in function 'new_pipename'\r\n        test/functional/terminal/tui_spec.lua:32: in function <test/functional/terminal/tui_spec.lua:30>\r\n\r\n[  ERROR   ] test/functional/terminal/tui_spec.lua @ 30: TUI before_each\r\ntest/functional/helpers.lua:106: Vim:Failed to start server: address already in use\r\n```\r\n\r\nI see the same errors on `master`, so this is presumably as issue with my environment. Please let me know if you have any advice for resolving.",
            "created_at": "2022-05-18T21:37:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1130575092",
            "id": 1130575092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5DYzT0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1130575092/reactions"
            },
            "updated_at": "2022-05-19T01:53:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1130575092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17197/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/17197/commits",
    "created_at": "2022-01-25T23:57:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/17197.diff",
    "draft": false,
    "head": {
        "label": "dstein64:issue_15365",
        "ref": "issue_15365",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dstein64/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dstein64/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dstein64/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dstein64/neovim/branches{/branch}",
            "clone_url": "https://github.com/dstein64/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dstein64/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dstein64/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dstein64/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dstein64/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dstein64/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dstein64/neovim/contributors",
            "created_at": "2022-01-07T16:43:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dstein64/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dstein64/neovim/downloads",
            "events_url": "https://api.github.com/repos/dstein64/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dstein64/neovim/forks",
            "full_name": "dstein64/neovim",
            "git_commits_url": "https://api.github.com/repos/dstein64/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dstein64/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dstein64/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dstein64/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dstein64/neovim/hooks",
            "html_url": "https://github.com/dstein64/neovim",
            "id": 445588218,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dstein64/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dstein64/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dstein64/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dstein64/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dstein64/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/dstein64/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dstein64/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dstein64/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGo8i-g",
            "notifications_url": "https://api.github.com/repos/dstein64/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dstein64/neovim/pulls{/number}",
            "pushed_at": "2023-07-21T02:31:39Z",
            "releases_url": "https://api.github.com/repos/dstein64/neovim/releases{/id}",
            "size": 244221,
            "ssh_url": "git@github.com:dstein64/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/dstein64/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dstein64/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dstein64/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dstein64/neovim/subscription",
            "svn_url": "https://github.com/dstein64/neovim",
            "tags_url": "https://api.github.com/repos/dstein64/neovim/tags",
            "teams_url": "https://api.github.com/repos/dstein64/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dstein64/neovim/git/trees{/sha}",
            "updated_at": "2022-01-12T20:58:03Z",
            "url": "https://api.github.com/repos/dstein64/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
            "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
            "followers_url": "https://api.github.com/users/dstein64/followers",
            "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
            "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dstein64",
            "id": 541289,
            "login": "dstein64",
            "node_id": "MDQ6VXNlcjU0MTI4OQ==",
            "organizations_url": "https://api.github.com/users/dstein64/orgs",
            "received_events_url": "https://api.github.com/users/dstein64/received_events",
            "repos_url": "https://api.github.com/users/dstein64/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dstein64"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/17197",
    "id": 831967435,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "a8cfab2d440eff604c632c9587f3d7acc11ad6a2",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM4xltDL",
    "number": 17197,
    "patch_url": "https://github.com/neovim/neovim/pull/17197.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/17197/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/87b6cb600fa0a67ac8822941a698646bd2afde6c",
    "title": "feat(terminal): respond to OSC background and foreground request",
    "updated_at": "2023-11-13T23:01:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
        "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
        "followers_url": "https://api.github.com/users/dstein64/followers",
        "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
        "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dstein64",
        "id": 541289,
        "login": "dstein64",
        "node_id": "MDQ6VXNlcjU0MTI4OQ==",
        "organizations_url": "https://api.github.com/users/dstein64/orgs",
        "received_events_url": "https://api.github.com/users/dstein64/received_events",
        "repos_url": "https://api.github.com/users/dstein64/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dstein64"
    }
}