{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/17197/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17197/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/17197"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/17197"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17197/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d7e3657568b09fd4e036b7095f7d15f5a2e666d1"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5142,
            "forks_count": 5142,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1740,
            "open_issues_count": 1740,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T01:33:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247954,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72793,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-16T01:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72793,
            "watchers_count": 72793,
            "web_commit_signoff_required": false
        },
        "sha": "92c59c39c3d98d313071f9761c448e8acfd00118",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This PR updates `_defaults.lua` so that the terminal responds to OSC foreground/background color requests.\r\n\r\n#### Motivation\r\n\r\nThe motivation for this update is Issue #15365, where `background=light` is not properly set for Neovim running from a Neovim `:terminal`. I encounter this when opening a terminal to make git commits, which opens `EDITOR=nvim` in the nested terminal.\r\n\r\n#### Caveat\r\n\r\nUnder the current code in this PR, the terminal does not return the actual foreground/background colors, but rather returns:\r\n-  `foreground=white` and `background=black` when Neovim option `background` is `dark`\r\n-  `foreground=black` and `background=white` when Neovim option `background` is `light`\r\n\r\nTo return the actual foreground/background colors, an OSC foreground/background request would presumably have to be made to the host terminal. For `background`, this is done at startup, so a subsequent request could be avoided by retaining the color values from then.\r\n\r\nAlthough the OSC responses are not correct, responding with black or white for background is sufficient to have nested Neovim sessions set `background` properly. This is how Vim [handles](https://github.com/neovim/neovim/pull/17197#discussion_r1451582798) the situation (https://github.com/vim/vim/blob/0023f82a76cf43a12b41e71f97a2e860d0444e1b/src/terminal.c#L4109-L4120). Loading Vim within a nested terminal of Vim has background set to match the host Vim.\r\n\r\n#### Tests\r\n\r\nI've added two tests in `test/functional/terminal/tui_spec.lua` to check that the update works as expected.\r\n\r\nSome existing tests in `test/functional/terminal/tui_spec.lua`, added as part of #12004, were depending on the nested terminal not responding to an OSC background request. Because `background` was not automatically set at startup, the tests could trigger the option being set by simulating the OSC responses. I've removed these existing tests, ~porting two of the split OSC response tests to `test/unit/tui_spec.lua`. These new unit tests have no dependence on the nested terminal not responding to an OSC background request.~\r\n\r\nThe `sleep` and `retry` calls were added to tests to accommodate the delay in automatically setting `background`. Additionally the `nottimeout` setting was set in a `main_spec.lua` to avoid a failed test with the second part of the OSC response written to the command line.",
    "closed_at": "2024-01-15T16:12:08Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857220951"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857220951"
                }
            },
            "author_association": "MEMBER",
            "body": "why isn't OptionSet being tested now? is it no longer triggered?",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-04-25T02:31:23Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857220951",
            "id": 857220951,
            "line": 2846,
            "node_id": "PRRC_kwDOAPphoM4zGCdX",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 2846,
            "original_position": 68,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 152,
            "pull_request_review_id": 951294043,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857220951/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T02:31:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857220951",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857221186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221186"
                }
            },
            "author_association": "MEMBER",
            "body": "\"neovim\" is the project name. Nvim is the editor name. nvim is the cli name.\r\n```suggestion\r\n  it('is properly set in a nested Nvim instance when background=light', function()\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-04-25T02:32:07Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the OSC command part split.\n-    feed_data('\\027]11;rgb')\n-    feed_data(':ffff/ffff/ffff\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the Pt portion split.\n-    feed_data('\\027]11;rgba:ffff/fff')\n-    feed_data('f/ffff/8000\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=light', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857221186",
            "id": 857221186,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zGChC",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 1585,
            "original_position": 103,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 951294424,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T02:32:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857221289"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221289"
                }
            },
            "author_association": "MEMBER",
            "body": "You can use the `S_LEN` macro here\r\n\r\n```suggestion\r\n      terminal_send(term, S_LEN(data));\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-04-25T02:32:20Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)\n+{\n+  // Check for an OSC foreground/background color request, and respond\n+  // accordingly.\n+  if (cmdlen == 4) {\n+    bool fg_request = strncmp(command, \"10;?\", 4) == 0;\n+    bool bg_request = !fg_request && strncmp(command, \"11;?\", 4) == 0;\n+    if (fg_request || bg_request) {\n+      // WARN: This does not return the actual foreground/background color, but\n+      // rather returns:\n+      //   - fg=white/bg=black when Neovim option 'background' is 'dark'\n+      //   - fg=black/bg=white when Neovim option 'background' is 'light'\n+      char_u *bg_option;\n+      long dummy;\n+      get_option_value(\"background\", &dummy, &bg_option, OPT_GLOBAL);\n+      bool bg_option_dark = STRNCMP(bg_option, \"dark\", 4) == 0;\n+      xfree(bg_option);\n+      Terminal *term = user;\n+      int red = 0x00, green = 0x00, blue = 0x00;\n+      if ((fg_request && bg_option_dark) || (bg_request && !bg_option_dark)) {\n+        red = green = blue = 0xff;\n+      }\n+      char data[25];\n+      snprintf(\n+          data, sizeof(data), \"\\x1b]%.3srgb:%02x%02x/%02x%02x/%02x%02x\\x07\",\n+          command, red, red, green, green, blue, blue);\n+      terminal_send(term, data, sizeof(data) - 1);  // excludes null byte",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857221289",
            "id": 857221289,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zGCip",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 202,
            "original_position": 38,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 951294517,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221289/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T02:32:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857221289",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r857269398"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/857269398"
                }
            },
            "author_association": "MEMBER",
            "body": "I would rename this function parse_osc in order to match the [name used by Vim](https://github.com/vim/vim/blob/af59e34f1bf214ec6f2d0304c1c5b11ecda25a83/src/terminal.c#L4466), which could potentially make porting future patches easier ",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-04-25T05:33:06Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r857269398",
            "id": 857269398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4zGOSW",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 176,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 951361413,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857269398/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-04-25T05:34:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/857269398",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4",
                "events_url": "https://api.github.com/users/glacambre/events{/privacy}",
                "followers_url": "https://api.github.com/users/glacambre/followers",
                "following_url": "https://api.github.com/users/glacambre/following{/other_user}",
                "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glacambre",
                "id": 11534587,
                "login": "glacambre",
                "node_id": "MDQ6VXNlcjExNTM0NTg3",
                "organizations_url": "https://api.github.com/users/glacambre/orgs",
                "received_events_url": "https://api.github.com/users/glacambre/received_events",
                "repos_url": "https://api.github.com/users/glacambre/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glacambre"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876391495"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391495"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (f30cc5376df62449956f9700afa903c689c7986b).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-05-18T21:19:08Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876391495",
            "id": 876391495,
            "in_reply_to_id": 857269398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40PKxH",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 176,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 977663597,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391495/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-18T21:19:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876391761"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391761"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (f30cc5376df62449956f9700afa903c689c7986b).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-05-18T21:19:31Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)\n+{\n+  // Check for an OSC foreground/background color request, and respond\n+  // accordingly.\n+  if (cmdlen == 4) {\n+    bool fg_request = strncmp(command, \"10;?\", 4) == 0;\n+    bool bg_request = !fg_request && strncmp(command, \"11;?\", 4) == 0;\n+    if (fg_request || bg_request) {\n+      // WARN: This does not return the actual foreground/background color, but\n+      // rather returns:\n+      //   - fg=white/bg=black when Neovim option 'background' is 'dark'\n+      //   - fg=black/bg=white when Neovim option 'background' is 'light'\n+      char_u *bg_option;\n+      long dummy;\n+      get_option_value(\"background\", &dummy, &bg_option, OPT_GLOBAL);\n+      bool bg_option_dark = STRNCMP(bg_option, \"dark\", 4) == 0;\n+      xfree(bg_option);\n+      Terminal *term = user;\n+      int red = 0x00, green = 0x00, blue = 0x00;\n+      if ((fg_request && bg_option_dark) || (bg_request && !bg_option_dark)) {\n+        red = green = blue = 0xff;\n+      }\n+      char data[25];\n+      snprintf(\n+          data, sizeof(data), \"\\x1b]%.3srgb:%02x%02x/%02x%02x/%02x%02x\\x07\",\n+          command, red, red, green, green, blue, blue);\n+      terminal_send(term, data, sizeof(data) - 1);  // excludes null byte",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876391761",
            "id": 876391761,
            "in_reply_to_id": 857221289,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40PK1R",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 202,
            "original_position": 38,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 977663942,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391761/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-18T21:19:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391761",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876391987"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391987"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (4b77699a973fa5a277f10ea1ded00e82ec8dd4a8).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-05-18T21:19:49Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the OSC command part split.\n-    feed_data('\\027]11;rgb')\n-    feed_data(':ffff/ffff/ffff\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    -- Send a background response with the Pt portion split.\n-    feed_data('\\027]11;rgba:ffff/fff')\n-    feed_data('f/ffff/8000\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=light', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876391987",
            "id": 876391987,
            "in_reply_to_id": 857221186,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM40PK4z",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 1585,
            "original_position": 103,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 977664193,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391987/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-18T21:34:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876391987",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r876399889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/876399889"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "That test was starting a nested Nvim instance. On startup, that nested instance would query for background color, but there would be no response. The test would then simulate a background color response and check that Nvim handled accordingly by setting a background option (`OptionSet` would be triggered).\r\n\r\nNow when the nested instance initially queries on startup for background color, there is a response, so a simulated response after startup doesn't work in this context since Nvim is no longer in a state to handle the response and trigger `OptionSet` at that point.\r\n\r\nThat test was added to test that the query response is properly handled when the response is not split (presumably the easier case relative to being split). This is still tested for in `test/unit/tui_spec.lua`, but not by relying on the `OptionSet` event.\r\n\r\n**Summary**\r\n\r\nThe existing test had a dependence on the nested terminal not responding to an OSC background request. Now that the nested terminal does respond to an OSC background request, that approach no longer works.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2022-05-18T21:31:20Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r876399889",
            "id": 876399889,
            "in_reply_to_id": 857220951,
            "line": 2846,
            "node_id": "PRRC_kwDOAPphoM40PM0R",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 2846,
            "original_position": 68,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 152,
            "pull_request_review_id": 977674906,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876399889/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-05-19T15:19:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/876399889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1391794248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391794248"
                }
            },
            "author_association": "MEMBER",
            "body": "#25918 moves TUI bg response handling to Lua, and deletes this test file.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2023-11-13T23:01:46Z",
            "diff_hunk": "@@ -153,6 +153,50 @@ itp('handle_background_color', function()\n   rbuffer.rbuffer_consumed(rbuf, #term_response)\n \n \n+  -- Handles background color with the OSC command part split.\n+  term_response = '\\027]11;rgb'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1391794248",
            "id": 1391794248,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5S9RhI",
            "original_commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "original_line": 157,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/unit/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 1728421259,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391794248/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-13T23:01:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1391794248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1398045360"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398045360"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "~With this PR, a terminal in Neovim reports `foreground` and `background` colors to a nested Neovim instance.~\r\n\r\n~Under tests, the nested Neovim instance sets its `background` to `light` after receiving information from the outer Neovim terminal that it's running in. Prior to this PR, the `background` would have been kept as `dark`, since the OSC background query would not have been responded to. With the `background` set to `light` instead of `dark`, the color of \"Press ENTER or type command to continue\" changes.~\r\n\r\n~The outer Neovim instance seems to have its `background` set to `light` independent of the background color of the terminal I use. I'm not sure where in the tests that this is set.~\r\n\r\nUpdate 2024/1/6: Rather than change the expected screen state, I updated the code to set `background=dark`; the existing expected state is used as-is.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2023-11-18T02:49:38Z",
            "diff_hunk": "@@ -2171,7 +2180,7 @@ describe('TUI FocusGained/FocusLost', function()\n       msg3                                              |\n       msg4                                              |\n       msg5                                              |\n-      {10:Press ENTER or type command to continue}{1: }          |\n+      {2:Press ENTER or type command to continue}{1: }          |",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1398045360",
            "id": 1398045360,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TVHqw",
            "original_commit_id": "b0676fccb24347f0f30f2cf2f7c7f125158ffc78",
            "original_line": 2322,
            "original_position": 28,
            "original_start_line": 2174,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 1738170596,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398045360/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-01-06T20:28:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398045360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1398046168"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398046168"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks. I've rebased this PR, with the following updates:\r\n\r\n- Removed the `tui_spec.lua` tests.\r\n- Updated  `parse_osc` for compatibility with the changes to `libvterm`.\r\n- Changed the expected color of \"Press ENTER or type command to continue\" for one of the tests.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2023-11-18T02:55:54Z",
            "diff_hunk": "@@ -153,6 +153,50 @@ itp('handle_background_color', function()\n   rbuffer.rbuffer_consumed(rbuf, #term_response)\n \n \n+  -- Handles background color with the OSC command part split.\n+  term_response = '\\027]11;rgb'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1398046168",
            "id": 1398046168,
            "in_reply_to_id": 1391794248,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TVH3Y",
            "original_commit_id": "87b6cb600fa0a67ac8822941a698646bd2afde6c",
            "original_line": 157,
            "original_position": 5,
            "original_start_line": null,
            "path": "test/unit/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 1738171643,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398046168/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-18T02:55:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398046168",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1398316580"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398316580"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "A downside to the name `parse_osc` is that the function doesn't parse its input.\r\n\r\nEven prior to the change of function signature to satisfy the `libvterm` update, the function was seemingly not properly described by the name `parse_osc`. At the time, the function was checking if the OSC command string was of a particular command integer, and responding accordingly. Now `libvterm` passes the OSC command as an integer directly.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2023-11-19T03:38:34Z",
            "diff_hunk": "@@ -172,6 +173,39 @@ void terminal_teardown(void)\n   pmap_init(ptr_t, &invalidated_terminals);\n }\n \n+static int on_osc_fallback(const char *command, size_t cmdlen, void *user)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1398316580",
            "id": 1398316580,
            "in_reply_to_id": 857269398,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5TWJ4k",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 176,
            "original_position": 12,
            "original_start_line": null,
            "path": "src/nvim/terminal.c",
            "position": null,
            "pull_request_review_id": 1738538049,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398316580/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-19T03:38:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398316580",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1443305980"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1443305980"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@dstein64 could you merge the current master here? It requires to revolve some conflicts. ",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-05T19:38:55Z",
            "diff_hunk": "@@ -2171,7 +2180,7 @@ describe('TUI FocusGained/FocusLost', function()\n       msg3                                              |\n       msg4                                              |\n       msg5                                              |\n-      {10:Press ENTER or type command to continue}{1: }          |\n+      {2:Press ENTER or type command to continue}{1: }          |",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1443305980",
            "id": 1443305980,
            "in_reply_to_id": 1398045360,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WBxn8",
            "original_commit_id": "b0676fccb24347f0f30f2cf2f7c7f125158ffc78",
            "original_line": 2322,
            "original_position": 28,
            "original_start_line": 2174,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": null,
            "pull_request_review_id": 1806731590,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1443305980/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "LEFT",
            "subject_type": "line",
            "updated_at": "2024-01-05T19:38:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1443305980",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446756158"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446756158"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        vim.api.nvim_chan_send(channel, data)\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T00:24:07Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\x1b]10;?'\n+      local bg_request = args.data == '\\x1b]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })\n+        local red, green, blue = 0, 0, 0\n+        local bg_option_dark = vim.o.background == 'dark'\n+        if (fg_request and bg_option_dark) or (bg_request and not bg_option_dark) then\n+          red, green, blue = 65535, 65535, 65535\n+        end\n+        local command = fg_request and 10 or 11\n+        local data = string.format('\\x1b]%d;rgb:%04x/%04x/%04x\\x07', command, red, green, blue)\n+        vim.fn.chansend(channel, data)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446756158",
            "id": 1446756158,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WO78-",
            "original_commit_id": "8843d46766524707dfe54bd218bfc7ac15f664bf",
            "original_line": 177,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1812227051,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446756158/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T00:24:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446756158",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446764117"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446764117"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Updated (https://github.com/neovim/neovim/commit/4bec560aa65b1213b9f5930af33506c6544b527c#diff-49225a49c226c2f1b36f966d0178c556e204cdc0b660c80db9e4568e03f6ef99R177). Thanks.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T00:35:23Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\x1b]10;?'\n+      local bg_request = args.data == '\\x1b]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })\n+        local red, green, blue = 0, 0, 0\n+        local bg_option_dark = vim.o.background == 'dark'\n+        if (fg_request and bg_option_dark) or (bg_request and not bg_option_dark) then\n+          red, green, blue = 65535, 65535, 65535\n+        end\n+        local command = fg_request and 10 or 11\n+        local data = string.format('\\x1b]%d;rgb:%04x/%04x/%04x\\x07', command, red, green, blue)\n+        vim.fn.chansend(channel, data)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446764117",
            "id": 1446764117,
            "in_reply_to_id": 1446756158,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WO95V",
            "original_commit_id": "8843d46766524707dfe54bd218bfc7ac15f664bf",
            "original_line": 177,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1812238698,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446764117/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T00:35:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446764117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446775248"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446775248"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The usage of `args.buf` only works properly if the current buffer is the terminal buffer that initiated the `TermRequest`, which isn't always the case.\r\n\r\nI switched this PR to a draft about 20 minutes ago thinking that this PR would require additional work. Shortly after I switched away from a draft and opened Issue #26972.\r\n\r\nIs there currently a way to get the terminal buffer number that initiated the `TermRequest`?\r\n\r\nRelated: @gpanders's comments here: https://github.com/neovim/neovim/pull/22159#discussion_r1444018763",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T00:59:46Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\x1b]10;?'\n+      local bg_request = args.data == '\\x1b]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446775248",
            "id": 1446775248,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WPAnQ",
            "original_commit_id": "4bec560aa65b1213b9f5930af33506c6544b527c",
            "original_line": 169,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1812254791,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446775248/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T01:00:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446775248",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446796340"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446796340"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "For now, I've limited the OSC response handling to run only when the terminal buffer is the current buffer.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T01:45:40Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\x1b]10;?'\n+      local bg_request = args.data == '\\x1b]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446796340",
            "id": 1446796340,
            "in_reply_to_id": 1446775248,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WPFw0",
            "original_commit_id": "4bec560aa65b1213b9f5930af33506c6544b527c",
            "original_line": 169,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1812284547,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446796340/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T01:45:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446796340",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446798193"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446798193"
                }
            },
            "author_association": "MEMBER",
            "body": "Please add `-i NONE` too as in other tests (or use `--clean` instead of `-u -i`).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T01:49:53Z",
            "diff_hunk": "@@ -1369,12 +1369,17 @@ describe('inccommand on ex mode', function()\n     local screen\n     screen = Screen.new(60, 10)\n     screen:attach()\n-    local id = funcs.termopen(\n-      { nvim_prog, '-u', 'NONE', '-c', 'set termguicolors', '-E', 'test/README.md' },\n-      {\n-        env = { VIMRUNTIME = os.getenv('VIMRUNTIME') },\n-      }\n-    )\n+    local id = funcs.termopen({\n+      nvim_prog,\n+      '-u',\n+      'NONE',",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446798193",
            "id": 1446798193,
            "line": 1375,
            "node_id": "PRRC_kwDOAPphoM5WPGNx",
            "original_commit_id": "f08ae6098f27413a51a3715de36a7b695a301ecd",
            "original_line": 1375,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/core/startup_spec.lua",
            "position": 13,
            "pull_request_review_id": 1812287042,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446798193/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-13T17:09:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446798193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446827377"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446827377"
                }
            },
            "author_association": "MEMBER",
            "body": "See https://github.com/neovim/neovim/pull/26974",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T02:53:51Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\x1b]10;?'\n+      local bg_request = args.data == '\\x1b]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446827377",
            "id": 1446827377,
            "in_reply_to_id": 1446775248,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WPNVx",
            "original_commit_id": "4bec560aa65b1213b9f5930af33506c6544b527c",
            "original_line": 169,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1812327100,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446827377/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T02:53:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446827377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1446862465"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446862465"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> \"For now, I've limited the OSC response handling to run only when the terminal buffer is the current buffer.\"\r\n\r\nThis handling is now reverted.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T04:10:16Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\x1b]10;?'\n+      local bg_request = args.data == '\\x1b]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1446862465",
            "id": 1446862465,
            "in_reply_to_id": 1446775248,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WPV6B",
            "original_commit_id": "4bec560aa65b1213b9f5930af33506c6544b527c",
            "original_line": 169,
            "original_position": 15,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1812378701,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446862465/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T04:10:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1446862465",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1447441160"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447441160"
                }
            },
            "author_association": "MEMBER",
            "body": "Hrm, _technically_ we should  be using the same terminator that was used in the query (BEL or ST), but vterm strips the terminator by the time we get it, so there's no way to know what the original terminator was.\r\n\r\nNo action required here, just noting it for posterity.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T14:12:15Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })\n+        local red, green, blue = 0, 0, 0\n+        local bg_option_dark = vim.o.background == 'dark'\n+        if (fg_request and bg_option_dark) or (bg_request and not bg_option_dark) then\n+          red, green, blue = 65535, 65535, 65535\n+        end\n+        local command = fg_request and 10 or 11\n+        local data = string.format('\\027]%d;rgb:%04x/%04x/%04x\\007', command, red, green, blue)",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1447441160",
            "id": 1447441160,
            "line": 175,
            "node_id": "PRRC_kwDOAPphoM5WRjMI",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 175,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 21,
            "pull_request_review_id": 1813322512,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447441160/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T14:12:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447441160",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1447443440"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447443440"
                }
            },
            "author_association": "MEMBER",
            "body": "We still want to test that the OptionSet event fires though. Can you include that somewhere in the new tests?",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T14:14:11Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1447443440",
            "id": 1447443440,
            "in_reply_to_id": 857220951,
            "line": 2846,
            "node_id": "PRRC_kwDOAPphoM5WRjvw",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 2846,
            "original_position": 68,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 152,
            "pull_request_review_id": 1813326555,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447443440/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-10T14:14:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447443440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1447448121"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447448121"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n• Terminal buffers respond to OSC background and foreground requests |default-autocmds|\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T14:17:59Z",
            "diff_hunk": "@@ -287,6 +287,10 @@ The following new APIs and features were added.\n • Terminal buffers emit a |TermRequest| autocommand event when the child\n   process emits an OSC or DCS control sequence.\n \n+• The terminal emulator responds to OSC background and foreground requests.\n+  See |default-autocmds| for details (the TermRequest item under the\n+  nvim_terminal group).",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1447448121",
            "id": 1447448121,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WRk45",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 292,
            "original_position": 6,
            "original_start_line": 290,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1813334374,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447448121/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-10T14:20:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447448121",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1447450467"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447450467"
                }
            },
            "author_association": "MEMBER",
            "body": "We could use the `guibg` and `guifg` values of the `Normal` highlight group if defined, and only fall back to black/white if `Normal` is cleared.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-10T14:19:54Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1447450467",
            "id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5WRldj",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1813334374,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447450467/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-10T14:20:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1447450467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1449475582"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1449475582"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (28bf7b9681008fbd7b2f2722252c361e1483ff9c).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-11T22:32:24Z",
            "diff_hunk": "@@ -287,6 +287,10 @@ The following new APIs and features were added.\n • Terminal buffers emit a |TermRequest| autocommand event when the child\n   process emits an OSC or DCS control sequence.\n \n+• The terminal emulator responds to OSC background and foreground requests.\n+  See |default-autocmds| for details (the TermRequest item under the\n+  nvim_terminal group).",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1449475582",
            "id": 1449475582,
            "in_reply_to_id": 1447448121,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WZT3-",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 292,
            "original_position": 6,
            "original_start_line": 290,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1816920272,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1449475582/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-11T22:32:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1449475582",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451099148"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451099148"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (29b04019eb27ddb417c737979750c571ace71a02).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T02:10:02Z",
            "diff_hunk": "@@ -1529,119 +1529,44 @@ describe(\"TUI\", function()\n end)\n \n describe('TUI bg color', function()\n-  local screen\n-\n-  local function setup()\n-    -- Only single integration test.\n-    -- See test/unit/tui_spec.lua for unit tests.\n-    clear()\n-    screen = thelpers.screen_setup(0, '[\"'..nvim_prog\n-      ..'\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\", '\n-      ..'\"-c\", \"autocmd OptionSet background echo \\\\\"did OptionSet, yay!\\\\\"\"]')\n-  end\n-\n-  before_each(setup)\n-\n-  it('triggers OptionSet event on unsplit terminal-response', function()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgb:ffff/ffff/ffff\\007')\n-    screen:expect{any='did OptionSet, yay!'}\n-\n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n-\n-    setup()\n-    screen:expect([[\n-    {1: }                                                 |\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {4:~                                                 }|\n-    {5:[No Name]                       0,0-1          All}|\n-                                                      |\n-    {3:-- TERMINAL --}                                    |\n-    ]])\n-    feed_data('\\027]11;rgba:ffff/ffff/ffff/8000\\027\\\\')\n-    screen:expect{any='did OptionSet, yay!'}\n+  before_each(clear)\n \n-    feed_data(':echo \"new_bg=\".&background\\n')\n-    screen:expect{any='new_bg=light'}\n+  it('is properly set in a nested Neovim instance when background=dark', function()\n+    command('set background=dark')  -- set outer Neovim background\n+    local screen = thelpers.screen_setup(0, string.format(\n+      '[\"%s\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]', nvim_prog))\n+    retry(nil, 30000, function()  -- wait for automatic background processing\n+      screen:sleep(20)\n+      feed_command('set background?')  -- check nested Neovim background\n+      screen:expect([[\n+      {1: }                                                 |\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {4:~                                                 }|\n+      {5:[No Name]                       0,0-1          All}|\n+        background=dark                                 |\n+      {3:-- TERMINAL --}                                    |\n+      ]])\n+    end)\n   end)\n \n-  it('triggers OptionSet event with split terminal-response', function()",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451099148",
            "id": 1451099148,
            "in_reply_to_id": 857220951,
            "line": 2846,
            "node_id": "PRRC_kwDOAPphoM5WfgQM",
            "original_commit_id": "59388e2ce17ea92b8b2435d0ee780cb8db4623da",
            "original_line": 2846,
            "original_position": 68,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 152,
            "pull_request_review_id": 1819615154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451099148/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-13T02:10:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451099148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451106101"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451106101"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (29b04019eb27ddb417c737979750c571ace71a02).\r\n\r\nDo you think the new code—that uses the `guifg` and `guibg` values of the `Normal` highlight group—should be avoided for Neovim running in a terminal with `'notermguicolors'` (since the `ctermfg` and `ctermbg` colors may differ from the `guifg` and `guibg` counterparts)?\r\n\r\nUsing the global `Normal` highlight group could be problematic for windows that are floating and/or have modified highlighting (e.g., via `'winhighlight'` or `nvim_win_set_hl_ns`). Do you think we should have more extensive handling for those types of scenarios or do you think it's okay as-is? I wanted to get your feedback before making a change that you'd potentially consider undesirable/unnecessary.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T02:28:21Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451106101",
            "id": 1451106101,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5Wfh81",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1819644840,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451106101/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T02:29:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451106101",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451125236"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451125236"
                }
            },
            "author_association": "MEMBER",
            "body": "Those are all very good considerations.\r\n\r\nI think we should definitely check for `'termguicolors'` and only attempt to use the highlight group if it's set. If it's unset, stick to the white/black colors as you had before.\r\n\r\nThe situation is indeed complicated, because in addition to `NormalFloat` and `winhighlight` which you've already mentioned, there is also the possibility of another highlight namespace being set.\r\n\r\nI think something close to this should work (untested):\r\n\r\n```lua\r\n-- Get winid from args.buf\r\nlocal winid = ...\r\n\r\nlocal float = vim.api.nvim_win_get_config(winid).relative ~= ''\r\nlocal hlgroup = float and 'NormalFloat' or 'Normal'\r\nlocal ns = vim.api.nvim_get_hl_ns({})\r\nif ns == 0 then\r\n  for v in vim.gsplit(vim.wo.winhighlight, ',') do\r\n    local from, to = unpack(vim.split(v, ':'))\r\n    if from == 'Normal' then\r\n      hlgroup = to\r\n    end\r\n  end\r\nend\r\nlocal hl = vim.api.nvim_get_hl(ns, { name = hlgroup, link = false })\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T03:01:14Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451125236",
            "id": 1451125236,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5Wfmn0",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1819701173,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451125236/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T03:01:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451125236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451139562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451139562"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> \"The situation is indeed complicated, because in addition to NormalFloat and winhighlight which you've already mentioned, there is also the possibility of another highlight namespace being set.\"\r\n\r\nI was considering that as well (`nvim_win_set_hl_ns` in parentheses [above](https://github.com/neovim/neovim/pull/17197#discussion_r1451106101)). Another complication is that the `TermRequest` event doesn't indicate which window it is from. There could potentially be multiple windows viewing the same terminal buffer, each with different highlighting. Do you think it's okay to return the OSC response to indicate coloring for (1) the current window if the buffer of that window matches the `TermRequest` buffer and otherwise (2) the window with lowest window ID corresponding to the buffer?",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T03:25:58Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451139562",
            "id": 1451139562,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5WfqHq",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1819708259,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451139562/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T03:26:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451139562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451512153"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451512153"
                }
            },
            "author_association": "MEMBER",
            "body": "The ability for multiple windows to show the terminal buffer simultaneously is a real sticking point. \r\n\r\nLet’s punt on this for now, and keep it how you had it originally. If someone shows up with a use case for knowing the *real* background color we can deal with it then. ",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T13:22:54Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451512153",
            "id": 1451512153,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5WhFFZ",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1820013977,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451512153/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T13:22:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451512153",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451557665"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451557665"
                }
            },
            "author_association": "MEMBER",
            "body": "> `TermRequest` event doesn't indicate which window it is from\r\n\r\nSee https://github.com/neovim/neovim/issues/25844",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T15:51:00Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451557665",
            "id": 1451557665,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5WhQMh",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1820041575,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451557665/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T15:51:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451557665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451569433"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451569433"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> \"Let’s punt on this for now, and keep it how you had it originally.\"\r\n\r\nDone (b3d180ea27d45d2f610ef0a1178a8b258c424595).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T16:47:04Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451569433",
            "id": 1451569433,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5WhTEZ",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1820059792,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451569433/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T16:47:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451569433",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451580888"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451580888"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (6093d3c3a88ab4f49d740248fd1fe521c22ad00e).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T17:52:48Z",
            "diff_hunk": "@@ -1369,12 +1369,17 @@ describe('inccommand on ex mode', function()\n     local screen\n     screen = Screen.new(60, 10)\n     screen:attach()\n-    local id = funcs.termopen(\n-      { nvim_prog, '-u', 'NONE', '-c', 'set termguicolors', '-E', 'test/README.md' },\n-      {\n-        env = { VIMRUNTIME = os.getenv('VIMRUNTIME') },\n-      }\n-    )\n+    local id = funcs.termopen({\n+      nvim_prog,\n+      '-u',\n+      'NONE',",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451580888",
            "id": 1451580888,
            "in_reply_to_id": 1446798193,
            "line": 1375,
            "node_id": "PRRC_kwDOAPphoM5WhV3Y",
            "original_commit_id": "f08ae6098f27413a51a3715de36a7b695a301ecd",
            "original_line": 1375,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/core/startup_spec.lua",
            "position": 13,
            "pull_request_review_id": 1820076734,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451580888/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-13T17:52:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451580888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451582798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451582798"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The simpler behavior—of returning only black or white—matches what Vim does. I just confirmed this by setting my terminal background to light gray and issuing `echo -e '\\x1b]11;?\\x07'`, which returned the corresponding RGB code. Within a Vim session, I started a terminal and issued `echo -e '\\x1b]11;?\\x07'`. This did not return the RGB code for light gray, but rather returned the code for white or black, depending on how `background` was set.",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-13T18:06:14Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451582798",
            "id": 1451582798,
            "in_reply_to_id": 1447450467,
            "line": 168,
            "node_id": "PRRC_kwDOAPphoM5WhWVO",
            "original_commit_id": "d35506d190456326ab53a321257d6fe8dfe81558",
            "original_line": 168,
            "original_position": 14,
            "original_start_line": 165,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": 14,
            "pull_request_review_id": 1820078529,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451582798/reactions"
            },
            "side": "RIGHT",
            "start_line": 165,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-13T18:17:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451582798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451638576"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451638576"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    desc = 'Respond to OSC foreground/background color requests',\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-14T01:51:54Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451638576",
            "id": 1451638576,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Whj8w",
            "original_commit_id": "a498c1f61eb32ebf6d33b8e70cf612e2f50af32e",
            "original_line": 160,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1820130887,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451638576/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T01:53:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451638576",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451638648"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451638648"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n        local channel = vim.bo[args.buf].channel\r\n```",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-14T01:53:04Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local red, green, blue = 0, 0, 0\n+        local bg_option_dark = vim.o.background == 'dark'\n+        if (fg_request and bg_option_dark) or (bg_request and not bg_option_dark) then\n+          red, green, blue = 65535, 65535, 65535\n+        end\n+        local command = fg_request and 10 or 11\n+        local data = string.format('\\027]%d;rgb:%04x/%04x/%04x\\007', command, red, green, blue)\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451638648",
            "id": 1451638648,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Whj94",
            "original_commit_id": "a498c1f61eb32ebf6d33b8e70cf612e2f50af32e",
            "original_line": 176,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1820130887,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451638648/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T01:53:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451638648",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451641984"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451641984"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (d7e3657568b09fd4e036b7095f7d15f5a2e666d1).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-14T02:25:49Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451641984",
            "id": 1451641984,
            "in_reply_to_id": 1451638576,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhkyA",
            "original_commit_id": "a498c1f61eb32ebf6d33b8e70cf612e2f50af32e",
            "original_line": 160,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1820134075,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451641984/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T02:25:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451641984",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/17197#discussion_r1451642002"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/17197"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451642002"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Done (d7e3657568b09fd4e036b7095f7d15f5a2e666d1).",
            "commit_id": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
            "created_at": "2024-01-14T02:25:55Z",
            "diff_hunk": "@@ -155,6 +155,30 @@ do\n     end,\n   })\n \n+  vim.api.nvim_create_autocmd('TermRequest', {\n+    group = nvim_terminal_augroup,\n+    desc = 'Check for an OSC foreground/background color request, and respond accordingly',\n+    callback = function(args)\n+      local fg_request = args.data == '\\027]10;?'\n+      local bg_request = args.data == '\\027]11;?'\n+      if fg_request or bg_request then\n+        -- WARN: This does not return the actual foreground/background color,\n+        -- but rather returns:\n+        --   - fg=white/bg=black when Nvim option 'background' is 'dark'\n+        --   - fg=black/bg=white when Nvim option 'background' is 'light'\n+        local red, green, blue = 0, 0, 0\n+        local bg_option_dark = vim.o.background == 'dark'\n+        if (fg_request and bg_option_dark) or (bg_request and not bg_option_dark) then\n+          red, green, blue = 65535, 65535, 65535\n+        end\n+        local command = fg_request and 10 or 11\n+        local data = string.format('\\027]%d;rgb:%04x/%04x/%04x\\007', command, red, green, blue)\n+        local channel = vim.api.nvim_get_option_value('channel', { buf = args.buf })",
            "html_url": "https://github.com/neovim/neovim/pull/17197#discussion_r1451642002",
            "id": 1451642002,
            "in_reply_to_id": 1451638648,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5WhkyS",
            "original_commit_id": "a498c1f61eb32ebf6d33b8e70cf612e2f50af32e",
            "original_line": 176,
            "original_position": 22,
            "original_start_line": null,
            "path": "runtime/lua/vim/_defaults.lua",
            "position": null,
            "pull_request_review_id": 1820134084,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451642002/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T02:25:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451642002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "LGTM. Can you rebase?\r\n\r\n@jamessan @erw7 care to review?\r\n\r\nThis looks like it will affect ~~https://github.com/neovim/neovim/pull/16740~~ https://github.com/neovim/neovim/pull/22159 (ping @glacambre).",
            "created_at": "2022-04-25T02:24:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1107998477",
            "id": 1107998477,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5CCrcN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1107998477/reactions"
            },
            "updated_at": "2023-11-13T21:17:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1107998477",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "And this will also affect #17962",
            "created_at": "2022-04-25T02:29:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1108001019",
            "id": 1108001019,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5CCsD7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1108001019/reactions"
            },
            "updated_at": "2022-04-25T02:29:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1108001019",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Thanks for the feedback! Sorry for my delay in responding.\r\n\r\nI'm running tests locally with the following command:\r\n\r\n```\r\nTEST_FILE=test/functional/terminal/tui_spec.lua make functionaltest\r\n```\r\n\r\nHowever, I'm seeing the following error 28 times:\r\n\r\n```\r\nstack traceback:\r\n        test/functional/helpers.lua:106: in function 'eval'\r\n        test/functional/helpers.lua:787: in function 'new_pipename'\r\n        test/functional/terminal/tui_spec.lua:32: in function <test/functional/terminal/tui_spec.lua:30>\r\n\r\n[  ERROR   ] test/functional/terminal/tui_spec.lua @ 30: TUI before_each\r\ntest/functional/helpers.lua:106: Vim:Failed to start server: address already in use\r\n```\r\n\r\nI see the same errors on `master`, so this is presumably as issue with my environment. Please let me know if you have any advice for resolving.",
            "created_at": "2022-05-18T21:37:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1130575092",
            "id": 1130575092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5DYzT0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1130575092/reactions"
            },
            "updated_at": "2022-05-19T01:53:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1130575092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@dstein64 thanks for resolving conflicts. This branch still does not contain the current master (nvim crashes like in https://github.com/neovim/neovim/issues/26713), but I merged it on the local side. \r\n\r\n\r\nNow with\r\n```sh\r\nnvim --clean -c 'au OptionSet termguicolors echom \"tgc: \" .. &tgc' -c 'au OptionSet background echom &bg' \r\n```\r\nAt the start I get both values printed both in the top and in the nested instance. It also works in the next level of nesting.\r\n",
            "created_at": "2024-01-06T12:00:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1879657171",
            "id": 1879657171,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wCUrT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879657171/reactions"
            },
            "updated_at": "2024-01-06T12:04:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879657171",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@przepompownia, the branch for this PR is now sync'd with `master`.\r\n\r\nIssue #26713 that you mentioned is still not resolved though (#26505 is still open).",
            "created_at": "2024-01-06T17:15:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1879758459",
            "id": 1879758459,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wCtZ7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879758459/reactions"
            },
            "updated_at": "2024-01-06T17:15:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879758459",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Sorry, I linked some bad issue, when browsing the list - I meant https://github.com/neovim/neovim/issues/26890 fixed yesterday. ",
            "created_at": "2024-01-06T20:25:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1879819302",
            "id": 1879819302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wC8Qm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879819302/reactions"
            },
            "updated_at": "2024-01-06T20:25:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1879819302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@dstein64 Thanks for your patience, I know this PR has been open for a long time.\r\n\r\nThis PR conflicts with https://github.com/neovim/neovim/pull/22159, which provides a generic autocommand event when an OSC sequence is received from the embedded terminal. I'd like to merge #22159 because it can be used to implement the feature in this PR, but also would be very useful for testing (it would enable us to add functional tests for automatic background detection, for instance).\r\n\r\nWhen #22159 is merged then we should be able to re-implement this feature in pure Lua using an autocommand.",
            "created_at": "2024-01-07T14:42:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1880078556",
            "id": 1880078556,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wD7jc",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880078556/reactions"
            },
            "updated_at": "2024-01-07T14:42:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880078556",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@dstein64 When #22159 is merged (which I plan to do as soon as CI is green) this can be implemented using a `TermRequest` autocommand in `_defaults.lua`. ",
            "created_at": "2024-01-08T16:13:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1881386125",
            "id": 1881386125,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wI6yN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881386125/reactions"
            },
            "updated_at": "2024-01-08T16:13:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1881386125",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "#22159 is merged, if you want to go ahead and take a stab at implementing this in Lua with a `TermRequest` autocommand. No worries if you'd rather not, I'm happy to take it over if you're ready to move on 😅 ",
            "created_at": "2024-01-09T14:29:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1883151958",
            "id": 1883151958,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wPp5W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883151958/reactions"
            },
            "updated_at": "2024-01-09T14:29:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1883151958",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> \"https://github.com/neovim/neovim/pull/22159 is merged, if you want to go ahead and take a stab at implementing this in Lua with a TermRequest autocommand.\"\r\n\r\nThanks for the update @gpanders. I've updated this PR to use `TermRequest`.",
            "created_at": "2024-01-10T00:39:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1884012769",
            "id": 1884012769,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wS8Dh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1884012769/reactions"
            },
            "updated_at": "2024-01-10T00:39:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1884012769",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Please include the key details from the PR description, in the commit message. git is the source of truth, not github.",
            "created_at": "2024-01-13T22:47:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1890786794",
            "id": 1890786794,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wsx3q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890786794/reactions"
            },
            "updated_at": "2024-01-13T22:47:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890786794",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> \"Please include the key details from the PR description, in the commit message. git is the source of truth, not github.\"\r\n\r\nDone (a498c1f61eb32ebf6d33b8e70cf612e2f50af32e).\r\n",
            "created_at": "2024-01-13T23:32:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1890793996",
            "id": 1890793996,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wszoM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890793996/reactions"
            },
            "updated_at": "2024-01-13T23:35:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890793996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thank you @dstein64 for your patience and perseverance! A high quality contribution, as always.",
            "created_at": "2024-01-15T16:12:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/17197#issuecomment-1892451615",
            "id": 1892451615,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
            "node_id": "IC_kwDOAPphoM5wzIUf",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 2,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1892451615/reactions"
            },
            "updated_at": "2024-01-15T16:12:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1892451615",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/17197/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/17197/commits",
    "created_at": "2022-01-25T23:57:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/17197.diff",
    "draft": false,
    "head": {
        "label": "dstein64:issue_15365",
        "ref": "issue_15365",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dstein64/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dstein64/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dstein64/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dstein64/neovim/branches{/branch}",
            "clone_url": "https://github.com/dstein64/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dstein64/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dstein64/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dstein64/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dstein64/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dstein64/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dstein64/neovim/contributors",
            "created_at": "2022-01-07T16:43:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dstein64/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dstein64/neovim/downloads",
            "events_url": "https://api.github.com/repos/dstein64/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dstein64/neovim/forks",
            "full_name": "dstein64/neovim",
            "git_commits_url": "https://api.github.com/repos/dstein64/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dstein64/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dstein64/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dstein64/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dstein64/neovim/hooks",
            "html_url": "https://github.com/dstein64/neovim",
            "id": 445588218,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dstein64/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dstein64/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dstein64/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dstein64/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dstein64/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/dstein64/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dstein64/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dstein64/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGo8i-g",
            "notifications_url": "https://api.github.com/repos/dstein64/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
                "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
                "followers_url": "https://api.github.com/users/dstein64/followers",
                "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
                "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dstein64",
                "id": 541289,
                "login": "dstein64",
                "node_id": "MDQ6VXNlcjU0MTI4OQ==",
                "organizations_url": "https://api.github.com/users/dstein64/orgs",
                "received_events_url": "https://api.github.com/users/dstein64/received_events",
                "repos_url": "https://api.github.com/users/dstein64/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dstein64"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dstein64/neovim/pulls{/number}",
            "pushed_at": "2024-01-14T02:25:25Z",
            "releases_url": "https://api.github.com/repos/dstein64/neovim/releases{/id}",
            "size": 246566,
            "ssh_url": "git@github.com:dstein64/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/dstein64/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dstein64/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dstein64/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dstein64/neovim/subscription",
            "svn_url": "https://github.com/dstein64/neovim",
            "tags_url": "https://api.github.com/repos/dstein64/neovim/tags",
            "teams_url": "https://api.github.com/repos/dstein64/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dstein64/neovim/git/trees{/sha}",
            "updated_at": "2022-01-12T20:58:03Z",
            "url": "https://api.github.com/repos/dstein64/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
            "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
            "followers_url": "https://api.github.com/users/dstein64/followers",
            "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
            "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dstein64",
            "id": 541289,
            "login": "dstein64",
            "node_id": "MDQ6VXNlcjU0MTI4OQ==",
            "organizations_url": "https://api.github.com/users/dstein64/orgs",
            "received_events_url": "https://api.github.com/users/dstein64/received_events",
            "repos_url": "https://api.github.com/users/dstein64/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dstein64"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/17197",
    "id": 831967435,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/17197",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7589336120a258cf75134a5243b2f6b1926ac85b",
    "merged_at": "2024-01-15T16:12:08Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 235,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 141,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-15T23:44:03Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM4xltDL",
    "number": 17197,
    "patch_url": "https://github.com/neovim/neovim/pull/17197.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/17197/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d7e3657568b09fd4e036b7095f7d15f5a2e666d1",
    "title": "feat(terminal): respond to OSC background and foreground request",
    "updated_at": "2024-01-15T16:38:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/17197",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/541289?v=4",
        "events_url": "https://api.github.com/users/dstein64/events{/privacy}",
        "followers_url": "https://api.github.com/users/dstein64/followers",
        "following_url": "https://api.github.com/users/dstein64/following{/other_user}",
        "gists_url": "https://api.github.com/users/dstein64/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dstein64",
        "id": 541289,
        "login": "dstein64",
        "node_id": "MDQ6VXNlcjU0MTI4OQ==",
        "organizations_url": "https://api.github.com/users/dstein64/orgs",
        "received_events_url": "https://api.github.com/users/dstein64/received_events",
        "repos_url": "https://api.github.com/users/dstein64/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dstein64/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dstein64/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dstein64"
    }
}