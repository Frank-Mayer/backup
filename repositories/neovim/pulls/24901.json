{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24901/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24901/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/24901"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/24901"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24901/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/d22172f36bbe147f3aa6b76a1c43ae445f481c2e"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4860,
            "forks_count": 4860,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1674,
            "open_issues_count": 1674,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-09-12T00:52:34Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 240907,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 69275,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-09-12T01:38:50Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 69275,
            "watchers_count": 69275,
            "web_commit_signoff_required": false
        },
        "sha": "c8c73b26f3d09847a2e355160068e55b70dce6e4",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Hello there! I'm trying to implement a bit more intuitive cursor position updates in `nvim_buf_set_text`. I looked through the issues and found one which mentions just one case https://github.com/neovim/neovim/issues/22526, which I as well find a bit counterintuitive, though it makes sense in INSERT mode as @bfredl clarified. I left a [comment](https://github.com/neovim/neovim/issues/22526#issuecomment-1693906375) there, suggesting that behavior could probably be different depending on the current mode/window.\r\n\r\nI also described the problem I'm trying to solve within a plugin for code formatting. In short, moving cursors to proper positions after code formatting is a really nice feature, as well as adjusting extmark positions. Fortunately, `nvim_buf_set_text` already does all of that, though not in every case. And I think it would be great if `nvim_buf_set_text` would make of those kinds of adjustments. Based on the issue https://github.com/neovim/neovim/issues/10096 that seems to be one of the main reasons this api was introduced in the first place.\r\n\r\nRight now I added a couple of test cases (there definitely should be more of them), in which `nvim_buf_set_text` could behave better IMO. And I only implemented a very basic change which roughly addresses first two of them (breaking the next two though :-)). So before I go further, I would like to know if these kinds of changes would be accepted at all, because they are kind of breaking. For example, right now lsp's `apply_text_edits` tests don't pass already with these changes. But I hope that may be in the end explicit cursor adjustments in `apply_text_edits` would not be needed at all, who knows... Otherwise, I'll just dig in and fix the lua code as well.\r\n\r\n@bfredl could you please take a look at the test cases I added and tell me if I should continue fulfilling them and adding more as well?",
    "closed_at": "2023-09-11T08:45:45Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1306651470"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1306651470"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this makes sense. in extmark terms, the insert mode cursor has different \"gravity\" than normal (and non-current win) cursor. \r\n\r\nhowever instead of code duplication I suggest write some thing like `int insert_adjust = (win == curwin && (State & MODE_INSERT)) ? 1 : 0` and then use that adjustment in a non-duplicated if statement.",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-08-27T11:51:50Z",
            "diff_hunk": "@@ -722,8 +722,16 @@ void nvim_buf_set_text(uint64_t channel_id, Buffer buffer, Integer start_row, In\n   FOR_ALL_TAB_WINDOWS(tp, win) {\n     if (win->w_buffer == buf) {\n       // adjust cursor like an extmark ( i e it was inside last_part_len)\n-      if (win->w_cursor.lnum == end_row && win->w_cursor.col > end_col) {\n-        win->w_cursor.col -= col_extent - (colnr_T)last_item.size;\n+      if (win->w_cursor.lnum == end_row) {\n+        if (win == curwin && (State & MODE_INSERT)) {",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1306651470",
            "id": 1306651470,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5N4etO",
            "original_commit_id": "6364306e89158f6f2a2a34d5b373e789e3269b95",
            "original_line": 726,
            "original_position": 7,
            "original_start_line": null,
            "path": "src/nvim/api/buffer.c",
            "position": null,
            "pull_request_review_id": 1597123195,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1306651470/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-08-27T11:51:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1306651470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1319039589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1319039589"
                }
            },
            "author_association": "MEMBER",
            "body": "I'd suggest to break out this into a new `fix_cursor_cols` function, even if it is just called in one place.",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-07T19:33:10Z",
            "diff_hunk": "@@ -725,11 +727,47 @@ void nvim_buf_set_text(uint64_t channel_id, Buffer buffer, Integer start_row, In\n \n   FOR_ALL_TAB_WINDOWS(tp, win) {\n     if (win->w_buffer == buf) {\n-      // adjust cursor like an extmark ( i e it was inside last_part_len)\n-      if (win->w_cursor.lnum == end_row && win->w_cursor.col > end_col) {\n-        win->w_cursor.col -= col_extent - (colnr_T)last_item.size;\n+      if (win->w_cursor.lnum >= start_row && win->w_cursor.lnum <= end_row) {\n+        colnr_T mode_col_adj = win == curwin && (State & MODE_INSERT) ? 0 : 1;\n+        colnr_T cursor_gravity_col = win->w_cursor.col + mode_col_adj;\n+\n+        if (win->w_cursor.lnum == end_row && cursor_gravity_col > end_col) {\n+          win->w_cursor.lnum += (linenr_T)extra;\n+          win->w_cursor.col += (colnr_T)last_item.size - (colnr_T)end_col;\n+\n+          if (new_len == 1) {\n+            win->w_cursor.col += (colnr_T)start_col;\n+          }\n+        } else {\n+          linenr_T repl_end_row = (linenr_T)start_row + (linenr_T)replacement.size - 1;\n+          bool cursor_was_after_end_row = win->w_cursor.lnum > repl_end_row;\n+\n+          if (cursor_was_after_end_row) {\n+            win->w_cursor.lnum = repl_end_row;\n+          }\n+\n+          colnr_T repl_start_col = new_len == 1 ? (colnr_T)start_col : 0;\n+          int index = win->w_cursor.lnum - (int)start_row;\n+          String repl_item = replacement.items[index].data.string;\n+          colnr_T repl_end_col = repl_start_col + (colnr_T)repl_item.size;\n+\n+          if (cursor_was_after_end_row\n+              || (win->w_cursor.lnum == repl_end_row\n+                  && win->w_cursor.col > repl_end_col)) {\n+            win->w_cursor.col = repl_end_col;\n+\n+            if (win->w_cursor.col - mode_col_adj >= repl_start_col) {\n+              win->w_cursor.col -= mode_col_adj;\n+            }\n+          }\n+        }\n+\n+        check_cursor_col_win(win);\n+        changed_cline_bef_curs(win);\n+        invalidate_botline(win);",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1319039589",
            "id": 1319039589,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5OnvJl",
            "original_commit_id": "9466f12dbc5a44fdc7d91442e617e45408945a1a",
            "original_line": 767,
            "original_position": 53,
            "original_start_line": 730,
            "path": "src/nvim/api/buffer.c",
            "position": null,
            "pull_request_review_id": 1616120021,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1319039589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-07T19:33:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1319039589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1320868401"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320868401"
                }
            },
            "author_association": "MEMBER",
            "body": "    /// @see |nvim_put()|",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-10T22:02:33Z",
            "diff_hunk": "@@ -504,6 +504,8 @@ void nvim_buf_set_lines(uint64_t channel_id, Buffer buffer, Integer start, Integ\n ///\n /// Prefer |nvim_buf_set_lines()| if you are only adding or deleting entire lines.\n ///\n+/// Prefer |nvim_put()| if you want to insert text at the cursor position.\n+///\n /// @see |nvim_buf_set_lines()|",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1320868401",
            "id": 1320868401,
            "line": 509,
            "node_id": "PRRC_kwDOAPphoM5Outox",
            "original_commit_id": "062960246ff17ccc3c6cf06a11ab9f3297559876",
            "original_line": 509,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/api/buffer.c",
            "position": 6,
            "pull_request_review_id": 1618926499,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320868401/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-10T22:02:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320868401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1320868446"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320868446"
                }
            },
            "author_association": "MEMBER",
            "body": "very nice to see this deleted code!",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-10T22:02:59Z",
            "diff_hunk": "@@ -454,23 +454,6 @@ function M.apply_text_edits(text_edits, bufnr, offset_encoding)\n     end\n   end)\n \n-  -- Some LSP servers are depending on the VSCode behavior.\n-  -- The VSCode will re-locate the cursor position after applying TextEdit so we also do it.\n-  local is_current_buf = api.nvim_get_current_buf() == bufnr or bufnr == 0\n-  local cursor = (function()\n-    if not is_current_buf then\n-      return {\n-        row = -1,\n-        col = -1,\n-      }\n-    end\n-    local cursor = api.nvim_win_get_cursor(0)",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1320868446",
            "id": 1320868446,
            "line": 467,
            "node_id": "PRRC_kwDOAPphoM5Outpe",
            "original_commit_id": "062960246ff17ccc3c6cf06a11ab9f3297559876",
            "original_line": 467,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/util.lua",
            "position": 14,
            "pull_request_review_id": 1618926550,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320868446/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-10T22:02:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320868446",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1320872722"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320872722"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n/// Fix cursor position after replacing text\r\n/// between (start_row, start_col) and (end_row, end_col).\r\n///\r\n/// win->w_cursor.lnum is assumed to be >= start_row and <= end_row.\r\n```",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-10T22:13:29Z",
            "diff_hunk": "@@ -1339,6 +1342,79 @@ static void fix_cursor(win_T *win, linenr_T lo, linenr_T hi, linenr_T extra)\n   invalidate_botline(win);\n }\n \n+// Fix cursor position after replacing text\n+// between (start_row, start_col) and (end_row, end_col).\n+//\n+// win->w_cursor.lnum is assumed to be >= start_row and <= end_row.",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1320872722",
            "id": 1320872722,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5OuusS",
            "original_commit_id": "062960246ff17ccc3c6cf06a11ab9f3297559876",
            "original_line": 1348,
            "original_position": 33,
            "original_start_line": 1345,
            "path": "src/nvim/api/buffer.c",
            "position": null,
            "pull_request_review_id": 1618931345,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320872722/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-10T22:13:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320872722",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1320978758"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320978758"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I applied this change. Though I'm not sure what this is for. I thought `///` is used for proper docstrings for an api. Does it make a difference for an internal function as well?",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-11T04:22:25Z",
            "diff_hunk": "@@ -1339,6 +1342,79 @@ static void fix_cursor(win_T *win, linenr_T lo, linenr_T hi, linenr_T extra)\n   invalidate_botline(win);\n }\n \n+// Fix cursor position after replacing text\n+// between (start_row, start_col) and (end_row, end_col).\n+//\n+// win->w_cursor.lnum is assumed to be >= start_row and <= end_row.",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1320978758",
            "id": 1320978758,
            "in_reply_to_id": 1320872722,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5OvIlG",
            "original_commit_id": "062960246ff17ccc3c6cf06a11ab9f3297559876",
            "original_line": 1348,
            "original_position": 33,
            "original_start_line": 1345,
            "path": "src/nvim/api/buffer.c",
            "position": null,
            "pull_request_review_id": 1619101559,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320978758/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-11T04:22:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320978758",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1320984460"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320984460"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Added that as well, thanks",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-11T04:35:28Z",
            "diff_hunk": "@@ -504,6 +504,8 @@ void nvim_buf_set_lines(uint64_t channel_id, Buffer buffer, Integer start, Integ\n ///\n /// Prefer |nvim_buf_set_lines()| if you are only adding or deleting entire lines.\n ///\n+/// Prefer |nvim_put()| if you want to insert text at the cursor position.\n+///\n /// @see |nvim_buf_set_lines()|",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1320984460",
            "id": 1320984460,
            "in_reply_to_id": 1320868401,
            "line": 509,
            "node_id": "PRRC_kwDOAPphoM5OvJ-M",
            "original_commit_id": "062960246ff17ccc3c6cf06a11ab9f3297559876",
            "original_line": 509,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/api/buffer.c",
            "position": 6,
            "pull_request_review_id": 1619109476,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320984460/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-11T04:35:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1320984460",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/24901#discussion_r1321185441"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/24901"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1321185441"
                }
            },
            "author_association": "MEMBER",
            "body": "yes, also internal functions can have docstrings (as documentation for core development)",
            "commit_id": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
            "created_at": "2023-09-11T08:33:36Z",
            "diff_hunk": "@@ -1339,6 +1342,79 @@ static void fix_cursor(win_T *win, linenr_T lo, linenr_T hi, linenr_T extra)\n   invalidate_botline(win);\n }\n \n+// Fix cursor position after replacing text\n+// between (start_row, start_col) and (end_row, end_col).\n+//\n+// win->w_cursor.lnum is assumed to be >= start_row and <= end_row.",
            "html_url": "https://github.com/neovim/neovim/pull/24901#discussion_r1321185441",
            "id": 1321185441,
            "in_reply_to_id": 1320872722,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ov7Ch",
            "original_commit_id": "062960246ff17ccc3c6cf06a11ab9f3297559876",
            "original_line": 1348,
            "original_position": 33,
            "original_start_line": 1345,
            "path": "src/nvim/api/buffer.c",
            "position": null,
            "pull_request_review_id": 1619424664,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1321185441/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-11T08:33:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1321185441",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Thanks for looking into this. I also noticed the current behavior was suboptimal, even though that was a separate issue from what currently regressed and will be fixed. I'll do a proper review soon.",
            "created_at": "2023-08-27T11:44:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1694645872",
            "id": 1694645872,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lAj5w",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694645872/reactions"
            },
            "updated_at": "2023-08-27T11:44:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694645872",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl Thanks for comments :+1:\r\n\r\nI suppose there's generally no objections regarding the idea, right?\r\n\r\nShould I convert PR to draft until I implement it?",
            "created_at": "2023-08-27T12:13:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1694652495",
            "id": 1694652495,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lAlhP",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694652495/reactions"
            },
            "updated_at": "2023-08-27T12:13:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694652495",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I suppose there's generally no objections regarding the idea, right?\r\n> Should I convert PR to draft until I implement it?\r\n\r\nThere is no general objection. Go head and implement the behavior you think reasonable, and we can discuss it from there.",
            "created_at": "2023-08-27T12:59:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1694662874",
            "id": 1694662874,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lAoDa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694662874/reactions"
            },
            "updated_at": "2023-08-27T12:59:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1694662874",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl I updated the code. Could you please take a look again?\r\n\r\nNow `col_extent` is only being used for fixing extmarks, logic for cursors does not depend on it's value anymore. Logic for extmarks should probably be changed too, though I'm not sure how exactly. When I tried to blindly apply the same logic, test cases related to extmarks started to fail. IIRC from reading the docs some time ago, it's intended that extmarks behave differently than what you'd expect from cursors. Plus I couldn't figure out what exactly `extmark_splice` is doing inside and what meaning `col_extent` really has there.\r\n\r\nAnd as I expected, most tests for `apply_text_edits` pass even though I removed additional code that was fixing cursors there. One case is still failing though and I'm not sure what to do about it. It fails exactly because of \"cursor gravity\" changes in NORMAL mode. There's an edit being applied, which deletes characters precisely from 0 to cursor column, in which case cursor is shifted to 0 now. Before that change it would not move. I looked at git blame and found that this test was introduced in this PR https://github.com/neovim/neovim/pull/16038. However it seems like it's more concerned about cursor row falling out of bounds, not about column. @hrsh7th do you happen to remember if that was the only reason to add that test case?\r\n\r\nBTW, do I understand correctly that internally cursor column value is expressed in bytes, not in characters?",
            "created_at": "2023-08-28T15:34:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1695910150",
            "id": 1695910150,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lFYkG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1695910150/reactions"
            },
            "updated_at": "2023-08-28T15:34:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1695910150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I just rebased on master and changed column in `apply_text_edits` test for now. Not sure if this test should actually be deleted instead.",
            "created_at": "2023-09-01T04:17:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1702132408",
            "id": 1702132408,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5ldHq4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702132408/reactions"
            },
            "updated_at": "2023-09-01T04:17:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1702132408",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree with the changes with respect to the raw API calls, but I am not well versed with the LSP logic to make any conclusion on my own just yet. \r\n\r\nOne note regarding nvim_buf_set_text and insert vs normal mode: it might be tempting to use set_text _intentionally_ to insert text at the cursor, but I think we should add a recommendation to use nvim_put at the doc string for this use case, which lets the plugin directly specify if the cursor should be placed before or after the inserted text (\"communicate intent precisely\") .",
            "created_at": "2023-09-03T10:24:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704115008",
            "id": 1704115008,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lkrtA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704115008/reactions"
            },
            "updated_at": "2023-09-03T10:32:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704115008",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I agree with the changes with respect to the raw API calls, but I am not well versed with the LSP logic to make any conclusion on my own just yet.\r\n\r\nRegarding LSP logic. If I flip the logic in these changes a bit (in short, mostly by replacing `-`s with `+`s) it would be much more clear that these changes in `nvim_buf_set_text` almost exactly mirror what was in `apply_text_edits`. And IMHO it would be much easier to understand what happens. Right now I left it like this mostly because it seems like similar changes should be applied to extmarks as well, if I figure out how.\r\n\r\nFrom the code it seems like `col_extent` represents how the width of last line has changed. Is that what was intended? Or am I completely wrong? Sorry, I still couldn't figure out what happens in `extmark_splice`.\r\n\r\n> One note regarding nvim_buf_set_text and insert vs normal mode: it might be tempting to use set_text _intentionally_ to insert text at the cursor, but I think we should add a recommendation to use nvim_put at the doc string for this use case, which lets the plugin directly specify if the cursor should be placed before or after the inserted text (\"communicate intent precisely\") .\r\n\r\nYou mean something similar to an existing note \"Prefer |nvim_buf_set_lines()| if you are only adding or deleting entire lines.\"?",
            "created_at": "2023-09-03T11:55:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704271851",
            "id": 1704271851,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5llR_r",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704271851/reactions"
            },
            "updated_at": "2023-09-03T11:55:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704271851",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I tried adding similar test cases for extmarks and it seems like they are adjusted properly. So I guess nothing extra is needed there actually. Sorry for wasting time with this.",
            "created_at": "2023-09-03T12:24:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704292009",
            "id": 1704292009,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5llW6p",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704292009/reactions"
            },
            "updated_at": "2023-09-03T12:24:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704292009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Rebased on master and added a comment recommending `nvim_put`. Now I'm also thinking about adjusting marks (not extmarks), since right now IIUC they are completely removed from lines affected by `nvim_buf_set_text`",
            "created_at": "2023-09-03T13:24:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704306067",
            "id": 1704306067,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5llaWT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704306067/reactions"
            },
            "updated_at": "2023-09-03T13:24:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704306067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> And as I expected, most tests for apply_text_edits pass even though I removed additional code that was fixing cursors there. One case is still failing though and I'm not sure what to do about it. It fails exactly because of \"cursor gravity\" changes in NORMAL mode. There's an edit being applied, which deletes characters precisely from 0 to cursor column, in which case cursor is shifted to 0 now. Before that change it would not move. I looked at git blame and found that this test was introduced in this PR https://github.com/neovim/neovim/pull/16038. However it seems like it's more concerned about cursor row falling out of bounds, not about column. @hrsh7th do you happen to remember if that was the only reason to add that test case?\r\n\r\nYes. My intention was just \"rows going out of bounds\".\r\nI think you are correct in saying \"After deleting the text before the cursor, the cursor should be moved to column 0\".",
            "created_at": "2023-09-03T14:33:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704321625",
            "id": 1704321625,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lleJZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704321625/reactions"
            },
            "updated_at": "2023-09-03T14:33:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704321625",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/629908?v=4",
                "events_url": "https://api.github.com/users/hrsh7th/events{/privacy}",
                "followers_url": "https://api.github.com/users/hrsh7th/followers",
                "following_url": "https://api.github.com/users/hrsh7th/following{/other_user}",
                "gists_url": "https://api.github.com/users/hrsh7th/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/hrsh7th",
                "id": 629908,
                "login": "hrsh7th",
                "node_id": "MDQ6VXNlcjYyOTkwOA==",
                "organizations_url": "https://api.github.com/users/hrsh7th/orgs",
                "received_events_url": "https://api.github.com/users/hrsh7th/received_events",
                "repos_url": "https://api.github.com/users/hrsh7th/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/hrsh7th/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hrsh7th/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/hrsh7th"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I added a couple of tests (failing right now) for cases when cursor is inside replaced range. Seems like such behavior would make sense. And I think it would also make sense to adjust marks the same way. And then additional mark adjustments in `apply_text_edits` could be deleted as well.\r\n\r\n@folke I see that this mark adjustment was done by you. Can you please take a look at these tests? Basically I think it would make sense if cursors/marks would be kept either at the same exact position they were before or at least inside replaced region if it got smaller.",
            "created_at": "2023-09-03T15:25:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704333609",
            "id": 1704333609,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5llhEp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704333609/reactions"
            },
            "updated_at": "2023-09-03T15:25:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704333609",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I implemented adjustments for cases when cursor is inside of a replaced region. One practical example when this helps is with TypeScript LSP. There's a code action allowing to extract some expression into a variable or function. So it allows for something like this. Suppose you have the following code:\r\n\r\n```typescript\r\ncallSomething({\r\n  someObj: { // cursor is now somewhere inside those curly braces\r\n    foo: 'bar',\r\n    baz: 'quux',\r\n  }\r\n})\r\n```\r\n\r\nNow you can do `va{`, visually selecting everything in curly braces after `someObj: ` and then call that code action, which results in something like this:\r\n\r\n```typescript\r\nconst newLocal = {\r\n  foo: 'bar',\r\n  baz: 'quux',\r\n};\r\ncallSomething({\r\n  someObj: newLocal\r\n})\r\n```\r\n\r\nAnd before these changes cursor could end up at the last line or even somewhere below the last line of this example, because it will be simply shifted down after those edits, but now it will stay inside changed range, somewhere on `newLocal` after `someObj: `.",
            "created_at": "2023-09-04T08:58:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1704879666",
            "id": 1704879666,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lnmYy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704879666/reactions"
            },
            "updated_at": "2023-09-04T08:58:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1704879666",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Bumped into a case where cursor column can end up after last line column. This is only noticeable when calling `nvim_win_get_cursor` right after `nvim_buf_set_text`, not caught by current tests. Plus I'm not sure what to do if `virtualedit` is on.",
            "created_at": "2023-09-05T06:48:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1706039885",
            "id": 1706039885,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lsBpN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1706039885/reactions"
            },
            "updated_at": "2023-09-05T07:13:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1706039885",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I added tests for cases where cursor column could go out of bounds and made them pass",
            "created_at": "2023-09-06T08:49:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1707932073",
            "id": 1707932073,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5lzPmp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1707932073/reactions"
            },
            "updated_at": "2023-09-06T08:49:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1707932073",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl what do you think about adjusting marks in the same way? I see there's a `mark_col_adjust` function and at the first glance it seems like a separate function can be extracted from it, which would accept `buf` as argument. And it could be used instead of `mark_adjust_buf`. But at the same time I see that `diff_mark_adjust` is only called from `mark_adjust_buf` and I'm not yet sure why. Also recently there were changes related to topline adjustments and IIUC they were only made to `mark_adjust_buf`. Would it make sense to extract one more function from `mark_col_adjust` and go that way or is there a better way? Or could you give any advice on how to approach this?\r\n\r\nAlso, `nvim_buf_set_text` and `nvim_buf_set_lines` share a lot of similarities. Would it make sense to reimplement `nvim_buf_set_lines` in terms of `nvim_buf_set_text`, so that `nvim_buf_set_lines` would benefit from those adjustments to cursors and probably marks as well?",
            "created_at": "2023-09-07T05:58:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1709522511",
            "id": 1709522511,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5l5T5P",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1709522511/reactions"
            },
            "updated_at": "2023-09-07T05:58:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1709522511",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\"Normal\" named marks is a bit of tricky question as there is a lot of editing operations which don't adjust them per column. `mark_col_adjust` is applied to some operations, like split/join, but not most of them.\r\n\r\nI'd say we consider that out of scope for this PR. If there is a simple fix to make it work with `nvim_buf_set_text` (as there is just four callsites for `mark_col_adjust`, adding a buf_T param in place is just fine), we can do that as a follow up PR, but I'll hold off larger refactors until we have figured out a sensible design. I e if we really want named marks to be adjusted like extmarks, we should do that consequentially by adjusting them in the extmark_adjust codepath. \r\n\r\n> Also, nvim_buf_set_text and nvim_buf_set_lines share a lot of similarities. Would it make sense to reimplement nvim_buf_set_lines in terms of nvim_buf_set_text, so that nvim_buf_set_lines would benefit from those adjustments to cursors and probably marks as well?\r\n\r\nI don't think that's needed or desired. set_lines should be regarded as intentionally replacing entire lines, disregarding column state. It's better for _plugins_  to switch from set_lines to set_text intentionally when some columns of the lines should be preserved (encourage intent to be directly communicated, not inferred).",
            "created_at": "2023-09-07T09:34:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1709821965",
            "id": 1709821965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5l6dAN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1709821965/reactions"
            },
            "updated_at": "2023-09-07T09:34:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1709821965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> \"Normal\" named marks is a bit of tricky question as there is a lot of editing operations which don't adjust them per column. `mark_col_adjust` is applied to some operations, like split/join, but not most of them.\r\n\r\nThat's a good point. From what I see, marks seem to be treated like simple (line, col) tuples from the user point of view, not really tied to any characters. When the line length changes mark does not move even if it falls beyond eol. But also seems like the mark is only deleted if the line it's set on is deleted.  And inside `nvim_buf_set_text` it's a bit hard to understand how those changes should be interpreted. It can simply delete some lines as well as join them by removing newlines (may be adding a space instead to replicate joining more or less).\r\n\r\n> I'd say we consider that out of scope for this PR. If there is a simple fix to make it work with `nvim_buf_set_text` (as there is just four callsites for `mark_col_adjust`, adding a buf_T param in place is just fine), we can do that as a follow up PR, but I'll hold off larger refactors until we have figured out a sensible design. I e if we really want named marks to be adjusted like extmarks, we should do that consequentially by adjusting them in the extmark_adjust codepath.\r\n\r\nMakes sense. I'll try to come up with a simple fix for named marks and open a PR then. Other marks should probably be adjusted like extmarks, but I'm not going to touch them.\r\n\r\nIs there anything else I should do in this PR, besides figuring out how cursors should behave with `virtualedit`?",
            "created_at": "2023-09-07T12:32:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1710072564",
            "id": 1710072564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5l7aL0",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710072564/reactions"
            },
            "updated_at": "2023-09-07T12:32:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710072564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there anything else I should do in this PR, besides figuring out how cursors should behave with virtualedit?\r\n\r\nThat's sounds alright.",
            "created_at": "2023-09-07T19:36:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1710674788",
            "id": 1710674788,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5l9tNk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710674788/reactions"
            },
            "updated_at": "2023-09-07T19:36:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1710674788",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Extracted `fix_cursor_cols` function and added `virtualedit` handling. Also added comments, not sure if that's too much of them)",
            "created_at": "2023-09-08T12:33:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1711598880",
            "id": 1711598880,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5mBO0g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711598880/reactions"
            },
            "updated_at": "2023-09-08T12:50:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1711598880",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Great work, thanks.\r\n\r\nAnd the effort put into tests is greatly appreciated. will make reasoning and refactoring this code much easier in the future.",
            "created_at": "2023-09-11T08:46:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/24901#issuecomment-1713444650",
            "id": 1713444650,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
            "node_id": "IC_kwDOAPphoM5mIRcq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 1,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1713444650/reactions"
            },
            "updated_at": "2023-09-11T08:46:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1713444650",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/24901/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/24901/commits",
    "created_at": "2023-08-27T11:29:18Z",
    "diff_url": "https://github.com/neovim/neovim/pull/24901.diff",
    "draft": false,
    "head": {
        "label": "faergeek:more-intuitive-cursor-update",
        "ref": "more-intuitive-cursor-update",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/faergeek/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/faergeek/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/faergeek/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/faergeek/neovim/branches{/branch}",
            "clone_url": "https://github.com/faergeek/neovim.git",
            "collaborators_url": "https://api.github.com/repos/faergeek/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/faergeek/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/faergeek/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/faergeek/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/faergeek/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/faergeek/neovim/contributors",
            "created_at": "2023-08-26T07:35:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/faergeek/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/faergeek/neovim/downloads",
            "events_url": "https://api.github.com/repos/faergeek/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/faergeek/neovim/forks",
            "full_name": "faergeek/neovim",
            "git_commits_url": "https://api.github.com/repos/faergeek/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/faergeek/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/faergeek/neovim/git/tags{/sha}",
            "git_url": "git://github.com/faergeek/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/faergeek/neovim/hooks",
            "html_url": "https://github.com/faergeek/neovim",
            "id": 683323221,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/faergeek/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/faergeek/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/faergeek/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/faergeek/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/faergeek/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/faergeek/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/faergeek/neovim/merges",
            "milestones_url": "https://api.github.com/repos/faergeek/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKLqvVQ",
            "notifications_url": "https://api.github.com/repos/faergeek/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
                "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
                "followers_url": "https://api.github.com/users/faergeek/followers",
                "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
                "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/faergeek",
                "id": 3524621,
                "login": "faergeek",
                "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
                "organizations_url": "https://api.github.com/users/faergeek/orgs",
                "received_events_url": "https://api.github.com/users/faergeek/received_events",
                "repos_url": "https://api.github.com/users/faergeek/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/faergeek"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/faergeek/neovim/pulls{/number}",
            "pushed_at": "2023-09-11T17:01:37Z",
            "releases_url": "https://api.github.com/repos/faergeek/neovim/releases{/id}",
            "size": 239231,
            "ssh_url": "git@github.com:faergeek/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/faergeek/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/faergeek/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/faergeek/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/faergeek/neovim/subscription",
            "svn_url": "https://github.com/faergeek/neovim",
            "tags_url": "https://api.github.com/repos/faergeek/neovim/tags",
            "teams_url": "https://api.github.com/repos/faergeek/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/faergeek/neovim/git/trees{/sha}",
            "updated_at": "2023-08-27T03:17:57Z",
            "url": "https://api.github.com/repos/faergeek/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
            "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
            "followers_url": "https://api.github.com/users/faergeek/followers",
            "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
            "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/faergeek",
            "id": 3524621,
            "login": "faergeek",
            "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
            "organizations_url": "https://api.github.com/users/faergeek/orgs",
            "received_events_url": "https://api.github.com/users/faergeek/received_events",
            "repos_url": "https://api.github.com/users/faergeek/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/faergeek"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/24901",
    "id": 1490937441,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/24901",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "locked": false,
    "merge_commit_sha": "616a9bac32d37c2141f2cba9a0717ba67a041f80",
    "merged_at": "2023-09-11T08:45:45Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 127,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": null,
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 140,
        "state": "open",
        "title": "0.10",
        "updated_at": "2023-09-11T14:35:34Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5Y3eZh",
    "number": 24901,
    "patch_url": "https://github.com/neovim/neovim/pull/24901.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/24901/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/d22172f36bbe147f3aa6b76a1c43ae445f481c2e",
    "title": "fix(api): more intuitive cursor updates in nvim_buf_set_text",
    "updated_at": "2023-09-11T10:30:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/24901",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/3524621?v=4",
        "events_url": "https://api.github.com/users/faergeek/events{/privacy}",
        "followers_url": "https://api.github.com/users/faergeek/followers",
        "following_url": "https://api.github.com/users/faergeek/following{/other_user}",
        "gists_url": "https://api.github.com/users/faergeek/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/faergeek",
        "id": 3524621,
        "login": "faergeek",
        "node_id": "MDQ6VXNlcjM1MjQ2MjE=",
        "organizations_url": "https://api.github.com/users/faergeek/orgs",
        "received_events_url": "https://api.github.com/users/faergeek/received_events",
        "repos_url": "https://api.github.com/users/faergeek/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/faergeek/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/faergeek/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/faergeek"
    }
}