{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/14336/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14336/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/14336"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/14336"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14336/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/14336"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2087fa65b3e0cd278c89603a8ae0166bf58ccddc"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4845,
            "forks_count": 4845,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1672,
            "open_issues_count": 1672,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-08-31T01:46:21Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 241768,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 68983,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-08-30T21:27:38Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 68983,
            "watchers_count": 68983,
            "web_commit_signoff_required": false
        },
        "sha": "1b030f889ccc3be9ced67bcbe3e817f20536d072",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "At the moment, you can only get the parent of a tree in very indirect\r\nways by iterating over all tree and check their children. It would\r\nbe a lot more ergonomic to just add a reference to the parent when\r\nadding a child tree.\r\n\r\n@steelsojka, @kyazdani42 ",
    "closed_at": "2023-08-30T21:01:45Z",
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This does not solve out original problem of that it's not easy to get the parent parse tree... I'll look into that\r\n\r\nbefore you could do\r\n```lua\r\n        local smallest_node, min_length\r\n        parsers.get_parser():for_each_tree(function(tree)\r\n          if tree ~= current_tree then\r\n            local node = tree:root():named_descendant_for_range(current_node:range())\r\n            local length = ts_utils.node_length(node)\r\n            if node and node:parent() and (not min_length or min_length > length) then\r\n              smallest_node = node\r\n              min_length = length\r\n            end\r\n          end\r\n        end)\r\n        destination_node = smallest_node and smallest_node:parent()\r\n```\r\nand exclude the current tree from the search.\r\n\r\nNow you could do (when you add `tree_for_range` that I did locally)\r\n```lua\r\n        local current_tree = parsers.get_parser():language_for_range({current_node:range()})\r\n        local parent_tree = current_tree and current_tree:parent()\r\n        destination_node = parent_tree and parent_tree:tree_for_range({current_node:range()}, false):root():named_descendant_for_range(current_node:range())\r\n```\r\n\r\nBoth is not ideal. We would know the parent tree when setting `included_ranges` and then when creating the tree. But the use case is too special to include it in the upstream code base.",
            "created_at": "2021-04-10T14:00:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-817141264",
            "id": 817141264,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE0MTI2NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/817141264/reactions"
            },
            "updated_at": "2021-04-10T14:23:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/817141264",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Also I had the feelling that all `for_each_...` functions should have an optional parameter `recursively` with which you can opt-out to walk child trees. Also to document that the default would be `recursively`",
            "created_at": "2021-04-10T14:02:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-817141551",
            "id": 817141551,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxNzE0MTU1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/817141551/reactions"
            },
            "updated_at": "2021-04-10T14:03:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/817141551",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "waiting for this so i can fix the indentation levels for injected languages.",
            "created_at": "2021-04-12T19:21:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-818070475",
            "id": 818070475,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODA3MDQ3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818070475/reactions"
            },
            "updated_at": "2021-04-12T19:21:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818070475",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23156099?v=4",
                "events_url": "https://api.github.com/users/kyazdani42/events{/privacy}",
                "followers_url": "https://api.github.com/users/kyazdani42/followers",
                "following_url": "https://api.github.com/users/kyazdani42/following{/other_user}",
                "gists_url": "https://api.github.com/users/kyazdani42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kyazdani42",
                "id": 23156099,
                "login": "kyazdani42",
                "node_id": "MDQ6VXNlcjIzMTU2MDk5",
                "organizations_url": "https://api.github.com/users/kyazdani42/orgs",
                "received_events_url": "https://api.github.com/users/kyazdani42/received_events",
                "repos_url": "https://api.github.com/users/kyazdani42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kyazdani42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kyazdani42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kyazdani42"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@kyazdani42 what would be your preferred strategy to get the parent parsetree? Because this will only give you the parent language tree... You would still need to loop over all parsetrees of the language tree which is only slightly better than walking all trees... one could add mapping parsetree to parent-parsetree when creating the regions and then parsetree from the region. Still don't have a good solution for this.",
            "created_at": "2021-04-12T19:47:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-818092045",
            "id": 818092045,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODA5MjA0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818092045/reactions"
            },
            "updated_at": "2021-04-12T19:48:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818092045",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "hum actually, the best thing would be to get the node in which the child parser is contained.\r\nlike in html if you do\r\n`<script>...somejscode</script>` when iterating back, i could do tree:parent_node() which would give me the `script` tag node from the parser. Not sure if this is doable easily, if it can be made, i'll just improvise something with range node matching based on line number.",
            "created_at": "2021-04-12T20:11:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-818143224",
            "id": 818143224,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODE0MzIyNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818143224/reactions"
            },
            "updated_at": "2021-04-12T20:11:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818143224",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/23156099?v=4",
                "events_url": "https://api.github.com/users/kyazdani42/events{/privacy}",
                "followers_url": "https://api.github.com/users/kyazdani42/followers",
                "following_url": "https://api.github.com/users/kyazdani42/following{/other_user}",
                "gists_url": "https://api.github.com/users/kyazdani42/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kyazdani42",
                "id": 23156099,
                "login": "kyazdani42",
                "node_id": "MDQ6VXNlcjIzMTU2MDk5",
                "organizations_url": "https://api.github.com/users/kyazdani42/orgs",
                "received_events_url": "https://api.github.com/users/kyazdani42/received_events",
                "repos_url": "https://api.github.com/users/kyazdani42/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kyazdani42/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kyazdani42/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kyazdani42"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@theHamsta You actually can't reliably get the parent node of a parent language that contains a child language tree. The tree structure is based upon language, basically by parser. Each language tree contains MULTIPLE root nodes. This is where it gets tricky. The reason is so you can parse multiple nodes of the parent language together within the same context but aren't all or together within the file. Think of a templating language like EJS or ERB (I think there is an example on the treesitter site). All the ruby/js parts or parsed together as one. In our language tree this would be a single root node, but we can have other matches in our query that would produce another root node. For example,\r\n\r\n```javascript\r\nconst someHtml = html`<div></div>`;\r\nconst someOtherHtml = html`<div>something else</div>`;\r\n```\r\n\r\nThis tree would look like.\r\n\r\n```\r\nJavascript (1 root) -> HTML (2 roots)\r\n```\r\n\r\nThere will be only be one child language tree, but 2 root nodes since these are not part of the same parsing context.\r\n\r\nWe would have to keep each injecting site when the parent is running the injection queries. These get condensed down and we loose any reference to those points when it's all said and done.",
            "created_at": "2021-04-12T20:42:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-818207210",
            "id": 818207210,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODIwNzIxMA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818207210/reactions"
            },
            "updated_at": "2021-04-12T20:42:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818207210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2062154?v=4",
                "events_url": "https://api.github.com/users/steelsojka/events{/privacy}",
                "followers_url": "https://api.github.com/users/steelsojka/followers",
                "following_url": "https://api.github.com/users/steelsojka/following{/other_user}",
                "gists_url": "https://api.github.com/users/steelsojka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/steelsojka",
                "id": 2062154,
                "login": "steelsojka",
                "node_id": "MDQ6VXNlcjIwNjIxNTQ=",
                "organizations_url": "https://api.github.com/users/steelsojka/orgs",
                "received_events_url": "https://api.github.com/users/steelsojka/received_events",
                "repos_url": "https://api.github.com/users/steelsojka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/steelsojka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/steelsojka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/steelsojka"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@steelsojka I know. This is why I told @kyazdani42 that the parent language tree doesn't help him much (except reducing the number of search parsetrees a bit). If you want connection between parsetree you must do more tracing. Each parsetree originally got injected by another parsetree. The creation of the child parsetree occurs deferred. You could get the necessary references when you add the parsetree that created in to the region table (when `get_injections` knows the parent tree and this could be propagated to the objects `set_included_regions` recieves). Then, when you are parsing the regions you would know the parent parsertree. But this could be too much effort just to get this connection.",
            "created_at": "2021-04-12T20:51:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-818226947",
            "id": 818226947,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODIyNjk0Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818226947/reactions"
            },
            "updated_at": "2021-04-12T21:33:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818226947",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That's a good point. I think that could work\n\nOn Mon, Apr 12, 2021, 3:52 PM Stephan Seitz ***@***.***>\nwrote:\n\n> @steelsojka <https://github.com/steelsojka> I know but the each parsetree\n> got injected by another parsetree. The creation of the child parsetree\n> occurs deferred. You could get the necessary references when you add the\n> parsetree that created in to the region table (when get_injections knows\n> the parent tree and this could be propagated to the objects\n> set_included_regions recieves). Then, when you are parsing the regions\n> you would know the parent parsertree. But this could be too much effort\n> just to get this connection.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/neovim/neovim/pull/14336#issuecomment-818226947>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAPXOSX6QVGVDBCXYMAYGALTINMPPANCNFSM42WRCXXA>\n> .\n>\n",
            "created_at": "2021-04-12T20:58:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-818232723",
            "id": 818232723,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxODIzMjcyMw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818232723/reactions"
            },
            "updated_at": "2021-04-12T20:58:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/818232723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2062154?v=4",
                "events_url": "https://api.github.com/users/steelsojka/events{/privacy}",
                "followers_url": "https://api.github.com/users/steelsojka/followers",
                "following_url": "https://api.github.com/users/steelsojka/following{/other_user}",
                "gists_url": "https://api.github.com/users/steelsojka/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/steelsojka",
                "id": 2062154,
                "login": "steelsojka",
                "node_id": "MDQ6VXNlcjIwNjIxNTQ=",
                "organizations_url": "https://api.github.com/users/steelsojka/orgs",
                "received_events_url": "https://api.github.com/users/steelsojka/received_events",
                "repos_url": "https://api.github.com/users/steelsojka/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/steelsojka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/steelsojka/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/steelsojka"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Probably exhaustive search is not to bad since it's done anyways to get the language at point at the moment. If it should be a problem we have to consider that's in general difficult to find out in which language region we are currently. We could also take ideas from https://en.m.wikipedia.org/wiki/Interval_tree to get all the nested regions at a position.",
            "created_at": "2021-04-14T07:38:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-819302022",
            "id": 819302022,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "MDEyOklzc3VlQ29tbWVudDgxOTMwMjAyMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/819302022/reactions"
            },
            "updated_at": "2021-04-14T07:40:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/819302022",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this still something we want (given the new APIs upstream has added in the meantime)?",
            "created_at": "2023-08-29T08:17:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-1696981261",
            "id": 1696981261,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "IC_kwDOAPphoM5lJeEN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1696981261/reactions"
            },
            "updated_at": "2023-08-29T08:17:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1696981261",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The new APIs haven't added anything in this regard, but I think the plugins that orginally wanted to use that feature have gone away.\r\n\r\n",
            "created_at": "2023-08-30T21:01:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/14336#issuecomment-1699838111",
            "id": 1699838111,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
            "node_id": "IC_kwDOAPphoM5lUXif",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1699838111/reactions"
            },
            "updated_at": "2023-08-30T21:01:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1699838111",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/14336/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/14336/commits",
    "created_at": "2021-04-10T13:55:47Z",
    "diff_url": "https://github.com/neovim/neovim/pull/14336.diff",
    "draft": false,
    "head": {
        "label": "theHamsta:languagetree-parent",
        "ref": "languagetree-parent",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/theHamsta/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/theHamsta/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/theHamsta/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/theHamsta/neovim/branches{/branch}",
            "clone_url": "https://github.com/theHamsta/neovim.git",
            "collaborators_url": "https://api.github.com/repos/theHamsta/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/theHamsta/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/theHamsta/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/theHamsta/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/theHamsta/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/theHamsta/neovim/contributors",
            "created_at": "2019-08-09T23:25:45Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/theHamsta/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/theHamsta/neovim/downloads",
            "events_url": "https://api.github.com/repos/theHamsta/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/theHamsta/neovim/forks",
            "full_name": "theHamsta/neovim",
            "git_commits_url": "https://api.github.com/repos/theHamsta/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/theHamsta/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/theHamsta/neovim/git/tags{/sha}",
            "git_url": "git://github.com/theHamsta/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/theHamsta/neovim/hooks",
            "html_url": "https://github.com/theHamsta/neovim",
            "id": 201553309,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/theHamsta/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/theHamsta/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/theHamsta/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/theHamsta/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/theHamsta/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/theHamsta/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/theHamsta/neovim/merges",
            "milestones_url": "https://api.github.com/repos/theHamsta/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMDE1NTMzMDk=",
            "notifications_url": "https://api.github.com/repos/theHamsta/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
                "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
                "followers_url": "https://api.github.com/users/theHamsta/followers",
                "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
                "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/theHamsta",
                "id": 7189118,
                "login": "theHamsta",
                "node_id": "MDQ6VXNlcjcxODkxMTg=",
                "organizations_url": "https://api.github.com/users/theHamsta/orgs",
                "received_events_url": "https://api.github.com/users/theHamsta/received_events",
                "repos_url": "https://api.github.com/users/theHamsta/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/theHamsta"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/theHamsta/neovim/pulls{/number}",
            "pushed_at": "2023-06-11T16:02:18Z",
            "releases_url": "https://api.github.com/repos/theHamsta/neovim/releases{/id}",
            "size": 244973,
            "ssh_url": "git@github.com:theHamsta/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/theHamsta/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/theHamsta/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/theHamsta/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/theHamsta/neovim/subscription",
            "svn_url": "https://github.com/theHamsta/neovim",
            "tags_url": "https://api.github.com/repos/theHamsta/neovim/tags",
            "teams_url": "https://api.github.com/repos/theHamsta/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/theHamsta/neovim/git/trees{/sha}",
            "updated_at": "2022-02-10T03:33:47Z",
            "url": "https://api.github.com/repos/theHamsta/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "2087fa65b3e0cd278c89603a8ae0166bf58ccddc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
            "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
            "followers_url": "https://api.github.com/users/theHamsta/followers",
            "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
            "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/theHamsta",
            "id": 7189118,
            "login": "theHamsta",
            "node_id": "MDQ6VXNlcjcxODkxMTg=",
            "organizations_url": "https://api.github.com/users/theHamsta/orgs",
            "received_events_url": "https://api.github.com/users/theHamsta/received_events",
            "repos_url": "https://api.github.com/users/theHamsta/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/theHamsta"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/14336",
    "id": 612902607,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/14336",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 1799626557,
            "name": "treesitter",
            "node_id": "MDU6TGFiZWwxNzk5NjI2NTU3",
            "url": "https://api.github.com/repos/neovim/neovim/labels/treesitter"
        }
    ],
    "locked": false,
    "merge_commit_sha": "9cc1f4cf29ca1647b7cc146355f01f39060cee15",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjEyOTAyNjA3",
    "number": 14336,
    "patch_url": "https://github.com/neovim/neovim/pull/14336.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/14336/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2087fa65b3e0cd278c89603a8ae0166bf58ccddc",
    "title": "tree-sitter: Add parent reference to LanguageTree",
    "updated_at": "2023-08-30T21:01:45Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/14336",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7189118?v=4",
        "events_url": "https://api.github.com/users/theHamsta/events{/privacy}",
        "followers_url": "https://api.github.com/users/theHamsta/followers",
        "following_url": "https://api.github.com/users/theHamsta/following{/other_user}",
        "gists_url": "https://api.github.com/users/theHamsta/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/theHamsta",
        "id": 7189118,
        "login": "theHamsta",
        "node_id": "MDQ6VXNlcjcxODkxMTg=",
        "organizations_url": "https://api.github.com/users/theHamsta/orgs",
        "received_events_url": "https://api.github.com/users/theHamsta/received_events",
        "repos_url": "https://api.github.com/users/theHamsta/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/theHamsta/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/theHamsta/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/theHamsta"
    }
}