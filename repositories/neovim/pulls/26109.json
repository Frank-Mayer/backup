{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26109/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26109/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26109"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26109"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26109/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26109"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/5476933a432bc5b8f5fc1d6ad0237f4b7da5d944"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4991,
            "forks_count": 4991,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1693,
            "open_issues_count": 1693,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-11-21T01:00:34Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 234350,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71065,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-11-21T01:36:01Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71065,
            "watchers_count": 71065,
            "web_commit_signoff_required": false
        },
        "sha": "d667e0e4142ba8eb8623971539b0f9eec78b7529",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": null,
    "closed_at": "2023-11-20T16:19:41Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26109#discussion_r1398464363"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398464363"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid or not found.\r\n```",
            "commit_id": "5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
            "created_at": "2023-11-19T17:39:06Z",
            "diff_hunk": "@@ -6,13 +6,11 @@ local lpeg = vim.lpeg\n \n local M = {}\n \n----@alias lpeg userdata\n-\n --- Parses the raw pattern into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n --- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n ---\n ---@param pattern string The raw glob pattern\n----@return lpeg An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.",
            "html_url": "https://github.com/neovim/neovim/pull/26109#discussion_r1398464363",
            "id": 1398464363,
            "line": 13,
            "node_id": "PRRC_kwDOAPphoM5TWt9r",
            "original_commit_id": "b40fdcec2d2bd5507bfb6904ff1aae71c8c13420",
            "original_line": 13,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 11,
            "pull_request_review_id": 1738692254,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398464363/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-19T17:43:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398464363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26109#discussion_r1398464962"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398464962"
                }
            },
            "author_association": "MEMBER",
            "body": "Are we sure that `base_dir` won't have a trailing slash?",
            "commit_id": "5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
            "created_at": "2023-11-19T17:42:32Z",
            "diff_hunk": "@@ -134,57 +134,53 @@ function M.register(reg, ctx)\n   if not has_capability or not client.workspace_folders then\n     return\n   end\n-  local watch_regs = {} --- @type table<string,{pattern:lpeg,kind:integer}>\n-  for _, w in ipairs(reg.registerOptions.watchers) do\n-    local relative_pattern = false\n-    local glob_patterns = {} --- @type {baseUri:string, pattern: string}[]\n-    if type(w.globPattern) == 'string' then\n+  local register_options = reg.registerOptions --[[@as lsp.DidChangeWatchedFilesRegistrationOptions]]\n+  ---@type table<string, {pattern: vim.lpeg.Pattern, kind: lsp.WatchKind}[]> by base_dir\n+  local watch_regs = vim.defaulttable()\n+  for _, w in ipairs(register_options.watchers) do\n+    local kind = w.kind\n+      or (protocol.WatchKind.Create + protocol.WatchKind.Change + protocol.WatchKind.Delete)\n+    local glob_pattern = w.globPattern\n+\n+    if type(glob_pattern) == 'string' then\n+      local pattern = parse(glob_pattern)\n+      if not pattern then\n+        error('Cannot parse pattern: ' .. glob_pattern)\n+      end\n       for _, folder in ipairs(client.workspace_folders) do\n-        table.insert(glob_patterns, { baseUri = folder.uri, pattern = w.globPattern })\n+        local base_dir = vim.uri_to_fname(folder.uri)\n+        table.insert(watch_regs[base_dir], { pattern = pattern, kind = kind })\n       end\n     else\n-      relative_pattern = true\n-      table.insert(glob_patterns, w.globPattern)\n-    end\n-    for _, glob_pattern in ipairs(glob_patterns) do\n-      local base_dir = nil ---@type string?\n-      if type(glob_pattern.baseUri) == 'string' then\n-        base_dir = glob_pattern.baseUri\n-      elseif type(glob_pattern.baseUri) == 'table' then\n-        base_dir = glob_pattern.baseUri.uri\n-      end\n-      assert(base_dir, \"couldn't identify root of watch\")\n-      base_dir = vim.uri_to_fname(base_dir)\n-\n-      ---@type integer\n-      local kind = w.kind\n-        or protocol.WatchKind.Create + protocol.WatchKind.Change + protocol.WatchKind.Delete\n-\n+      local base_uri = glob_pattern.baseUri\n+      local uri = type(base_uri) == 'string' and base_uri or base_uri.uri\n+      local base_dir = vim.uri_to_fname(uri)\n       local pattern = parse(glob_pattern.pattern)\n-      assert(pattern, 'invalid pattern: ' .. glob_pattern.pattern)\n-      if relative_pattern then\n-        pattern = lpeg.P(base_dir .. '/') * pattern\n+      if not pattern then\n+        error('Cannot parse pattern: ' .. glob_pattern.pattern)\n       end\n-\n-      watch_regs[base_dir] = watch_regs[base_dir] or {}\n-      table.insert(watch_regs[base_dir], {\n-        pattern = pattern,\n-        kind = kind,\n-      })\n+      pattern = lpeg.P(base_dir .. '/') * pattern",
            "html_url": "https://github.com/neovim/neovim/pull/26109#discussion_r1398464962",
            "id": 1398464962,
            "line": 162,
            "node_id": "PRRC_kwDOAPphoM5TWuHC",
            "original_commit_id": "b40fdcec2d2bd5507bfb6904ff1aae71c8c13420",
            "original_line": 162,
            "original_position": 145,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 145,
            "pull_request_review_id": 1738692254,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398464962/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-19T17:43:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398464962",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26109#discussion_r1398466093"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466093"
                }
            },
            "author_association": "MEMBER",
            "body": "Why not found? Isn't this referring to implementation detail of the internally used capture group? \r\n\r\n",
            "commit_id": "5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
            "created_at": "2023-11-19T17:50:48Z",
            "diff_hunk": "@@ -6,13 +6,11 @@ local lpeg = vim.lpeg\n \n local M = {}\n \n----@alias lpeg userdata\n-\n --- Parses the raw pattern into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n --- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n ---\n ---@param pattern string The raw glob pattern\n----@return lpeg An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.",
            "html_url": "https://github.com/neovim/neovim/pull/26109#discussion_r1398466093",
            "id": 1398466093,
            "in_reply_to_id": 1398464363,
            "line": 13,
            "node_id": "PRRC_kwDOAPphoM5TWuYt",
            "original_commit_id": "b40fdcec2d2bd5507bfb6904ff1aae71c8c13420",
            "original_line": 13,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 11,
            "pull_request_review_id": 1738694045,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466093/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-19T17:50:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466093",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26109#discussion_r1398466141"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466141"
                }
            },
            "author_association": "MEMBER",
            "body": "Not sure,  it's the same logic as before",
            "commit_id": "5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
            "created_at": "2023-11-19T17:51:13Z",
            "diff_hunk": "@@ -134,57 +134,53 @@ function M.register(reg, ctx)\n   if not has_capability or not client.workspace_folders then\n     return\n   end\n-  local watch_regs = {} --- @type table<string,{pattern:lpeg,kind:integer}>\n-  for _, w in ipairs(reg.registerOptions.watchers) do\n-    local relative_pattern = false\n-    local glob_patterns = {} --- @type {baseUri:string, pattern: string}[]\n-    if type(w.globPattern) == 'string' then\n+  local register_options = reg.registerOptions --[[@as lsp.DidChangeWatchedFilesRegistrationOptions]]\n+  ---@type table<string, {pattern: vim.lpeg.Pattern, kind: lsp.WatchKind}[]> by base_dir\n+  local watch_regs = vim.defaulttable()\n+  for _, w in ipairs(register_options.watchers) do\n+    local kind = w.kind\n+      or (protocol.WatchKind.Create + protocol.WatchKind.Change + protocol.WatchKind.Delete)\n+    local glob_pattern = w.globPattern\n+\n+    if type(glob_pattern) == 'string' then\n+      local pattern = parse(glob_pattern)\n+      if not pattern then\n+        error('Cannot parse pattern: ' .. glob_pattern)\n+      end\n       for _, folder in ipairs(client.workspace_folders) do\n-        table.insert(glob_patterns, { baseUri = folder.uri, pattern = w.globPattern })\n+        local base_dir = vim.uri_to_fname(folder.uri)\n+        table.insert(watch_regs[base_dir], { pattern = pattern, kind = kind })\n       end\n     else\n-      relative_pattern = true\n-      table.insert(glob_patterns, w.globPattern)\n-    end\n-    for _, glob_pattern in ipairs(glob_patterns) do\n-      local base_dir = nil ---@type string?\n-      if type(glob_pattern.baseUri) == 'string' then\n-        base_dir = glob_pattern.baseUri\n-      elseif type(glob_pattern.baseUri) == 'table' then\n-        base_dir = glob_pattern.baseUri.uri\n-      end\n-      assert(base_dir, \"couldn't identify root of watch\")\n-      base_dir = vim.uri_to_fname(base_dir)\n-\n-      ---@type integer\n-      local kind = w.kind\n-        or protocol.WatchKind.Create + protocol.WatchKind.Change + protocol.WatchKind.Delete\n-\n+      local base_uri = glob_pattern.baseUri\n+      local uri = type(base_uri) == 'string' and base_uri or base_uri.uri\n+      local base_dir = vim.uri_to_fname(uri)\n       local pattern = parse(glob_pattern.pattern)\n-      assert(pattern, 'invalid pattern: ' .. glob_pattern.pattern)\n-      if relative_pattern then\n-        pattern = lpeg.P(base_dir .. '/') * pattern\n+      if not pattern then\n+        error('Cannot parse pattern: ' .. glob_pattern.pattern)\n       end\n-\n-      watch_regs[base_dir] = watch_regs[base_dir] or {}\n-      table.insert(watch_regs[base_dir], {\n-        pattern = pattern,\n-        kind = kind,\n-      })\n+      pattern = lpeg.P(base_dir .. '/') * pattern",
            "html_url": "https://github.com/neovim/neovim/pull/26109#discussion_r1398466141",
            "id": 1398466141,
            "in_reply_to_id": 1398464962,
            "line": 162,
            "node_id": "PRRC_kwDOAPphoM5TWuZd",
            "original_commit_id": "b40fdcec2d2bd5507bfb6904ff1aae71c8c13420",
            "original_line": 162,
            "original_position": 145,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 145,
            "pull_request_review_id": 1738694106,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26109",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466141/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-19T17:51:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26109#discussion_r1398466912"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26109"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466912"
                }
            },
            "author_association": "MEMBER",
            "body": "I just feel like this description makes it sound like `nil` will be returned when the input is invalid, but it can also me returned if the match fails.\r\n\r\n...Which I guess means that the input isn't a valid pattern. Nvm, ignore my previous comment.",
            "commit_id": "5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
            "created_at": "2023-11-19T17:56:21Z",
            "diff_hunk": "@@ -6,13 +6,11 @@ local lpeg = vim.lpeg\n \n local M = {}\n \n----@alias lpeg userdata\n-\n --- Parses the raw pattern into an |lpeg| pattern. LPeg patterns natively support the \"this\" or \"that\"\n --- alternative constructions described in the LSP spec that cannot be expressed in a standard Lua pattern.\n ---\n ---@param pattern string The raw glob pattern\n----@return lpeg An |lpeg| representation of the pattern, or nil if the pattern is invalid.\n+---@return vim.lpeg.Pattern? pattern An |lpeg| representation of the pattern, or nil if the pattern is invalid.",
            "html_url": "https://github.com/neovim/neovim/pull/26109#discussion_r1398466912",
            "id": 1398466912,
            "in_reply_to_id": 1398464363,
            "line": 13,
            "node_id": "PRRC_kwDOAPphoM5TWulg",
            "original_commit_id": "b40fdcec2d2bd5507bfb6904ff1aae71c8c13420",
            "original_line": 13,
            "original_position": 11,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/_watchfiles.lua",
            "position": 11,
            "pull_request_review_id": 1738694753,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26109",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466912/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-11-19T17:56:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1398466912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26109/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26109/commits",
    "created_at": "2023-11-19T14:33:54Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26109.diff",
    "draft": false,
    "head": {
        "label": "mfussenegger:lsp-watchfiles",
        "ref": "lsp-watchfiles",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/mfussenegger/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/mfussenegger/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/mfussenegger/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/mfussenegger/neovim/branches{/branch}",
            "clone_url": "https://github.com/mfussenegger/neovim.git",
            "collaborators_url": "https://api.github.com/repos/mfussenegger/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/mfussenegger/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/mfussenegger/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/mfussenegger/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/mfussenegger/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/mfussenegger/neovim/contributors",
            "created_at": "2020-01-25T15:44:28Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/mfussenegger/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/mfussenegger/neovim/downloads",
            "events_url": "https://api.github.com/repos/mfussenegger/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/mfussenegger/neovim/forks",
            "full_name": "mfussenegger/neovim",
            "git_commits_url": "https://api.github.com/repos/mfussenegger/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/mfussenegger/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/mfussenegger/neovim/git/tags{/sha}",
            "git_url": "git://github.com/mfussenegger/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/mfussenegger/neovim/hooks",
            "html_url": "https://github.com/mfussenegger/neovim",
            "id": 236190222,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/mfussenegger/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/mfussenegger/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/mfussenegger/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/mfussenegger/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/mfussenegger/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/mfussenegger/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/mfussenegger/neovim/merges",
            "milestones_url": "https://api.github.com/repos/mfussenegger/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkyMzYxOTAyMjI=",
            "notifications_url": "https://api.github.com/repos/mfussenegger/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/mfussenegger/neovim/pulls{/number}",
            "pushed_at": "2023-11-20T17:28:45Z",
            "releases_url": "https://api.github.com/repos/mfussenegger/neovim/releases{/id}",
            "size": 228916,
            "ssh_url": "git@github.com:mfussenegger/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/mfussenegger/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/mfussenegger/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/mfussenegger/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/mfussenegger/neovim/subscription",
            "svn_url": "https://github.com/mfussenegger/neovim",
            "tags_url": "https://api.github.com/repos/mfussenegger/neovim/tags",
            "teams_url": "https://api.github.com/repos/mfussenegger/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/mfussenegger/neovim/git/trees{/sha}",
            "updated_at": "2023-07-25T14:32:22Z",
            "url": "https://api.github.com/repos/mfussenegger/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26109",
    "id": 1607942948,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26109",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "ec79ff893d5906e1f0d90953cffa535ffae47823",
    "merged_at": "2023-11-20T16:19:41Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5f10Mk",
    "number": 26109,
    "patch_url": "https://github.com/neovim/neovim/pull/26109.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26109/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/5476933a432bc5b8f5fc1d6ad0237f4b7da5d944",
    "title": "refactor(lsp): add type annotations to _watchfiles",
    "updated_at": "2023-11-20T16:19:57Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26109",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
        "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
        "followers_url": "https://api.github.com/users/mfussenegger/followers",
        "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
        "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/mfussenegger",
        "id": 38700,
        "login": "mfussenegger",
        "node_id": "MDQ6VXNlcjM4NzAw",
        "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
        "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
        "repos_url": "https://api.github.com/users/mfussenegger/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/mfussenegger"
    }
}