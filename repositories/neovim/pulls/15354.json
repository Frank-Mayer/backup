{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15354/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15354/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15354"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15354"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15354/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/56695bd3a790a9289b485201b8e640f77da46689"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5503,
            "forks_count": 5503,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1768,
            "open_issues_count": 1768,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-07-22T23:20:44Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 279528,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80265,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-07-23T01:47:00Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80265,
            "watchers_count": 80265,
            "web_commit_signoff_required": false
        },
        "sha": "818ae74eaf6f4538ca61ee4ba703543b0caaff10",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Use `vim.opt.option:default()` to get an option's default value and `vim.opt.option:reset()` to set an option back to its default value.\r\n\r\nThis is the Lua equivalent to `:set option&`.",
    "closed_at": "2024-07-22T14:00:01Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r768899689"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/768899689"
                }
            },
            "author_association": "MEMBER",
            "body": "can this section call `self:reset()` instead? or are they different.\r\n\r\nWe may also want to document that doing `vim.opt.option_name = nil` is the same as `:reset()` if that's the case.",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2021-12-14T17:39:43Z",
            "diff_hunk": "@@ -593,7 +593,23 @@ local create_option_metatable = function(set_type)\n     -- To set a value, instead use:\n     --  opt[my_option] = value\n     _set = function(self)\n-      local value = convert_value_to_vim(self._name, self._info, self._value)\n+      local value\n+      if self._value ~= nil then\n+        value = convert_value_to_vim(self._name, self._info, self._value)\n+      else\n+        if set_type == SET_TYPES.LOCAL then\n+          -- Equivalent to :setlocal option< in Vimscript which sets the local\n+          -- value of the option to its global value by copying the value.\n+          local global_opt = make_option(self._name, a.nvim_get_option_value(self._name, {scope = \"global\"}))\n+          value = global_opt._value\n+        elseif set_type == SET_TYPES.SET then\n+          -- Equivalent to :set option< in Vimscript, which removes the local value\n+          -- of the option so that the global value will be used. This only\n+          -- works for global-local options\n+          return a.nvim_set_option_value(self._name, nil, {scope = \"local\"})\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r768899689",
            "id": 768899689,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4t1Hpp",
            "original_commit_id": "324e37f500794481d859c2327f9c95c94c1f28d3",
            "original_line": 610,
            "original_position": 19,
            "original_start_line": 600,
            "path": "runtime/lua/vim/_meta.lua",
            "position": null,
            "pull_request_review_id": 831834276,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/768899689/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-12-14T17:39:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/768899689",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r768962814"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/768962814"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not quite the same: `reset()` resets the option to the default value (`:set option&` in Vim script) while this block handles the `:set option<` case.\r\n\r\n`vim.opt.option_name = nil` is also equivalent to `:set option<` (so not the same as `:reset()`).",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2021-12-14T19:05:06Z",
            "diff_hunk": "@@ -593,7 +593,23 @@ local create_option_metatable = function(set_type)\n     -- To set a value, instead use:\n     --  opt[my_option] = value\n     _set = function(self)\n-      local value = convert_value_to_vim(self._name, self._info, self._value)\n+      local value\n+      if self._value ~= nil then\n+        value = convert_value_to_vim(self._name, self._info, self._value)\n+      else\n+        if set_type == SET_TYPES.LOCAL then\n+          -- Equivalent to :setlocal option< in Vimscript which sets the local\n+          -- value of the option to its global value by copying the value.\n+          local global_opt = make_option(self._name, a.nvim_get_option_value(self._name, {scope = \"global\"}))\n+          value = global_opt._value\n+        elseif set_type == SET_TYPES.SET then\n+          -- Equivalent to :set option< in Vimscript, which removes the local value\n+          -- of the option so that the global value will be used. This only\n+          -- works for global-local options\n+          return a.nvim_set_option_value(self._name, nil, {scope = \"local\"})\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r768962814",
            "id": 768962814,
            "in_reply_to_id": 768899689,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4t1XD-",
            "original_commit_id": "324e37f500794481d859c2327f9c95c94c1f28d3",
            "original_line": 610,
            "original_position": 19,
            "original_start_line": 600,
            "path": "runtime/lua/vim/_meta.lua",
            "position": null,
            "pull_request_review_id": 831922685,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/768962814/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-12-14T19:05:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/768962814",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r778487503"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487503"
                }
            },
            "author_association": "MEMBER",
            "body": "what does setting the value of a non `global-local` value to `nil` do? We should say what it's going to do in the docs (or whether it will error, etc.)",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2022-01-05T01:17:44Z",
            "diff_hunk": "@@ -1035,10 +1035,24 @@ from within Lua.\n         In Lua:\n             `vim.opt.listchars = { space = '_', tab = '>~' }`\n \n+    You can get an option's default value with >\n+\n+        vim.opt.wildignore:default()\n+<\n+    To set an option to its default value |:set-&| use: >\n+\n+        vim.opt.wildignore:reset()\n+<\n \n In any of the above examples, to replicate the behavior |setlocal|, use\n `vim.opt_local`. Additionally, to replicate the behavior of |setglobal|, use\n `vim.opt_global`.\n+\n+To clear the local value of a |global-local| option set it to \"nil\". Example: >\n+        vim.opt_local.makeprg = nil\n+This is equivalent to >\n+        :set makeprg<",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r778487503",
            "id": 778487503,
            "line": 1054,
            "node_id": "PRRC_kwDOAPphoM4uZsbP",
            "original_commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "original_line": 1054,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 20,
            "pull_request_review_id": 844139705,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487503/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-05T01:17:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r778487838"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487838"
                }
            },
            "author_association": "MEMBER",
            "body": "does this test what you thought it was going to? Shouldn't this be `reset()` or something?",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2022-01-05T01:18:59Z",
            "diff_hunk": "@@ -1273,6 +1273,53 @@ describe('lua stdlib', function()\n       eq(\"\", result[8])\n     end)\n \n+    it('should allow options to be reset to default values', function()\n+      local result = exec_lua [[\n+        local result = {}\n+        table.insert(result, vim.opt.shiftwidth:default())\n+        vim.opt.shiftwidth = 42\n+        table.insert(result, vim.opt.shiftwidth:get())\n+        vim.opt.shiftwidth:reset()\n+        table.insert(result, vim.opt.shiftwidth:get())\n+        return result\n+      ]]\n+\n+      eq(8, result[1])\n+      eq(42, result[2])\n+      eq(8, result[3])\n+    end)\n+\n+    it('should allow local options to be set to their global value', function()\n+      local result =  exec_lua [[\n+        local result = {}\n+        vim.opt.shiftwidth = 8\n+        vim.opt_local.shiftwidth = 4\n+        table.insert(result, vim.opt_local.shiftwidth:get())\n+        vim.opt_local.shiftwidth = vim.opt_global.shiftwidth:get()",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r778487838",
            "id": 778487838,
            "line": 1298,
            "node_id": "PRRC_kwDOAPphoM4uZsge",
            "original_commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "original_line": 1298,
            "original_position": 26,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": 26,
            "pull_request_review_id": 844140215,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487838/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-05T01:18:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r778487963"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487963"
                }
            },
            "author_association": "MEMBER",
            "body": "can this be `local value = self:default()` ?",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2022-01-05T01:19:24Z",
            "diff_hunk": "@@ -603,6 +610,17 @@ local create_option_metatable = function(set_type)\n       return convert_value_to_lua(self._name, self._info, self._value)\n     end,\n \n+    default = function(self)\n+      return convert_value_to_lua(self._name, self._info, self._info.default)\n+    end,\n+\n+    reset = function(self)\n+      local value = convert_value_to_vim(self._name, self._info, self._info.default)",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r778487963",
            "id": 778487963,
            "line": 618,
            "node_id": "PRRC_kwDOAPphoM4uZsib",
            "original_commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "original_line": 618,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta.lua",
            "position": 25,
            "pull_request_review_id": 844140356,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487963/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-05T01:19:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/778487963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r779247867"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/779247867"
                }
            },
            "author_association": "MEMBER",
            "body": "Right now it [sets it to its default value](https://github.com/neovim/neovim/pull/15354#issuecomment-999102220). I'm not sure how I feel about that behavior though. It kind of makes sense, but could also be unexpected. The other option is making it a no-op.",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2022-01-06T01:46:11Z",
            "diff_hunk": "@@ -1035,10 +1035,24 @@ from within Lua.\n         In Lua:\n             `vim.opt.listchars = { space = '_', tab = '>~' }`\n \n+    You can get an option's default value with >\n+\n+        vim.opt.wildignore:default()\n+<\n+    To set an option to its default value |:set-&| use: >\n+\n+        vim.opt.wildignore:reset()\n+<\n \n In any of the above examples, to replicate the behavior |setlocal|, use\n `vim.opt_local`. Additionally, to replicate the behavior of |setglobal|, use\n `vim.opt_global`.\n+\n+To clear the local value of a |global-local| option set it to \"nil\". Example: >\n+        vim.opt_local.makeprg = nil\n+This is equivalent to >\n+        :set makeprg<",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r779247867",
            "id": 779247867,
            "in_reply_to_id": 778487503,
            "line": 1054,
            "node_id": "PRRC_kwDOAPphoM4ucmD7",
            "original_commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "original_line": 1054,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 20,
            "pull_request_review_id": 845213645,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/779247867/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-06T01:46:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/779247867",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r779251596"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/779251596"
                }
            },
            "author_association": "MEMBER",
            "body": "`:reset()` resets to default value, not global value. To set a local value to a global value you do it explicitly like this. Personally I find this much easier to reason about than all of the different `:set<`, `:setlocal<` variants that Vim script uses, which I've had to look up about a dozen different times while working on this PR >_>",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2022-01-06T01:58:16Z",
            "diff_hunk": "@@ -1273,6 +1273,53 @@ describe('lua stdlib', function()\n       eq(\"\", result[8])\n     end)\n \n+    it('should allow options to be reset to default values', function()\n+      local result = exec_lua [[\n+        local result = {}\n+        table.insert(result, vim.opt.shiftwidth:default())\n+        vim.opt.shiftwidth = 42\n+        table.insert(result, vim.opt.shiftwidth:get())\n+        vim.opt.shiftwidth:reset()\n+        table.insert(result, vim.opt.shiftwidth:get())\n+        return result\n+      ]]\n+\n+      eq(8, result[1])\n+      eq(42, result[2])\n+      eq(8, result[3])\n+    end)\n+\n+    it('should allow local options to be set to their global value', function()\n+      local result =  exec_lua [[\n+        local result = {}\n+        vim.opt.shiftwidth = 8\n+        vim.opt_local.shiftwidth = 4\n+        table.insert(result, vim.opt_local.shiftwidth:get())\n+        vim.opt_local.shiftwidth = vim.opt_global.shiftwidth:get()",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r779251596",
            "id": 779251596,
            "in_reply_to_id": 778487838,
            "line": 1298,
            "node_id": "PRRC_kwDOAPphoM4ucm-M",
            "original_commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "original_line": 1298,
            "original_position": 26,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": 26,
            "pull_request_review_id": 845218271,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/779251596/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-06T01:58:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/779251596",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15354#discussion_r779252832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15354"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/779252832"
                }
            },
            "author_association": "MEMBER",
            "body": "No, `:default()` returns the value as a Lua object (`convert_value_to_lua`) while this needs to use the Vim script value (`convert_value_to_vim`) to pass to `nvim_set_option_value`.",
            "commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "created_at": "2022-01-06T02:02:23Z",
            "diff_hunk": "@@ -603,6 +610,17 @@ local create_option_metatable = function(set_type)\n       return convert_value_to_lua(self._name, self._info, self._value)\n     end,\n \n+    default = function(self)\n+      return convert_value_to_lua(self._name, self._info, self._info.default)\n+    end,\n+\n+    reset = function(self)\n+      local value = convert_value_to_vim(self._name, self._info, self._info.default)",
            "html_url": "https://github.com/neovim/neovim/pull/15354#discussion_r779252832",
            "id": 779252832,
            "in_reply_to_id": 778487963,
            "line": 618,
            "node_id": "PRRC_kwDOAPphoM4ucnRg",
            "original_commit_id": "56695bd3a790a9289b485201b8e640f77da46689",
            "original_line": 618,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta.lua",
            "position": 25,
            "pull_request_review_id": 845219808,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/779252832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-01-06T02:02:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/779252832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "Then there should be a equavelent of `setlocal option<` too.\r\nlike\r\n```lua\r\nvim.opt_local.option_name:reset()\r\n```\r\nthat resets local option to the value of global option .",
            "created_at": "2021-08-13T14:15:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-898488989",
            "id": 898488989,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM41jdqd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898488989/reactions"
            },
            "updated_at": "2021-08-13T14:16:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898488989",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Then there should be a equavelent of `setlocal option<` too.\r\n> like\r\n> \r\n> ```lua\r\n> vim.opt_local.option_name:reset()\r\n> ```\r\n> \r\n> that resets local option to the value of global option .\r\n\r\n`vim.opt_local.option:reset()` sets the local version of the value to the default.\r\n\r\nI agree having a Lua implementation of `setlocal option<` would be useful. @tjdevries left a comment suggesting we use `vim.opt_local.option = nil` for this purpose, which I think is a good idea. I'll update this PR to include that as well.",
            "created_at": "2021-08-13T16:04:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-898566113",
            "id": 898566113,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM41jwfh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898566113/reactions"
            },
            "updated_at": "2021-08-13T16:04:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898566113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> @tjdevries left a comment suggesting we use vim.opt_local.option = nil\r\n\r\nI think `vim.opt_local.option = nil` should unset the option like `vim.bo.opt = nil` or `set option<`. If that's not the case then there'll be no way to unset a local option through opt functions.\r\n\r\nI don't think there's anything that resets local option to default options value in `:set` . There's `set opt&` which resets the global option to default value , `set opt<` that unsets a local options, `setlocal opt<` that reset local option to globals value.",
            "created_at": "2021-08-13T16:37:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-898586498",
            "id": 898586498,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM41j1eC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898586498/reactions"
            },
            "updated_at": "2021-08-13T16:41:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898586498",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13149513?v=4",
                "events_url": "https://api.github.com/users/shadmansaleh/events{/privacy}",
                "followers_url": "https://api.github.com/users/shadmansaleh/followers",
                "following_url": "https://api.github.com/users/shadmansaleh/following{/other_user}",
                "gists_url": "https://api.github.com/users/shadmansaleh/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/shadmansaleh",
                "id": 13149513,
                "login": "shadmansaleh",
                "node_id": "MDQ6VXNlcjEzMTQ5NTEz",
                "organizations_url": "https://api.github.com/users/shadmansaleh/orgs",
                "received_events_url": "https://api.github.com/users/shadmansaleh/received_events",
                "repos_url": "https://api.github.com/users/shadmansaleh/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/shadmansaleh/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/shadmansaleh/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/shadmansaleh"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think `vim.opt_local.option = nil` should unset the option like `vim.bo.opt = nil` or `set option<`. If that's not the case then there'll be no way to unset a local option through opt functions.\r\n\r\n`vim.opt_local.option = nil` is the equivalent to `:setlocal option<`. `vim.opt.option = nil` is `:set option<`. The latter unsets the local option through opt functions.\r\n\r\n> I don't think there's anything that resets local option to default options value in `:set` . There's `set opt&` which resets the global option to default value , `set opt<` that unsets a local options, `setlocal opt<` that reset local option to globals value.\r\n\r\n`:setlocal option&` does what you'd expect. It sets the local value of the option to the default without changing the global value. This is the same thing as `vim.opt_local.option:reset()`.\r\n\r\n",
            "created_at": "2021-08-13T17:24:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-898611133",
            "id": 898611133,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM41j7e9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898611133/reactions"
            },
            "updated_at": "2021-08-13T17:24:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/898611133",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Adding magic methods like this seems less discoverable than having plain old functions available on `vim.opt`:\r\n\r\n```\r\nvim.opt.default(vim.opt.wildignore)\r\nvim.opt.default('wildignore')\r\n```\r\n\r\nAm I missing an advantage of the method-based version?",
            "created_at": "2021-08-31T19:06:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-909523363",
            "id": 909523363,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM42Njmj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909523363/reactions"
            },
            "updated_at": "2021-08-31T19:07:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909523363",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Am I missing an advantage of the method-based version?\r\n\r\nNone that I'm aware of other than consistency with e.g. `vim.opt.wildignore:append`, `vim.opt.wildignore:remove`, etc.",
            "created_at": "2021-08-31T19:29:00Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-909541721",
            "id": 909541721,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM42NoFZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909541721/reactions"
            },
            "updated_at": "2021-08-31T19:29:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909541721",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> None that I'm aware of other than consistency with e.g. `vim.opt.wildignore:append`, `vim.opt.wildignore:remove`, etc.\r\n\r\nAh right, I didn't review `vim.opt..:append` or `vim.opt..:remove`. We need to ask what value we're providing when we add magic OO behavior to things that were otherwise plain old values. This is the same mistake Vim made with its opaque job objects (vs Nvim's job handles which are just integers).\r\n\r\n```\r\n:lua print(tostring(vim.opt.wildignore))\r\ntable: 0x01081bf8d8\r\n```\r\n\r\n...why?\r\n\r\nI see that `vim.opt.wildignore:get()` returns a table (list), which is actually better than Vim's string representation. That's pretty nice...",
            "created_at": "2021-08-31T19:40:25Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-909552854",
            "id": 909552854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM42NqzW",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909552854/reactions"
            },
            "updated_at": "2021-08-31T19:45:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909552854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> ...why?\r\n\r\nSo people wouldn't complain that appending options in Lua required \"ugly\" string concatenation (as opposed to vimscript `+=` magic)? \r\n\r\n(There's still the \"naked\" `vim.o` accessor, for which `print` works fine.)",
            "created_at": "2021-08-31T19:45:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-909558299",
            "id": 909558299,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM42NsIb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909558299/reactions"
            },
            "updated_at": "2021-08-31T19:45:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909558299",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So people wouldn't complain that appending options in Lua required \"ugly\" string concatenation (as opposed to vimscript `+=` magic)?\r\n\r\nYou answered faster than my edit :) The structured representation of 'wildignore' is definitely a huge improvement. \r\n\r\nWhat is the gain of having methods attached to `vim.opt.wildignore`? Having to call `vim.opt.wildignore:get()` is awkward, it seems like two steps forward, one step back.\r\n",
            "created_at": "2021-08-31T19:51:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-909564176",
            "id": 909564176,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM42NtkQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909564176/reactions"
            },
            "updated_at": "2021-08-31T19:51:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909564176",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> You answered faster than my edit :) The structured representation of 'wildignore' is definitely a huge improvement.\r\n> \r\n> What is the gain of having methods attached to `vim.opt.wildignore`? Having to call `vim.opt.wildignore:get()` is awkward, it seems like two steps forward, one step back.\r\n\r\nAs far as I recall (and @tjdevries can correct me), the \"OO\" methods was the cleanest way of making _setting_ these list options work nicely; the drawback was that you then couldn't any longer _get_ these options directly (as you discovered) -- hence the `get` method, and hence the `vim.o.*` metatable is still a thing.\r\n\r\n(Those were heady days, full of wild enthusiasm and unlimited ambition...)",
            "created_at": "2021-08-31T19:56:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-909570903",
            "id": 909570903,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM42NvNX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909570903/reactions"
            },
            "updated_at": "2021-08-31T19:56:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/909570903",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Didn't see this thread earlier, but new stuff LGTM I think.\r\n\r\nAnd yes, the reason we used `:get()` is because `vim.opt.$NAME` can't both return just something like a string and allow for doing things like appending objects and what not easily.\r\n\r\n`:get()` also returns \"map-style\" tables (for example, for `fillchars`).\r\n\r\nLua doesn't have enough syntax constructs to do it any other way, at least that I could think of that also didn't create a whole bunch of new footguns for people to mess up with. \r\n\r\nSo it's not just for setting, but it's also for providing uniform add/remove/prepend/append/etc along with concise syntax for those methods where applicable so users don't feel like it's a large step down from configuring options in vimscript. Idk, I didn't have enough coffee today yet tho, so I'm not sure if my rambling is making any sense.",
            "created_at": "2021-12-14T17:37:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-993819412",
            "id": 993819412,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM47PHsU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/993819412/reactions"
            },
            "updated_at": "2021-12-14T17:37:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/993819412",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Made one change after thinking about this some more. Originally I had made `vim.opt_local.option = nil` act like `:setlocal option<`, which copies the global value into the local value. But this is pretty unintuitive: it makes much more sense for `vim.opt_local.option = nil` to *clear* the local value, which is in fact the equivalent of `:set option<`.\r\n\r\nTo copy the global value into the local value (the equivalent of `:setlocal option<`) it's easy enough to explicitly use\r\n\r\n```lua\r\nvim.opt_local.option = vim.opt_global.option:get()\r\n```\r\n\r\nor even easier\r\n\r\n```lua\r\nvim.bo.option = vim.go.option\r\n```",
            "created_at": "2021-12-16T02:54:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-995392302",
            "id": 995392302,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM47VHsu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995392302/reactions"
            },
            "updated_at": "2021-12-16T02:54:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995392302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Setting `nil` values to clear local options doesn't work properly, see #16710.",
            "created_at": "2021-12-18T17:11:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-997232395",
            "id": 997232395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM47cI8L",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997232395/reactions"
            },
            "updated_at": "2021-12-18T17:11:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997232395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "so is setting to nil equal to `:reset()` now? I can read the code more later to check that out",
            "created_at": "2021-12-20T14:27:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-997972823",
            "id": 997972823,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM47e9tX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997972823/reactions"
            },
            "updated_at": "2021-12-20T14:27:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997972823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, `:reset()` is still just\r\n\r\n```lua\r\nvim.opt.option = vim.opt.option:default()\r\n```\r\n\r\nSetting to `nil` has different meanings for different options (see #16710). For string options it sets the value to an empty string. For non global-local number/boolean options (almost all of them) it clears the local value by copying the global value. For global-local number/boolean options (e.g. `'undolevels'`) it sets the local value to the special \"unset\" value (e.g. -12345 for `'undolevels'`).\r\n\r\nAs the PR stands now `vim.opt.option = nil` and `vim.opt_local.option = nil` are (almost) the same. We can adapt the behavior of the former to do something more useful, such as making it call `reset()` as you've suggested. I think that makes sense actually, since `vim.opt.option = nil` would have the semantics of \"clear whatever value is set now and go back to the default\". But this would behave differently than `vim.opt_local.option = nil` (as well as `vim.opt_global.option = nil`). As long as we're okay with that slight variation and we can adequately document the behavior then that sounds good to me.\r\n\r\n(sorry for writing an essay)",
            "created_at": "2021-12-20T14:49:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-997990813",
            "id": 997990813,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM47fCGd",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997990813/reactions"
            },
            "updated_at": "2021-12-20T14:50:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997990813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "With #16710 merged this should be good to go now.\r\n\r\n@tjdevries What are your thoughts on `vim.opt.option = nil` resetting to default value? Too magic?",
            "created_at": "2021-12-21T21:21:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-999102220",
            "id": 999102220,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM47jRcM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/999102220/reactions"
            },
            "updated_at": "2021-12-21T21:29:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/999102220",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@tjdevries Would you mind taking one more look at this when you get a chance? :)",
            "created_at": "2022-01-04T14:49:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-1004874341",
            "id": 1004874341,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM475Spl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1004874341/reactions"
            },
            "updated_at": "2022-01-04T14:49:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1004874341",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Closing stale PR",
            "created_at": "2024-07-22T14:00:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/15354#issuecomment-2243038516",
            "id": 2243038516,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
            "node_id": "IC_kwDOAPphoM6Fsg00",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2243038516/reactions"
            },
            "updated_at": "2024-07-22T14:00:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2243038516",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15354/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15354/commits",
    "created_at": "2021-08-12T21:07:38Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15354.diff",
    "draft": false,
    "head": {
        "label": "gpanders:opt-default",
        "ref": "opt-default",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-07-22T22:43:51Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 274063,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "56695bd3a790a9289b485201b8e640f77da46689",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15354",
    "id": 711606550,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15354",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2145ba5668afa09f607bf8fbe629ee0f71b0b885",
    "merged_at": null,
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzExNjA2NTUw",
    "number": 15354,
    "patch_url": "https://github.com/neovim/neovim/pull/15354.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15354/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/56695bd3a790a9289b485201b8e640f77da46689",
    "title": "feat(lua): add option helpers for default values",
    "updated_at": "2024-07-22T14:00:02Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15354",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}