{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31405/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31405/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31405"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31405"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31405/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31405"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/a0995ee637aad888d6304494d3c6e8161670a95c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5726,
            "forks_count": 5726,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1842,
            "open_issues_count": 1842,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-12-03T00:32:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 296843,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83804,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-12-03T02:31:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83804,
            "watchers_count": 83804,
            "web_commit_signoff_required": false
        },
        "sha": "ab9cfc4dc3422af5235759efef456d3e02745217",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: Currently we have handcrafted code for converting an OptVal to its string representation. This may be fine for now, but it will be significantly tougher to implement once we add Array or Dictionary options. It also adds room for inconsistency between different methods of converting any object to a string.\r\n\r\nSolution: Use `vim.inspect()` under the hood to convert an `OptVal` to a string. This ensures that the function is future-proofed for Array, Dictionary and Function option values, and also guarantees consistency with our Lua object-to-string conversion.\r\n",
    "closed_at": "2024-12-02T14:19:30Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31405#discussion_r1864272404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31405"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864272404"
                }
            },
            "author_association": "MEMBER",
            "body": "Would it be better to use `assert(!ERROR_SET(&err));` here?",
            "commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "created_at": "2024-11-30T14:36:42Z",
            "diff_hunk": "@@ -3212,63 +3212,67 @@ static void set_option_varp(OptIndex opt_idx, void *varp, OptVal value, bool fre\n   UNREACHABLE;\n }\n \n-/// Return C-string representation of OptVal. Caller must free the returned C-string.\n-static char *optval_to_cstr(OptVal o)\n+/// Get C-string representation of OptVal. Uses vim.inspect() under the hood.\n+/// Always returns a valid C-string.\n+///\n+/// @param  value  Option value.\n+///\n+/// @return  C-string representation of value.\n+static const char *optval_to_cstr(OptVal value)\n {\n-  switch (o.type) {\n-  case kOptValTypeNil:\n-    return xstrdup(\"\");\n-  case kOptValTypeBoolean:\n-    return xstrdup(o.data.boolean ? \"true\" : \"false\");\n-  case kOptValTypeNumber: {\n-    char *buf = xmalloc(NUMBUFLEN);\n-    snprintf(buf, NUMBUFLEN, \"%\" PRId64, o.data.number);\n-    return buf;\n-  }\n-  case kOptValTypeString: {\n-    char *buf = xmalloc(o.data.string.size + 3);\n-    snprintf(buf, o.data.string.size + 3, \"\\\"%s\\\"\", o.data.string.data);\n-    return buf;\n-  }\n+  Error err = ERROR_INIT;\n+  const char *res = nlua_inspect(optval_as_object(value), &err);\n+\n+  if (ERROR_SET(&err)) {\n+    // This conversion should never fail unless something is seriously wrong.\n+    abort();",
            "html_url": "https://github.com/neovim/neovim/pull/31405#discussion_r1864272404",
            "id": 1864272404,
            "line": 3228,
            "node_id": "PRRC_kwDOAPphoM5vHooU",
            "original_commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "original_line": 3228,
            "original_position": 34,
            "original_start_line": 3226,
            "path": "src/nvim/option.c",
            "position": 34,
            "pull_request_review_id": 2470918186,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31405",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864272404/reactions"
            },
            "side": "RIGHT",
            "start_line": 3226,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-11-30T14:36:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1864272404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31405#discussion_r1865029415"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31405"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865029415"
                }
            },
            "author_association": "MEMBER",
            "body": "No",
            "commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "created_at": "2024-12-01T22:02:37Z",
            "diff_hunk": "@@ -3212,63 +3212,67 @@ static void set_option_varp(OptIndex opt_idx, void *varp, OptVal value, bool fre\n   UNREACHABLE;\n }\n \n-/// Return C-string representation of OptVal. Caller must free the returned C-string.\n-static char *optval_to_cstr(OptVal o)\n+/// Get C-string representation of OptVal. Uses vim.inspect() under the hood.\n+/// Always returns a valid C-string.\n+///\n+/// @param  value  Option value.\n+///\n+/// @return  C-string representation of value.\n+static const char *optval_to_cstr(OptVal value)\n {\n-  switch (o.type) {\n-  case kOptValTypeNil:\n-    return xstrdup(\"\");\n-  case kOptValTypeBoolean:\n-    return xstrdup(o.data.boolean ? \"true\" : \"false\");\n-  case kOptValTypeNumber: {\n-    char *buf = xmalloc(NUMBUFLEN);\n-    snprintf(buf, NUMBUFLEN, \"%\" PRId64, o.data.number);\n-    return buf;\n-  }\n-  case kOptValTypeString: {\n-    char *buf = xmalloc(o.data.string.size + 3);\n-    snprintf(buf, o.data.string.size + 3, \"\\\"%s\\\"\", o.data.string.data);\n-    return buf;\n-  }\n+  Error err = ERROR_INIT;\n+  const char *res = nlua_inspect(optval_as_object(value), &err);\n+\n+  if (ERROR_SET(&err)) {\n+    // This conversion should never fail unless something is seriously wrong.\n+    abort();",
            "html_url": "https://github.com/neovim/neovim/pull/31405#discussion_r1865029415",
            "id": 1865029415,
            "in_reply_to_id": 1864272404,
            "line": 3228,
            "node_id": "PRRC_kwDOAPphoM5vKhcn",
            "original_commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "original_line": 3228,
            "original_position": 34,
            "original_start_line": 3226,
            "path": "src/nvim/option.c",
            "position": 34,
            "pull_request_review_id": 2471513946,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31405",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865029415/reactions"
            },
            "side": "RIGHT",
            "start_line": 3226,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-12-01T22:02:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865029415",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31405#discussion_r1865034240"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31405"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865034240"
                }
            },
            "author_association": "MEMBER",
            "body": "is there a reason you can't use `NLUA_EXEC_STATIC` instead of adding `nlua_inspect` ?",
            "commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "created_at": "2024-12-01T22:20:21Z",
            "diff_hunk": "@@ -3212,63 +3212,67 @@ static void set_option_varp(OptIndex opt_idx, void *varp, OptVal value, bool fre\n   UNREACHABLE;\n }\n \n-/// Return C-string representation of OptVal. Caller must free the returned C-string.\n-static char *optval_to_cstr(OptVal o)\n+/// Get C-string representation of OptVal. Uses vim.inspect() under the hood.\n+/// Always returns a valid C-string.\n+///\n+/// @param  value  Option value.\n+///\n+/// @return  C-string representation of value.\n+static const char *optval_to_cstr(OptVal value)\n {\n-  switch (o.type) {\n-  case kOptValTypeNil:\n-    return xstrdup(\"\");\n-  case kOptValTypeBoolean:\n-    return xstrdup(o.data.boolean ? \"true\" : \"false\");\n-  case kOptValTypeNumber: {\n-    char *buf = xmalloc(NUMBUFLEN);\n-    snprintf(buf, NUMBUFLEN, \"%\" PRId64, o.data.number);\n-    return buf;\n-  }\n-  case kOptValTypeString: {\n-    char *buf = xmalloc(o.data.string.size + 3);\n-    snprintf(buf, o.data.string.size + 3, \"\\\"%s\\\"\", o.data.string.data);\n-    return buf;\n-  }\n+  Error err = ERROR_INIT;\n+  const char *res = nlua_inspect(optval_as_object(value), &err);",
            "html_url": "https://github.com/neovim/neovim/pull/31405#discussion_r1865034240",
            "id": 1865034240,
            "line": 3224,
            "node_id": "PRRC_kwDOAPphoM5vKioA",
            "original_commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "original_line": 3224,
            "original_position": 30,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": 30,
            "pull_request_review_id": 2471517675,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31405",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865034240/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-01T22:20:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865034240",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31405#discussion_r1865034573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31405"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865034573"
                }
            },
            "author_association": "MEMBER",
            "body": "seems like an unnecessary rename",
            "commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "created_at": "2024-12-01T22:21:58Z",
            "diff_hunk": "@@ -3212,63 +3212,67 @@ static void set_option_varp(OptIndex opt_idx, void *varp, OptVal value, bool fre\n   UNREACHABLE;\n }\n \n-/// Return C-string representation of OptVal. Caller must free the returned C-string.\n-static char *optval_to_cstr(OptVal o)\n+/// Get C-string representation of OptVal. Uses vim.inspect() under the hood.\n+/// Always returns a valid C-string.\n+///\n+/// @param  value  Option value.\n+///\n+/// @return  C-string representation of value.\n+static const char *optval_to_cstr(OptVal value)\n {\n-  switch (o.type) {\n-  case kOptValTypeNil:\n-    return xstrdup(\"\");\n-  case kOptValTypeBoolean:\n-    return xstrdup(o.data.boolean ? \"true\" : \"false\");\n-  case kOptValTypeNumber: {\n-    char *buf = xmalloc(NUMBUFLEN);\n-    snprintf(buf, NUMBUFLEN, \"%\" PRId64, o.data.number);\n-    return buf;\n-  }\n-  case kOptValTypeString: {\n-    char *buf = xmalloc(o.data.string.size + 3);\n-    snprintf(buf, o.data.string.size + 3, \"\\\"%s\\\"\", o.data.string.data);\n-    return buf;\n-  }\n+  Error err = ERROR_INIT;\n+  const char *res = nlua_inspect(optval_as_object(value), &err);\n+\n+  if (ERROR_SET(&err)) {\n+    // This conversion should never fail unless something is seriously wrong.\n+    abort();\n   }\n-  UNREACHABLE;\n+\n+  return res;\n }\n \n-/// Convert an OptVal to an API Object.\n-Object optval_as_object(OptVal o)\n+/// Convert an OptVal to an API Object. Always returns a valid Object.\n+///\n+/// @param  value  OptVal to convert.\n+Object optval_as_object(OptVal value)\n {\n-  switch (o.type) {\n+  switch (value.type) {",
            "html_url": "https://github.com/neovim/neovim/pull/31405#discussion_r1865034573",
            "id": 1865034573,
            "line": 3239,
            "node_id": "PRRC_kwDOAPphoM5vKitN",
            "original_commit_id": "a0995ee637aad888d6304494d3c6e8161670a95c",
            "original_line": 3239,
            "original_position": 49,
            "original_start_line": null,
            "path": "src/nvim/option.c",
            "position": 49,
            "pull_request_review_id": 2471518041,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31405",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865034573/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-01T22:21:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1865034573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Closing as not needing multitype options obviates this change. A function that converts OptVal to string for future dict options and such may need to do dict-to-pseudostring conversions",
            "created_at": "2024-12-02T14:19:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/31405#issuecomment-2511669640",
            "id": 2511669640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31405",
            "node_id": "IC_kwDOAPphoM6VtQmI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2511669640/reactions"
            },
            "updated_at": "2024-12-02T14:19:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2511669640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31405/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31405/commits",
    "created_at": "2024-11-30T14:23:28Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31405.diff",
    "draft": false,
    "head": {
        "label": "famiu:refactor/options/optval_to_cstr",
        "ref": "refactor/options/optval_to_cstr",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/famiu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/famiu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/famiu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/famiu/neovim/branches{/branch}",
            "clone_url": "https://github.com/famiu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/famiu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/famiu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/famiu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/famiu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/famiu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/famiu/neovim/contributors",
            "created_at": "2021-10-11T04:58:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/famiu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/famiu/neovim/downloads",
            "events_url": "https://api.github.com/repos/famiu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/famiu/neovim/forks",
            "full_name": "famiu/neovim",
            "git_commits_url": "https://api.github.com/repos/famiu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/famiu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/famiu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/famiu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/famiu/neovim/hooks",
            "html_url": "https://github.com/famiu/neovim",
            "id": 415783665,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/famiu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/famiu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/famiu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/famiu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/famiu/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/famiu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/famiu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/famiu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGMha8Q",
            "notifications_url": "https://api.github.com/repos/famiu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/famiu/neovim/pulls{/number}",
            "pushed_at": "2024-11-30T14:33:20Z",
            "releases_url": "https://api.github.com/repos/famiu/neovim/releases{/id}",
            "size": 290677,
            "ssh_url": "git@github.com:famiu/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/famiu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/famiu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/famiu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/famiu/neovim/subscription",
            "svn_url": "https://github.com/famiu/neovim",
            "tags_url": "https://api.github.com/repos/famiu/neovim/tags",
            "teams_url": "https://api.github.com/repos/famiu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/famiu/neovim/git/trees{/sha}",
            "updated_at": "2024-11-29T12:52:16Z",
            "url": "https://api.github.com/repos/famiu/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "a0995ee637aad888d6304494d3c6e8161670a95c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31405",
    "id": 2208377316,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31405",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "configuration, settings",
            "id": 4242493821,
            "name": "options",
            "node_id": "LA_kwDOAPphoM7831F9",
            "url": "https://api.github.com/repos/neovim/neovim/labels/options"
        }
    ],
    "locked": false,
    "merge_commit_sha": "7f553e1486a9c8ee6933d2533283d4575dce6468",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6DoSnk",
    "number": 31405,
    "patch_url": "https://github.com/neovim/neovim/pull/31405.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31405/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/a0995ee637aad888d6304494d3c6e8161670a95c",
    "title": "refactor(options): use `vim.inspect()` for converting OptVal to string",
    "updated_at": "2024-12-02T14:20:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31405",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu",
        "user_view_type": "public"
    }
}