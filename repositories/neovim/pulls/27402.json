{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27402/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27402/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27402"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27402"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27402/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/58efad0ae3d88fde1b8f458f95dd9e81363552b5"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5117,
            "forks_count": 5117,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1734,
            "open_issues_count": 1734,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-03-04T23:50:59Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 258911,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 74607,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-03-05T01:06:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 74607,
            "watchers_count": 74607,
            "web_commit_signoff_required": false
        },
        "sha": "a7788c2e251089b4844aac0e6633998bdb017da1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Adds the changes merged upstream: https://github.com/LuaCATS/lpeg/pull/9\r\n\r\nFollow-up from some typos and code style nits I found in https://github.com/neovim/neovim/pull/26989.",
    "closed_at": "2024-02-28T09:22:09Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484744503"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484744503"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this is meant to be the literal string `\"pattern\"`, not a type `pattern`.",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T19:53:19Z",
            "diff_hunk": "@@ -3321,19 +3321,18 @@ vim.lpeg.setmaxstack({max})                           *vim.lpeg.setmaxstack()*\n       • {max}  (`integer`)\n \n vim.lpeg.type({value})                                       *vim.lpeg.type()*\n-    Returns the string `\"pattern\"` if the given value is a pattern, otherwise\n-    `nil`.\n+    Returns the string 'pattern `if the given value is a pattern, otherwise` nil`.\n \n     Return: ~\n-        (`\"pattern\"?`)\n+        ('pattern ?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484744503",
            "id": 1484744503,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yf2c3",
            "original_commit_id": "d3d10ab25cc440a3f14dcb184d91ef5dc2526c8e",
            "original_line": 3327,
            "original_position": 166,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1873102348,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484744503/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T19:54:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484744503",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484789244"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484789244"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmmm weird. This is indeed a literal in the metafile:\r\nhttps://github.com/neovim/neovim/blob/d3d10ab25cc440a3f14dcb184d91ef5dc2526c8e/runtime/lua/vim/_meta/lpeg.lua#L91",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T20:47:56Z",
            "diff_hunk": "@@ -3321,19 +3321,18 @@ vim.lpeg.setmaxstack({max})                           *vim.lpeg.setmaxstack()*\n       • {max}  (`integer`)\n \n vim.lpeg.type({value})                                       *vim.lpeg.type()*\n-    Returns the string `\"pattern\"` if the given value is a pattern, otherwise\n-    `nil`.\n+    Returns the string 'pattern `if the given value is a pattern, otherwise` nil`.\n \n     Return: ~\n-        (`\"pattern\"?`)\n+        ('pattern ?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484789244",
            "id": 1484789244,
            "in_reply_to_id": 1484744503,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgBX8",
            "original_commit_id": "d3d10ab25cc440a3f14dcb184d91ef5dc2526c8e",
            "original_line": 3327,
            "original_position": 166,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1873173765,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484789244/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T20:47:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484789244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484792192"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484792192"
                }
            },
            "author_association": "MEMBER",
            "body": "The docgen probably doesn't understand `'literal'` strings but only does `\"literal\"` strings... 😂",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T20:52:14Z",
            "diff_hunk": "@@ -3321,19 +3321,18 @@ vim.lpeg.setmaxstack({max})                           *vim.lpeg.setmaxstack()*\n       • {max}  (`integer`)\n \n vim.lpeg.type({value})                                       *vim.lpeg.type()*\n-    Returns the string `\"pattern\"` if the given value is a pattern, otherwise\n-    `nil`.\n+    Returns the string 'pattern `if the given value is a pattern, otherwise` nil`.\n \n     Return: ~\n-        (`\"pattern\"?`)\n+        ('pattern ?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484792192",
            "id": 1484792192,
            "in_reply_to_id": 1484744503,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgCGA",
            "original_commit_id": "d3d10ab25cc440a3f14dcb184d91ef5dc2526c8e",
            "original_line": 3327,
            "original_position": 166,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1873178576,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484792192/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T20:52:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484792192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484797461"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484797461"
                }
            },
            "author_association": "MEMBER",
            "body": "AHHHHHHH",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T20:59:49Z",
            "diff_hunk": "@@ -3321,19 +3321,18 @@ vim.lpeg.setmaxstack({max})                           *vim.lpeg.setmaxstack()*\n       • {max}  (`integer`)\n \n vim.lpeg.type({value})                                       *vim.lpeg.type()*\n-    Returns the string `\"pattern\"` if the given value is a pattern, otherwise\n-    `nil`.\n+    Returns the string 'pattern `if the given value is a pattern, otherwise` nil`.\n \n     Return: ~\n-        (`\"pattern\"?`)\n+        ('pattern ?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484797461",
            "id": 1484797461,
            "in_reply_to_id": 1484744503,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgDYV",
            "original_commit_id": "d3d10ab25cc440a3f14dcb184d91ef5dc2526c8e",
            "original_line": 3327,
            "original_position": 166,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1873186997,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484797461/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T20:59:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484797461",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484800715"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484800715"
                }
            },
            "author_association": "MEMBER",
            "body": "See this: https://github.com/neovim/neovim/pull/26989#discussion_r1450986576",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T21:04:21Z",
            "diff_hunk": "@@ -3321,19 +3321,18 @@ vim.lpeg.setmaxstack({max})                           *vim.lpeg.setmaxstack()*\n       • {max}  (`integer`)\n \n vim.lpeg.type({value})                                       *vim.lpeg.type()*\n-    Returns the string `\"pattern\"` if the given value is a pattern, otherwise\n-    `nil`.\n+    Returns the string 'pattern `if the given value is a pattern, otherwise` nil`.\n \n     Return: ~\n-        (`\"pattern\"?`)\n+        ('pattern ?`)",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484800715",
            "id": 1484800715,
            "in_reply_to_id": 1484744503,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgELL",
            "original_commit_id": "d3d10ab25cc440a3f14dcb184d91ef5dc2526c8e",
            "original_line": 3327,
            "original_position": 166,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": null,
            "pull_request_review_id": 1873192167,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484800715/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T21:04:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484800715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484868354"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868354"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- `x` and `y` (both inclusive). As an example, the pattern ``lpeg.R('09')`` matches any digit, and\r\n--- ``lpeg.R('az', 'AZ')`` matches any ASCII letter.\r\n```",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T22:42:09Z",
            "diff_hunk": "@@ -114,40 +114,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R('09')` matches any digit, and\n+--- `lpeg.R('az', 'AZ')` matches any ASCII letter.",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484868354",
            "id": 1484868354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgUsC",
            "original_commit_id": "33c2ab4b84d19f166772784a3f1f922a82a91500",
            "original_line": 133,
            "original_position": 73,
            "original_start_line": 133,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": null,
            "pull_request_review_id": 1873297061,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868354/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-09T22:42:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868354",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484868572"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868572"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- As an example, the pattern ``lpeg.S('+-*/')`` matches any arithmetic operator. Note that, if `s` is a character\r\n```",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T22:42:36Z",
            "diff_hunk": "@@ -114,40 +114,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R('09')` matches any digit, and\n+--- `lpeg.R('az', 'AZ')` matches any ASCII letter.\n ---\n --- Example:\n ---\n --- ```lua\n---- local pattern = lpeg.R(\"az\") ^ 1 * -1\n---- assert(pattern:match(\"hello\") == 6)\n+--- local pattern = lpeg.R('az') ^ 1 * -1\n+--- assert(pattern:match('hello') == 6)\n --- ```\n ---\n --- @param ... string\n --- @return vim.lpeg.Pattern\n function vim.lpeg.R(...) end\n \n --- Returns a pattern that matches any single character that appears in the given string (the `S` stands for Set).\n---- As an example, the pattern `lpeg.S(\"+-*/\")` matches any arithmetic operator. Note that, if `s` is a character\n+--- As an example, the pattern `lpeg.S('+-*/')` matches any arithmetic operator. Note that, if `s` is a character",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484868572",
            "id": 1484868572,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgUvc",
            "original_commit_id": "33c2ab4b84d19f166772784a3f1f922a82a91500",
            "original_line": 147,
            "original_position": 90,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": null,
            "pull_request_review_id": 1873297385,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868572/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T22:42:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868572",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484868739"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868739"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n--- `lpeg.R(s..s)`. Note also that both ``lpeg.S('')`` and `lpeg.R()` are patterns that always fail.\r\n```",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-09T22:42:54Z",
            "diff_hunk": "@@ -114,40 +114,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R('09')` matches any digit, and\n+--- `lpeg.R('az', 'AZ')` matches any ASCII letter.\n ---\n --- Example:\n ---\n --- ```lua\n---- local pattern = lpeg.R(\"az\") ^ 1 * -1\n---- assert(pattern:match(\"hello\") == 6)\n+--- local pattern = lpeg.R('az') ^ 1 * -1\n+--- assert(pattern:match('hello') == 6)\n --- ```\n ---\n --- @param ... string\n --- @return vim.lpeg.Pattern\n function vim.lpeg.R(...) end\n \n --- Returns a pattern that matches any single character that appears in the given string (the `S` stands for Set).\n---- As an example, the pattern `lpeg.S(\"+-*/\")` matches any arithmetic operator. Note that, if `s` is a character\n+--- As an example, the pattern `lpeg.S('+-*/')` matches any arithmetic operator. Note that, if `s` is a character\n --- (that is, a string of length 1), then `lpeg.P(s)` is equivalent to `lpeg.S(s)` which is equivalent to\n---- `lpeg.R(s..s)`. Note also that both `lpeg.S(\"\")` and `lpeg.R()` are patterns that always fail.\n+--- `lpeg.R(s..s)`. Note also that both `lpeg.S('')` and `lpeg.R()` are patterns that always fail.",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484868739",
            "id": 1484868739,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YgUyD",
            "original_commit_id": "33c2ab4b84d19f166772784a3f1f922a82a91500",
            "original_line": 149,
            "original_position": 93,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": null,
            "pull_request_review_id": 1873297631,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868739/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-09T22:42:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484868739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484915706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484915706"
                }
            },
            "author_association": "MEMBER",
            "body": "Could you please explain why the suggestion of using double backticks?",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-10T00:48:29Z",
            "diff_hunk": "@@ -114,40 +114,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R('09')` matches any digit, and\n+--- `lpeg.R('az', 'AZ')` matches any ASCII letter.",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484915706",
            "id": 1484915706,
            "in_reply_to_id": 1484868354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YggP6",
            "original_commit_id": "33c2ab4b84d19f166772784a3f1f922a82a91500",
            "original_line": 133,
            "original_position": 73,
            "original_start_line": 133,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": null,
            "pull_request_review_id": 1873361374,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484915706/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-10T00:48:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484915706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1484915949"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484915949"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh nvm, it's another doxygen thing.",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-10T00:49:24Z",
            "diff_hunk": "@@ -114,40 +114,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R('09')` matches any digit, and\n+--- `lpeg.R('az', 'AZ')` matches any ASCII letter.",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1484915949",
            "id": 1484915949,
            "in_reply_to_id": 1484868354,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YggTt",
            "original_commit_id": "33c2ab4b84d19f166772784a3f1f922a82a91500",
            "original_line": 133,
            "original_position": 73,
            "original_start_line": 133,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": null,
            "pull_request_review_id": 1873361659,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484915949/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-10T00:49:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1484915949",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1505356554"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1505356554"
                }
            },
            "author_association": "MEMBER",
            "body": "Now that doxygen is gone, we'd need to change to single backtick (not just here).",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-28T04:46:30Z",
            "diff_hunk": "@@ -113,40 +113,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern ``lpeg.R('09')`` matches any digit, and\n+--- ``lpeg.R('az', 'AZ')`` matches any ASCII letter.\n ---\n --- Example:\n ---\n --- ```lua\n---- local pattern = lpeg.R(\"az\") ^ 1 * -1\n---- assert(pattern:match(\"hello\") == 6)\n+--- local pattern = lpeg.R('az') ^ 1 * -1\n+--- assert(pattern:match('hello') == 6)\n --- ```\n ---\n --- @param ... string\n --- @return vim.lpeg.Pattern\n function vim.lpeg.R(...) end\n \n --- Returns a pattern that matches any single character that appears in the given string (the `S` stands for Set).\n---- As an example, the pattern `lpeg.S(\"+-*/\")` matches any arithmetic operator. Note that, if `s` is a character\n+--- As an example, the pattern ``lpeg.S('+-*/')`` matches any arithmetic operator. Note that, if `s` is a character\n --- (that is, a string of length 1), then `lpeg.P(s)` is equivalent to `lpeg.S(s)` which is equivalent to\n---- `lpeg.R(s..s)`. Note also that both `lpeg.S(\"\")` and `lpeg.R()` are patterns that always fail.\n+--- `lpeg.R(s..s)`. Note also that both ``lpeg.S('')`` and `lpeg.R()` are patterns that always fail.",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1505356554",
            "id": 1505356554,
            "line": 149,
            "node_id": "PRRC_kwDOAPphoM5ZuesK",
            "original_commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "original_line": 149,
            "original_position": 93,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": 93,
            "pull_request_review_id": 1905309661,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1505356554/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-28T16:34:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1505356554",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27402#discussion_r1506459258"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27402"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1506459258"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed with #27659 ",
            "commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "created_at": "2024-02-28T19:12:21Z",
            "diff_hunk": "@@ -113,40 +113,40 @@ function vim.lpeg.setmaxstack(max) end\n --- * If the argument is a boolean, the result is a pattern that always succeeds or always fails\n --- (according to the boolean value), without consuming any input.\n --- * If the argument is a table, it is interpreted as a grammar (see Grammars).\n---- * If the argument is a function, returns a pattern equivalent to a match-time captureover the empty string.\n+--- * If the argument is a function, returns a pattern equivalent to a match-time capture over the empty string.\n ---\n --- @param value vim.lpeg.Pattern|string|integer|boolean|table|function\n --- @return vim.lpeg.Pattern\n function vim.lpeg.P(value) end\n \n --- Returns a pattern that matches only if the input string at the current position is preceded by `patt`.\n --- Pattern `patt` must match only strings with some fixed length, and it cannot contain captures.\n---- Like the and predicate, this pattern never consumes any input, independently of success or failure.\n+--- Like the `and` predicate, this pattern never consumes any input, independently of success or failure.\n ---\n --- @param pattern vim.lpeg.Pattern\n --- @return vim.lpeg.Pattern\n function vim.lpeg.B(pattern) end\n \n --- Returns a pattern that matches any single character belonging to one of the given ranges.\n --- Each `range` is a string `xy` of length 2, representing all characters with code between the codes of\n---- `x` and `y` (both inclusive). As an example, the pattern `lpeg.R(\"09\")` matches any digit, and\n---- `lpeg.R(\"az\", \"AZ\")` matches any ASCII letter.\n+--- `x` and `y` (both inclusive). As an example, the pattern ``lpeg.R('09')`` matches any digit, and\n+--- ``lpeg.R('az', 'AZ')`` matches any ASCII letter.\n ---\n --- Example:\n ---\n --- ```lua\n---- local pattern = lpeg.R(\"az\") ^ 1 * -1\n---- assert(pattern:match(\"hello\") == 6)\n+--- local pattern = lpeg.R('az') ^ 1 * -1\n+--- assert(pattern:match('hello') == 6)\n --- ```\n ---\n --- @param ... string\n --- @return vim.lpeg.Pattern\n function vim.lpeg.R(...) end\n \n --- Returns a pattern that matches any single character that appears in the given string (the `S` stands for Set).\n---- As an example, the pattern `lpeg.S(\"+-*/\")` matches any arithmetic operator. Note that, if `s` is a character\n+--- As an example, the pattern ``lpeg.S('+-*/')`` matches any arithmetic operator. Note that, if `s` is a character\n --- (that is, a string of length 1), then `lpeg.P(s)` is equivalent to `lpeg.S(s)` which is equivalent to\n---- `lpeg.R(s..s)`. Note also that both `lpeg.S(\"\")` and `lpeg.R()` are patterns that always fail.\n+--- `lpeg.R(s..s)`. Note also that both ``lpeg.S('')`` and `lpeg.R()` are patterns that always fail.",
            "html_url": "https://github.com/neovim/neovim/pull/27402#discussion_r1506459258",
            "id": 1506459258,
            "in_reply_to_id": 1505356554,
            "line": 149,
            "node_id": "PRRC_kwDOAPphoM5Zyr56",
            "original_commit_id": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
            "original_line": 149,
            "original_position": 93,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/lpeg.lua",
            "position": 93,
            "pull_request_review_id": 1907075773,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1506459258/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-28T19:12:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1506459258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "docs rather than chore?",
            "created_at": "2024-02-09T19:52:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936516146",
            "id": 1936516146,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zbOQy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936516146/reactions"
            },
            "updated_at": "2024-02-09T19:52:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936516146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> docs rather than chore?\n\nI'll use `build` since I was told that's our `chore` ;)",
            "created_at": "2024-02-09T19:54:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936518500",
            "id": 1936518500,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zbO1k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936518500/reactions"
            },
            "updated_at": "2024-02-09T19:54:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936518500",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think in this case \"docs\" is fine ;)\n\n",
            "created_at": "2024-02-09T19:55:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936519843",
            "id": 1936519843,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zbPKj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936519843/reactions"
            },
            "updated_at": "2024-02-09T19:55:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936519843",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "AHHH I don't understand what's going on. I'm definitely running `make doc` and committing the changes but the CI check keeps failing :(",
            "created_at": "2024-02-10T01:12:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936789343",
            "id": 1936789343,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zcQ9f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936789343/reactions"
            },
            "updated_at": "2024-02-10T01:12:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936789343",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Congratulations, you've just found a bug that happens only [on CI](https://github.com/neovim/neovim/actions/runs/7851523675/job/21428718967?pr=27402#step:5:4776).\r\n\r\nActually, this difference turns out to be due to different doxygen versions. I and you are probably using the latest version (1.10), but CI runs doxygen 1.9.1 (latest on ubuntu packages); with doxygen 1.9.1, I can reproduce the same (incorrect) diff locally. We'll need to bump up doxygen for CI!",
            "created_at": "2024-02-10T01:42:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936801815",
            "id": 1936801815,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zcUAX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936801815/reactions"
            },
            "updated_at": "2024-02-10T01:43:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936801815",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Congratulations, you've just found a bug that happens only [on CI](https://github.com/neovim/neovim/actions/runs/7851523675/job/21428718967?pr=27402#step:5:4776).\r\n> \r\n> Actually, this difference turns out to be due to different doxygen versions. I and you are probably using the latest version (1.10), but CI runs doxygen 1.9.1 (latest on ubuntu packages); with doxygen 1.9.1, I can reproduce the same (incorrect) diff locally. We'll need to bump up doxygen for CI!\r\n\r\nYayyy do I get a prize :D ??\r\n\r\nBut wait it seems like the GitHub action [installs `doxygen`](https://github.com/neovim/neovim/blob/8e739af064dec28886694aa448f60a570acd2173/.github/workflows/docs.yml#L25) while running the task. So how is that outdated?",
            "created_at": "2024-02-10T01:45:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936803429",
            "id": 1936803429,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zcUZl",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936803429/reactions"
            },
            "updated_at": "2024-02-10T01:47:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936803429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I did a bit of bisect and can confirm that v1.9.5 (release date 26-08-2022) is the first version where this bug is fixed. https://github.com/doxygen/doxygen/releases\r\n\r\n22.04 LTS (jammy): https://packages.ubuntu.com/source/jammy/doxygen installs v1.9.1 (release date 08-01-2021).\r\n\r\nAnyway we can bump doxygen to latest: #27410 ",
            "created_at": "2024-02-10T03:38:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1936841098",
            "id": 1936841098,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM5zcdmK",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936841098/reactions"
            },
            "updated_at": "2024-02-10T03:38:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1936841098",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Update: I'm waiting on #27480 to get merged first since it fixes the doxygen issues (by removing it lol).",
            "created_at": "2024-02-26T20:56:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1965252199",
            "id": 1965252199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM51I15n",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1965252199/reactions"
            },
            "updated_at": "2024-02-26T20:56:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1965252199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Update: I'm waiting on #27480 to get merged first since it fixes the doxygen issues (by removing it lol).\r\n\r\nIt got merged 🤗 ",
            "created_at": "2024-02-27T17:47:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/27402#issuecomment-1967288002",
            "id": 1967288002,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
            "node_id": "IC_kwDOAPphoM51Qm7C",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 1,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1967288002/reactions"
            },
            "updated_at": "2024-02-27T17:47:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1967288002",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27402/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27402/commits",
    "created_at": "2024-02-09T18:36:22Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27402.diff",
    "draft": false,
    "head": {
        "label": "MariaSolOs:lpeg-tweaks",
        "ref": "lpeg-tweaks",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/MariaSolOs/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/MariaSolOs/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/MariaSolOs/neovim/branches{/branch}",
            "clone_url": "https://github.com/MariaSolOs/neovim.git",
            "collaborators_url": "https://api.github.com/repos/MariaSolOs/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/MariaSolOs/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/MariaSolOs/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/MariaSolOs/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/MariaSolOs/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/MariaSolOs/neovim/contributors",
            "created_at": "2023-08-05T17:10:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/MariaSolOs/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/MariaSolOs/neovim/downloads",
            "events_url": "https://api.github.com/repos/MariaSolOs/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/MariaSolOs/neovim/forks",
            "full_name": "MariaSolOs/neovim",
            "git_commits_url": "https://api.github.com/repos/MariaSolOs/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/MariaSolOs/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/MariaSolOs/neovim/git/tags{/sha}",
            "git_url": "git://github.com/MariaSolOs/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/MariaSolOs/neovim/hooks",
            "html_url": "https://github.com/MariaSolOs/neovim",
            "id": 675070403,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/MariaSolOs/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/MariaSolOs/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/MariaSolOs/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/MariaSolOs/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/MariaSolOs/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/MariaSolOs/neovim/merges",
            "milestones_url": "https://api.github.com/repos/MariaSolOs/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKDzBww",
            "notifications_url": "https://api.github.com/repos/MariaSolOs/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/MariaSolOs/neovim/pulls{/number}",
            "pushed_at": "2024-03-03T21:42:34Z",
            "releases_url": "https://api.github.com/repos/MariaSolOs/neovim/releases{/id}",
            "size": 252163,
            "ssh_url": "git@github.com:MariaSolOs/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/MariaSolOs/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/MariaSolOs/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/MariaSolOs/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/MariaSolOs/neovim/subscription",
            "svn_url": "https://github.com/MariaSolOs/neovim",
            "tags_url": "https://api.github.com/repos/MariaSolOs/neovim/tags",
            "teams_url": "https://api.github.com/repos/MariaSolOs/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/MariaSolOs/neovim/git/trees{/sha}",
            "updated_at": "2023-08-09T04:34:06Z",
            "url": "https://api.github.com/repos/MariaSolOs/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "58efad0ae3d88fde1b8f458f95dd9e81363552b5",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
            "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
            "followers_url": "https://api.github.com/users/MariaSolOs/followers",
            "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
            "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/MariaSolOs",
            "id": 62502207,
            "login": "MariaSolOs",
            "node_id": "MDQ6VXNlcjYyNTAyMjA3",
            "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
            "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
            "repos_url": "https://api.github.com/users/MariaSolOs/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/MariaSolOs"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27402",
    "id": 1719826011,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27402",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "cb146cc4aad746053535533cbea8834414ea82a2",
    "merged_at": "2024-02-28T09:22:09Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5mgnZb",
    "number": 27402,
    "patch_url": "https://github.com/neovim/neovim/pull/27402.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27402/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/58efad0ae3d88fde1b8f458f95dd9e81363552b5",
    "title": "docs(lpeg): merge upstream changes",
    "updated_at": "2024-03-01T07:46:13Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27402",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
        "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
        "followers_url": "https://api.github.com/users/MariaSolOs/followers",
        "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
        "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/MariaSolOs",
        "id": 62502207,
        "login": "MariaSolOs",
        "node_id": "MDQ6VXNlcjYyNTAyMjA3",
        "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
        "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
        "repos_url": "https://api.github.com/users/MariaSolOs/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/MariaSolOs"
    }
}