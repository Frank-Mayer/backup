{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25543/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25543/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25543"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25543"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25543/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7a68ec40eff250d8d4a6e09344f2fedd968d77ae"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4912,
            "forks_count": 4912,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1653,
            "open_issues_count": 1653,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-10-10T01:53:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 252665,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 70016,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-10-10T00:53:55Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 70016,
            "watchers_count": 70016,
            "web_commit_signoff_required": false
        },
        "sha": "307a7abf86c439177910d05003a81ea4a13d2650",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem: The style guide states that all switch statements that are not conditional on an enum must have a `default` case, but does not give any explicit guideline for switch statements that are conditional on enums. As a result, a `default` case is added in many enum switch statements, even when the switch statement is exhaustive. This is not ideal because it removes the ability to have compiler errors to easily detect unchanged switch statements when a new possible value for an enum is added.\r\n\r\nSolution: Add explicit guidelines for switch statements that are conditional on an enum, clarifying that a `default` case is not necessary if the switch statement is exhaustive. Also refactor pre-existing code with unnecessary `default` cases.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1349973900"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1349973900"
                }
            },
            "author_association": "MEMBER",
            "body": "line 846 already says \"If not conditional on an enumerated value\". Do we need this extra note? The compiler enforces the \"exhaustive\" requirement, right?",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T08:03:19Z",
            "diff_hunk": "@@ -859,6 +859,9 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive.",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1349973900",
            "id": 1349973900,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QdveM",
            "original_commit_id": "cee4eb202efb5ce5003d96dd7bfd46a14c9bf82f",
            "original_line": 863,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1663910218,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1349973900/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T08:03:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1349973900",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1349993493"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1349993493"
                }
            },
            "author_association": "MEMBER",
            "body": "There was clearly confusion regarding this as we have had 2-3 discussions about this topic in Matrix because people (me and @bfredl, specifically) didn't fully understand what the style guide said. If the ambiguity causes confusion, I think it's best to just have it stated explicitly.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T08:24:08Z",
            "diff_hunk": "@@ -859,6 +859,9 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive.",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1349993493",
            "id": 1349993493,
            "in_reply_to_id": 1349973900,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qd0QV",
            "original_commit_id": "cee4eb202efb5ce5003d96dd7bfd46a14c9bf82f",
            "original_line": 863,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1663942492,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1349993493/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T08:26:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1349993493",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350038739"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350038739"
                }
            },
            "author_association": "MEMBER",
            "body": "The problem is that \"the compiler\" (the minimum compiler versions as used on CI) has **never** done this correctly so far in the lifetime of the nvim project, which means that in practice we have fallen through (no pun intended) to the next sentence also  for enum-based switches and added `default: abort()` to appease these compiler versions. \r\n\r\nUpgrading all the CI compilers will enable us to finally perform the original intention of this paragraph. Doing an explicit mention now is a workaround to having the style guide be dependent of \"the compiler\" in the past (which is _not_ how the style guide should have been written.. the style guide should document what _we_ want, not make references to what some unspecified compiler version wants)",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T09:07:19Z",
            "diff_hunk": "@@ -859,6 +859,9 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive.",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350038739",
            "id": 1350038739,
            "in_reply_to_id": 1349973900,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Qd_TT",
            "original_commit_id": "cee4eb202efb5ce5003d96dd7bfd46a14c9bf82f",
            "original_line": 863,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1664014023,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350038739/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T09:07:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350038739",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350307233"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350307233"
                }
            },
            "author_association": "MEMBER",
            "body": "I hate \"may\" in style guides. Just say \"should not have\" or \"must not have\" if you wanna be dramatic.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:25:20Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350307233",
            "id": 1350307233,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QfA2h",
            "original_commit_id": "0ad5981826d6559f9096c44fed2e0e92fa74487f",
            "original_line": 862,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1664449891,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350307233/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T13:28:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350307233",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350308669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350308669"
                }
            },
            "author_association": "MEMBER",
            "body": "may may may",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:26:23Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler may still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you may use",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350308669",
            "id": 1350308669,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QfBM9",
            "original_commit_id": "0ad5981826d6559f9096c44fed2e0e92fa74487f",
            "original_line": 867,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1664452179,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350308669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T13:26:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350308669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350309389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350309389"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this comment even necessary? \"Do stuff\"?",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:26:55Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler may still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you may use\n+`UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c\n+\n+    enum { VarFirstCase, VarSecondCase } var;\n+    // do some stuff with var",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350309389",
            "id": 1350309389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QfBYN",
            "original_commit_id": "0ad5981826d6559f9096c44fed2e0e92fa74487f",
            "original_line": 872,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1664453277,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350309389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T13:26:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350309389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350312499"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350312499"
                }
            },
            "author_association": "MEMBER",
            "body": "> Is this comment even necessary? \"Do stuff\"?\r\n\r\nOtherwise it implies that we're using a `switch` on an unset var. Maybe it's better to just set `var` to something but then it looks kinda dumb",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:29:30Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler may still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you may use\n+`UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c\n+\n+    enum { VarFirstCase, VarSecondCase } var;\n+    // do some stuff with var",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350312499",
            "id": 1350312499,
            "in_reply_to_id": 1350309389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QfCIz",
            "original_commit_id": "0ad5981826d6559f9096c44fed2e0e92fa74487f",
            "original_line": 872,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1664458358,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350312499/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T13:29:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350312499",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350315236"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350315236"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, you mean that was supposed be \"here is code\" instead of a comment. In the other sections of the style guide it uses\r\n\r\n```\r\n...\r\n```\r\n\r\nto denote a section of code.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:31:48Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value may not have a\n+`default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler may still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you may use\n+`UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c\n+\n+    enum { VarFirstCase, VarSecondCase } var;\n+    // do some stuff with var",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350315236",
            "id": 1350315236,
            "in_reply_to_id": 1350309389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5QfCzk",
            "original_commit_id": "0ad5981826d6559f9096c44fed2e0e92fa74487f",
            "original_line": 872,
            "original_position": 14,
            "original_start_line": null,
            "path": "runtime/doc/dev_style.txt",
            "position": null,
            "pull_request_review_id": 1664462814,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350315236/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-10-09T13:32:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350315236",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350323152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350323152"
                }
            },
            "author_association": "MEMBER",
            "body": "Hold up. This section makes it sound like you should use `UNREACHABLE` when the compiler gives a warning, rather than all the time regardless of compiler. Is this intended?",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:38:21Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value should not have\n+a `default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler might still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you should\n+use `UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350323152",
            "id": 1350323152,
            "line": 869,
            "node_id": "PRRC_kwDOAPphoM5QfEvQ",
            "original_commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "original_line": 869,
            "original_position": 11,
            "original_start_line": 863,
            "path": "runtime/doc/dev_style.txt",
            "position": 11,
            "pull_request_review_id": 1664476497,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350323152/reactions"
            },
            "side": "RIGHT",
            "start_line": 863,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-09T13:38:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350323152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350324717"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350324717"
                }
            },
            "author_association": "MEMBER",
            "body": "> Hold up. This section makes it sound like you should use `UNREACHABLE` when the compiler gives a warning, rather than all the time regardless of compiler. Is this intended?\r\n\r\nThe compiler (GCC on CI, that is) will always give a warning in cases where there are return statements for each case but no catch-all return statement. But I guess if Clang or MSVC is used to compile locally then the error won't happen locally.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:39:38Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value should not have\n+a `default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler might still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you should\n+use `UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350324717",
            "id": 1350324717,
            "in_reply_to_id": 1350323152,
            "line": 869,
            "node_id": "PRRC_kwDOAPphoM5QfFHt",
            "original_commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "original_line": 869,
            "original_position": 11,
            "original_start_line": 863,
            "path": "runtime/doc/dev_style.txt",
            "position": 11,
            "pull_request_review_id": 1664479146,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350324717/reactions"
            },
            "side": "RIGHT",
            "start_line": 863,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-09T13:42:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350324717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350329366"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350329366"
                }
            },
            "author_association": "MEMBER",
            "body": "> Hold up. This section makes it sound like you should use `UNREACHABLE` when the compiler gives a warning, rather than all the time regardless of compiler. Is this intended?\r\n\r\nAlso, that is intended. `UNREACHABLE` is kind of a hack to get the compiler to recognize the switch as being exhaustive. If the compiler doesn't complain, then no need to add it. GCC also seems to be stubborn about keeping this behavior judging from some bug reports that I've seen, so we'd likely have to keep this hack in place.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:43:27Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value should not have\n+a `default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler might still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you should\n+use `UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350329366",
            "id": 1350329366,
            "in_reply_to_id": 1350323152,
            "line": 869,
            "node_id": "PRRC_kwDOAPphoM5QfGQW",
            "original_commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "original_line": 869,
            "original_position": 11,
            "original_start_line": 863,
            "path": "runtime/doc/dev_style.txt",
            "position": 11,
            "pull_request_review_id": 1664486460,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350329366/reactions"
            },
            "side": "RIGHT",
            "start_line": 863,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-09T13:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350329366",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350331606"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350331606"
                }
            },
            "author_association": "MEMBER",
            "body": "That's not my point. The lore on why this rule was created muddies the water on when it should be used, which I assume is \"always\"?",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:45:17Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value should not have\n+a `default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler might still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you should\n+use `UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350331606",
            "id": 1350331606,
            "in_reply_to_id": 1350323152,
            "line": 869,
            "node_id": "PRRC_kwDOAPphoM5QfGzW",
            "original_commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "original_line": 869,
            "original_position": 11,
            "original_start_line": 863,
            "path": "runtime/doc/dev_style.txt",
            "position": 11,
            "pull_request_review_id": 1664490505,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350331606/reactions"
            },
            "side": "RIGHT",
            "start_line": 863,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-09T13:45:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350331606",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350340031"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350340031"
                }
            },
            "author_association": "MEMBER",
            "body": "> That's not my point. The lore on why this rule was created muddies the water on when it should be used, which I assume is \"always\"?\r\n\r\nIt's \"always\" in the context of enum switches with a return statement for each case, which is the context of that section of the style guide.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T13:52:06Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value should not have\n+a `default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler might still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you should\n+use `UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350340031",
            "id": 1350340031,
            "in_reply_to_id": 1350323152,
            "line": 869,
            "node_id": "PRRC_kwDOAPphoM5QfI2_",
            "original_commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "original_line": 869,
            "original_position": 11,
            "original_start_line": 863,
            "path": "runtime/doc/dev_style.txt",
            "position": 11,
            "pull_request_review_id": 1664504488,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350340031/reactions"
            },
            "side": "RIGHT",
            "start_line": 863,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-09T13:52:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350340031",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25543#discussion_r1350366943"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350366943"
                }
            },
            "author_association": "MEMBER",
            "body": "I think this style rule is very convoluted and specific. I would seriously reconsider if the benefits it provides are worth it.",
            "commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "created_at": "2023-10-09T14:14:23Z",
            "diff_hunk": "@@ -859,6 +859,25 @@ execute, simply `assert`: >c\n         assert(false);\n     }\n \n+Switch statements that are conditional on an enumerated value should not have\n+a `default` case if it is exhaustive. In cases where an exhaustive switch\n+statement on an enum is exhaustive, the compiler might still treat it as if it\n+is not exhaustive. This happens in cases where each case contains a return\n+statement, but the compiler still complains about there not being a return\n+statement for the entire control flow. For situations like these, you should\n+use `UNREACHABLE` to explicitly tell the compiler that the default case is\n+unreachable. For example: >c",
            "html_url": "https://github.com/neovim/neovim/pull/25543#discussion_r1350366943",
            "id": 1350366943,
            "in_reply_to_id": 1350323152,
            "line": 869,
            "node_id": "PRRC_kwDOAPphoM5QfPbf",
            "original_commit_id": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
            "original_line": 869,
            "original_position": 11,
            "original_start_line": 863,
            "path": "runtime/doc/dev_style.txt",
            "position": 11,
            "pull_request_review_id": 1664549116,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350366943/reactions"
            },
            "side": "RIGHT",
            "start_line": 863,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-10-09T14:14:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1350366943",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25543/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25543/commits",
    "created_at": "2023-10-08T18:43:00Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25543.diff",
    "draft": false,
    "head": {
        "label": "famiu:refactor/style/enum-default-abort",
        "ref": "refactor/style/enum-default-abort",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/famiu/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/famiu/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/famiu/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/famiu/neovim/branches{/branch}",
            "clone_url": "https://github.com/famiu/neovim.git",
            "collaborators_url": "https://api.github.com/repos/famiu/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/famiu/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/famiu/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/famiu/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/famiu/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/famiu/neovim/contributors",
            "created_at": "2021-10-11T04:58:58Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/famiu/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/famiu/neovim/downloads",
            "events_url": "https://api.github.com/repos/famiu/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/famiu/neovim/forks",
            "full_name": "famiu/neovim",
            "git_commits_url": "https://api.github.com/repos/famiu/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/famiu/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/famiu/neovim/git/tags{/sha}",
            "git_url": "git://github.com/famiu/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/famiu/neovim/hooks",
            "html_url": "https://github.com/famiu/neovim",
            "id": 415783665,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/famiu/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/famiu/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/famiu/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/famiu/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/famiu/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/famiu/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/famiu/neovim/merges",
            "milestones_url": "https://api.github.com/repos/famiu/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGMha8Q",
            "notifications_url": "https://api.github.com/repos/famiu/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/famiu/neovim/pulls{/number}",
            "pushed_at": "2023-10-09T13:34:32Z",
            "releases_url": "https://api.github.com/repos/famiu/neovim/releases{/id}",
            "size": 247554,
            "ssh_url": "git@github.com:famiu/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/famiu/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/famiu/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/famiu/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/famiu/neovim/subscription",
            "svn_url": "https://github.com/famiu/neovim",
            "tags_url": "https://api.github.com/repos/famiu/neovim/tags",
            "teams_url": "https://api.github.com/repos/famiu/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/famiu/neovim/git/trees{/sha}",
            "updated_at": "2022-08-29T10:09:33Z",
            "url": "https://api.github.com/repos/famiu/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
            "events_url": "https://api.github.com/users/famiu/events{/privacy}",
            "followers_url": "https://api.github.com/users/famiu/followers",
            "following_url": "https://api.github.com/users/famiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/famiu",
            "id": 29580810,
            "login": "famiu",
            "node_id": "MDQ6VXNlcjI5NTgwODEw",
            "organizations_url": "https://api.github.com/users/famiu/orgs",
            "received_events_url": "https://api.github.com/users/famiu/received_events",
            "repos_url": "https://api.github.com/users/famiu/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/famiu"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25543",
    "id": 1546910836,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25543",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 197254545,
            "name": "tui",
            "node_id": "MDU6TGFiZWwxOTcyNTQ1NDU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/tui"
        }
    ],
    "locked": false,
    "merge_commit_sha": "a0eac19d9e2dee05984978278f4715820e403c4b",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5cM_x0",
    "number": 25543,
    "patch_url": "https://github.com/neovim/neovim/pull/25543.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25543/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7a68ec40eff250d8d4a6e09344f2fedd968d77ae",
    "title": "refactor: allow not having a `default` case for enum",
    "updated_at": "2023-10-09T15:45:35Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25543",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
        "events_url": "https://api.github.com/users/famiu/events{/privacy}",
        "followers_url": "https://api.github.com/users/famiu/followers",
        "following_url": "https://api.github.com/users/famiu/following{/other_user}",
        "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/famiu",
        "id": 29580810,
        "login": "famiu",
        "node_id": "MDQ6VXNlcjI5NTgwODEw",
        "organizations_url": "https://api.github.com/users/famiu/orgs",
        "received_events_url": "https://api.github.com/users/famiu/received_events",
        "repos_url": "https://api.github.com/users/famiu/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/famiu"
    }
}