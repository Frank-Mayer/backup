{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/16669/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16669/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/16669"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/16669"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16669/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/7a4877f61de0616964b8f939ad132fc256235d93"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5077,
            "forks_count": 5077,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-26T01:26:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247838,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72074,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-26T01:14:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72074,
            "watchers_count": 72074,
            "web_commit_signoff_required": false
        },
        "sha": "1062ea2cc532b32862346a1972073f1a8dd6d19d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This seems like a much more accurate way of doing things here, but let me know if I missed anything. Added a number of tests, but I haven't been doing a lot of Lean 4 recently so @gebner some beta-testing would be appreciated.",
    "closed_at": "2023-12-22T13:06:11Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769888921"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769888921"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Why did you remove this optimization?",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T18:27:55Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769888921",
            "id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t45KZ",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833194553,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769888921/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T18:27:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769888921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769890455"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769890455"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This test change looks problematic (I understand it results in the same server side buffer representation, but I'm worried you are generally introducing untested side-effects in this PR).",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T18:30:06Z",
            "diff_hunk": "@@ -265,12 +460,12 @@ describe('incremental synchronization', function()\n               line = 0\n             },\n             ['end'] = {\n-              character = 17,\n+              character = 12,\n               line = 0\n             }\n           },\n-          rangeLength = 6,\n-          text = '\\ntest3'",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769890455",
            "id": 769890455,
            "line": 468,
            "node_id": "PRRC_kwDOAPphoM4t45iX",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 468,
            "original_position": 212,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/incremental_sync_spec.lua",
            "position": 42,
            "pull_request_review_id": 833196718,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769890455/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T18:52:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769890455",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769895281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769895281"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Why are you removing this? We should not search if the lines are the same beyond the first change of the line. This could lead to a situation where end range is before start range.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T18:36:06Z",
            "diff_hunk": "@@ -209,51 +203,48 @@ local function compute_end_range(prev_lines, curr_lines, start_range, firstline,\n   local prev_line_length = #prev_line\n   local curr_line_length = #curr_line\n \n-  local byte_offset = 0\n+  local prev_line_range, curr_line_range\n+  if start_line_idx == prev_line_idx then\n+    prev_line_range = prev_line_length - start_range.byte_idx\n+  -- start_line_idx < prev_line_idx\n+  else\n+    prev_line_range = prev_line_length - 1\n+  end\n+  if start_line_idx == curr_line_idx then\n+    curr_line_range = curr_line_length - start_range.byte_idx\n+  -- start_line_idx < curr_line_idx\n+  else\n+    curr_line_range = curr_line_length - 1\n+  end\n+\n+  -- Maximum number of bytes to search backwards for mismatch\n+  local max_length = min(prev_line_range, curr_line_range)\n \n-  -- Editing the same line\n-  -- If the byte offset is zero, that means there is a difference on the last byte (not newline)\n-  if prev_line_idx == curr_line_idx then\n-    local max_length\n-    if start_line_idx == prev_line_idx then\n-      -- Search until beginning of difference\n-      max_length = min(prev_line_length - start_range.byte_idx, curr_line_length - start_range.byte_idx) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769895281",
            "id": 769895281,
            "line": 221,
            "node_id": "PRRC_kwDOAPphoM4t46tx",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 221,
            "original_position": 101,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 150,
            "pull_request_review_id": 833202801,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769895281/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T18:36:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769895281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769899449"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769899449"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "See above, I've set these individually for `prev_line` and `curr_line`.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T18:42:06Z",
            "diff_hunk": "@@ -209,51 +203,48 @@ local function compute_end_range(prev_lines, curr_lines, start_range, firstline,\n   local prev_line_length = #prev_line\n   local curr_line_length = #curr_line\n \n-  local byte_offset = 0\n+  local prev_line_range, curr_line_range\n+  if start_line_idx == prev_line_idx then\n+    prev_line_range = prev_line_length - start_range.byte_idx\n+  -- start_line_idx < prev_line_idx\n+  else\n+    prev_line_range = prev_line_length - 1\n+  end\n+  if start_line_idx == curr_line_idx then\n+    curr_line_range = curr_line_length - start_range.byte_idx\n+  -- start_line_idx < curr_line_idx\n+  else\n+    curr_line_range = curr_line_length - 1\n+  end\n+\n+  -- Maximum number of bytes to search backwards for mismatch\n+  local max_length = min(prev_line_range, curr_line_range)\n \n-  -- Editing the same line\n-  -- If the byte offset is zero, that means there is a difference on the last byte (not newline)\n-  if prev_line_idx == curr_line_idx then\n-    local max_length\n-    if start_line_idx == prev_line_idx then\n-      -- Search until beginning of difference\n-      max_length = min(prev_line_length - start_range.byte_idx, curr_line_length - start_range.byte_idx) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769899449",
            "id": 769899449,
            "in_reply_to_id": 769895281,
            "line": 221,
            "node_id": "PRRC_kwDOAPphoM4t47u5",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 221,
            "original_position": 101,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 150,
            "pull_request_review_id": 833208513,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769899449/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T18:42:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769899449",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769900211"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769900211"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Lines 208, 214.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T18:43:18Z",
            "diff_hunk": "@@ -209,51 +203,48 @@ local function compute_end_range(prev_lines, curr_lines, start_range, firstline,\n   local prev_line_length = #prev_line\n   local curr_line_length = #curr_line\n \n-  local byte_offset = 0\n+  local prev_line_range, curr_line_range\n+  if start_line_idx == prev_line_idx then\n+    prev_line_range = prev_line_length - start_range.byte_idx\n+  -- start_line_idx < prev_line_idx\n+  else\n+    prev_line_range = prev_line_length - 1\n+  end\n+  if start_line_idx == curr_line_idx then\n+    curr_line_range = curr_line_length - start_range.byte_idx\n+  -- start_line_idx < curr_line_idx\n+  else\n+    curr_line_range = curr_line_length - 1\n+  end\n+\n+  -- Maximum number of bytes to search backwards for mismatch\n+  local max_length = min(prev_line_range, curr_line_range)\n \n-  -- Editing the same line\n-  -- If the byte offset is zero, that means there is a difference on the last byte (not newline)\n-  if prev_line_idx == curr_line_idx then\n-    local max_length\n-    if start_line_idx == prev_line_idx then\n-      -- Search until beginning of difference\n-      max_length = min(prev_line_length - start_range.byte_idx, curr_line_length - start_range.byte_idx) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769900211",
            "id": 769900211,
            "in_reply_to_id": 769895281,
            "line": 221,
            "node_id": "PRRC_kwDOAPphoM4t476z",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 221,
            "original_position": 101,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 150,
            "pull_request_review_id": 833209663,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769900211/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T18:43:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769900211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769940368"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769940368"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "My bad, just added an equivalent optimization for this case.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:17:59Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769940368",
            "id": 769940368,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5FuQ",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833265996,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769940368/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:18:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769940368",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769941211"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769941211"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "How so? It seems we're just replacing a space with a newline here.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:19:14Z",
            "diff_hunk": "@@ -265,12 +460,12 @@ describe('incremental synchronization', function()\n               line = 0\n             },\n             ['end'] = {\n-              character = 17,\n+              character = 12,\n               line = 0\n             }\n           },\n-          rangeLength = 6,\n-          text = '\\ntest3'",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769941211",
            "id": 769941211,
            "in_reply_to_id": 769890455,
            "line": 468,
            "node_id": "PRRC_kwDOAPphoM4t5F7b",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 468,
            "original_position": 212,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp/incremental_sync_spec.lua",
            "position": 42,
            "pull_request_review_id": 833267181,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769941211/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:19:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769941211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769947944"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769947944"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This isn't an equivalent optimization. It doesn't short-circuit the valuation as it did previously. You're still checking the byte offset.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:24:17Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769947944",
            "id": 769947944,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5Hko",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833276876,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769947944/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:26:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769947944",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769960129"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769960129"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good catch, just fixed.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:31:54Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769960129",
            "id": 769960129,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5KjB",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833292957,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769960129/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:31:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769960129",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769966731"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769966731"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Hmm is there not a scenario in which byte > #line and #line == 0 that this is not catching?",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:35:12Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769966731",
            "id": 769966731,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5MKL",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833301777,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769966731/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:35:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769966731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769989390"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769989390"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In this case `char` should be 1 right? The only possibility for `byte > #line` is `byte == #line + 1`.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:45:54Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769989390",
            "id": 769989390,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5RsO",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833332697,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769989390/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:47:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769989390",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769990014"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769990014"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "In the current implementation, that is the case",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:46:44Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769990014",
            "id": 769990014,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5R1-",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833333490,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769990014/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:46:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769990014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r769998597"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/769998597"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It should be the case here as well. In `compute_end_range()`, if one of the lines has length 0 the `byte_offset` stays at -1. (`compute_start_range()` wasn't really changed)",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-15T19:59:28Z",
            "diff_hunk": "@@ -93,30 +93,35 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte <= #line then\n+    -- Modifying line, find the nearest utf codepoint\n+    local offset = str_utf_start(line, byte)\n+\n+    -- If the byte does not fall on the start of the character, then\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n+    if offset < 0 then\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n+    end\n+  end\n+\n   local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r769998597",
            "id": 769998597,
            "in_reply_to_id": 769888921,
            "line": 101,
            "node_id": "PRRC_kwDOAPphoM4t5T8F",
            "original_commit_id": "0500ace6e138c3fcbd15b951f6af76a45e80f0ab",
            "original_line": 101,
            "original_position": 27,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 59,
            "pull_request_review_id": 833345292,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769998597/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-15T19:59:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/769998597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r771786303"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/771786303"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Did you remove the explicit handling of this?",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-18T05:35:28Z",
            "diff_hunk": "@@ -210,51 +206,48 @@ local function compute_end_range(prev_lines, curr_lines, start_range, firstline,\n   local prev_line_length = #prev_line\n   local curr_line_length = #curr_line\n \n-  local byte_offset = 0\n+  local prev_line_range, curr_line_range\n+  if start_line_idx == prev_line_idx then\n+    prev_line_range = prev_line_length - start_range.byte_idx\n+  -- start_line_idx < prev_line_idx\n+  else\n+    prev_line_range = prev_line_length - 1\n+  end\n+  if start_line_idx == curr_line_idx then\n+    curr_line_range = curr_line_length - start_range.byte_idx\n+  -- start_line_idx < curr_line_idx\n+  else\n+    curr_line_range = curr_line_length - 1\n+  end\n \n-  -- Editing the same line\n-  -- If the byte offset is zero, that means there is a difference on the last byte (not newline)\n-  if prev_line_idx == curr_line_idx then\n-    local max_length\n-    if start_line_idx == prev_line_idx then\n-      -- Search until beginning of difference\n-      max_length = min(prev_line_length - start_range.byte_idx, curr_line_length - start_range.byte_idx) + 1\n-    else\n-      max_length = min(prev_line_length, curr_line_length) + 1\n-    end\n-    for idx = 0, max_length do\n-      byte_offset = idx\n-      if\n-        str_byte(prev_line, prev_line_length - byte_offset) ~= str_byte(curr_line, curr_line_length - byte_offset)\n-      then\n-        break\n-      end\n+  -- Maximum number of bytes to search backwards for mismatch\n+  local max_length = min(prev_line_range, curr_line_range)\n+\n+  -- Negative offset to last shared byte between prev_line and curr_line\n+  -- -1 offset indicates no shared byte\n+  local byte_offset = -1\n+\n+  -- Iterate from end to beginning of shortest line\n+  for idx = 0, max_length do\n+    byte_offset = idx\n+    if\n+      str_byte(prev_line, prev_line_length - byte_offset) ~= str_byte(curr_line, curr_line_length - byte_offset)\n+    then\n+      -- If there was a mismatched byte, need to go back to next byte (which did match)\n+      byte_offset = byte_offset - 1\n+      break\n     end\n   end\n \n-  -- Iterate from end to beginning of shortest line\n-  local prev_end_byte_idx = prev_line_length - byte_offset + 1\n+  local prev_end_byte_idx = prev_line_length - byte_offset\n \n-  -- Handle case where lines match\n-  if prev_end_byte_idx == 0 then\n-    prev_end_byte_idx = 1\n-  end\n-  local prev_byte_idx, prev_char_idx = align_end_position(prev_line, prev_end_byte_idx, offset_encoding)\n+  local prev_byte_idx, prev_char_idx = align_position(prev_line, prev_end_byte_idx, false, offset_encoding)\n   local prev_end_range = { line_idx = prev_line_idx, byte_idx = prev_byte_idx, char_idx = prev_char_idx }\n \n-  local curr_end_range\n-  -- Deletion event, new_range cannot be before start\n-  if curr_line_idx < start_line_idx then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r771786303",
            "id": 771786303,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM4uAIY_",
            "original_commit_id": "7317f6f988a20890914a885b0af2fa8cdbdf05b2",
            "original_line": 247,
            "original_position": 145,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 194,
            "pull_request_review_id": 835746333,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/771786303/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-18T05:35:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/771786303",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r771786389"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/771786389"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "These functions can be easily unified since I allowed byteindex to take explicit nils",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-18T05:37:04Z",
            "diff_hunk": "@@ -93,31 +93,38 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n-  local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then\n-    char = byte\n-  -- Called in the case of extending an empty line \"\" -> \"a\"\n-  elseif byte == #line + 1 then\n-    char = compute_line_length(line, offset_encoding) + 1\n-  else\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte ~= 1 and byte <= #line then\n     -- Modifying line, find the nearest utf codepoint\n     local offset = str_utf_start(line, byte)\n+\n     -- If the byte does not fall on the start of the character, then\n-    -- align to the start of the next character.\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n     if offset < 0 then\n-      byte = byte + str_utf_end(line, byte) + 1\n-    end\n-    if byte <= #line then\n-      char = byte_to_utf(line, byte, offset_encoding)\n-    else\n-      char = compute_line_length(line, offset_encoding) + 1\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n     end\n-    -- Extending line, find the nearest utf codepoint for the last valid character\n   end\n+\n+  local char\n+\n+  -- optimize for first byte case\n+  if byte == 1 then\n+    char = 1\n+  -- Called in the case of extending an empty line \"\" -> \"a\"\n+  elseif byte == #line + 1 then\n+    char = compute_line_length(line, offset_encoding) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r771786389",
            "id": 771786389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4uAIaV",
            "original_commit_id": "7317f6f988a20890914a885b0af2fa8cdbdf05b2",
            "original_line": 123,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": null,
            "pull_request_review_id": 835746408,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/771786389/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-18T05:37:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/771786389",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r771870214"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/771870214"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "This check didn't make sense to me. AFAICT the only way this can arise is if `firstline == new_lastline`, which we checked at the very beginning of this function.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-18T22:04:57Z",
            "diff_hunk": "@@ -210,51 +206,48 @@ local function compute_end_range(prev_lines, curr_lines, start_range, firstline,\n   local prev_line_length = #prev_line\n   local curr_line_length = #curr_line\n \n-  local byte_offset = 0\n+  local prev_line_range, curr_line_range\n+  if start_line_idx == prev_line_idx then\n+    prev_line_range = prev_line_length - start_range.byte_idx\n+  -- start_line_idx < prev_line_idx\n+  else\n+    prev_line_range = prev_line_length - 1\n+  end\n+  if start_line_idx == curr_line_idx then\n+    curr_line_range = curr_line_length - start_range.byte_idx\n+  -- start_line_idx < curr_line_idx\n+  else\n+    curr_line_range = curr_line_length - 1\n+  end\n \n-  -- Editing the same line\n-  -- If the byte offset is zero, that means there is a difference on the last byte (not newline)\n-  if prev_line_idx == curr_line_idx then\n-    local max_length\n-    if start_line_idx == prev_line_idx then\n-      -- Search until beginning of difference\n-      max_length = min(prev_line_length - start_range.byte_idx, curr_line_length - start_range.byte_idx) + 1\n-    else\n-      max_length = min(prev_line_length, curr_line_length) + 1\n-    end\n-    for idx = 0, max_length do\n-      byte_offset = idx\n-      if\n-        str_byte(prev_line, prev_line_length - byte_offset) ~= str_byte(curr_line, curr_line_length - byte_offset)\n-      then\n-        break\n-      end\n+  -- Maximum number of bytes to search backwards for mismatch\n+  local max_length = min(prev_line_range, curr_line_range)\n+\n+  -- Negative offset to last shared byte between prev_line and curr_line\n+  -- -1 offset indicates no shared byte\n+  local byte_offset = -1\n+\n+  -- Iterate from end to beginning of shortest line\n+  for idx = 0, max_length do\n+    byte_offset = idx\n+    if\n+      str_byte(prev_line, prev_line_length - byte_offset) ~= str_byte(curr_line, curr_line_length - byte_offset)\n+    then\n+      -- If there was a mismatched byte, need to go back to next byte (which did match)\n+      byte_offset = byte_offset - 1\n+      break\n     end\n   end\n \n-  -- Iterate from end to beginning of shortest line\n-  local prev_end_byte_idx = prev_line_length - byte_offset + 1\n+  local prev_end_byte_idx = prev_line_length - byte_offset\n \n-  -- Handle case where lines match\n-  if prev_end_byte_idx == 0 then\n-    prev_end_byte_idx = 1\n-  end\n-  local prev_byte_idx, prev_char_idx = align_end_position(prev_line, prev_end_byte_idx, offset_encoding)\n+  local prev_byte_idx, prev_char_idx = align_position(prev_line, prev_end_byte_idx, false, offset_encoding)\n   local prev_end_range = { line_idx = prev_line_idx, byte_idx = prev_byte_idx, char_idx = prev_char_idx }\n \n-  local curr_end_range\n-  -- Deletion event, new_range cannot be before start\n-  if curr_line_idx < start_line_idx then",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r771870214",
            "id": 771870214,
            "in_reply_to_id": 771786303,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM4uAc4G",
            "original_commit_id": "7317f6f988a20890914a885b0af2fa8cdbdf05b2",
            "original_line": 247,
            "original_position": 145,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": 194,
            "pull_request_review_id": 835805838,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/771870214/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-18T22:04:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/771870214",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r772099422"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/772099422"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "See #16731, we should be able to just use those helpers directly.",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-20T06:08:26Z",
            "diff_hunk": "@@ -93,31 +93,38 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n-  local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then\n-    char = byte\n-  -- Called in the case of extending an empty line \"\" -> \"a\"\n-  elseif byte == #line + 1 then\n-    char = compute_line_length(line, offset_encoding) + 1\n-  else\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte ~= 1 and byte <= #line then\n     -- Modifying line, find the nearest utf codepoint\n     local offset = str_utf_start(line, byte)\n+\n     -- If the byte does not fall on the start of the character, then\n-    -- align to the start of the next character.\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n     if offset < 0 then\n-      byte = byte + str_utf_end(line, byte) + 1\n-    end\n-    if byte <= #line then\n-      char = byte_to_utf(line, byte, offset_encoding)\n-    else\n-      char = compute_line_length(line, offset_encoding) + 1\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n     end\n-    -- Extending line, find the nearest utf codepoint for the last valid character\n   end\n+\n+  local char\n+\n+  -- optimize for first byte case\n+  if byte == 1 then\n+    char = 1\n+  -- Called in the case of extending an empty line \"\" -> \"a\"\n+  elseif byte == #line + 1 then\n+    char = compute_line_length(line, offset_encoding) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r772099422",
            "id": 772099422,
            "in_reply_to_id": 771786389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4uBU1e",
            "original_commit_id": "7317f6f988a20890914a885b0af2fa8cdbdf05b2",
            "original_line": 123,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": null,
            "pull_request_review_id": 836022210,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/772099422/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-20T06:08:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/772099422",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/16669#discussion_r772780166"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/16669"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/772780166"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "^ done, let me know what you think",
            "commit_id": "7a4877f61de0616964b8f939ad132fc256235d93",
            "created_at": "2021-12-21T02:08:59Z",
            "diff_hunk": "@@ -93,31 +93,38 @@ end\n -- utf-8 index and either the utf-16, or utf-32 index.\n ---@param line string the line to index into\n ---@param byte integer the byte idx\n+---@param start boolean true for start align, false for end align\n ---@param offset_encoding string utf-8|utf-16|utf-32|nil (default: utf-8)\n ---@returns table<string, int> byte_idx and char_idx of first change position\n-local function align_end_position(line, byte, offset_encoding)\n-  local char\n-  -- If on the first byte, or an empty string: the trivial case\n-  if byte == 1 or #line == 0 then\n-    char = byte\n-  -- Called in the case of extending an empty line \"\" -> \"a\"\n-  elseif byte == #line + 1 then\n-    char = compute_line_length(line, offset_encoding) + 1\n-  else\n+local function align_position(line, byte, start, offset_encoding)\n+  if byte ~= 1 and byte <= #line then\n     -- Modifying line, find the nearest utf codepoint\n     local offset = str_utf_start(line, byte)\n+\n     -- If the byte does not fall on the start of the character, then\n-    -- align to the start of the next character.\n+    -- align to the start of the next character if end align, and start\n+    -- of this character if start align\n     if offset < 0 then\n-      byte = byte + str_utf_end(line, byte) + 1\n-    end\n-    if byte <= #line then\n-      char = byte_to_utf(line, byte, offset_encoding)\n-    else\n-      char = compute_line_length(line, offset_encoding) + 1\n+      if start then\n+        byte = byte + offset\n+      else\n+        byte = byte + str_utf_end(line, byte) + 1\n+      end\n     end\n-    -- Extending line, find the nearest utf codepoint for the last valid character\n   end\n+\n+  local char\n+\n+  -- optimize for first byte case\n+  if byte == 1 then\n+    char = 1\n+  -- Called in the case of extending an empty line \"\" -> \"a\"\n+  elseif byte == #line + 1 then\n+    char = compute_line_length(line, offset_encoding) + 1",
            "html_url": "https://github.com/neovim/neovim/pull/16669#discussion_r772780166",
            "id": 772780166,
            "in_reply_to_id": 771786389,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM4uD7CG",
            "original_commit_id": "7317f6f988a20890914a885b0af2fa8cdbdf05b2",
            "original_line": 123,
            "original_position": 48,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/sync.lua",
            "position": null,
            "pull_request_review_id": 836957245,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/772780166/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-12-21T02:09:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/772780166",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "The tests are fine, I'd rather avoid unnecessary changes. This is more similar to more original implementation in https://github.com/neovim/neovim/commit/2ecf0a4c6183bba1c65d440711038f040d355fef#diff-e0bb627783152fce1040c4ecdbd81d6c178095a1f4ceeca33007b86249437434R87-R118 which used a unified align function which I removed to simplify the code (I guess, ironically, we differ in opinion on this).\r\n\r\nCan you clarify what the *actual* fix/issue is? And make a PR that applies the minimal fix required to address the issue?\r\n\r\nAlso something to note is that our tests are by no means comprehensive, so I would recommend daily driving any incremental sync changes, as there are many edge cases I ran into implementing this.",
            "created_at": "2021-12-15T18:23:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-995050795",
            "id": 995050795,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47T0Ur",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995050795/reactions"
            },
            "updated_at": "2021-12-15T18:39:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995050795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "To put this more strongly. I'm not merging this as-is. Fix the issue without stylistically refactoring sync.lua, and in general please do not introduce refactors and fixes in the same PR. It makes it extremely difficult/frustrating to review, and the fix is not documented anywhere. At minimum, my expectation is there documentation of what this PR is fixing in the issue description.\r\n\r\nIf you feel strongly this improves readability, you can provide a follow-up PR which does the refactor.",
            "created_at": "2021-12-15T19:21:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-995115186",
            "id": 995115186,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47UECy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995115186/reactions"
            },
            "updated_at": "2021-12-15T19:25:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995115186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> in general please do not introduce refactors and fixes in the same PR.\r\n\r\nI'll see if I can get something minimal together for 0.6.1. Really my intention was for this to be for 0.7.0 after a good amount of review and beta testing.",
            "created_at": "2021-12-15T19:37:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-995143678",
            "id": 995143678,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47UK_-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995143678/reactions"
            },
            "updated_at": "2021-12-15T19:37:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995143678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "See #16670",
            "created_at": "2021-12-15T21:25:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-995225440",
            "id": 995225440,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47Ue9g",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995225440/reactions"
            },
            "updated_at": "2021-12-15T21:25:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/995225440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "perf -> refactor (unless you have benchmarks :))",
            "created_at": "2021-12-18T05:35:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-997148715",
            "id": 997148715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47b0gr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997148715/reactions"
            },
            "updated_at": "2021-12-18T05:35:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/997148715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I am now fine with this, I suggest daily driving this for several weeks and i will merge between 0.6.1 and 0.6.2.",
            "created_at": "2021-12-21T04:26:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-998462018",
            "id": 998462018,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47g1JC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/998462018/reactions"
            },
            "updated_at": "2021-12-21T04:26:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/998462018",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Will do, though @gebner is probably a better daily driver than me for this (if you don't mind since I'm not doing any Lean 4 yet). ",
            "created_at": "2021-12-21T14:03:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-998805309",
            "id": 998805309,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM47iI89",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/998805309/reactions"
            },
            "updated_at": "2021-12-21T14:03:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/998805309",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        },
        {
            "author_association": "NONE",
            "body": "FWIW, I've been running this patch for a while now and I haven't run into any synchronization-related errors.",
            "created_at": "2022-01-12T20:33:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-1011428078",
            "id": 1011428078,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM48SSru",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1011428078/reactions"
            },
            "updated_at": "2022-01-12T20:33:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1011428078",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/313929?v=4",
                "events_url": "https://api.github.com/users/gebner/events{/privacy}",
                "followers_url": "https://api.github.com/users/gebner/followers",
                "following_url": "https://api.github.com/users/gebner/following{/other_user}",
                "gists_url": "https://api.github.com/users/gebner/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gebner",
                "id": 313929,
                "login": "gebner",
                "node_id": "MDQ6VXNlcjMxMzkyOQ==",
                "organizations_url": "https://api.github.com/users/gebner/orgs",
                "received_events_url": "https://api.github.com/users/gebner/received_events",
                "repos_url": "https://api.github.com/users/gebner/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gebner/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gebner/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gebner"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I'm going to wait on this one until I've fixed https://github.com/neovim/neovim/issues/17085",
            "created_at": "2022-01-16T22:39:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-1013967200",
            "id": 1013967200,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM48b-lg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013967200/reactions"
            },
            "updated_at": "2022-01-16T22:39:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1013967200",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/13316262?v=4",
                "events_url": "https://api.github.com/users/mjlbach/events{/privacy}",
                "followers_url": "https://api.github.com/users/mjlbach/followers",
                "following_url": "https://api.github.com/users/mjlbach/following{/other_user}",
                "gists_url": "https://api.github.com/users/mjlbach/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mjlbach",
                "id": 13316262,
                "login": "mjlbach",
                "node_id": "MDQ6VXNlcjEzMzE2MjYy",
                "organizations_url": "https://api.github.com/users/mjlbach/orgs",
                "received_events_url": "https://api.github.com/users/mjlbach/received_events",
                "repos_url": "https://api.github.com/users/mjlbach/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mjlbach/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mjlbach/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mjlbach"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@rish987 is this PR still relevant, and if so can you outline a concrete issue that it would fix? ",
            "created_at": "2023-12-22T11:58:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-1867603174",
            "id": 1867603174,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM5vUVzm",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867603174/reactions"
            },
            "updated_at": "2023-12-22T11:58:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867603174",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Hey, it's been quite a while hahaha. IIRC this was mainly just a refactor of the way we send document change updates to the server. It's perhaps worth mentioning to a maintainer if they ever want to overhaul this function, but for now it's probably not worth our attention, so I'll close it off.",
            "created_at": "2023-12-22T13:05:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/16669#issuecomment-1867665764",
            "id": 1867665764,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
            "node_id": "IC_kwDOAPphoM5vUlFk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867665764/reactions"
            },
            "updated_at": "2023-12-22T13:05:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1867665764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/16669/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/16669/commits",
    "created_at": "2021-12-15T18:13:30Z",
    "diff_url": "https://github.com/neovim/neovim/pull/16669.diff",
    "draft": false,
    "head": {
        "label": "rish987:sync_fix",
        "ref": "sync_fix",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/rish987/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/rish987/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/rish987/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/rish987/neovim/branches{/branch}",
            "clone_url": "https://github.com/rish987/neovim.git",
            "collaborators_url": "https://api.github.com/repos/rish987/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/rish987/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/rish987/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/rish987/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/rish987/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/rish987/neovim/contributors",
            "created_at": "2021-08-03T20:10:12Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/rish987/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/rish987/neovim/downloads",
            "events_url": "https://api.github.com/repos/rish987/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/rish987/neovim/forks",
            "full_name": "rish987/neovim",
            "git_commits_url": "https://api.github.com/repos/rish987/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/rish987/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/rish987/neovim/git/tags{/sha}",
            "git_url": "git://github.com/rish987/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/rish987/neovim/hooks",
            "html_url": "https://github.com/rish987/neovim",
            "id": 392442813,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/rish987/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/rish987/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/rish987/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/rish987/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/rish987/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/rish987/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/rish987/neovim/merges",
            "milestones_url": "https://api.github.com/repos/rish987/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzOTI0NDI4MTM=",
            "notifications_url": "https://api.github.com/repos/rish987/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
                "events_url": "https://api.github.com/users/rish987/events{/privacy}",
                "followers_url": "https://api.github.com/users/rish987/followers",
                "following_url": "https://api.github.com/users/rish987/following{/other_user}",
                "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/rish987",
                "id": 14950617,
                "login": "rish987",
                "node_id": "MDQ6VXNlcjE0OTUwNjE3",
                "organizations_url": "https://api.github.com/users/rish987/orgs",
                "received_events_url": "https://api.github.com/users/rish987/received_events",
                "repos_url": "https://api.github.com/users/rish987/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/rish987"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/rish987/neovim/pulls{/number}",
            "pushed_at": "2022-07-11T02:28:11Z",
            "releases_url": "https://api.github.com/repos/rish987/neovim/releases{/id}",
            "size": 175783,
            "ssh_url": "git@github.com:rish987/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/rish987/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/rish987/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/rish987/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/rish987/neovim/subscription",
            "svn_url": "https://github.com/rish987/neovim",
            "tags_url": "https://api.github.com/repos/rish987/neovim/tags",
            "teams_url": "https://api.github.com/repos/rish987/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/rish987/neovim/git/trees{/sha}",
            "updated_at": "2021-11-26T00:36:40Z",
            "url": "https://api.github.com/repos/rish987/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "7a4877f61de0616964b8f939ad132fc256235d93",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
            "events_url": "https://api.github.com/users/rish987/events{/privacy}",
            "followers_url": "https://api.github.com/users/rish987/followers",
            "following_url": "https://api.github.com/users/rish987/following{/other_user}",
            "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/rish987",
            "id": 14950617,
            "login": "rish987",
            "node_id": "MDQ6VXNlcjE0OTUwNjE3",
            "organizations_url": "https://api.github.com/users/rish987/orgs",
            "received_events_url": "https://api.github.com/users/rish987/received_events",
            "repos_url": "https://api.github.com/users/rish987/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/rish987"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/16669",
    "id": 803726304,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/16669",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "0438b15db0074fe452af771211c6b6823039a850",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM4v5-Pg",
    "number": 16669,
    "patch_url": "https://github.com/neovim/neovim/pull/16669.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/16669/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/7a4877f61de0616964b8f939ad132fc256235d93",
    "title": "refactor(lsp): always crop matching text from end of incremental sync range",
    "updated_at": "2023-12-22T13:06:11Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/16669",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/14950617?v=4",
        "events_url": "https://api.github.com/users/rish987/events{/privacy}",
        "followers_url": "https://api.github.com/users/rish987/followers",
        "following_url": "https://api.github.com/users/rish987/following{/other_user}",
        "gists_url": "https://api.github.com/users/rish987/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/rish987",
        "id": 14950617,
        "login": "rish987",
        "node_id": "MDQ6VXNlcjE0OTUwNjE3",
        "organizations_url": "https://api.github.com/users/rish987/orgs",
        "received_events_url": "https://api.github.com/users/rish987/received_events",
        "repos_url": "https://api.github.com/users/rish987/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/rish987/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rish987/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/rish987"
    }
}