{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26791/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26791/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26791"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26791"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26791/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/765729a145d3d8204ff68b1da0b5bb45c70262e2"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5121,
            "forks_count": 5121,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1744,
            "open_issues_count": 1744,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-09T01:46:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248837,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72546,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-09T01:49:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72546,
            "watchers_count": 72546,
            "web_commit_signoff_required": false
        },
        "sha": "5dc0bdfe98b59bb03226167ed541d17cc5af30b1",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "**Problem**: gen_vimdoc.py is too difficult to read. \r\n**Solution**: Do some refactoring. More comments and examples. Benefit from static typing, intellisense, and better readability. \r\n\r\nThis PR consists of several (meaningful) commits which would allow reviewers to better and easily keep track of what's being changed. Tested: the generated vim docs and msgpack data are ~~all identical.~~ almost identical except for one place.\r\n\r\nI haven't touched the doxygen part because rewriting with lua+treesitter will be another significant, major refactoring; but this improvement with more object-oriented data representation will be still helpful towards that path.\r\n\r\n### refactor(gen_vimdoc): use stronger typing for CONFIG, avoid dict\r\n### refactor(gen_vimdoc): use typing for function vimdoc generation\r\n\r\nIntroduce `FunctionDoc` dataclass.\r\n\r\n### refactor(gen_vimdoc): generate function doc from metadata, not from xml\r\n\r\nProblem:\r\n\r\nFor function definitions to be included in the vimdoc (formatted) and\r\nto be exported as mpack data (unformatted), we had two internal\r\nrepresentations of the same function/API metadata in duplicate;\r\none is FunctionDoc (which was previously a dict), and the other is\r\ndoxygen XML DOM from which vimdoc (functions sections) was generated.\r\n\r\nSolution:\r\n\r\nWe should have a single path and unified data representation\r\n(i.e. FunctionDoc) that contains all the metadata and information about\r\nfunction APIs, from which both of mpack export and vimdoc are generated.\r\nI.e., vimdocs are no longer generated directly from doxygen XML nodes,\r\nbut generated via:\r\n\r\n```\r\n  (XML DOM Nodes) ------------> FunctionDoc ------> mpack (unformatted)\r\n                   Recursive     Internal     |\r\n                   Formatting    Metadata     +---> vimdoc (formatted)\r\n```\r\n\r\nThis refactoring eliminates the hacky and ugly use of `fmt_vimhelp` in\r\n`fmt_node_as_vimhelp()` and all other helper functions! This way,\r\n`fmt_node_as_vimhelp()` can simplified as it no longer needs to handle\r\ngenerating of function docs, which needs to be done only in the topmost\r\nlevel of recursion.\r\n\r\n\r\n\r\n### refactor(gen_vimdoc): refactor section and defgroup doc generation\r\n\r\nProblem: main() has too much logic implemented there, too difficult to\r\nread.\r\n\r\nSolution: Do more OOP, introduce `Section` dataclass that stores\r\ninformation about a \"section\", with documentation and concrete examples\r\nabout what each field and variable would mean. Extract all the lines for\r\nrendering a section into `section.render()` pulled out of `main()`.\r\n\r\n### fix(gen_vimdoc): INCLUDE_DEPRECATED not generating docs for deprecateds\r\n\r\nSince some point INCLUDE_DEPRECATED stopped working as it is usually\r\nturned off when generating an actual vimdoc. This commit fixes this\r\nhidden feature back again (used for devel purposes only).",
    "closed_at": "2024-01-04T12:03:12Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1438272534"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438272534"
                }
            },
            "author_association": "MEMBER",
            "body": "This _Nota Bene_ (brief) docstring suddenly appears, which is a minor (and the only) difference resulted from this refactoring. IDK what makes a difference, but since this would be fine to include, let me keep it... ",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2023-12-29T14:14:39Z",
            "diff_hunk": "@@ -73,6 +73,9 @@ function vim.api.nvim__id_dictionary(dct) end\n function vim.api.nvim__id_float(flt) end\n \n --- @private\n+--- NB: if your UI doesn't use hlstate, this will not return hlstate first\n+--- time.",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1438272534",
            "id": 1438272534,
            "line": 77,
            "node_id": "PRRC_kwDOAPphoM5VukwW",
            "original_commit_id": "e58cecf5a0d027d0cfe42c1d640c51a334994a4e",
            "original_line": 77,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/_meta/api.lua",
            "position": 5,
            "pull_request_review_id": 1799022539,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438272534/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T14:14:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438272534",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1438273945"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438273945"
                }
            },
            "author_association": "MEMBER",
            "body": "Question: I have no idea what those `*.mpack` files are for (see #11296), but is it OK to include additional fields if they are backward-compatible? I tried to make the generated file identical but it might be OK to include them.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2023-12-29T14:18:02Z",
            "diff_hunk": "@@ -905,49 +906,130 @@ class FunctionDoc:\n     \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n \n     doc: List[str]\n-    \"\"\"Main docstring (description) for the function.\"\"\"\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n \n     return_: List[str]\n-    \"\"\"Return:, or Return (multiple):\"\"\"\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n \n     seealso: List[str]\n-    \"\"\"See also:\"\"\"\n+    \"\"\"See also: (@see strings)\"\"\"\n \n-    # for fmt_node_as_vimhelp\n-    desc_node: Element | None = None\n-    brief_desc_node: Element | None = None\n+    xrefs: List[str]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n \n     # for INCLUDE_C_DECL\n     c_decl: str | None = None\n \n+    prerelease: bool = False\n+\n+    def export_mpack(self) -> Dict[str, Any]:\n+        \"\"\"Convert a dict to be exported as mpack data.\"\"\"\n+        exported = self.__dict__.copy()\n+        del exported['notes']\n+        del exported['c_decl']\n+        del exported['prerelease']\n+        del exported['xrefs']",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1438273945",
            "id": 1438273945,
            "line": 940,
            "node_id": "PRRC_kwDOAPphoM5VulGZ",
            "original_commit_id": "e58cecf5a0d027d0cfe42c1d640c51a334994a4e",
            "original_line": 940,
            "original_position": 101,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 516,
            "pull_request_review_id": 1799024567,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438273945/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T14:18:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438273945",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1438274736"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438274736"
                }
            },
            "author_association": "MEMBER",
            "body": "It's for language clients (and GUIs) to programmatically validate API calls.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2023-12-29T14:19:43Z",
            "diff_hunk": "@@ -905,49 +906,130 @@ class FunctionDoc:\n     \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n \n     doc: List[str]\n-    \"\"\"Main docstring (description) for the function.\"\"\"\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n \n     return_: List[str]\n-    \"\"\"Return:, or Return (multiple):\"\"\"\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n \n     seealso: List[str]\n-    \"\"\"See also:\"\"\"\n+    \"\"\"See also: (@see strings)\"\"\"\n \n-    # for fmt_node_as_vimhelp\n-    desc_node: Element | None = None\n-    brief_desc_node: Element | None = None\n+    xrefs: List[str]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n \n     # for INCLUDE_C_DECL\n     c_decl: str | None = None\n \n+    prerelease: bool = False\n+\n+    def export_mpack(self) -> Dict[str, Any]:\n+        \"\"\"Convert a dict to be exported as mpack data.\"\"\"\n+        exported = self.__dict__.copy()\n+        del exported['notes']\n+        del exported['c_decl']\n+        del exported['prerelease']\n+        del exported['xrefs']",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1438274736",
            "id": 1438274736,
            "in_reply_to_id": 1438273945,
            "line": 940,
            "node_id": "PRRC_kwDOAPphoM5VulSw",
            "original_commit_id": "e58cecf5a0d027d0cfe42c1d640c51a334994a4e",
            "original_line": 940,
            "original_position": 101,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 516,
            "pull_request_review_id": 1799025598,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438274736/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-29T14:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438274736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1438809693"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438809693"
                }
            },
            "author_association": "MEMBER",
            "body": "Thanks. I see they are also used during the build process, e.g., by `gen_eval_files.lua` to generate `GEN_EVAL_FILES`.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2023-12-31T04:26:02Z",
            "diff_hunk": "@@ -905,49 +906,130 @@ class FunctionDoc:\n     \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n \n     doc: List[str]\n-    \"\"\"Main docstring (description) for the function.\"\"\"\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n \n     return_: List[str]\n-    \"\"\"Return:, or Return (multiple):\"\"\"\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n \n     seealso: List[str]\n-    \"\"\"See also:\"\"\"\n+    \"\"\"See also: (@see strings)\"\"\"\n \n-    # for fmt_node_as_vimhelp\n-    desc_node: Element | None = None\n-    brief_desc_node: Element | None = None\n+    xrefs: List[str]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n \n     # for INCLUDE_C_DECL\n     c_decl: str | None = None\n \n+    prerelease: bool = False\n+\n+    def export_mpack(self) -> Dict[str, Any]:\n+        \"\"\"Convert a dict to be exported as mpack data.\"\"\"\n+        exported = self.__dict__.copy()\n+        del exported['notes']\n+        del exported['c_decl']\n+        del exported['prerelease']\n+        del exported['xrefs']",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1438809693",
            "id": 1438809693,
            "in_reply_to_id": 1438273945,
            "line": 940,
            "node_id": "PRRC_kwDOAPphoM5Vwn5d",
            "original_commit_id": "e58cecf5a0d027d0cfe42c1d640c51a334994a4e",
            "original_line": 940,
            "original_position": 101,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 516,
            "pull_request_review_id": 1799608350,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438809693/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-31T04:27:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438809693",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439527613"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439527613"
                }
            },
            "author_association": "MEMBER",
            "body": "Since `nvim_path` is a `Path` object:\r\n\r\n```suggestion\r\n    nvim = nvim_path.resolve()\r\n```",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T14:59:56Z",
            "diff_hunk": "@@ -68,7 +74,7 @@\n # Need a `nvim` that supports `-l`, try the local build\n nvim_path = Path(__file__).parent / \"../build/bin/nvim\"\n if nvim_path.exists():\n-    nvim = str(nvim_path)\n+    nvim = os.path.realpath(nvim_path)",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439527613",
            "id": 1439527613,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VzXK9",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 77,
            "original_position": 51,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800555115,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439527613/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T14:59:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439527613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439529936"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439529936"
                }
            },
            "author_association": "MEMBER",
            "body": "Is the `or False` needed here since you have the default value?\r\n\r\n```suggestion\r\nINCLUDE_C_DECL = bool(int(os.environ.get('INCLUDE_C_DECL', '0')))\r\nINCLUDE_DEPRECATED = bool(int(os.environ.get('INCLUDE_DEPRECATED', '0')))\r\n```",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:02:11Z",
            "diff_hunk": "@@ -83,8 +89,8 @@\n \n \n # DEBUG = ('DEBUG' in os.environ)\n-INCLUDE_C_DECL = ('INCLUDE_C_DECL' in os.environ)\n-INCLUDE_DEPRECATED = ('INCLUDE_DEPRECATED' in os.environ)\n+INCLUDE_C_DECL = bool(int(os.environ.get('INCLUDE_C_DECL', '0') or False))\n+INCLUDE_DEPRECATED = bool(int(os.environ.get('INCLUDE_DEPRECATED', '0') or False))",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439529936",
            "id": 1439529936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VzXvQ",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 93,
            "original_position": 62,
            "original_start_line": 92,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800558736,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439529936/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T15:02:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439529936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439532897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439532897"
                }
            },
            "author_association": "MEMBER",
            "body": "Could this also be written as `os.environ.get('INCLUDE_C_DECL', '0') != '0'`? Imo that is clearer than wrapping in `bool(int())`.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:03:10Z",
            "diff_hunk": "@@ -83,8 +89,8 @@\n \n \n # DEBUG = ('DEBUG' in os.environ)\n-INCLUDE_C_DECL = ('INCLUDE_C_DECL' in os.environ)\n-INCLUDE_DEPRECATED = ('INCLUDE_DEPRECATED' in os.environ)\n+INCLUDE_C_DECL = bool(int(os.environ.get('INCLUDE_C_DECL', '0') or False))\n+INCLUDE_DEPRECATED = bool(int(os.environ.get('INCLUDE_DEPRECATED', '0') or False))",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439532897",
            "id": 1439532897,
            "in_reply_to_id": 1439529936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VzYdh",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 93,
            "original_position": 62,
            "original_start_line": 92,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800560917,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439532897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T15:03:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439532897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439534117"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439534117"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this standard practice to put the docstring _below_ the field? I've written a lot of Python and have never seen this before. It threw me off at first.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:04:13Z",
            "diff_hunk": "@@ -96,19 +102,73 @@\n \n text_width = 78\n indentation = 4\n+SECTION_SEP = '=' * text_width\n+\n script_path = os.path.abspath(__file__)\n base_dir = os.path.dirname(os.path.dirname(script_path))\n out_dir = os.path.join(base_dir, 'tmp-{target}-doc')\n filter_cmd = '%s %s' % (sys.executable, script_path)\n msgs = []  # Messages to show on exit.\n lua2dox = os.path.join(base_dir, 'scripts', 'lua2dox.lua')\n \n-CONFIG = {\n-    'api': {\n-        'mode': 'c',\n-        'filename': 'api.txt',\n+\n+SectionName = str\n+\n+Docstring = str  # Represents (formatted) vimdoc string\n+\n+FunctionName = str\n+\n+\n+@dataclasses.dataclass\n+class Config:\n+    \"\"\"Config for documentation.\"\"\"\n+\n+    mode: Literal['c', 'lua']\n+\n+    filename: str\n+    \"\"\"Generated documentation target, e.g. api.txt\"\"\"",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439534117",
            "id": 1439534117,
            "line": 129,
            "node_id": "PRRC_kwDOAPphoM5VzYwl",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 129,
            "original_position": 98,
            "original_start_line": 128,
            "path": "scripts/gen_vimdoc.py",
            "position": 98,
            "pull_request_review_id": 1800562569,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439534117/reactions"
            },
            "side": "RIGHT",
            "start_line": 128,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T15:04:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439534117",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439535996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439535996"
                }
            },
            "author_association": "MEMBER",
            "body": "Nit: prefer list comprehensions over `filter`:\r\n\r\n```python\r\n[x for x in [...] if x]\r\n```",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:06:14Z",
            "diff_hunk": "@@ -96,19 +102,73 @@\n \n text_width = 78\n indentation = 4\n+SECTION_SEP = '=' * text_width\n+\n script_path = os.path.abspath(__file__)\n base_dir = os.path.dirname(os.path.dirname(script_path))\n out_dir = os.path.join(base_dir, 'tmp-{target}-doc')\n filter_cmd = '%s %s' % (sys.executable, script_path)\n msgs = []  # Messages to show on exit.\n lua2dox = os.path.join(base_dir, 'scripts', 'lua2dox.lua')\n \n-CONFIG = {\n-    'api': {\n-        'mode': 'c',\n-        'filename': 'api.txt',\n+\n+SectionName = str\n+\n+Docstring = str  # Represents (formatted) vimdoc string\n+\n+FunctionName = str\n+\n+\n+@dataclasses.dataclass\n+class Config:\n+    \"\"\"Config for documentation.\"\"\"\n+\n+    mode: Literal['c', 'lua']\n+\n+    filename: str\n+    \"\"\"Generated documentation target, e.g. api.txt\"\"\"\n+\n+    section_order: List[str]\n+    \"\"\"Section ordering.\"\"\"\n+\n+    files: List[str]\n+    \"\"\"List of files/directories for doxygen to read, relative to `base_dir`.\"\"\"\n+\n+    file_patterns: str\n+    \"\"\"file patterns used by doxygen.\"\"\"\n+\n+    section_name: Dict[str, SectionName]\n+    \"\"\"Section name overrides. Key: filename (e.g., vim.c)\"\"\"\n+\n+    section_fmt: Callable[[SectionName], str]\n+    \"\"\"For generated section names.\"\"\"\n+\n+    helptag_fmt: Callable[[SectionName], str]\n+    \"\"\"Section helptag.\"\"\"\n+\n+    fn_helptag_fmt: Callable[[str, str, bool], str]\n+    \"\"\"Per-function helptag.\"\"\"\n+\n+    module_override: Dict[str, str]\n+    \"\"\"Module name overrides (for Lua).\"\"\"\n+\n+    append_only: List[str]\n+    \"\"\"Append the docs for these modules, do not start a new section.\"\"\"\n+\n+    fn_name_prefix: str\n+    \"\"\"Only function with this prefix are considered\"\"\"\n+\n+    fn_name_fmt: Callable[[str, str], str] | None = None\n+\n+    include_tables: bool = True\n+\n+\n+CONFIG: Dict[str, Config] = {\n+    'api': Config(\n+        mode = 'c',\n+        filename = 'api.txt',\n         # Section ordering.\n-        'section_order': [\n+        section_order=list(filter(lambda x: x, [",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439535996",
            "id": 1439535996,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VzZN8",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 171,
            "original_position": 141,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800565699,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439535996/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T15:06:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439535996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439537353"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439537353"
                }
            },
            "author_association": "MEMBER",
            "body": "Readability nit:\r\n\r\n```suggestion\r\ndef para_as_map(parent, indent='', width=(text_width - indentation)):\r\n```",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:07:48Z",
            "diff_hunk": "@@ -702,7 +754,7 @@ def ind(s):\n     return text\n \n \n-def para_as_map(parent, indent='', width=text_width - indentation, fmt_vimhelp=False):\n+def para_as_map(parent, indent='', width=text_width - indentation):",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439537353",
            "id": 1439537353,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VzZjJ",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 757,
            "original_position": 397,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800568065,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439537353/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T15:07:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439537353",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439538798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439538798"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this syntax supported in Python 3.7? I think you may need to use `Union`\r\n\r\nhttps://docs.python.org/3.7/library/typing.html#typing.Union",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:09:28Z",
            "diff_hunk": "@@ -835,33 +886,156 @@ def is_program_listing(para):\n \n     return len(children) == 1 and children[0].nodeName == 'programlisting'\n \n-def fmt_node_as_vimhelp(parent: Element, width=text_width - indentation, indent='',\n-                        fmt_vimhelp=False):\n+\n+FunctionParam = Tuple[\n+    str,  # type\n+    str,  # parameter name\n+]\n+\n+@dataclasses.dataclass\n+class FunctionDoc:\n+    \"\"\"Data structure for function documentation. Also exported as msgpack.\"\"\"\n+\n+    annotations: List[str]\n+    \"\"\"Attributes, e.g., FUNC_API_REMOTE_ONLY. See annotation_map\"\"\"\n+\n+    notes: List[Docstring]\n+    \"\"\"Notes: (@note strings)\"\"\"\n+\n+    signature: str\n+    \"\"\"Function signature with *tags*.\"\"\"\n+\n+    parameters: List[FunctionParam]\n+    \"\"\"Parameters: (type, name)\"\"\"\n+\n+    parameters_doc: Dict[str, Docstring]\n+    \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n+\n+    doc: List[Docstring]\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n+\n+    return_: List[Docstring]\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n+\n+    seealso: List[Docstring]\n+    \"\"\"See also: (@see strings)\"\"\"\n+\n+    xrefs: List[Docstring]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n+\n+    # for INCLUDE_C_DECL\n+    c_decl: str | None = None",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439538798",
            "id": 1439538798,
            "line": 930,
            "node_id": "PRRC_kwDOAPphoM5VzZ5u",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 930,
            "original_position": 503,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 506,
            "pull_request_review_id": 1800570606,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439538798/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T15:09:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439538798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439540404"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439540404"
                }
            },
            "author_association": "MEMBER",
            "body": "Is an explicit type annotation needed here? And should the return type of `doc_concatenated` be `Docstring` instead?",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T15:10:54Z",
            "diff_hunk": "@@ -835,33 +886,156 @@ def is_program_listing(para):\n \n     return len(children) == 1 and children[0].nodeName == 'programlisting'\n \n-def fmt_node_as_vimhelp(parent: Element, width=text_width - indentation, indent='',\n-                        fmt_vimhelp=False):\n+\n+FunctionParam = Tuple[\n+    str,  # type\n+    str,  # parameter name\n+]\n+\n+@dataclasses.dataclass\n+class FunctionDoc:\n+    \"\"\"Data structure for function documentation. Also exported as msgpack.\"\"\"\n+\n+    annotations: List[str]\n+    \"\"\"Attributes, e.g., FUNC_API_REMOTE_ONLY. See annotation_map\"\"\"\n+\n+    notes: List[Docstring]\n+    \"\"\"Notes: (@note strings)\"\"\"\n+\n+    signature: str\n+    \"\"\"Function signature with *tags*.\"\"\"\n+\n+    parameters: List[FunctionParam]\n+    \"\"\"Parameters: (type, name)\"\"\"\n+\n+    parameters_doc: Dict[str, Docstring]\n+    \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n+\n+    doc: List[Docstring]\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n+\n+    return_: List[Docstring]\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n+\n+    seealso: List[Docstring]\n+    \"\"\"See also: (@see strings)\"\"\"\n+\n+    xrefs: List[Docstring]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n+\n+    # for INCLUDE_C_DECL\n+    c_decl: str | None = None\n+\n+    prerelease: bool = False\n+\n+    def export_mpack(self) -> Dict[str, Any]:\n+        \"\"\"Convert a dict to be exported as mpack data.\"\"\"\n+        exported = self.__dict__.copy()\n+        del exported['notes']\n+        del exported['c_decl']\n+        del exported['prerelease']\n+        del exported['xrefs']\n+        exported['return'] = exported.pop('return_')\n+        return exported\n+\n+    def doc_concatenated(self) -> str:\n+        \"\"\"Concatenate all the paragraphs in `doc` into a single string, but\n+        remove blank lines before 'programlisting' blocks. #25127\n+\n+        BEFORE (without programlisting processing):\n+            ```vimdoc\n+            Example:\n+\n+            >vim\n+                :echo nvim_get_color_by_name(\"Pink\")\n+            <\n+            ```\n+\n+        AFTER:\n+            ```vimdoc\n+            Example: >vim\n+                :echo nvim_get_color_by_name(\"Pink\")\n+            <\n+            ```\n+        \"\"\"\n+        def is_program_listing(paragraph: str) -> bool:\n+            lines = paragraph.strip().split('\\n')\n+            return lines[0].startswith('>') and lines[-1] == '<'\n+\n+        rendered = []\n+        for paragraph in self.doc:\n+            if is_program_listing(paragraph):\n+                rendered.append(' ')  # Example: >vim\n+            elif rendered:\n+                rendered.append('\\n\\n')\n+            rendered.append(paragraph)\n+        return ''.join(rendered)\n+\n+    def render(self) -> Docstring:\n+        \"\"\"Renders function documentation as Vim :help text.\"\"\"\n+        rendered_blocks: List[Docstring] = []\n+\n+        def fmt_param_doc(m):\n+            \"\"\"Renders a params map as Vim :help text.\"\"\"\n+            max_name_len = max_name(m.keys()) + 4\n+            out = ''\n+            for name, desc in m.items():\n+                if name == 'self':\n+                    continue\n+                name = '  • {}'.format('{{{}}}'.format(name).ljust(max_name_len))\n+                out += '{}{}\\n'.format(name, desc)\n+            return out.rstrip()\n+\n+        # Generate text from the gathered items.\n+        chunks: List[Docstring] = [self.doc_concatenated()]",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439540404",
            "id": 1439540404,
            "line": 993,
            "node_id": "PRRC_kwDOAPphoM5VzaS0",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 993,
            "original_position": 566,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 569,
            "pull_request_review_id": 1800572850,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439540404/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T15:10:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439540404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439595586"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439595586"
                }
            },
            "author_association": "MEMBER",
            "body": "Agree. Actually I was thinking of a case `INCLUDE_C_DECL= python gen_vimdoc.py` where `int(\"\")` throws an error, but we can exclude such usage in favor of `INCLUDE_C_DECL=0`; simplicity is better.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:08:12Z",
            "diff_hunk": "@@ -83,8 +89,8 @@\n \n \n # DEBUG = ('DEBUG' in os.environ)\n-INCLUDE_C_DECL = ('INCLUDE_C_DECL' in os.environ)\n-INCLUDE_DEPRECATED = ('INCLUDE_DEPRECATED' in os.environ)\n+INCLUDE_C_DECL = bool(int(os.environ.get('INCLUDE_C_DECL', '0') or False))\n+INCLUDE_DEPRECATED = bool(int(os.environ.get('INCLUDE_DEPRECATED', '0') or False))",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439595586",
            "id": 1439595586,
            "in_reply_to_id": 1439529936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VznxC",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 93,
            "original_position": 62,
            "original_start_line": 92,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800658253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439595586/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T16:08:12Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439595586",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439597004"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439597004"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, in this way LSP (pyright) can recognize docstrings on the field as per PEP-257. If it were `above`, it would go to the wrong adjacent field.\r\n\r\n<img width=\"807\" alt=\"image\" src=\"https://github.com/neovim/neovim/assets/1009873/b6a6d000-66bd-4312-9788-8527eb7d93f0\">\r\n",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:09:30Z",
            "diff_hunk": "@@ -96,19 +102,73 @@\n \n text_width = 78\n indentation = 4\n+SECTION_SEP = '=' * text_width\n+\n script_path = os.path.abspath(__file__)\n base_dir = os.path.dirname(os.path.dirname(script_path))\n out_dir = os.path.join(base_dir, 'tmp-{target}-doc')\n filter_cmd = '%s %s' % (sys.executable, script_path)\n msgs = []  # Messages to show on exit.\n lua2dox = os.path.join(base_dir, 'scripts', 'lua2dox.lua')\n \n-CONFIG = {\n-    'api': {\n-        'mode': 'c',\n-        'filename': 'api.txt',\n+\n+SectionName = str\n+\n+Docstring = str  # Represents (formatted) vimdoc string\n+\n+FunctionName = str\n+\n+\n+@dataclasses.dataclass\n+class Config:\n+    \"\"\"Config for documentation.\"\"\"\n+\n+    mode: Literal['c', 'lua']\n+\n+    filename: str\n+    \"\"\"Generated documentation target, e.g. api.txt\"\"\"",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439597004",
            "id": 1439597004,
            "in_reply_to_id": 1439534117,
            "line": 129,
            "node_id": "PRRC_kwDOAPphoM5VzoHM",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 129,
            "original_position": 98,
            "original_start_line": 128,
            "path": "scripts/gen_vimdoc.py",
            "position": 98,
            "pull_request_review_id": 1800660451,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439597004/reactions"
            },
            "side": "RIGHT",
            "start_line": 128,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T16:28:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439597004",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439597795"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439597795"
                }
            },
            "author_association": "MEMBER",
            "body": "Pyright is not a language server ;)",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:10:21Z",
            "diff_hunk": "@@ -96,19 +102,73 @@\n \n text_width = 78\n indentation = 4\n+SECTION_SEP = '=' * text_width\n+\n script_path = os.path.abspath(__file__)\n base_dir = os.path.dirname(os.path.dirname(script_path))\n out_dir = os.path.join(base_dir, 'tmp-{target}-doc')\n filter_cmd = '%s %s' % (sys.executable, script_path)\n msgs = []  # Messages to show on exit.\n lua2dox = os.path.join(base_dir, 'scripts', 'lua2dox.lua')\n \n-CONFIG = {\n-    'api': {\n-        'mode': 'c',\n-        'filename': 'api.txt',\n+\n+SectionName = str\n+\n+Docstring = str  # Represents (formatted) vimdoc string\n+\n+FunctionName = str\n+\n+\n+@dataclasses.dataclass\n+class Config:\n+    \"\"\"Config for documentation.\"\"\"\n+\n+    mode: Literal['c', 'lua']\n+\n+    filename: str\n+    \"\"\"Generated documentation target, e.g. api.txt\"\"\"",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439597795",
            "id": 1439597795,
            "in_reply_to_id": 1439534117,
            "line": 129,
            "node_id": "PRRC_kwDOAPphoM5VzoTj",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 129,
            "original_position": 98,
            "original_start_line": 128,
            "path": "scripts/gen_vimdoc.py",
            "position": 98,
            "pull_request_review_id": 1800661960,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 1,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439597795/reactions"
            },
            "side": "RIGHT",
            "start_line": 128,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T16:10:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439597795",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439598926"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439598926"
                }
            },
            "author_association": "MEMBER",
            "body": "This is [PEP-563](https://peps.python.org/pep-0563), see `\r\nfrom __future__ import annotations`. Although the [PEP-604](https://peps.python.org/pep-0604/) syntax is 3.10+ only, PEP-563 allows writing more concise type annotations (which I prefer than Union) for type annotations that are evaluated on TYPE_CHECKING only.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:11:40Z",
            "diff_hunk": "@@ -835,33 +886,156 @@ def is_program_listing(para):\n \n     return len(children) == 1 and children[0].nodeName == 'programlisting'\n \n-def fmt_node_as_vimhelp(parent: Element, width=text_width - indentation, indent='',\n-                        fmt_vimhelp=False):\n+\n+FunctionParam = Tuple[\n+    str,  # type\n+    str,  # parameter name\n+]\n+\n+@dataclasses.dataclass\n+class FunctionDoc:\n+    \"\"\"Data structure for function documentation. Also exported as msgpack.\"\"\"\n+\n+    annotations: List[str]\n+    \"\"\"Attributes, e.g., FUNC_API_REMOTE_ONLY. See annotation_map\"\"\"\n+\n+    notes: List[Docstring]\n+    \"\"\"Notes: (@note strings)\"\"\"\n+\n+    signature: str\n+    \"\"\"Function signature with *tags*.\"\"\"\n+\n+    parameters: List[FunctionParam]\n+    \"\"\"Parameters: (type, name)\"\"\"\n+\n+    parameters_doc: Dict[str, Docstring]\n+    \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n+\n+    doc: List[Docstring]\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n+\n+    return_: List[Docstring]\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n+\n+    seealso: List[Docstring]\n+    \"\"\"See also: (@see strings)\"\"\"\n+\n+    xrefs: List[Docstring]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n+\n+    # for INCLUDE_C_DECL\n+    c_decl: str | None = None",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439598926",
            "id": 1439598926,
            "in_reply_to_id": 1439538798,
            "line": 930,
            "node_id": "PRRC_kwDOAPphoM5VzolO",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 930,
            "original_position": 503,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 506,
            "pull_request_review_id": 1800663752,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439598926/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T16:11:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439598926",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439600146"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439600146"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed typing on `doc_concatenated`. Whenever applicable, it's my personal preference to write type annotations (unless it's verbose and formats ugly) because it gives me more hints.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:13:04Z",
            "diff_hunk": "@@ -835,33 +886,156 @@ def is_program_listing(para):\n \n     return len(children) == 1 and children[0].nodeName == 'programlisting'\n \n-def fmt_node_as_vimhelp(parent: Element, width=text_width - indentation, indent='',\n-                        fmt_vimhelp=False):\n+\n+FunctionParam = Tuple[\n+    str,  # type\n+    str,  # parameter name\n+]\n+\n+@dataclasses.dataclass\n+class FunctionDoc:\n+    \"\"\"Data structure for function documentation. Also exported as msgpack.\"\"\"\n+\n+    annotations: List[str]\n+    \"\"\"Attributes, e.g., FUNC_API_REMOTE_ONLY. See annotation_map\"\"\"\n+\n+    notes: List[Docstring]\n+    \"\"\"Notes: (@note strings)\"\"\"\n+\n+    signature: str\n+    \"\"\"Function signature with *tags*.\"\"\"\n+\n+    parameters: List[FunctionParam]\n+    \"\"\"Parameters: (type, name)\"\"\"\n+\n+    parameters_doc: Dict[str, Docstring]\n+    \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n+\n+    doc: List[Docstring]\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n+\n+    return_: List[Docstring]\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n+\n+    seealso: List[Docstring]\n+    \"\"\"See also: (@see strings)\"\"\"\n+\n+    xrefs: List[Docstring]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n+\n+    # for INCLUDE_C_DECL\n+    c_decl: str | None = None\n+\n+    prerelease: bool = False\n+\n+    def export_mpack(self) -> Dict[str, Any]:\n+        \"\"\"Convert a dict to be exported as mpack data.\"\"\"\n+        exported = self.__dict__.copy()\n+        del exported['notes']\n+        del exported['c_decl']\n+        del exported['prerelease']\n+        del exported['xrefs']\n+        exported['return'] = exported.pop('return_')\n+        return exported\n+\n+    def doc_concatenated(self) -> str:\n+        \"\"\"Concatenate all the paragraphs in `doc` into a single string, but\n+        remove blank lines before 'programlisting' blocks. #25127\n+\n+        BEFORE (without programlisting processing):\n+            ```vimdoc\n+            Example:\n+\n+            >vim\n+                :echo nvim_get_color_by_name(\"Pink\")\n+            <\n+            ```\n+\n+        AFTER:\n+            ```vimdoc\n+            Example: >vim\n+                :echo nvim_get_color_by_name(\"Pink\")\n+            <\n+            ```\n+        \"\"\"\n+        def is_program_listing(paragraph: str) -> bool:\n+            lines = paragraph.strip().split('\\n')\n+            return lines[0].startswith('>') and lines[-1] == '<'\n+\n+        rendered = []\n+        for paragraph in self.doc:\n+            if is_program_listing(paragraph):\n+                rendered.append(' ')  # Example: >vim\n+            elif rendered:\n+                rendered.append('\\n\\n')\n+            rendered.append(paragraph)\n+        return ''.join(rendered)\n+\n+    def render(self) -> Docstring:\n+        \"\"\"Renders function documentation as Vim :help text.\"\"\"\n+        rendered_blocks: List[Docstring] = []\n+\n+        def fmt_param_doc(m):\n+            \"\"\"Renders a params map as Vim :help text.\"\"\"\n+            max_name_len = max_name(m.keys()) + 4\n+            out = ''\n+            for name, desc in m.items():\n+                if name == 'self':\n+                    continue\n+                name = '  • {}'.format('{{{}}}'.format(name).ljust(max_name_len))\n+                out += '{}{}\\n'.format(name, desc)\n+            return out.rstrip()\n+\n+        # Generate text from the gathered items.\n+        chunks: List[Docstring] = [self.doc_concatenated()]",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439600146",
            "id": 1439600146,
            "in_reply_to_id": 1439540404,
            "line": 993,
            "node_id": "PRRC_kwDOAPphoM5Vzo4S",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 993,
            "original_position": 566,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 569,
            "pull_request_review_id": 1800665759,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439600146/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T16:13:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439600146",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439611040"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439611040"
                }
            },
            "author_association": "MEMBER",
            "body": ">Yes, in this way LSP (pyright) can recognize docstrings on the field\r\n\r\nHuh, TIL.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:25:19Z",
            "diff_hunk": "@@ -96,19 +102,73 @@\n \n text_width = 78\n indentation = 4\n+SECTION_SEP = '=' * text_width\n+\n script_path = os.path.abspath(__file__)\n base_dir = os.path.dirname(os.path.dirname(script_path))\n out_dir = os.path.join(base_dir, 'tmp-{target}-doc')\n filter_cmd = '%s %s' % (sys.executable, script_path)\n msgs = []  # Messages to show on exit.\n lua2dox = os.path.join(base_dir, 'scripts', 'lua2dox.lua')\n \n-CONFIG = {\n-    'api': {\n-        'mode': 'c',\n-        'filename': 'api.txt',\n+\n+SectionName = str\n+\n+Docstring = str  # Represents (formatted) vimdoc string\n+\n+FunctionName = str\n+\n+\n+@dataclasses.dataclass\n+class Config:\n+    \"\"\"Config for documentation.\"\"\"\n+\n+    mode: Literal['c', 'lua']\n+\n+    filename: str\n+    \"\"\"Generated documentation target, e.g. api.txt\"\"\"",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439611040",
            "id": 1439611040,
            "in_reply_to_id": 1439534117,
            "line": 129,
            "node_id": "PRRC_kwDOAPphoM5Vzrig",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 129,
            "original_position": 98,
            "original_start_line": 128,
            "path": "scripts/gen_vimdoc.py",
            "position": 98,
            "pull_request_review_id": 1800685361,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439611040/reactions"
            },
            "side": "RIGHT",
            "start_line": 128,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T16:25:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439611040",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439612640"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439612640"
                }
            },
            "author_association": "MEMBER",
            "body": "Interesting, thanks for the links!\r\n\r\nDoes PEP-563 also enable us to use e.g. `list`, `dict`, `tuple`, etc. over `List`, `Dict`, `Tuple`?",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:27:10Z",
            "diff_hunk": "@@ -835,33 +886,156 @@ def is_program_listing(para):\n \n     return len(children) == 1 and children[0].nodeName == 'programlisting'\n \n-def fmt_node_as_vimhelp(parent: Element, width=text_width - indentation, indent='',\n-                        fmt_vimhelp=False):\n+\n+FunctionParam = Tuple[\n+    str,  # type\n+    str,  # parameter name\n+]\n+\n+@dataclasses.dataclass\n+class FunctionDoc:\n+    \"\"\"Data structure for function documentation. Also exported as msgpack.\"\"\"\n+\n+    annotations: List[str]\n+    \"\"\"Attributes, e.g., FUNC_API_REMOTE_ONLY. See annotation_map\"\"\"\n+\n+    notes: List[Docstring]\n+    \"\"\"Notes: (@note strings)\"\"\"\n+\n+    signature: str\n+    \"\"\"Function signature with *tags*.\"\"\"\n+\n+    parameters: List[FunctionParam]\n+    \"\"\"Parameters: (type, name)\"\"\"\n+\n+    parameters_doc: Dict[str, Docstring]\n+    \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n+\n+    doc: List[Docstring]\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n+\n+    return_: List[Docstring]\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n+\n+    seealso: List[Docstring]\n+    \"\"\"See also: (@see strings)\"\"\"\n+\n+    xrefs: List[Docstring]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n+\n+    # for INCLUDE_C_DECL\n+    c_decl: str | None = None",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439612640",
            "id": 1439612640,
            "in_reply_to_id": 1439538798,
            "line": 930,
            "node_id": "PRRC_kwDOAPphoM5Vzr7g",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 930,
            "original_position": 503,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 506,
            "pull_request_review_id": 1800687894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439612640/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T16:27:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439612640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439620527"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439620527"
                }
            },
            "author_association": "MEMBER",
            "body": "Fixed, the one you suggested is much better. thanks!",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T16:36:21Z",
            "diff_hunk": "@@ -83,8 +89,8 @@\n \n \n # DEBUG = ('DEBUG' in os.environ)\n-INCLUDE_C_DECL = ('INCLUDE_C_DECL' in os.environ)\n-INCLUDE_DEPRECATED = ('INCLUDE_DEPRECATED' in os.environ)\n+INCLUDE_C_DECL = bool(int(os.environ.get('INCLUDE_C_DECL', '0') or False))\n+INCLUDE_DEPRECATED = bool(int(os.environ.get('INCLUDE_DEPRECATED', '0') or False))",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439620527",
            "id": 1439620527,
            "in_reply_to_id": 1439529936,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vzt2v",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 93,
            "original_position": 62,
            "original_start_line": 92,
            "path": "scripts/gen_vimdoc.py",
            "position": null,
            "pull_request_review_id": 1800700382,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439620527/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-01-02T16:36:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439620527",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1439654053"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439654053"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, right. (But somehow I didn't use them in this PR :P)",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-02T17:17:15Z",
            "diff_hunk": "@@ -835,33 +886,156 @@ def is_program_listing(para):\n \n     return len(children) == 1 and children[0].nodeName == 'programlisting'\n \n-def fmt_node_as_vimhelp(parent: Element, width=text_width - indentation, indent='',\n-                        fmt_vimhelp=False):\n+\n+FunctionParam = Tuple[\n+    str,  # type\n+    str,  # parameter name\n+]\n+\n+@dataclasses.dataclass\n+class FunctionDoc:\n+    \"\"\"Data structure for function documentation. Also exported as msgpack.\"\"\"\n+\n+    annotations: List[str]\n+    \"\"\"Attributes, e.g., FUNC_API_REMOTE_ONLY. See annotation_map\"\"\"\n+\n+    notes: List[Docstring]\n+    \"\"\"Notes: (@note strings)\"\"\"\n+\n+    signature: str\n+    \"\"\"Function signature with *tags*.\"\"\"\n+\n+    parameters: List[FunctionParam]\n+    \"\"\"Parameters: (type, name)\"\"\"\n+\n+    parameters_doc: Dict[str, Docstring]\n+    \"\"\"Parameters documentation. Key is parameter name, value is doc.\"\"\"\n+\n+    doc: List[Docstring]\n+    \"\"\"Main description for the function. Separated by paragraph.\"\"\"\n+\n+    return_: List[Docstring]\n+    \"\"\"Return:, or Return (multiple): (@return strings)\"\"\"\n+\n+    seealso: List[Docstring]\n+    \"\"\"See also: (@see strings)\"\"\"\n+\n+    xrefs: List[Docstring]\n+    \"\"\"XRefs. Currently only used to track Deprecated functions.\"\"\"\n+\n+    # for INCLUDE_C_DECL\n+    c_decl: str | None = None",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1439654053",
            "id": 1439654053,
            "in_reply_to_id": 1439538798,
            "line": 930,
            "node_id": "PRRC_kwDOAPphoM5Vz2Cl",
            "original_commit_id": "aec4e7f6ac17bb491a7040cc171e8259f032409d",
            "original_line": 930,
            "original_position": 503,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 506,
            "pull_request_review_id": 1800753963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439654053/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-02T17:17:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1439654053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1441662525"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441662525"
                }
            },
            "author_association": "MEMBER",
            "body": "Do we need to pull this in? Can we not upgrade the min python version instead? Otherwise can we add a comment justifying why we need this.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-04T11:55:29Z",
            "diff_hunk": "@@ -32,24 +33,29 @@\n     parameter is marked as [out].\n   - Each function documentation is separated by a single line.\n \"\"\"\n+\n+from __future__ import annotations",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1441662525",
            "id": 1441662525,
            "line": 37,
            "node_id": "PRRC_kwDOAPphoM5V7gY9",
            "original_commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "original_line": 37,
            "original_position": 13,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 13,
            "pull_request_review_id": 1804017370,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441662525/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T11:55:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441662525",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1441669771"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441669771"
                }
            },
            "author_association": "MEMBER",
            "body": "nvm, I see you added this so you don't need to use `Union`.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-04T12:02:38Z",
            "diff_hunk": "@@ -32,24 +33,29 @@\n     parameter is marked as [out].\n   - Each function documentation is separated by a single line.\n \"\"\"\n+\n+from __future__ import annotations",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1441669771",
            "id": 1441669771,
            "in_reply_to_id": 1441662525,
            "line": 37,
            "node_id": "PRRC_kwDOAPphoM5V7iKL",
            "original_commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "original_line": 37,
            "original_position": 13,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 13,
            "pull_request_review_id": 1804028818,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441669771/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T12:02:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441669771",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1441945639"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441945639"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, I intended min python version to be 3.7 (was 3.6 before), so I believe this shouldn't be a big problem. But there's actually one small mistake I missed: `typing.Literal` requires 3.8, so actually it ended up being 3.8+. (We can relax to 3.7 by getting rid of `import Literal`) #26883",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-04T16:02:37Z",
            "diff_hunk": "@@ -32,24 +33,29 @@\n     parameter is marked as [out].\n   - Each function documentation is separated by a single line.\n \"\"\"\n+\n+from __future__ import annotations",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1441945639",
            "id": 1441945639,
            "in_reply_to_id": 1441662525,
            "line": 37,
            "node_id": "PRRC_kwDOAPphoM5V8lgn",
            "original_commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "original_line": 37,
            "original_position": 13,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 13,
            "pull_request_review_id": 1804475518,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441945639/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T16:18:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441945639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26791#discussion_r1441950510"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26791"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441950510"
                }
            },
            "author_association": "MEMBER",
            "body": "I can recommend \"vermin\" to quickly determine minimum python version in script.",
            "commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "created_at": "2024-01-04T16:06:36Z",
            "diff_hunk": "@@ -32,24 +33,29 @@\n     parameter is marked as [out].\n   - Each function documentation is separated by a single line.\n \"\"\"\n+\n+from __future__ import annotations",
            "html_url": "https://github.com/neovim/neovim/pull/26791#discussion_r1441950510",
            "id": 1441950510,
            "in_reply_to_id": 1441662525,
            "line": 37,
            "node_id": "PRRC_kwDOAPphoM5V8msu",
            "original_commit_id": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
            "original_line": 37,
            "original_position": 13,
            "original_start_line": null,
            "path": "scripts/gen_vimdoc.py",
            "position": 13,
            "pull_request_review_id": 1804483264,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441950510/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-04T16:06:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1441950510",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "> No objections. I have some non-trivial features on the way for gen_vimdoc.py, so let's merge this and then please avoid more changes after that.\r\n\r\nI see, good to know that. Actually I was also planning to submit [another minor bugfix regarding line wrap](https://github.com/wookayin/neovim/compare/overflow%5E1...wookayin:neovim:overflow) after this being merged and other fixes to improve generation of lua types (not started working yet), but I can hold on if there is a potential conflict with yours.",
            "created_at": "2024-01-02T19:40:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/26791#issuecomment-1874464488",
            "id": 1874464488,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26791",
            "node_id": "IC_kwDOAPphoM5vug7o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874464488/reactions"
            },
            "updated_at": "2024-01-02T19:41:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874464488",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Actually I was also planning to submit [another minor bugfix regarding line wrap](https://github.com/wookayin/neovim/compare/overflow%5E1...wookayin:neovim:overflow) after this being merged\r\n\r\nThat won't conflict, PR welcome :) Nice to see that bug fixed!",
            "created_at": "2024-01-02T20:16:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/26791#issuecomment-1874500936",
            "id": 1874500936,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26791",
            "node_id": "IC_kwDOAPphoM5vup1I",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874500936/reactions"
            },
            "updated_at": "2024-01-02T20:16:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1874500936",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26791/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26791/commits",
    "created_at": "2023-12-29T13:51:28Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26791.diff",
    "draft": false,
    "head": {
        "label": "wookayin:gendoc",
        "ref": "gendoc",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/wookayin/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/wookayin/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/wookayin/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/wookayin/neovim/branches{/branch}",
            "clone_url": "https://github.com/wookayin/neovim.git",
            "collaborators_url": "https://api.github.com/repos/wookayin/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/wookayin/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/wookayin/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/wookayin/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/wookayin/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/wookayin/neovim/contributors",
            "created_at": "2022-10-30T19:40:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/wookayin/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/wookayin/neovim/downloads",
            "events_url": "https://api.github.com/repos/wookayin/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/wookayin/neovim/forks",
            "full_name": "wookayin/neovim",
            "git_commits_url": "https://api.github.com/repos/wookayin/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/wookayin/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/wookayin/neovim/git/tags{/sha}",
            "git_url": "git://github.com/wookayin/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/wookayin/neovim/hooks",
            "html_url": "https://github.com/wookayin/neovim",
            "id": 559659867,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/wookayin/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/wookayin/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/wookayin/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/wookayin/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/wookayin/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/wookayin/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/wookayin/neovim/merges",
            "milestones_url": "https://api.github.com/repos/wookayin/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIVu7Ww",
            "notifications_url": "https://api.github.com/repos/wookayin/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/wookayin/neovim/pulls{/number}",
            "pushed_at": "2024-01-08T13:24:14Z",
            "releases_url": "https://api.github.com/repos/wookayin/neovim/releases{/id}",
            "size": 245663,
            "ssh_url": "git@github.com:wookayin/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/wookayin/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/wookayin/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/wookayin/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/wookayin/neovim/subscription",
            "svn_url": "https://github.com/wookayin/neovim",
            "tags_url": "https://api.github.com/repos/wookayin/neovim/tags",
            "teams_url": "https://api.github.com/repos/wookayin/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/wookayin/neovim/git/trees{/sha}",
            "updated_at": "2022-10-30T19:25:41Z",
            "url": "https://api.github.com/repos/wookayin/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "765729a145d3d8204ff68b1da0b5bb45c70262e2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26791",
    "id": 1659913945,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26791",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "building and installing Neovim using the provided scripts",
            "id": 84723321,
            "name": "build",
            "node_id": "MDU6TGFiZWw4NDcyMzMyMQ==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/build"
        },
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "changes that are not features or bugfixes",
            "id": 106949155,
            "name": "refactor",
            "node_id": "MDU6TGFiZWwxMDY5NDkxNTU=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/refactor"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6635ec113fe69157001070e809bc5611e3d52014",
    "merged_at": "2024-01-04T12:03:12Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5i8EbZ",
    "number": 26791,
    "patch_url": "https://github.com/neovim/neovim/pull/26791.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26791/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/765729a145d3d8204ff68b1da0b5bb45c70262e2",
    "title": "refactor(gen_vimdoc): general refactoring on vimdoc generation",
    "updated_at": "2024-01-04T16:06:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26791",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin"
    }
}