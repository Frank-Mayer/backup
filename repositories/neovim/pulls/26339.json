{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26339/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26339/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26339"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26339"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26339/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26339"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b9ec7da978c2400e17fd1b20513316687f4fa6a2"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5032,
            "forks_count": 5032,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1697,
            "open_issues_count": 1697,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-03T02:01:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 241697,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71415,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-03T01:14:10Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71415,
            "watchers_count": 71415,
            "web_commit_signoff_required": false
        },
        "sha": "ce6fefbab9b6a902e725534c91ba3aa1025e5957",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Changes:\r\n  - The \"b_signcols\" structure holds a mapping from line number to number of signs on that line (excluding 0 signs).\r\n  - The \"b_signcols\" structure no longer needs to be invalidated when adding a sign, only when removing a sign from a sentinel line.\r\n  - The \"b_signcols\" structure can be validated after such a sign removal by looping over the map and checking that it no longer holds any lines of size \"b_signcols.size\". This is instead of looping over all extmarks in a buffer and counting the signs.\r\n\r\nPerformance indication:\r\n  `make functionaltest` just loops over 76 lines (and doesn't have to\r\n  count the number of signs) instead of 220 lines (having to count the\r\n  number of signs) after this change. In exchange for an (int, int) map\r\n  that grows with the number lines with signs in a buffer.",
    "closed_at": "2023-12-02T03:46:52Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26339#discussion_r1411444186"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26339"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1411444186"
                }
            },
            "author_association": "MEMBER",
            "body": "Don't you also have to shift all the lines below downwards? Likewise for deletes you need to shift all the lines below upwards.",
            "commit_id": "b9ec7da978c2400e17fd1b20513316687f4fa6a2",
            "created_at": "2023-12-01T00:11:52Z",
            "diff_hunk": "@@ -4026,65 +4025,57 @@ char *buf_spname(buf_T *buf)\n   return NULL;\n }\n \n-/// Invalidate the signcolumn if needed after deleting a sign ranging from line1 to line2.\n-void buf_signcols_del_check(buf_T *buf, linenr_T line1, linenr_T line2)\n+/// Redraw entire window \"wp\" if configured 'signcolumn' width changes\n+void win_redraw_signcols(win_T *wp)\n {\n-  linenr_T sent = buf->b_signcols.sentinel;\n-  if (sent >= line1 && sent <= line2) {\n-    // When removed sign overlaps the sentinel line, entire buffer needs to be checked.\n-    buf->b_signcols.sentinel = buf->b_signcols.size = 0;\n+  int scwidth = wp->w_scwidth;\n+  wp->w_scwidth = MAX(wp->w_minscwidth, MIN(wp->w_maxscwidth, wp->w_buffer->b_signcols.size));\n+  if (scwidth != wp->w_scwidth || (*wp->w_p_stc != NUL && wp->w_minscwidth <= SCL_NO)) {\n+    // Reset 'statuscolumn' if it has no dedicated signcolumn but it would have changed in size\n+    if (*wp->w_p_stc != NUL && wp->w_minscwidth <= SCL_NO) {\n+      wp->w_nrwidth_line_count = 0;\n+    }\n+    changed_line_abv_curs_win(wp);\n+    redraw_later(wp, UPD_NOT_VALID);\n   }\n }\n \n-/// Invalidate the signcolumn if needed after adding a sign ranging from line1 to line2.\n-void buf_signcols_add_check(buf_T *buf, linenr_T line1, linenr_T line2)\n+/// \"b_signcols\" size changed, only redraw entire window if necessary.\n+void buf_redraw_signcols(buf_T *buf, int size)\n {\n-  if (!buf->b_signcols.sentinel) {\n-    return;\n-  }\n-\n-  linenr_T sent = buf->b_signcols.sentinel;\n-  if (sent >= line1 && sent <= line2) {\n-    // If added sign overlaps sentinel line, increment without invalidating.\n-    if (buf->b_signcols.size == buf->b_signcols.max) {\n-      buf->b_signcols.max++;\n+  buf->b_signcols.size = size;\n+  FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n+    if (wp->w_buffer == buf) {\n+      win_redraw_signcols(wp);\n     }\n-    buf->b_signcols.size++;\n-    return;\n-  }\n-\n-  if (line1 < buf->b_signcols.invalid_top) {\n-    buf->b_signcols.invalid_top = line1;\n-  }\n-  if (line2 > buf->b_signcols.invalid_bot) {\n-    buf->b_signcols.invalid_bot = line2;\n   }\n }\n \n-int buf_signcols(buf_T *buf, int max)\n+/// Update \"b_signcols\" lines after deleting a sign ranging from \"line1\" to\n+/// \"line2\" and check if its size changes.\n+void buf_signcols_del_check(buf_T *buf, linenr_T line1, linenr_T line2)\n {\n-  if (!buf->b_signs_with_text) {\n-    buf->b_signcols.size = 0;\n-  } else if (max <= 1 && buf->b_signs_with_text >= (size_t)max) {\n-    buf->b_signcols.size = max;\n-  } else {\n-    linenr_T sent = buf->b_signcols.sentinel;\n-    if (!sent || max > buf->b_signcols.max) {\n-      // Recheck if the window scoped maximum 'signcolumn' is greater than the\n-      // previous maximum or if there is no sentinel line yet.\n-      buf->b_signcols.invalid_top = sent ? sent : 1;\n-      buf->b_signcols.invalid_bot = sent ? sent : buf->b_ml.ml_line_count;\n+  for (int i = line1; i <= line2; i++) {\n+    int *size = map_ref(int, int)(&buf->b_signcols.lines, i, NULL);\n+    if ((*size)-- == buf->b_signcols.size) {\n+      buf->b_signcols.valid = false;  // sign deleted from a sentinel line\n     }\n-\n-    if (buf->b_signcols.invalid_bot) {\n-      decor_validate_signcols(buf, max);\n+    if (*size == 0) {\n+      map_del(int, int)(&buf->b_signcols.lines, i, NULL);\n     }\n   }\n+}\n \n-  buf->b_signcols.max = max;\n-  buf->b_signcols.invalid_top = MAXLNUM;\n-  buf->b_signcols.invalid_bot = 0;\n-  return buf->b_signcols.size;\n+/// Update \"b_signcols\" lines after adding a sign ranging from \"line1\" to\n+/// \"line2\" and check if its size changes.\n+void buf_signcols_add_check(buf_T *buf, linenr_T line1, linenr_T line2)\n+{\n+  for (int i = line1; i <= line2; i++) {\n+    int *size = map_put_ref(int, int)(&buf->b_signcols.lines, i, NULL, NULL);",
            "html_url": "https://github.com/neovim/neovim/pull/26339#discussion_r1411444186",
            "id": 1411444186,
            "line": 4082,
            "node_id": "PRRC_kwDOAPphoM5UIO3a",
            "original_commit_id": "6a4d1e740029c729006fcdc4820a608171219d93",
            "original_line": 4082,
            "original_position": 103,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 130,
            "pull_request_review_id": 1758748162,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26339",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1411444186/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-01T00:11:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1411444186",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26339#discussion_r1411445657"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26339"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1411445657"
                }
            },
            "author_association": "MEMBER",
            "body": "This is called when signs are added/removed, not lines. But yes, the map needs to shifted for added/removed lines, this is done in `extmark_splice_impl()`.",
            "commit_id": "b9ec7da978c2400e17fd1b20513316687f4fa6a2",
            "created_at": "2023-12-01T00:14:00Z",
            "diff_hunk": "@@ -4026,65 +4025,57 @@ char *buf_spname(buf_T *buf)\n   return NULL;\n }\n \n-/// Invalidate the signcolumn if needed after deleting a sign ranging from line1 to line2.\n-void buf_signcols_del_check(buf_T *buf, linenr_T line1, linenr_T line2)\n+/// Redraw entire window \"wp\" if configured 'signcolumn' width changes\n+void win_redraw_signcols(win_T *wp)\n {\n-  linenr_T sent = buf->b_signcols.sentinel;\n-  if (sent >= line1 && sent <= line2) {\n-    // When removed sign overlaps the sentinel line, entire buffer needs to be checked.\n-    buf->b_signcols.sentinel = buf->b_signcols.size = 0;\n+  int scwidth = wp->w_scwidth;\n+  wp->w_scwidth = MAX(wp->w_minscwidth, MIN(wp->w_maxscwidth, wp->w_buffer->b_signcols.size));\n+  if (scwidth != wp->w_scwidth || (*wp->w_p_stc != NUL && wp->w_minscwidth <= SCL_NO)) {\n+    // Reset 'statuscolumn' if it has no dedicated signcolumn but it would have changed in size\n+    if (*wp->w_p_stc != NUL && wp->w_minscwidth <= SCL_NO) {\n+      wp->w_nrwidth_line_count = 0;\n+    }\n+    changed_line_abv_curs_win(wp);\n+    redraw_later(wp, UPD_NOT_VALID);\n   }\n }\n \n-/// Invalidate the signcolumn if needed after adding a sign ranging from line1 to line2.\n-void buf_signcols_add_check(buf_T *buf, linenr_T line1, linenr_T line2)\n+/// \"b_signcols\" size changed, only redraw entire window if necessary.\n+void buf_redraw_signcols(buf_T *buf, int size)\n {\n-  if (!buf->b_signcols.sentinel) {\n-    return;\n-  }\n-\n-  linenr_T sent = buf->b_signcols.sentinel;\n-  if (sent >= line1 && sent <= line2) {\n-    // If added sign overlaps sentinel line, increment without invalidating.\n-    if (buf->b_signcols.size == buf->b_signcols.max) {\n-      buf->b_signcols.max++;\n+  buf->b_signcols.size = size;\n+  FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n+    if (wp->w_buffer == buf) {\n+      win_redraw_signcols(wp);\n     }\n-    buf->b_signcols.size++;\n-    return;\n-  }\n-\n-  if (line1 < buf->b_signcols.invalid_top) {\n-    buf->b_signcols.invalid_top = line1;\n-  }\n-  if (line2 > buf->b_signcols.invalid_bot) {\n-    buf->b_signcols.invalid_bot = line2;\n   }\n }\n \n-int buf_signcols(buf_T *buf, int max)\n+/// Update \"b_signcols\" lines after deleting a sign ranging from \"line1\" to\n+/// \"line2\" and check if its size changes.\n+void buf_signcols_del_check(buf_T *buf, linenr_T line1, linenr_T line2)\n {\n-  if (!buf->b_signs_with_text) {\n-    buf->b_signcols.size = 0;\n-  } else if (max <= 1 && buf->b_signs_with_text >= (size_t)max) {\n-    buf->b_signcols.size = max;\n-  } else {\n-    linenr_T sent = buf->b_signcols.sentinel;\n-    if (!sent || max > buf->b_signcols.max) {\n-      // Recheck if the window scoped maximum 'signcolumn' is greater than the\n-      // previous maximum or if there is no sentinel line yet.\n-      buf->b_signcols.invalid_top = sent ? sent : 1;\n-      buf->b_signcols.invalid_bot = sent ? sent : buf->b_ml.ml_line_count;\n+  for (int i = line1; i <= line2; i++) {\n+    int *size = map_ref(int, int)(&buf->b_signcols.lines, i, NULL);\n+    if ((*size)-- == buf->b_signcols.size) {\n+      buf->b_signcols.valid = false;  // sign deleted from a sentinel line\n     }\n-\n-    if (buf->b_signcols.invalid_bot) {\n-      decor_validate_signcols(buf, max);\n+    if (*size == 0) {\n+      map_del(int, int)(&buf->b_signcols.lines, i, NULL);\n     }\n   }\n+}\n \n-  buf->b_signcols.max = max;\n-  buf->b_signcols.invalid_top = MAXLNUM;\n-  buf->b_signcols.invalid_bot = 0;\n-  return buf->b_signcols.size;\n+/// Update \"b_signcols\" lines after adding a sign ranging from \"line1\" to\n+/// \"line2\" and check if its size changes.\n+void buf_signcols_add_check(buf_T *buf, linenr_T line1, linenr_T line2)\n+{\n+  for (int i = line1; i <= line2; i++) {\n+    int *size = map_put_ref(int, int)(&buf->b_signcols.lines, i, NULL, NULL);",
            "html_url": "https://github.com/neovim/neovim/pull/26339#discussion_r1411445657",
            "id": 1411445657,
            "in_reply_to_id": 1411444186,
            "line": 4082,
            "node_id": "PRRC_kwDOAPphoM5UIPOZ",
            "original_commit_id": "6a4d1e740029c729006fcdc4820a608171219d93",
            "original_line": 4082,
            "original_position": 103,
            "original_start_line": null,
            "path": "src/nvim/buffer.c",
            "position": 130,
            "pull_request_review_id": 1758751920,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26339",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1411445657/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-01T00:14:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1411445657",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Makes #26275 redundant, sorry for the churn. Got curious what this would look like after [realizing](https://github.com/neovim/neovim/pull/26275#issuecomment-1830464590) what would be necessary to avoid having to count signs whenever signcols is invalidated.\r\n\r\nSeems worth it to me. One caveat being that we need to loop over the line -> sign map whenever lines are added/removed in `extmark_splice_impl()`. Perhaps that makes it not worth it, hard to say.",
            "created_at": "2023-12-01T00:09:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1834989939",
            "id": 1834989939,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5tX7lz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1834989939/reactions"
            },
            "updated_at": "2023-12-01T00:09:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1834989939",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "So the failing extmark test revealed a bug in `extmark_apply_undo()`. Fixed now, the mark should be moved to its old position before calling `buf_put_decor()`.",
            "created_at": "2023-12-01T01:02:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1835225571",
            "id": 1835225571,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5tY1Hj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1835225571/reactions"
            },
            "updated_at": "2023-12-01T01:02:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1835225571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm a little concerned about how this scales in buffers with lots of signs. e.g. a gitsigns buffer where the entire buffer is a hunk.\r\n\r\nThe long term plan was to use extranges (now merged) which provide an efficient framework for determining what marks overlap a specific line.\r\n\r\nUsing just a map seems like it would have scaling issues which is why I originally implemented the sentinel instead since it provides 90% of the benefit for 10% of the complexity.\r\n\r\nTo me, a better plan would be to store sign information like this into a separate marktree to use for validation. I discussed this with @bfredl a while ago.",
            "created_at": "2023-12-01T16:24:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1836411784",
            "id": 1836411784,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5tdWuI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836411784/reactions"
            },
            "updated_at": "2023-12-01T16:24:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836411784",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I do share those concerns, was just curious how this would look. I tend towards saying it might be worth it though.\r\n\r\n> To me, a better plan would be to store sign information like this into a separate marktree to use for validation. I discussed this with @bfredl a while ago.\r\n\r\nThis seems to go against the [plan](https://github.com/neovim/neovim/pull/26292#issuecomment-1831596199) of integrating `decor_redraw_signs()` with the main decor loop. Unless this sign tree would be filled in addition to the original marktree. At which point the map implemented here seems cheaper/less complex.",
            "created_at": "2023-12-01T16:41:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1836437931",
            "id": 1836437931,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5tddGr",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836437931/reactions"
            },
            "updated_at": "2023-12-01T18:46:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836437931",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Link to past discussion: https://github.com/neovim/neovim/pull/16897#discussion_r805166918",
            "created_at": "2023-12-01T17:21:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1836494473",
            "id": 1836494473,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5tdq6J",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836494473/reactions"
            },
            "updated_at": "2023-12-01T17:21:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836494473",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Link to past discussion: [#16897 (comment)](https://github.com/neovim/neovim/pull/16897#discussion_r805166918)\r\n\r\nThanks, that discussion seems to favor avoiding having to scan the entire marktree just for the purpose of counting the number of signs. That is precisely what this PR does, by keeping track of the number of signs on a line. The cost is just 8 bytes per line with at least 1 sign.",
            "created_at": "2023-12-01T18:23:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1836578547",
            "id": 1836578547,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5td_bz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836578547/reactions"
            },
            "updated_at": "2023-12-01T23:20:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836578547",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> To me, a better plan would be to store sign information like this into a separate marktree to use for validation. I discussed this with @bfredl a while ago.\r\n\r\nClose, but what I had in mind is to add more metadata to the existing marktree (like we can keep counts in inner nodes about what child nodes contains any signs-with-text, inline text, ect). It might be a while until I get to that (it is not strictly required but sorta connected to stuff I need to rework for 0.10 anyway), so does make sense for something like this to be used in the meanwhile.",
            "created_at": "2023-12-01T18:53:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1836616731",
            "id": 1836616731,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5teIwb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836616731/reactions"
            },
            "updated_at": "2023-12-01T18:53:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1836616731",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, I don't see a straightforward way to adjust the signcols map for a paired sign mark that is \"stretched out\" after inserted lines.\r\n\r\nIf there is a different plan to add additional metadata which can avoid having to scan the entire marktree just to count signs, perhaps it's best to go with that.",
            "created_at": "2023-12-02T03:45:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/26339#issuecomment-1837026717",
            "id": 1837026717,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
            "node_id": "IC_kwDOAPphoM5tfs2d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837026717/reactions"
            },
            "updated_at": "2023-12-02T03:47:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1837026717",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26339/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26339/commits",
    "created_at": "2023-12-01T00:05:05Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26339.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:sign",
        "ref": "sign",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2023-12-02T11:35:59Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 238727,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2022-09-14T02:39:38Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b9ec7da978c2400e17fd1b20513316687f4fa6a2",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26339",
    "id": 1624675100,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26339",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "sign/number column",
            "id": 2962322085,
            "name": "column",
            "node_id": "MDU6TGFiZWwyOTYyMzIyMDg1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/column"
        }
    ],
    "locked": false,
    "merge_commit_sha": "b319a326c61875bd54daa9432cffbce303a0f06b",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5g1pMc",
    "number": 26339,
    "patch_url": "https://github.com/neovim/neovim/pull/26339.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26339/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b9ec7da978c2400e17fd1b20513316687f4fa6a2",
    "title": "perf(column): map lines to number of attached signs",
    "updated_at": "2023-12-02T03:47:20Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26339",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal"
    }
}