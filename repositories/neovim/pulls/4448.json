{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/4448/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/4448/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/4448"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/4448"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/4448/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3157baed83b7e94f2ff92e6fd97e85dab41a1c94"
        }
    },
    "active_lock_reason": "resolved",
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5573,
            "forks_count": 5573,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1771,
            "open_issues_count": 1771,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-09T12:14:47Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 284802,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 81560,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-09-10T01:50:42Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 81560,
            "watchers_count": 81560,
            "web_commit_signoff_required": false
        },
        "sha": "09cbd6769b737e9de88e9885f19c2bd0f5fa5795",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "This PR improves paste behavior and performance.\r\n\r\n- Performance: 10x-100x faster (try pasting MB of input, or paste a lot of text with `filetype=cpp` or `filetype=ruby`)\r\n- Extensibility: users can control paste behavior by redefining `vim.paste` (Lua)\r\n- API: `nvim_paste` for UIs/clients\r\n- API: `nvim_put` inserts text (weird but true: this was difficult before)\r\n- Fixes:\r\n  - fix #3447\r\n  - fix #3566\r\n  - fix #7066\r\n  - fix #7212\r\n  - fix #7273\r\n  - fix #7455\r\n  - fix #10415\r\n\r\nTasks:\r\n\r\n- [x] implement [as callback](https://github.com/neovim/neovim/pull/4448#issuecomment-196424051) instead of pre/post autocmds\r\n- [x] Indicate paste start/stop as parameter to handler?\r\n- [x] generalize `string_to_array()` ?\r\n- [x] API: `nvim_put` #6819\r\n- [x] API: `nvim_paste`\r\n- [x] redo (dot-repeat)\r\n- [x] 'nomodifiable' buffer\r\n- [x] documentation\r\n\r\nTODO (future):\r\n\r\n- Replace/Operator-pending/Visual modes\r\n- remove 'pastetoggle' `p_pt`\r\n- Dot-repeat is slow (same behavior in Vim) because it is subject to Vim auto-indent/etc.\r\n- Mechanism for  associating a callback with a `nvim_input` chunk. #10826\r\n- `TextPutPre`/`TextPutPost` (analogs for `TextYankPost`) ?\r\n- Send paste sequences to `:terminal`\r\n  - As @ZyX-I [mentioned](https://github.com/neovim/neovim/issues/3476#issuecomment-149519446) this would also be warranted for `p`, `:put`, etc.\r\n- handle missing \"stop paste\" code (how? timeout...?) #10865",
    "closed_at": "2019-08-27T23:56:04Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55959438"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959438"
                }
            },
            "author_association": "MEMBER",
            "body": "`<CursorHold>` pseudokey doesn't exist any more (replaced by K_EVENT).\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T06:13:43Z",
            "diff_hunk": "@@ -3435,11 +3435,11 @@ getchar([expr])\t\t\t\t\t\t*getchar()*\n \t\t\t:endfunction\n <\n \t\tYou may also receive synthetic characters, such as\n-\t\t|<CursorHold>|. Often you will want to ignore this and get\n+\t\t|<LeftMouse>|. Often you will want to ignore this and get",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55959438",
            "id": 55959438,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU5NDM4",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959438/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55959618"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959618"
                }
            },
            "author_association": "MEMBER",
            "body": "Now we don't need this special-case logic in this low-level function...\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T06:17:44Z",
            "diff_hunk": "@@ -1868,14 +1866,8 @@ static int vgetorpeek(int advance)\n             }\n           }\n \n-          // Check for a key that can toggle the 'paste' option\n-          if (mp == NULL && (State & (INSERT|NORMAL))) {\n-            bool match = typebuf_match_len(ui_toggle, &mlen);\n-            if (!match && mlen != typebuf.tb_len && *p_pt != NUL) {\n-              // didn't match ui_toggle_key and didn't try the whole typebuf,\n-              // check the 'pastetoggle'\n-              match = typebuf_match_len(p_pt, &mlen);\n-            }",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55959618",
            "id": 55959618,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU5NjE4",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 29,
            "original_start_line": null,
            "path": "src/nvim/getchar.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959618/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959618",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55959832"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959832"
                }
            },
            "author_association": "MEMBER",
            "body": "@tarruda Is this skip just an optimization?\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T06:23:56Z",
            "diff_hunk": "@@ -233,9 +237,12 @@ static void tk_getkeys(TermInput *input, bool force)\n     }\n   }\n \n-  if (result != TERMKEY_RES_AGAIN || input->paste_enabled) {\n+  if (result != TERMKEY_RES_AGAIN /*|| input->paste_started */) {",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55959832",
            "id": 55959832,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU5ODMy",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 52,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959832/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55959832",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55960175"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55960175"
                }
            },
            "author_association": "MEMBER",
            "body": "@tarruda / @oni-link, Wondering if you can help my understanding. `loop_schedule()` on the \"start paste\" case (line 306) works well, because it puts the event on the main queue before any input gets processed. But for the \"stop paste\" case, I had to enqueue this `PASTEPOST_KEY` in order to guarantee that all paste data was processed before queuing the `PastePost` event. \n\n Do we currently have any better mechanism for placing an event at a precise location in the input stream (I'm guessing the answer is \"no\", hence why we still have these pseudokeys)? I also tried using a mutex, but that had problems and isn't really desirable anyways.\n\nI am wondering if it would be a good idea to provide some internal generic mechanism for placing `K_EVENT` in the input stream and associating it with a callback.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T06:32:16Z",
            "diff_hunk": "@@ -282,27 +289,56 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n-      return true;\n+  RBuffer *rbuf = input->read_stream.buffer;\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+\n+    if (enable && input->paste_started) {\n+      // Received a bogus \"paste start\" after paste was already started.\n+      return false;\n+    }\n+\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55960175",
            "id": 55960175,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYwMTc1",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 99,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55960175/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55960175",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55960334"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55960334"
                }
            },
            "author_association": "MEMBER",
            "body": "@tarruda @oni-link I tried to clarify this a bit. Is the updated comment accurate? \n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T06:35:48Z",
            "diff_hunk": "@@ -376,8 +412,8 @@ static void read_cb(Stream *stream, RBuffer *buf, size_t c, void *data,\n     }\n   } while (rbuffer_size(input->read_stream.buffer));\n   flush_input(input, true);\n-  // Make sure the next input escape sequence fits into the ring buffer\n-  // without wrap around, otherwise it could be misinterpreted.\n+  // CSI and K_SPECIAL are double-escaped later (input_enqueue).\n+  // Make sure they can fit into the ring buffer without wrap around.\n   rbuffer_reset(input->read_stream.buffer);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55960334",
            "id": 55960334,
            "line": 558,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYwMzM0",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 203,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": 171,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55960334/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55960334",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55980685"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55980685"
                }
            },
            "author_association": "MEMBER",
            "body": "No, but this probably isn't needed anymore(I don't think it is possible to have `result == TERMKEY_RES_AGAIN && input->paste_enabled` because `read_cb` will only push data up to the next `\\x1b`(esc). I'm not sure why this is there, probably an oversight or leftover from previous code.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T10:31:55Z",
            "diff_hunk": "@@ -233,9 +237,12 @@ static void tk_getkeys(TermInput *input, bool force)\n     }\n   }\n \n-  if (result != TERMKEY_RES_AGAIN || input->paste_enabled) {\n+  if (result != TERMKEY_RES_AGAIN /*|| input->paste_started */) {",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55980685",
            "id": 55980685,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTgwNjg1",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 52,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55980685/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55980685",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55981598"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55981598"
                }
            },
            "author_association": "MEMBER",
            "body": "> Do we currently have any better mechanism for placing an event at a precise location in the input stream (I'm guessing the answer is \"no\", hence why we still have these pseudokeys)\n\nNo we don't.\n\n> I am wondering if it would be a good idea to provide some internal generic mechanism for placing K_EVENT in the input stream and associating it with a callback.\n\nK_EVENT is not meant to be used by UIs, it is only a general mechanism for waking nvim when an asynchronous event happens. An UI placing a bunch of keys in the input stream is an asynchronous event, but not \"certain key gets processed\"(And the only use case I could think for this is toggling paste, so I'm not sure it would be useful)\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T10:40:44Z",
            "diff_hunk": "@@ -282,27 +289,56 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n-      return true;\n+  RBuffer *rbuf = input->read_stream.buffer;\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+\n+    if (enable && input->paste_started) {\n+      // Received a bogus \"paste start\" after paste was already started.\n+      return false;\n+    }\n+\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55981598",
            "id": 55981598,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTgxNTk4",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 99,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55981598/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55981598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55982470"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55982470"
                }
            },
            "author_association": "MEMBER",
            "body": "No, `input->read_stream.buffer` is only read by the loop above. There could be an multi-byte key sequence that is trimmed by the end of the buffer(wrapping around to the beginning), but `termkey_push_bytes` is not aware of that, so it could misinterpret the key. `rbuffer_reset` simply moves the data so it is all in contiguous memory.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T10:49:19Z",
            "diff_hunk": "@@ -376,8 +412,8 @@ static void read_cb(Stream *stream, RBuffer *buf, size_t c, void *data,\n     }\n   } while (rbuffer_size(input->read_stream.buffer));\n   flush_input(input, true);\n-  // Make sure the next input escape sequence fits into the ring buffer\n-  // without wrap around, otherwise it could be misinterpreted.\n+  // CSI and K_SPECIAL are double-escaped later (input_enqueue).\n+  // Make sure they can fit into the ring buffer without wrap around.\n   rbuffer_reset(input->read_stream.buffer);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55982470",
            "id": 55982470,
            "line": 558,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTgyNDcw",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 203,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": 171,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55982470/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55982470",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r55991878"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/55991878"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "`\\xE` looks weird, better write `\\x0E`.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T12:22:49Z",
            "diff_hunk": "@@ -328,6 +326,9 @@ int main(int argc, char **argv)\n                  \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, '')})\");\n #undef PROTO\n \n+  do_cmdline_cmd(\"autocmd PastePre  * set paste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xEi','n')|endif\");\n+  do_cmdline_cmd(\"autocmd PastePost * set nopaste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xE','n')|endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r55991878",
            "id": 55991878,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTkxODc4",
            "original_commit_id": "eab67f8788aba25ce055bc105f58aee6cec830ea",
            "original_line": null,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55991878/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/55991878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56011037"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56011037"
                }
            },
            "author_association": "MEMBER",
            "body": "> \"certain key gets processed\"(And the only use case I could think for this is toggling paste, so I'm not sure it would be useful)\n\n@tarruda So does that mean we can safely use `loop_schedule()` to schedule FocusGained/FocusLost instead of the K_FOCUSGAINED/K_FOCUSLOST?\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T14:44:27Z",
            "diff_hunk": "@@ -282,27 +289,56 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n-      return true;\n+  RBuffer *rbuf = input->read_stream.buffer;\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+\n+    if (enable && input->paste_started) {\n+      // Received a bogus \"paste start\" after paste was already started.\n+      return false;\n+    }\n+\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56011037",
            "id": 56011037,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDExMDM3",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 99,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56011037/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56011037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56025669"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56025669"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Though no, it is better to write this as `\\\"\\\\<C-\\\\>\\\\<C-n>\\\"`.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T16:08:44Z",
            "diff_hunk": "@@ -328,6 +326,9 @@ int main(int argc, char **argv)\n                  \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, '')})\");\n #undef PROTO\n \n+  do_cmdline_cmd(\"autocmd PastePre  * set paste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xEi','n')|endif\");\n+  do_cmdline_cmd(\"autocmd PastePost * set nopaste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xE','n')|endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56025669",
            "id": 56025669,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI1NjY5",
            "original_commit_id": "eab67f8788aba25ce055bc105f58aee6cec830ea",
            "original_line": null,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56025669/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56025669",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56026386"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56026386"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "And I would also suggest to create autocmd group `__Builtin` for all built-in autocommands (currently only this one and term://* BufReadCmd), so that they are easy to identify, making user aware of what he sees and, possibly, changes.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T16:12:49Z",
            "diff_hunk": "@@ -328,6 +326,9 @@ int main(int argc, char **argv)\n                  \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, '')})\");\n #undef PROTO\n \n+  do_cmdline_cmd(\"autocmd PastePre  * set paste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xEi','n')|endif\");\n+  do_cmdline_cmd(\"autocmd PastePost * set nopaste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xE','n')|endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56026386",
            "id": 56026386,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI2Mzg2",
            "original_commit_id": "eab67f8788aba25ce055bc105f58aee6cec830ea",
            "original_line": null,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56026386/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56026386",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56034025"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56034025"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Regex is better written as `stridx('ct', mode()) == -1` or `mode() !~# '[ct]'`.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T16:53:49Z",
            "diff_hunk": "@@ -328,6 +326,9 @@ int main(int argc, char **argv)\n                  \"'\\\\c\\\\m\" PROTO \"\\\\(.\\\\{-}\\\\)//'), 1, '')})\");\n #undef PROTO\n \n+  do_cmdline_cmd(\"autocmd PastePre  * set paste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xEi','n')|endif\");\n+  do_cmdline_cmd(\"autocmd PastePost * set nopaste|if mode()!~#'c\\\\|t'|call feedkeys('\\x1C\\xE','n')|endif\");",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56034025",
            "id": 56034025,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDM0MDI1",
            "original_commit_id": "eab67f8788aba25ce055bc105f58aee6cec830ea",
            "original_line": null,
            "original_position": 14,
            "original_start_line": null,
            "path": "src/nvim/main.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56034025/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56034025",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56034244"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56034244"
                }
            },
            "author_association": "MEMBER",
            "body": "Oh, I get it: this problem occurs because of `rbuffer_read_ptr()` exposing the raw buffer to callers (defeating the ring-buffer abstraction).\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T16:55:00Z",
            "diff_hunk": "@@ -376,8 +412,8 @@ static void read_cb(Stream *stream, RBuffer *buf, size_t c, void *data,\n     }\n   } while (rbuffer_size(input->read_stream.buffer));\n   flush_input(input, true);\n-  // Make sure the next input escape sequence fits into the ring buffer\n-  // without wrap around, otherwise it could be misinterpreted.\n+  // CSI and K_SPECIAL are double-escaped later (input_enqueue).\n+  // Make sure they can fit into the ring buffer without wrap around.\n   rbuffer_reset(input->read_stream.buffer);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56034244",
            "id": 56034244,
            "line": 558,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDM0MjQ0",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 203,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": 171,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56034244/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56034244",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56035929"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56035929"
                }
            },
            "author_association": "MEMBER",
            "body": "> @tarruda So does that mean we can safely use loop_schedule() to schedule FocusGained/FocusLost instead of the K_FOCUSGAINED/K_FOCUSLOST?\n\nPossibly yes. I may be missing something, but FocusGained/FocusLost doesn't seem to be events that needs to be handled at an exact point during input processing.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T17:04:16Z",
            "diff_hunk": "@@ -282,27 +289,56 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n-      return true;\n+  RBuffer *rbuf = input->read_stream.buffer;\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+\n+    if (enable && input->paste_started) {\n+      // Received a bogus \"paste start\" after paste was already started.\n+      return false;\n+    }\n+\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56035929",
            "id": 56035929,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDM1OTI5",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 99,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56035929/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56035929",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56055283"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56055283"
                }
            },
            "author_association": "MEMBER",
            "body": "What should happen if \"stop paste\" is never received? A timeout?\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T18:53:21Z",
            "diff_hunk": "@@ -0,0 +1,178 @@\n+-- TUI tests for \"bracketed paste\" mode.\n+-- http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Bracketed-Paste-Mode\n+local helpers = require('test.functional.helpers')\n+local child_tui = require('test.functional.tui.child_session')\n+local execute = helpers.execute\n+local nvim_dir = helpers.nvim_dir\n+local eval = helpers.eval\n+local eq = helpers.eq\n+local feed_tui = child_tui.feed_data\n+\n+describe('tui paste', function()\n+  local screen\n+\n+  before_each(function()\n+    helpers.clear()\n+    screen = child_tui.screen_setup(0, '[\"'..helpers.nvim_prog..\n+      '\", \"-u\", \"NONE\", \"-i\", \"NONE\", \"--cmd\", \"set noswapfile\"]')\n+\n+    -- Pasting can be really slow in the TUI, especially in ASAN.\n+    screen.timeout = 60000\n+\n+    screen:expect([[\n+      {1: }                                                 |\n+      ~                                                 |\n+      ~                                                 |\n+      ~                                                 |\n+      [No Name]                                         |\n+                                                        |\n+      -- TERMINAL --                                    |\n+    ]])\n+  end)\n+\n+  after_each(function()\n+    screen:detach()\n+  end)\n+\n+  local function setup_harness()\n+    -- Delete the default PastePre/PastePost autocmds.\n+    feed_tui(\":autocmd! PastePre,PastePost\\n\")\n+\n+    -- Set up test handlers.\n+    feed_tui(\":autocmd PastePre * \"..\n+      \"call feedkeys('iPastePre mode:'.mode(),'n')\\n\")\n+    feed_tui(\":autocmd PastePost * \"..\n+      \"call feedkeys('PastePost mode:'.mode(),'n')\\n\")\n+  end\n+\n+  it('handles long bursts of input', function()\n+    execute('set ruler')\n+    local t = {}\n+    for i = 1, 3000 do\n+      t[i] = 'item ' .. tostring(i)\n+    end\n+    feed_tui('i\\027[200~')\n+    feed_tui(table.concat(t, '\\n'))\n+    feed_tui('\\027[201~')\n+    screen:expect([[\n+      item 2997                                         |\n+      item 2998                                         |\n+      item 2999                                         |\n+      item 3000{1: }                                        |\n+      [No Name] [+]                   3000,10        Bot|\n+      -- INSERT --                                      |\n+      -- TERMINAL --                                    |\n+    ]])\n+  end)\n+\n+  it('raises PastePre, PastePost in normal-mode', function()\n+    setup_harness()\n+\n+    -- Send the \"start paste\" sequence.\n+    feed_tui(\"\\027[200~\")\n+    feed_tui(\"\\npasted from terminal (1)\\npasted from terminal (2)\\n\")\n+    -- Send the \"stop paste\" sequence.\n+    feed_tui(\"\\027[201~\")\n+\n+    screen:expect([[\n+      PastePre mode:n                                   |\n+      pasted from terminal (1)                          |\n+      pasted from terminal (2)                          |\n+      PastePost mode:i{1: }                                 |\n+      [No Name] [+]                                     |\n+      -- INSERT --                                      |\n+      -- TERMINAL --                                    |\n+    ]])\n+  end)\n+\n+  it('ignores spurious \"start paste\" sequence', function()\n+    setup_harness()\n+    -- If multiple \"start paste\" sequences are sent without a corresponding\n+    -- \"stop paste\" sequence, only the first occurrence should be recognized.\n+\n+    -- Send the \"start paste\" sequence.\n+    feed_tui(\"\\027[200~\")\n+    feed_tui(\"\\027[200~\")\n+    feed_tui(\"\\npasted from terminal (1)\\npasted from terminal (2)\\n\")\n+    -- Send the \"stop paste\" sequence.\n+    feed_tui(\"\\027[201~\")\n+\n+    screen:expect([[\n+      PastePre mode:n                                   |\n+      pasted from terminal (1)                          |\n+      pasted from terminal (2)                          |\n+      PastePost mode:i{1: }                                 |\n+      [No Name] [+]                                     |\n+      -- INSERT --                                      |\n+      -- TERMINAL --                                    |\n+    ]])\n+  end)\n+\n+  it('raises PastePre, PastePost in command-mode', function()\n+    -- The default PastePre/PastePost handlers set the 'paste' option. To test,\n+    -- we define a command-mode map, then assert that the mapping was ignored\n+    -- during paste.\n+    feed_tui(\":cnoremap st XXX\\n\")\n+\n+    feed_tui(\":not pasted\")\n+\n+    -- Paste did not start, so the mapping _should_ apply.\n+    screen:expect([[\n+                                                        |\n+      ~                                                 |\n+      ~                                                 |\n+      ~                                                 |\n+      [No Name]                                         |\n+      :not paXXXed{1: }                                     |\n+      -- TERMINAL --                                    |\n+    ]])\n+\n+    feed_tui(\"\\003\")      -- CTRL-C\n+    feed_tui(\":\")\n+    feed_tui(\"\\027[200~\") -- Send the \"start paste\" sequence.\n+    feed_tui(\"pasted\")\n+\n+    -- Paste started, so the mapping should _not_ apply.\n+    screen:expect([[\n+                                                        |\n+      ~                                                 |\n+      ~                                                 |\n+      ~                                                 |\n+      [No Name]                                         |\n+      :pasted{1: }                                          |\n+      -- TERMINAL --                                    |\n+    ]])\n+\n+    feed_tui(\"\\003\")      -- CTRL-C\n+    feed_tui(\":\")\n+    feed_tui(\"\\027[201~\") -- Send the \"stop paste\" sequence.\n+    feed_tui(\"not pasted\")\n+\n+    -- Paste stopped, so the mapping _should_ apply.\n+    screen:expect([[\n+                                                        |\n+      ~                                                 |\n+      ~                                                 |\n+      ~                                                 |\n+      [No Name]                                         |\n+      :not paXXXed{1: }                                     |\n+      -- TERMINAL --                                    |\n+    ]])\n+\n+  end)\n+\n+  -- TODO\n+  it('sets undo-point after consecutive pastes', function()\n+  end)\n+\n+  -- TODO\n+  it('handles missing \"stop paste\" sequence', function()\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56055283",
            "id": 56055283,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDU1Mjgz",
            "original_commit_id": "9b498b36742bf4d712dd922518a079b921277a9a",
            "original_line": null,
            "original_position": 170,
            "original_start_line": null,
            "path": "test/functional/tui/paste_spec.lua",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56055283/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56055283",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56056598"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56056598"
                }
            },
            "author_association": "MEMBER",
            "body": "@Zyx-I does this look right to you?\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-14T19:01:30Z",
            "diff_hunk": "@@ -282,27 +283,44 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n+  RBuffer *rbuf = input->read_stream.buffer;\n+\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+\n+    if (enable && input->paste_started) {\n+      // Bogus \"paste start\"; forward it.\n+      enqueue_input(input, \"<C-v><Esc>200~\", sizeof(\"<C-v><Esc>200~\") - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56056598",
            "id": 56056598,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDU2NTk4",
            "original_commit_id": "015c739fec754d344d08291a36443311fe28ba46",
            "original_line": null,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56056598/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56056598",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56115562"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56115562"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Why not simply `return false` and let the cycle handle the rest? You in any case need some kind of escaping for special characters there.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-15T05:04:06Z",
            "diff_hunk": "@@ -282,27 +283,44 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n+  RBuffer *rbuf = input->read_stream.buffer;\n+\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+\n+    if (enable && input->paste_started) {\n+      // Bogus \"paste start\"; forward it.\n+      enqueue_input(input, \"<C-v><Esc>200~\", sizeof(\"<C-v><Esc>200~\") - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56115562",
            "id": 56115562,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE1NTYy",
            "original_commit_id": "015c739fec754d344d08291a36443311fe28ba46",
            "original_line": null,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56115562/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56115562",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56115720"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56115720"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "By the way, is it allowed to call non-API functions from TUI at all? When I was creating my example with callbacks I assumed that TUI should be considered “external” and thus only API and “utility” (i.e. rbuffer, memory functions, etc) functions should be used and thus my example constructed an Object and not a typval_T.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-15T05:08:31Z",
            "diff_hunk": "@@ -282,27 +283,45 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n+  RBuffer *rbuf = input->read_stream.buffer;\n+\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+\n+    if (enable && input->paste_started) {\n+      // Bogus \"paste start\"; forward it.\n+      enqueue_input(input, \"<C-v><Esc>200~\", sizeof(\"<C-v><Esc>200~\") - 1);\n+      return true;\n+    } else if (!enable && !input->paste_started) {\n+      // Bogus \"paste stop\"; ignore it.\n       return true;\n     }\n-    enqueue_input(input, PASTETOGGLE_KEY, sizeof(PASTETOGGLE_KEY) - 1);\n-    input->paste_enabled = enable;\n+\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      flush_input(input, true);\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);\n+    }\n     return true;\n   }\n   return false;\n }\n \n+static void apply_pastepre(void **argv)  // MAIN thread\n+{\n+  apply_autocmds(EVENT_PASTEPRE, NULL, NULL, false, curbuf);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56115720",
            "id": 56115720,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE1NzIw",
            "original_commit_id": "02494e5ab9edd4cd49100373ba0fb15befcec400",
            "original_line": null,
            "original_position": 110,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56115720/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56115720",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56116005"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56116005"
                }
            },
            "author_association": "MEMBER",
            "body": "This is scheduled to run on the main thread, but using API is probably preferable.\n\nI'm running into timing (or other) issues on travis, so this PR is stalled anyways.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-15T05:16:16Z",
            "diff_hunk": "@@ -282,27 +283,45 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n+  RBuffer *rbuf = input->read_stream.buffer;\n+\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+\n+    if (enable && input->paste_started) {\n+      // Bogus \"paste start\"; forward it.\n+      enqueue_input(input, \"<C-v><Esc>200~\", sizeof(\"<C-v><Esc>200~\") - 1);\n+      return true;\n+    } else if (!enable && !input->paste_started) {\n+      // Bogus \"paste stop\"; ignore it.\n       return true;\n     }\n-    enqueue_input(input, PASTETOGGLE_KEY, sizeof(PASTETOGGLE_KEY) - 1);\n-    input->paste_enabled = enable;\n+\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      flush_input(input, true);\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);\n+    }\n     return true;\n   }\n   return false;\n }\n \n+static void apply_pastepre(void **argv)  // MAIN thread\n+{\n+  apply_autocmds(EVENT_PASTEPRE, NULL, NULL, false, curbuf);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56116005",
            "id": 56116005,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE2MDA1",
            "original_commit_id": "02494e5ab9edd4cd49100373ba0fb15befcec400",
            "original_line": null,
            "original_position": 110,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56116005/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56116005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56117718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56117718"
                }
            },
            "author_association": "MEMBER",
            "body": "> Why not simply return false and let the cycle handle the rest?\n\nThat's what I did originally, but it did not return anything. If I am reading the logic correctly:\n- With the `rbuffer_consumed()` call on line 292, we must manually enqueue something (line 296). \n- Or _without_ `rbuffer_consumed()`, the `RBUFFER_EACH` check on line 366 would loop back to here.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-15T05:48:49Z",
            "diff_hunk": "@@ -282,27 +283,44 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n+  RBuffer *rbuf = input->read_stream.buffer;\n+\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+\n+    if (enable && input->paste_started) {\n+      // Bogus \"paste start\"; forward it.\n+      enqueue_input(input, \"<C-v><Esc>200~\", sizeof(\"<C-v><Esc>200~\") - 1);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56117718",
            "id": 56117718,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTE3NzE4",
            "original_commit_id": "015c739fec754d344d08291a36443311fe28ba46",
            "original_line": null,
            "original_position": 87,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56117718/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56117718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r56200559"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/56200559"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "When I asked about allowed I did not mean _technical_ reasons not to call `apply_autocmds`. I talked about architectural issues, even if you call `vim_doautocmd(STATIC_CSTR_AS_STRING(\"PastePre\"), STATIC_CSTR_AS_STRING(\"\") /* group */, STATIC_CSTR_AS_STRING(\"\") /* fname */, BOOLEAN_OBJ(false).data.boolean /* nomodeline */, &err)` (note I did not suggest using `vim_command` because I do not like the idea; also in any case every command functionality will eventually use API) this still needs to be in the main thread because here you are using a C function avoiding events dispatcher.\n",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2016-03-15T17:03:34Z",
            "diff_hunk": "@@ -282,27 +283,45 @@ static bool handle_focus_event(TermInput *input)\n \n static bool handle_bracketed_paste(TermInput *input)\n {\n-  if (rbuffer_size(input->read_stream.buffer) > 5 &&\n-      (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n-       !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n-    bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n-    // Advance past the sequence\n-    rbuffer_consumed(input->read_stream.buffer, 6);\n-    if (input->paste_enabled == enable) {\n+  RBuffer *rbuf = input->read_stream.buffer;\n+\n+  if (rbuffer_size(rbuf) > 5\n+      && (!rbuffer_cmp(rbuf, \"\\x1b[200~\", 6)\n+          || !rbuffer_cmp(rbuf, \"\\x1b[201~\", 6))) {\n+    bool enable = *rbuffer_get(rbuf, 4) == '0';\n+    rbuffer_consumed(rbuf, 6);  // Advance past the sequence\n+\n+    if (enable && input->paste_started) {\n+      // Bogus \"paste start\"; forward it.\n+      enqueue_input(input, \"<C-v><Esc>200~\", sizeof(\"<C-v><Esc>200~\") - 1);\n+      return true;\n+    } else if (!enable && !input->paste_started) {\n+      // Bogus \"paste stop\"; ignore it.\n       return true;\n     }\n-    enqueue_input(input, PASTETOGGLE_KEY, sizeof(PASTETOGGLE_KEY) - 1);\n-    input->paste_enabled = enable;\n+\n+    input->paste_started = enable;\n+    if (enable) {\n+      loop_schedule(&loop, event_create(1, apply_pastepre, 0));\n+    } else {\n+      flush_input(input, true);\n+      enqueue_input(input, PASTEPOST_KEY, sizeof(PASTEPOST_KEY) - 1);\n+    }\n     return true;\n   }\n   return false;\n }\n \n+static void apply_pastepre(void **argv)  // MAIN thread\n+{\n+  apply_autocmds(EVENT_PASTEPRE, NULL, NULL, false, curbuf);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r56200559",
            "id": 56200559,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjAwNTU5",
            "original_commit_id": "02494e5ab9edd4cd49100373ba0fb15befcec400",
            "original_line": null,
            "original_position": 110,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": null,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56200559/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/56200559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r305734302"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/305734302"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Missing handling of `err` being set?",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-07-22T08:47:08Z",
            "diff_hunk": "@@ -102,17 +102,65 @@ static void tinput_done_event(void **argv)\n   input_done();\n }\n \n+static Array string_to_array(const String input)\n+{\n+  Array ret = { .size = 0, .items = NULL };\n+  for (size_t i = 0; i < input.size; i++) {\n+    const char *const start = input.data + i;\n+    const char *const end = xmemscan(start, NL, input.size - i);\n+    i += (size_t) (end - start);\n+    ret.size++;\n+  }\n+  ret.items = xmalloc(ret.size * sizeof(*ret.items));\n+  size_t array_idx = 0;\n+  for (size_t i = 0; i < input.size; i++) {\n+    const char *const start = input.data + i;\n+    const size_t line_len\n+        = (size_t) ((char *) xmemscan(start, NL, input.size - i)\n+                                      - start);\n+    i += line_len;\n+\n+    String item = {\n+      .size = line_len,\n+      .data = xmemdupz(start, line_len),\n+    };\n+    memchrsub(item.data, NUL, NL, line_len);\n+    ret.items[array_idx++] = STRING_OBJ(item);\n+  }\n+  ret.capacity = ret.size;\n+\n+  return ret;\n+}\n+\n static void tinput_wait_enqueue(void **argv)\n {\n   TermInput *input = argv[0];\n   RBUFFER_UNTIL_EMPTY(input->key_buffer, buf, len) {\n-    size_t consumed = input_enqueue((String){.data = buf, .size = len});\n-    if (consumed) {\n-      rbuffer_consumed(input->key_buffer, consumed);\n-    }\n-    rbuffer_reset(input->key_buffer);\n-    if (consumed < len) {\n-      break;\n+    const String keys = { .data = buf, .size = len };\n+    if (input->paste_enabled) {\n+      Object keys_array = ARRAY_OBJ(string_to_array(keys));\n+      Array args = { .capacity = 1, .size = 1, .items = &keys_array };\n+      Error err = ERROR_INIT;\n+      Object fret = nvim_call_function(STATIC_CSTR_AS_STRING(\"PasteCallback\"),\n+                                       args, &err);\n+      if ((fret.type == kObjectTypeInteger && fret.data.integer)\n+          || (fret.type == kObjectTypeBoolean && fret.data.boolean)\n+          || (fret.type == kObjectTypeString && fret.data.string.size)) {\n+        input->paste_enabled = false;\n+      }\n+      api_free_object(fret);",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r305734302",
            "id": 305734302,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMwNTczNDMwMg==",
            "original_commit_id": "342043e6713b53d3638a0d8d13428da52f7a6d70",
            "original_line": 144,
            "original_position": 57,
            "original_start_line": null,
            "path": "src/nvim/tui/input.c",
            "position": null,
            "pull_request_review_id": 264675585,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/305734302/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/305734302",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2077655?v=4",
                "events_url": "https://api.github.com/users/oni-link/events{/privacy}",
                "followers_url": "https://api.github.com/users/oni-link/followers",
                "following_url": "https://api.github.com/users/oni-link/following{/other_user}",
                "gists_url": "https://api.github.com/users/oni-link/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/oni-link",
                "id": 2077655,
                "login": "oni-link",
                "node_id": "MDQ6VXNlcjIwNzc2NTU=",
                "organizations_url": "https://api.github.com/users/oni-link/orgs",
                "received_events_url": "https://api.github.com/users/oni-link/received_events",
                "repos_url": "https://api.github.com/users/oni-link/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/oni-link/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/oni-link/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/oni-link"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315631328"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315631328"
                }
            },
            "author_association": "MEMBER",
            "body": "`<LeftMouse>` is user input, just like `<F10>` or any other special key without canonical unicode representation, of which there are many. Seems weird to ignore only it specifically.  CursorHold needed extra treatment here because it was generated by nvim without user intervention so `getchar()` terminated early, other special chars do not have this problem.",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T11:10:10Z",
            "diff_hunk": "@@ -3435,11 +3435,11 @@ getchar([expr])\t\t\t\t\t\t*getchar()*\n \t\t\t:endfunction\n <\n \t\tYou may also receive synthetic characters, such as\n-\t\t|<CursorHold>|. Often you will want to ignore this and get\n+\t\t|<LeftMouse>|. Often you will want to ignore this and get",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315631328",
            "id": 315631328,
            "in_reply_to_id": 55959438,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTYzMTMyOA==",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": 277091201,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315631328/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315631328",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315640996"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315640996"
                }
            },
            "author_association": "MEMBER",
            "body": "should not be needed (perhaps `nvim_put` lack a call to mark buffer as changed?)",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T11:37:40Z",
            "diff_hunk": "@@ -93,6 +93,21 @@ local function _os_proc_children(ppid)\n   return children\n end\n \n+-- Default paste function.\n+local function _paste(lines)\n+  -- local eof = (lines == {''})\n+  local call = vim.api.nvim_call_function\n+  local mode = call('mode', {})\n+  local curline = call('line', {'.'})\n+  -- vim.api.nvim_set_option('paste', true)\n+  vim.api.nvim_put(lines, 'c', false)\n+  -- vim.api.nvim_set_option('paste', false)\n+  -- TODO: do not redraw (slow!) until paste is finished.\n+  -- if eof then\n+  vim.api.nvim_command('redraw')",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315640996",
            "id": 315640996,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTY0MDk5Ng==",
            "original_commit_id": "ca61cd4fabfd8d28126a40582ce061e38f449622",
            "original_line": 107,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/lua/vim.lua",
            "position": null,
            "pull_request_review_id": 277103496,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315640996/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315640996",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315642584"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315642584"
                }
            },
            "author_association": "MEMBER",
            "body": "Doesn't seem so, `do_put` already calls `changed_lines` (which schedules any window containing the buffer to be redrawn already).",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T11:42:27Z",
            "diff_hunk": "@@ -93,6 +93,21 @@ local function _os_proc_children(ppid)\n   return children\n end\n \n+-- Default paste function.\n+local function _paste(lines)\n+  -- local eof = (lines == {''})\n+  local call = vim.api.nvim_call_function\n+  local mode = call('mode', {})\n+  local curline = call('line', {'.'})\n+  -- vim.api.nvim_set_option('paste', true)\n+  vim.api.nvim_put(lines, 'c', false)\n+  -- vim.api.nvim_set_option('paste', false)\n+  -- TODO: do not redraw (slow!) until paste is finished.\n+  -- if eof then\n+  vim.api.nvim_command('redraw')",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315642584",
            "id": 315642584,
            "in_reply_to_id": 315640996,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTY0MjU4NA==",
            "original_commit_id": "ca61cd4fabfd8d28126a40582ce061e38f449622",
            "original_line": 107,
            "original_position": 26,
            "original_start_line": null,
            "path": "src/nvim/lua/vim.lua",
            "position": null,
            "pull_request_review_id": 277105604,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315642584/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315642584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315655589"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315655589"
                }
            },
            "author_association": "MEMBER",
            "body": "Good point. Maybe we can remove this blurb from the docs?",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T12:17:38Z",
            "diff_hunk": "@@ -3435,11 +3435,11 @@ getchar([expr])\t\t\t\t\t\t*getchar()*\n \t\t\t:endfunction\n <\n \t\tYou may also receive synthetic characters, such as\n-\t\t|<CursorHold>|. Often you will want to ignore this and get\n+\t\t|<LeftMouse>|. Often you will want to ignore this and get",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315655589",
            "id": 315655589,
            "in_reply_to_id": 55959438,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTY1NTU4OQ==",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": 277122603,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315655589/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315655589",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315657444"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315657444"
                }
            },
            "author_association": "MEMBER",
            "body": "I think so. The concrete examples above of how to actually _handle_ pseudokeys (including mouse) should be enough.",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T12:22:33Z",
            "diff_hunk": "@@ -3435,11 +3435,11 @@ getchar([expr])\t\t\t\t\t\t*getchar()*\n \t\t\t:endfunction\n <\n \t\tYou may also receive synthetic characters, such as\n-\t\t|<CursorHold>|. Often you will want to ignore this and get\n+\t\t|<LeftMouse>|. Often you will want to ignore this and get",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315657444",
            "id": 315657444,
            "in_reply_to_id": 55959438,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTY1NzQ0NA==",
            "original_commit_id": "4c40891dae03200323a81523481881be91c4b473",
            "original_line": null,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/doc/eval.txt",
            "position": null,
            "pull_request_review_id": 277125052,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315657444/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315657444",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315837335"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315837335"
                }
            },
            "author_association": "MEMBER",
            "body": "this test and the `paste: exactly 64 bytes` test have strange failures. The screen failure shows out-of-order lines, but I think this is a display/refresh issue. Logging shows that the lines are received by `nvim_put` in the correct order.",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T18:23:54Z",
            "diff_hunk": "@@ -197,26 +201,97 @@ describe('TUI', function()\n     ]])\n   end)\n \n-  it('can handle arbitrarily long bursts of input', function()\n-    -- Need extra time for this test, specially in ASAN.\n-    screen.timeout = 60000\n-    feed_command('set ruler')\n+  it('paste: big burst of input', function()",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315837335",
            "id": 315837335,
            "line": 441,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzNzMzNQ==",
            "original_commit_id": "fd08cd6d3ed99024f54e0e7e8a87fc31181dcc1e",
            "original_line": 441,
            "original_position": 88,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 359,
            "pull_request_review_id": 277355323,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315837335/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315837335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315839251"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315839251"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Also locally for you?  (they work for me)",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T18:28:06Z",
            "diff_hunk": "@@ -197,26 +201,97 @@ describe('TUI', function()\n     ]])\n   end)\n \n-  it('can handle arbitrarily long bursts of input', function()\n-    -- Need extra time for this test, specially in ASAN.\n-    screen.timeout = 60000\n-    feed_command('set ruler')\n+  it('paste: big burst of input', function()",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315839251",
            "id": 315839251,
            "in_reply_to_id": 315837335,
            "line": 441,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzOTI1MQ==",
            "original_commit_id": "fd08cd6d3ed99024f54e0e7e8a87fc31181dcc1e",
            "original_line": 441,
            "original_position": 88,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 359,
            "pull_request_review_id": 277357797,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315839251/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315839251",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/9766?v=4",
                "events_url": "https://api.github.com/users/blueyed/events{/privacy}",
                "followers_url": "https://api.github.com/users/blueyed/followers",
                "following_url": "https://api.github.com/users/blueyed/following{/other_user}",
                "gists_url": "https://api.github.com/users/blueyed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/blueyed",
                "id": 9766,
                "login": "blueyed",
                "node_id": "MDQ6VXNlcjk3NjY=",
                "organizations_url": "https://api.github.com/users/blueyed/orgs",
                "received_events_url": "https://api.github.com/users/blueyed/received_events",
                "repos_url": "https://api.github.com/users/blueyed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/blueyed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/blueyed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/blueyed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315839723"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315839723"
                }
            },
            "author_association": "MEMBER",
            "body": "Does the buffer contents look ok afterwards?",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T18:29:04Z",
            "diff_hunk": "@@ -197,26 +201,97 @@ describe('TUI', function()\n     ]])\n   end)\n \n-  it('can handle arbitrarily long bursts of input', function()\n-    -- Need extra time for this test, specially in ASAN.\n-    screen.timeout = 60000\n-    feed_command('set ruler')\n+  it('paste: big burst of input', function()",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315839723",
            "id": 315839723,
            "in_reply_to_id": 315837335,
            "line": 441,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTgzOTcyMw==",
            "original_commit_id": "fd08cd6d3ed99024f54e0e7e8a87fc31181dcc1e",
            "original_line": 441,
            "original_position": 88,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 359,
            "pull_request_review_id": 277358402,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315839723/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315839723",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315842965"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315842965"
                }
            },
            "author_association": "MEMBER",
            "body": "> Also locally for you? (they work for me)\r\n\r\nSometimes. It's random.\r\n\r\n> Does the buffer contents look ok afterwards?\r\n\r\nSince it's a child Nvim can't use `helpers.expect()`. I will check by ~~writing to a file~~ connecting to the child session. d708dcb",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T18:36:21Z",
            "diff_hunk": "@@ -197,26 +201,97 @@ describe('TUI', function()\n     ]])\n   end)\n \n-  it('can handle arbitrarily long bursts of input', function()\n-    -- Need extra time for this test, specially in ASAN.\n-    screen.timeout = 60000\n-    feed_command('set ruler')\n+  it('paste: big burst of input', function()",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315842965",
            "id": 315842965,
            "in_reply_to_id": 315837335,
            "line": 441,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg0Mjk2NQ==",
            "original_commit_id": "fd08cd6d3ed99024f54e0e7e8a87fc31181dcc1e",
            "original_line": 441,
            "original_position": 88,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 359,
            "pull_request_review_id": 277362584,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315842965/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315842965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315895531"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315895531"
                }
            },
            "author_association": "MEMBER",
            "body": "Doing `PUT_CURSEND` always (d708dcb) seems to fix it. I guess the cursor placement depends on redraws which may be skipped/deferred? And this can probably be forced `check_cursor()`? But maybe it's fine if `nvim_put` always does `PUT_CURSEND`.",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T20:47:17Z",
            "diff_hunk": "@@ -197,26 +201,97 @@ describe('TUI', function()\n     ]])\n   end)\n \n-  it('can handle arbitrarily long bursts of input', function()\n-    -- Need extra time for this test, specially in ASAN.\n-    screen.timeout = 60000\n-    feed_command('set ruler')\n+  it('paste: big burst of input', function()",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315895531",
            "id": 315895531,
            "in_reply_to_id": 315837335,
            "line": 441,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTg5NTUzMQ==",
            "original_commit_id": "fd08cd6d3ed99024f54e0e7e8a87fc31181dcc1e",
            "original_line": 441,
            "original_position": 88,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 359,
            "pull_request_review_id": 277430420,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315895531/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315895531",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/4448#discussion_r315902587"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/4448"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/315902587"
                }
            },
            "author_association": "MEMBER",
            "body": "Cursor position should never depend on when a redraw is done. Forcing PUT_CURSEND in normal mode breaks using `nvim_put` to replace `call setreg(\"x\", data, mode) | normal \"xp`, which I would hope it could do. Might better to have a flag for \"always cursend\" if this is needed for modelesslike TUI/GUI paste.",
            "commit_id": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
            "created_at": "2019-08-20T21:04:34Z",
            "diff_hunk": "@@ -197,26 +201,97 @@ describe('TUI', function()\n     ]])\n   end)\n \n-  it('can handle arbitrarily long bursts of input', function()\n-    -- Need extra time for this test, specially in ASAN.\n-    screen.timeout = 60000\n-    feed_command('set ruler')\n+  it('paste: big burst of input', function()",
            "html_url": "https://github.com/neovim/neovim/pull/4448#discussion_r315902587",
            "id": 315902587,
            "in_reply_to_id": 315837335,
            "line": 441,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDMxNTkwMjU4Nw==",
            "original_commit_id": "fd08cd6d3ed99024f54e0e7e8a87fc31181dcc1e",
            "original_line": 441,
            "original_position": 88,
            "original_start_line": null,
            "path": "test/functional/terminal/tui_spec.lua",
            "position": 359,
            "pull_request_review_id": 277439517,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315902587/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2019-08-27T22:57:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/315902587",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "@justinmk I'm not sure I understand the goal behind this PR, is it to decouple the logic of automatically toggling `paste` with a special key?\n\nIf so, I don't see much gain here: We still have bracketed paste parsing hardcoded into the TUI, only the `set paste` logic will be moved to vimscript(even so, what would be the purpose of allowing autocmds to be attached to paste?). But I do see a worthly goal in this:\n\n> I am wondering if it would be a good idea to provide some internal generic mechanism for placing K_EVENT in the input stream and associating it with a callback.\n\nIf you could implement this, then yes, we could completely decouple bracketed paste(and possibly many other terminal sequences) from the tui. But it should not be `K_EVENT`, since it is already used for another purpose(and no, we can't place arbitrary events so they are processed at specific times during input processing).\n\nHowever, this seems to overlap with @bfredl's work on #4419 :\n\n``` vim\nmap <command> <Paste> if &paste | set nopaste | else | set paste\n```\n\nMaybe it would be even better if we simply supported user-defined synthetic keys:\n\n``` vim\nmap <command> <User:SOME_KEY_ID> if &paste | set nopaste | else | set paste\n```\n\nThe question is: How can a plugin tell the UI to put such synthetic keys into the input buffer? Right now we can't, but the TUI will soon allow configuration, so a bracketed paste plugin could be summarized to something like this:\n\n``` vim\nlet g:tui_keys_override = {\n\\  '\\x1b[200~': '<User:Paste>'\n\\  '\\x1b[201~': '<User:Paste>'\n\\}\nimap <command> <User:Paste> if &paste | set nopaste | else | set paste\n```\n\nThat is, the plugin asks the tui to translate bracketed pastes into `<user:paste>`, and maps it to a code that toggles the paste option.\n",
            "created_at": "2016-03-14T11:17:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196264209",
            "id": 196264209,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjI2NDIwOQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196264209/reactions"
            },
            "updated_at": "2016-03-14T11:17:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196264209",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If so, I don't see much gain here:\n\nThis fixes several bugs, and removes some special-case logic.\n\n> We still have bracketed paste parsing hardcoded into the TUI, only the set paste logic will be moved to vimscript\n\nHard-coded handling of bracketed paste _belongs_ in `tui/input.c`--that's not a problem. And this PR  removes inspection of `ui_toggle[]` in `vgetorpeek()`. That's a net gain.\n\n> (even so, what would be the purpose of allowing autocmds to be attached to paste?). \n\nI addressed that here: https://github.com/neovim/neovim/pull/3906#issuecomment-168349576 I'll also add that some users would want to control whether they return to normal-mode after a paste, or whether a newline is always created.\n\nMoreover, @bfredl mentioned wanting `Paste` event as the dual for `TextYankPost`.\n\n> However, this seems to overlap with @bfredl's work on #4419 :\n\nI don't think so. The `<Paste>` toggle _does not work_. It's broken. The system needs to know \"this is the start\" and \"this is the end\". The state of `'paste'` cannot be a factor in this, the user may already have it enabled.\n\nThe old code was sending `<Paste>` to toggle _on_ and another one later in the stream to toggle _off_. This is the cause of bugs we've had for 6 months.\n",
            "created_at": "2016-03-14T14:57:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196351748",
            "id": 196351748,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjM1MTc0OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196351748/reactions"
            },
            "updated_at": "2019-08-18T23:19:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196351748",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`TextPutPre`(/`Post` ?) and `PastePre`/`PastePost` seems to me to be completely different events.The former would handle putting,  `p` (and maybe `i<c-r>` and `:<c-r>` as well) while the event here is for terminal bracketed paste. \n",
            "created_at": "2016-03-14T15:37:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196371581",
            "id": 196371581,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjM3MTU4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196371581/reactions"
            },
            "updated_at": "2019-08-18T23:19:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196371581",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@bfredl See the PR description where I mention that blackhole register could be used to mean \"external paste\" (called \"bracketed paste\" in terminals, but for all other UIs it's a \"clipboard paste\").\n\nIOW, though this PR is narrow at the moment, it's just a first step (which fixes very old bugs).\n\nI can rename the events to `TextPutPre` and `TextPutPost`.\n",
            "created_at": "2016-03-14T15:51:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196379188",
            "id": 196379188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjM3OTE4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196379188/reactions"
            },
            "updated_at": "2019-08-18T23:19:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196379188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> called \"bracketed paste\" in terminals, but for all other UIs it's a \"clipboard paste\"\n\nNot really, `\"+p` or `\"*p` (or the insert mode variants) would be the closest nvim notion of a UI clipboard paste. The difference is that terminal paste (at least before this PR?) doesn't do any putting operation, rather it changes behavior of insert mode to insert typed text verbatim. (but it doesn't for instance switch to insert mode automatically)\n",
            "created_at": "2016-03-14T16:00:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196383796",
            "id": 196383796,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjM4Mzc5Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196383796/reactions"
            },
            "updated_at": "2019-08-18T23:20:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196383796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk Bracketed paste is terminal-UI-specific thing. GUIs do not have anything like this, all they have are events from user: clipboard and mouse. There is no “external paste”, there are things like `\"+p`, `:put` and events which map to this. In any case clipboard contents is received in one piece, it is not a stream like `{paste start}{contents}{paste end}`.\n",
            "created_at": "2016-03-14T16:25:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196397405",
            "id": 196397405,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjM5NzQwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196397405/reactions"
            },
            "updated_at": "2016-03-14T16:25:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196397405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk `<MiddleMouse>`, `<C-v>`, etc are handled by the application _itself_ and it is UI which initiates pasting upon receiving an appropriate event. There are _conventions_ and toolkits which follow conventions by default, but they are not enforced and toolkits can be told to not follow them as well. With bracketed paste it is terminal which initiates pasting, which is an “external” application.\n",
            "created_at": "2016-03-14T16:29:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196399393",
            "id": 196399393,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjM5OTM5Mw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196399393/reactions"
            },
            "updated_at": "2016-03-14T16:30:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196399393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That two different operations sometimes can have the the same goal does not make them the same operation, I don't see any pedantry in that.\nIn `TextPutPre` the autocmd could be allowed to change the text and the register type. What would that even mean for `PastePre`. (The oprational sematics are the relevant here and not any naming)\n",
            "created_at": "2016-03-14T16:44:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196405189",
            "id": 196405189,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQwNTE4OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196405189/reactions"
            },
            "updated_at": "2019-08-18T23:21:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196405189",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk It is only TUI which _has_ to “raise PastePre, send bytes, PastePost” (and “has” is mostly because Neovim needs to be prepared to missing PastePost). Other UIs may say “paste this”, but they don’t need this _at all_, there is no “external” paste, _nobody_ will raise PastePre, PastePost and send bytes because pasting is done by `\"*p` or equivalents. The only thing is that some UIs may want to alter clipboard providers.\n\nWhen “Paste*” is used for handling pastes from register `a` semantics changes significantly: previously input was put into an input queue. Now input is located in register `a` and nobody wants it in the input queue.\n",
            "created_at": "2016-03-14T16:44:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196405205",
            "id": 196405205,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQwNTIwNQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196405205/reactions"
            },
            "updated_at": "2019-08-18T23:21:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196405205",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> In TextYankPre the autocmd could be allowed to change the text and the register mode. What would that even mean for PastePre\n\nNot sure I follow. We increment `textlock` for `TextYankPost`. We can set textlock for Paste events as well, regardless of what we do for `TextYankPre`.\n\n> Other UIs may say “paste this”, but they don’t need this at all, there is no “external” paste, nobody will raise PastePre, PastePost and send bytes because pasting is done by \"*p or equivalents.\n\nWhy couldn't we recommend that UIs raise the events? This would enable users to have consistent paste behavior for any UI. E.g., some users may want to return to normal-mode _always_ after a paste. Some users may want to respond to a non-modifiable buffer by opening a new tab instead of just showing an error.\n\n> When “Paste*” is used for handling pastes from register a semantics changes significantly: previously input was put into an input queue. Now input is located in register a and nobody wants it in the input queue.\n\nFair point, then we can drop that idea. It's not part of this PR.\n",
            "created_at": "2016-03-14T16:51:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196407850",
            "id": 196407850,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQwNzg1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196407850/reactions"
            },
            "updated_at": "2019-07-19T19:37:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196407850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry meant TextPutPre: It could change the text/type pair being pasted but that doesn't make any sense for PastePre.\n",
            "created_at": "2016-03-14T16:54:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196409388",
            "id": 196409388,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQwOTM4OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196409388/reactions"
            },
            "updated_at": "2019-08-18T23:21:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196409388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "By the way, consider that user pressed `<S-Insert>foo`, which translated into `{paste start}{inserted contents}{paste end}foo`. Can I use Paste* events to get `{inserted contents}` without `foo`?\n\nAlso I saw that you test ignoring second `{paste start}` in `{paste start}{paste start}`. This is incorrect, I checked konsole using\n\n```\necho $'\\e[200~' | xclip -i\necho $'\\e[?2004h' ; stty -echo ; cat -v\n```\n\n(with `<MiddleMouse>` after last `<CR>`) and got\n\n```\n^[[200~^[[200~\n^[[201~\n```\n\n: no escaping. Spurious `{paste start}` should be part of the pasted text, not ignored. Double `{paste end}`/`{paste end}` without `{paste start}` should be ignored though I think.\n",
            "created_at": "2016-03-14T17:06:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196413738",
            "id": 196413738,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQxMzczOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196413738/reactions"
            },
            "updated_at": "2016-03-14T17:06:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196413738",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Can I use Paste\\* events to get {inserted contents} without foo?\n\nThe text is not provided in any register or `v:` variable, but the buffer contents at time of `PastePost` should not contain `foo`. And you could compare this to buffer contents at time of `PastePre`.\n\n>  Spurious {paste start} should be part of the pasted text, not ignored. Double {paste end}/{paste end} without {paste start} should be ignored though I think.\n\nThanks, I will fix it.\n",
            "created_at": "2016-03-14T17:10:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196415970",
            "id": 196415970,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQxNTk3MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196415970/reactions"
            },
            "updated_at": "2016-03-14T17:10:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196415970",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think so. The <Paste> toggle does not work. It's broken. The system needs to know \"this is the start\" and \"this is the end\". The state of 'paste' cannot be a factor in this, the user may already have it enabled.\n> \n> The old code was sending <Paste> to toggle on and another one later in the stream to toggle off. This is the cause of bugs we've had for 6 months.\n\nAlright. What about your [suggestion](https://github.com/neovim/neovim/pull/4448#discussion_r55960175) of adding a generic mechanism to allow execution of vimscript when a certain synthetic keys are processed? Assuming the TUI allows the user to override terminal code parsing(it will), a bracketed paste plugin could do this:\n\n``` vim\nlet g:tui_keys_override = {\n\\  '\\x1b[200~': '<User:PasteEnable>'\n\\  '\\x1b[201~': '<User:PasteDisable>'\n\\}\n```\n\nIt seems like something that could work. Even FocusGain/FocusLost could work nicely on such infrastructure.\n",
            "created_at": "2016-03-14T17:10:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196416068",
            "id": 196416068,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQxNjA2OA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196416068/reactions"
            },
            "updated_at": "2016-03-14T17:10:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196416068",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I also do not see tests for pasting while in all other modes (visual, select, operator-pending, replace, virtual replace).\n",
            "created_at": "2016-03-14T17:11:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196416487",
            "id": 196416487,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQxNjQ4Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196416487/reactions"
            },
            "updated_at": "2016-03-14T17:11:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196416487",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Adapting my previous comment to @bfredl's [idea](https://github.com/neovim/neovim/pull/4419#issuecomment-196271318), here's how bracketed paste would be implemented as a plugin:\n\n``` vim\nlet g:tui_keys_override = {\n\\  '\\x1b[200~': '<Cmd>set paste<cr>'\n\\  '\\x1b[201~': '<Cmd>set nopaste<cr>'\n\\}\n```\n",
            "created_at": "2016-03-14T17:17:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196419237",
            "id": 196419237,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQxOTIzNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196419237/reactions"
            },
            "updated_at": "2016-03-14T17:17:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196419237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Assuming the TUI allows the user to override terminal code parsing(it will), a bracketed paste plugin could do this:\n> let g:tui_keys_override\n\nI suppose that would be fine if no one is convinced that PastePre/PastePost will be useful for GUIs (I gave use-cases above). But:\n- It will block this fix for a long time. Paste has been broken for more than 6 months.\n- It means we're back to asking users to fiddle with termcodes--even when the work was already done to abstract it for certain cases. \n- It won't apply to GUIs, so configuration of this behavior won't be consistent across UIs.\n",
            "created_at": "2016-03-14T17:20:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196420555",
            "id": 196420555,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMDU1NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196420555/reactions"
            },
            "updated_at": "2016-03-14T17:20:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196420555",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm I wonder how to implement \"Send paste sequences to :terminal\" with that. Is the remapping done by the tui module or do you mean runtime will add those mappings to insert mode?\n",
            "created_at": "2016-03-14T17:20:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196420559",
            "id": 196420559,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMDU1OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196420559/reactions"
            },
            "updated_at": "2016-03-14T17:20:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196420559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl Neither of suggested variants allow implementing “send paste sequences to `:terminal`”, because this needs hooking `\"*p`. Though bracket pasting to terminal may be implemented based on PastePre/PastePost, this also needs getting terminal state.\n",
            "created_at": "2016-03-14T17:24:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196422199",
            "id": 196422199,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMjE5OQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196422199/reactions"
            },
            "updated_at": "2016-03-14T17:24:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196422199",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> (I gave examples above)\n\nThe examples you gave above for gvim are using registers AFAIK. But it could still make sense for a GUI to do bracketed paste (it could make sense to paste commands in normal mode, which is not the same as `@*` )\n",
            "created_at": "2016-03-14T17:26:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196422807",
            "id": 196422807,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMjgwNw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196422807/reactions"
            },
            "updated_at": "2016-03-14T17:27:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196422807",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ZyX-I I meant specifically @tarruda:s remark.\n",
            "created_at": "2016-03-14T17:26:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196422974",
            "id": 196422974,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyMjk3NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196422974/reactions"
            },
            "updated_at": "2016-03-14T17:26:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196422974",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I want to capture incoming text, not add it anywhere. Actually for handling specifically bracketed paste it would be more useful to have callback that receives input, something like\n\n``` VimL\nlet s:MODE_KEYS={'n': \"\\<C-\\>\\<C-n>i\", …}\nfunction PasteCallback(text, ended)\n  if !&paste\n    call feedkeys(s:MODE_KEYS[mode()], 'n')\n    set paste\n  endif\n  let text = a:text[:]\n  while !empty(text)\n    let line = remove(text, 0)\n    let line = substitute(text, \"\\n\", \"\\<C-v>\\<Nul>\", 'g')\n    let line = substitute(text, \"[\\x01-\\x1F]\", \"\\<C-v>\\\\0\", 'g')\n    call feedkeys(line, 'n')\n    if !empty(text)\n      call feedkeys(\"\\n\", 'n')\n    endif\n    if stridx(line, \"\\<C-c>\") != -1\n      return 1\n    endif\n  endwhile\n  if a:ended\n    set nopaste\n  endif\n  return 0\nendfunction\n```\n\nThis means that callback will be invoked _in place_ of feeding characters into an input queue. Callback may prevent itself from being called by returning `1`.\n\nNote that I handle special characters. I did not see `<Esc>` pasting example in your tests, but I guess this will interrupt the paste.\n",
            "created_at": "2016-03-14T17:29:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196424051",
            "id": 196424051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyNDA1MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196424051/reactions"
            },
            "updated_at": "2016-03-14T17:32:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196424051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@bfredl _Any_ solution which allows calling commands may fix the problem, with the remark that one needs to export terminal state (i.e. whether terminal allows bracketed paste or not). Just create a command which feeds required escape sequences.\n",
            "created_at": "2016-03-14T17:36:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196426850",
            "id": 196426850,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyNjg1MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196426850/reactions"
            },
            "updated_at": "2016-03-14T17:36:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196426850",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Hmm I wonder how to implement \"Send paste sequences to :terminal\" with that. Is the remapping done by the tui module or do you mean runtime will add those mappings to insert mode?\n\nThe `let g:tui_keys_override = {` line is how I envision that UIs will be able to create arbitrary configuration parameters that can be set in a nvimrc or a plugin through [dictwatcheradd()](https://neovim.io/doc/user/eval.html#dictwatcheradd%28%29). In this example, the TUI would have a \"keys_override\" parameter that allows the user to customize how certain terminal sequences should be translated to keys.\n",
            "created_at": "2016-03-14T17:36:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196427145",
            "id": 196427145,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyNzE0NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196427145/reactions"
            },
            "updated_at": "2016-03-14T17:36:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196427145",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This means that callback will be invoked in place of feeding characters into an input queue.\n\nThat will be slower, though. And more complicated to implement.\n\nAnd, paste has been broken for more than 6 months.\n",
            "created_at": "2016-03-14T17:39:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196428284",
            "id": 196428284,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyODI4NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196428284/reactions"
            },
            "updated_at": "2016-03-14T17:39:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196428284",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Dunno,  I think @justinmk:s solution is better (the only thing I was against was confusing with register putting, in general I like this PR :). This is standard behavior of terminals we should support builtin.\n",
            "created_at": "2016-03-14T17:39:32Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196428471",
            "id": 196428471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyODQ3MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196428471/reactions"
            },
            "updated_at": "2016-03-14T17:39:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196428471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @justinmk I want to capture incoming text, not add it anywhere. Actually for handling specifically bracketed paste it would be more useful to have callback that receives input, something like\n\n@ZyX-I it could be implemented with @bfredl solution and some kind of input redirection mechanism(`:redir` but for user input):\n\n``` vim\nlet g:tui_keys_override = {\n\\  '\\x1b[200~': '<Cmd>:iredir => g:input<cr>'\n\\  '\\x1b[201~': '<Cmd>:iredir END | call PasteCallback(g:input)<cr>'\n\\}\n```\n",
            "created_at": "2016-03-14T17:40:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196428642",
            "id": 196428642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyODY0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196428642/reactions"
            },
            "updated_at": "2016-03-14T17:42:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196428642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It will block this fix for a long time. Paste has been broken for more than 6 months.\n\nGood point :+1: \n\nThis generalization can be deferred for when @bfredl finishes #4419\n",
            "created_at": "2016-03-14T17:41:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196429042",
            "id": 196429042,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQyOTA0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196429042/reactions"
            },
            "updated_at": "2016-03-14T17:41:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196429042",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Maybe, but I don't see any point of the user ever typing `x1b[200~` in `vimrc`. This should just be a recognized key or autocommand, as this PR does.\n",
            "created_at": "2016-03-14T17:45:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196430514",
            "id": 196430514,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQzMDUxNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196430514/reactions"
            },
            "updated_at": "2016-03-14T17:45:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196430514",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tarruda Input redirection is one of the worst ideas because it will capture all input, not allowing user to do _anything_ until redirection ends.\n\nAlso how you are going to stop input redirection if `<Cmd>…` is feed into the input queue and thus will be consumed by input redirection?\n",
            "created_at": "2016-03-14T17:45:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196430611",
            "id": 196430611,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQzMDYxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196430611/reactions"
            },
            "updated_at": "2016-03-14T17:45:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196430611",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @tarruda Input redirection is one of the worst ideas because it will capture all input, not allowing user to do anything until redirection ends.\n\nGood point\n\n> Also how you are going to stop input redirection if <Cmd>… is feed into the input queue and thus will be consumed by input redirection?\n\nInput redirection would operate at a higher level, interpreting some special keys such as `<cmd>` before sending the input to whatever sink it is redirected to(it wouldn't make sense to redirect certain special keys)\n",
            "created_at": "2016-03-14T17:47:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196431786",
            "id": 196431786,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQzMTc4Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196431786/reactions"
            },
            "updated_at": "2016-03-14T17:47:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196431786",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If I am not mistaking one may paste special keys…\n\n@justinmk What #2523 is doing in the list of closed issues if it is not Neovim issue at all?\n",
            "created_at": "2016-03-14T17:50:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196434095",
            "id": 196434095,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQzNDA5NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196434095/reactions"
            },
            "updated_at": "2019-03-20T11:30:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196434095",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Maybe, but I don't see any point of the user ever typing x1b[200~ in vimrc. This should just be a recognized key or autocommand, as this PR does.\n\nSure, it was just an idea of how to decouple this from the TUI. AFAIK the bracketed paste sequence is not standardized, so theoretically a terminal could use a different sequence to implement it(But I agree that something so popular should be supported out of box)\n",
            "created_at": "2016-03-14T17:52:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196436075",
            "id": 196436075,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQzNjA3NQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196436075/reactions"
            },
            "updated_at": "2016-03-14T17:52:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196436075",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/842846?v=4",
                "events_url": "https://api.github.com/users/tarruda/events{/privacy}",
                "followers_url": "https://api.github.com/users/tarruda/followers",
                "following_url": "https://api.github.com/users/tarruda/following{/other_user}",
                "gists_url": "https://api.github.com/users/tarruda/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tarruda",
                "id": 842846,
                "login": "tarruda",
                "node_id": "MDQ6VXNlcjg0Mjg0Ng==",
                "organizations_url": "https://api.github.com/users/tarruda/orgs",
                "received_events_url": "https://api.github.com/users/tarruda/received_events",
                "repos_url": "https://api.github.com/users/tarruda/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tarruda/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tarruda/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tarruda"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I would not say it is more complicated:\n\n``` Patch\ndiff --git a/src/nvim/tui/input.c b/src/nvim/tui/input.c\nindex b41e4d2..e900aef 100644\n--- a/src/nvim/tui/input.c\n+++ b/src/nvim/tui/input.c\n@@ -68,17 +68,65 @@ static void input_done_event(void **argv)\n   input_done();\n }\n\n+static Array string_to_array(const String input)\n+{\n+  Array ret = { .size = 0, .items = NULL };\n+  for (size_t i = 0; i < input.size; i++) {\n+    const char *const start = input.data + i;\n+    const char *const end = xmemscan(start, NL, input.size - i);\n+    i += (size_t) (end - start);\n+    ret.size++;\n+  }\n+  ret.items = xmalloc(ret.size * sizeof(*ret.items));\n+  size_t array_idx = 0;\n+  for (size_t i = 0; i < input.size; i++) {\n+    const char *const start = input.data + i;\n+    const size_t line_len\n+        = (size_t) ((char *) xmemscan(start, NL, input.size - i)\n+                                      - start);\n+    i += line_len;\n+\n+    String item = {\n+      .size = line_len,\n+      .data = xmemdupz(start, line_len),\n+    };\n+    memchrsub(item.data, NUL, NL, line_len);\n+    ret.items[array_idx++] = STRING_OBJ(item);\n+  }\n+  ret.capacity = ret.size;\n+\n+  return ret;\n+}\n+\n static void wait_input_enqueue(void **argv)\n {\n   TermInput *input = argv[0];\n   RBUFFER_UNTIL_EMPTY(input->key_buffer, buf, len) {\n-    size_t consumed = input_enqueue((String){.data = buf, .size = len});\n-    if (consumed) {\n-      rbuffer_consumed(input->key_buffer, consumed);\n-    }\n-    rbuffer_reset(input->key_buffer);\n-    if (consumed < len) {\n-      break;\n+    const String keys = { .data = buf, .size = len };\n+    if (input->paste_enabled) {\n+      Object keys_array = ARRAY_OBJ(string_to_array(keys));\n+      Array args = { .capacity = 1, .size = 1, .items = &keys_array };\n+      Error err = ERROR_INIT;\n+      Object fret = vim_call_function(STATIC_CSTR_AS_STRING(\"PasteCallback\"),\n+                                      args, &err);\n+      if ((fret.type == kObjectTypeInteger && fret.data.integer)\n+          || (fret.type == kObjectTypeBoolean && fret.data.boolean)\n+          || (fret.type == kObjectTypeString && fret.data.string.size)) {\n+        input->paste_enabled = false;\n+      }\n+      api_free_object(fret);\n+      api_free_object(keys_array);\n+      rbuffer_consumed(input->key_buffer, len);\n+      rbuffer_reset(input->key_buffer);\n+    } else {\n+      const size_t consumed = input_enqueue(keys);\n+      if (consumed) {\n+        rbuffer_consumed(input->key_buffer, consumed);\n+      }\n+      rbuffer_reset(input->key_buffer);\n+      if (consumed < len) {\n+        break;\n+      }\n     }\n   }\n   uv_mutex_lock(&input->key_buffer_mutex);\n@@ -286,12 +334,18 @@ static bool handle_bracketed_paste(TermInput *input)\n       (!rbuffer_cmp(input->read_stream.buffer, \"\\x1b[200~\", 6) ||\n        !rbuffer_cmp(input->read_stream.buffer, \"\\x1b[201~\", 6))) {\n     bool enable = *rbuffer_get(input->read_stream.buffer, 4) == '0';\n+    if (input->paste_enabled && enable) {\n+      // Pasting enabling paste literally.\n+      return false;\n+    }\n     // Advance past the sequence\n     rbuffer_consumed(input->read_stream.buffer, 6);\n     if (input->paste_enabled == enable) {\n       return true;\n     }\n-    enqueue_input(input, PASTETOGGLE_KEY, sizeof(PASTETOGGLE_KEY) - 1);\n+    if (!enable) {\n+      flush_input(input, true);\n+    }\n     input->paste_enabled = enable;\n     return true;\n   }\n```\n",
            "created_at": "2016-03-14T18:44:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196464882",
            "id": 196464882,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQ2NDg4Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196464882/reactions"
            },
            "updated_at": "2016-03-14T18:44:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196464882",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk This is, of course, alpha, but I needed to only alter two places. Plus the definition of PasteCallback is needed to be put into main.c, also an indirection (hardcoding function name is not a good idea).\n\nIt also appears that I understood the format of incoming string incorrectly, so additional action is needed in string_to_array.\n",
            "created_at": "2016-03-14T18:51:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196467856",
            "id": 196467856,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQ2Nzg1Ng==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196467856/reactions"
            },
            "updated_at": "2016-03-14T18:51:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196467856",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/322097?v=4",
                "events_url": "https://api.github.com/users/ZyX-I/events{/privacy}",
                "followers_url": "https://api.github.com/users/ZyX-I/followers",
                "following_url": "https://api.github.com/users/ZyX-I/following{/other_user}",
                "gists_url": "https://api.github.com/users/ZyX-I/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ZyX-I",
                "id": 322097,
                "login": "ZyX-I",
                "node_id": "MDQ6VXNlcjMyMjA5Nw==",
                "organizations_url": "https://api.github.com/users/ZyX-I/orgs",
                "received_events_url": "https://api.github.com/users/ZyX-I/received_events",
                "repos_url": "https://api.github.com/users/ZyX-I/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ZyX-I/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ZyX-I/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ZyX-I"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ZyX-I Doing `flush_input` and putting the logic in `wait_input_enqueue` is definitely better. I will incorporate that.\n",
            "created_at": "2016-03-15T00:13:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-196578797",
            "id": 196578797,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjU3ODc5Nw==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196578797/reactions"
            },
            "updated_at": "2016-03-15T00:13:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/196578797",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk what is the time scale if this? Because something like #4510 could mitigate #3476 in the meanwhile (I tested with urxvt and pangoterm) if it will take some time for this to get ready.\n",
            "created_at": "2016-03-31T13:15:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-203931921",
            "id": 203931921,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDIwMzkzMTkyMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/203931921/reactions"
            },
            "updated_at": "2016-03-31T13:50:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/203931921",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "Any updates or progress here? Just recently started using Neovim and I'm sad that it can't be made to accept (bracketed) pastes in normal mode like Vim can.",
            "created_at": "2017-06-09T22:37:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-307515728",
            "id": 307515728,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzUxNTcyOA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/307515728/reactions"
            },
            "updated_at": "2017-06-09T22:37:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/307515728",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7074?v=4",
                "events_url": "https://api.github.com/users/wincent/events{/privacy}",
                "followers_url": "https://api.github.com/users/wincent/followers",
                "following_url": "https://api.github.com/users/wincent/following{/other_user}",
                "gists_url": "https://api.github.com/users/wincent/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wincent",
                "id": 7074,
                "login": "wincent",
                "node_id": "MDQ6VXNlcjcwNzQ=",
                "organizations_url": "https://api.github.com/users/wincent/orgs",
                "received_events_url": "https://api.github.com/users/wincent/received_events",
                "repos_url": "https://api.github.com/users/wincent/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wincent/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wincent/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wincent"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Is this blocked indefinitely? I have https://gist.github.com/janlazo/cea7acf2711e89a9bc4f7c79612c6e54#bracketed-paste for Vim 8.0 patches for bracketed paste.",
            "created_at": "2018-06-19T12:18:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-398378511",
            "id": 398378511,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODM3ODUxMQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/398378511/reactions"
            },
            "updated_at": "2018-06-19T12:18:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/398378511",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8740057?v=4",
                "events_url": "https://api.github.com/users/janlazo/events{/privacy}",
                "followers_url": "https://api.github.com/users/janlazo/followers",
                "following_url": "https://api.github.com/users/janlazo/following{/other_user}",
                "gists_url": "https://api.github.com/users/janlazo/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/janlazo",
                "id": 8740057,
                "login": "janlazo",
                "node_id": "MDQ6VXNlcjg3NDAwNTc=",
                "organizations_url": "https://api.github.com/users/janlazo/orgs",
                "received_events_url": "https://api.github.com/users/janlazo/received_events",
                "repos_url": "https://api.github.com/users/janlazo/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/janlazo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/janlazo/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/janlazo"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No.",
            "created_at": "2018-06-19T12:46:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-398386061",
            "id": 398386061,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODM4NjA2MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/398386061/reactions"
            },
            "updated_at": "2018-06-19T12:46:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/398386061",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It also appears that I understood the format of incoming string incorrectly, so additional action is needed in string_to_array.\r\n\r\n`tk_getkeys()` translates control bytes to `<foo>` keycode strings. I don't think we want that, and it would require un-translating also (e.g. when users pastes `\\t` char they want that literal tab char, not a `\"<Tab>\"` string).\r\n\r\nThus in `tinput_read_cb()` I am calling `tinput_enqueue()` directly during paste-mode (skipping `tk_getkeys()`) .",
            "created_at": "2019-08-18T18:06:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-522342712",
            "id": 522342712,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMjM0MjcxMg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522342712/reactions"
            },
            "updated_at": "2019-08-18T18:06:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/522342712",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Last commit works around this failure:\r\n\r\n```\r\n[  ERROR   ] test/functional/terminal/tui_spec.lua @ 192: TUI paste: exactly 64 bytes #10311\r\ntest/functional/helpers.lua:403: \r\nretry() attempts: 478\r\ntest/functional/terminal/tui_spec.lua:201: Expected objects to be the same.\r\nPassed in:\r\n(table: 0x47cd77e8) {\r\n *[1] = 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz endz' }\r\nExpected:\r\n(table: 0x47cd7830) {\r\n *[1] = 'zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz end' }\r\n```\r\n\r\nThis happens because `curwin->w_cursor.col` is sometimes decremented at the end of `do_put` ... because the editor is in Normal-mode instead of the expected Insert-mode.\r\n\r\nRoot cause is a [race with typeahead](https://github.com/neovim/neovim/pull/4448/commits/6b9e68bc5c866cd9ab512b018d8746a2df666a98). This won't cause trouble in real-world usage, but it would be nice in general if we had a deterministic way to flush typeahead. (See also #6247)\r\n\r\nExample: from Normal-mode if   \"i\" is followed immediately by a paste sequence:\r\n\r\n    i<start-paste>...<stop-paste>\r\n    ^\r\n     \"i\" does not get processed in time, so the editor is in\r\n     Normal-mode instead of Insert-mode while handling the paste.\r\n\r\nI tried \"flushing\" typeahead by various means: \r\n- `nvim_feedkeys('','x')` \r\n- `exec_normal()` from `tinput_wait_enqueue()`\r\n- `LOOP_PROCESS_EVENTS(&main_loop,…,0)` from `tinput_wait_enqueue()`\r\n\r\nThe most reliable (but not completely) workaround is to do a synchronous RPC request on the child Nvim:\r\n\r\n```lua\r\n    feed_data('i')\r\n    child_session:request('nvim_eval', 1)\r\n    feed_data('\\027[200~'..expected..'\\027[201~')\r\n```",
            "created_at": "2019-08-21T21:02:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-523648142",
            "id": 523648142,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY0ODE0Mg==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523648142/reactions"
            },
            "updated_at": "2019-08-21T22:37:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523648142",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I was thinking about a similar situation a while ago and thought about somehow doing it the other way around: store references to events in the key input stream/typeahead buffer. I e while not concatenating all of the paste data into the typeahead buffer as is done before, `nvim_paste` would put a single \"token\" on the typeahead stream that would reference the paste event (or a general LuaRef to execute, in my original context). Not sure how much refactor it would incur though, probably too much for only this usecase. (currently what is stored is a stream of bytes + a  bit per byte whether that char came from a \"noremap\").",
            "created_at": "2019-08-21T22:03:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-523667181",
            "id": 523667181,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY2NzE4MQ==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523667181/reactions"
            },
            "updated_at": "2019-08-21T22:07:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523667181",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "A proper implementation of `nvim_mouse_input` would also requiring \"embedded\" data in the input stream, though maybe that case is simpler, as the amount of data is small and bounded.",
            "created_at": "2019-08-21T22:16:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-523670640",
            "id": 523670640,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY3MDY0MA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523670640/reactions"
            },
            "updated_at": "2019-08-21T22:17:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523670640",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> somehow doing it the other way around: store references to events in the key input stream/typeahead buffer ... put a single \"token\" on the typeahead stream\r\n\r\nThat would be very cool (see also https://github.com/neovim/neovim/pull/4448#issuecomment-196264209 ; maybe also discussed in #6247), and is generally useful for UIs/clients. Created a ticket:  #10826\r\n",
            "created_at": "2019-08-21T22:29:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-523674404",
            "id": 523674404,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyMzY3NDQwNA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523674404/reactions"
            },
            "updated_at": "2019-08-21T22:30:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/523674404",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "## Resolution/Summary\r\n\r\n- Thanks to @ZyX-I for review and suggestions.\r\n- [Remaining items](https://github.com/neovim/neovim/pull/4448#issue-62689821) will go in followup PR.\r\n- Marking these vim-patches as NA (cc @janlazo):\r\n\r\n```\r\nvim-patch:8.1.1198\r\nvim-patch:8.1.0224\r\nvim-patch:8.0.1299\r\nvim-patch:8.0.0569\r\nvim-patch:8.0.0303\r\nvim-patch:8.0.0296\r\nvim-patch:8.0.0244\r\nvim-patch:8.0.0238\r\nvim-patch:8.0.0232\r\nvim-patch:8.0.0231\r\nvim-patch:8.0.0230\r\nvim-patch:8.0.0210\r\n```\r\n\r\nNotes:\r\n\r\n- cursor is hidden after paste completes. Workaround: send dummy event https://github.com/neovim/neovim/pull/4448/commits/4344ac11119abd20ba911d72cf540321277dd150:\r\n  ```\r\n  loop_schedule_deferred(&main_loop, event_create(x_dummy_event, 0));\r\n  ```\r\n\r\n---\r\n_Locked to keep the summary visible. You can always [chat](https://neovim.io/#chat) or open a ticket if you have new information/topics to discuss._\r\n",
            "created_at": "2019-08-27T21:41:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/4448#issuecomment-525494644",
            "id": 525494644,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
            "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTQ5NDY0NA==",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/525494644/reactions"
            },
            "updated_at": "2019-08-27T23:58:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/525494644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/4448/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/4448/commits",
    "created_at": "2016-03-14T00:48:42Z",
    "diff_url": "https://github.com/neovim/neovim/pull/4448.diff",
    "draft": false,
    "head": {
        "label": "justinmk:paste",
        "ref": "paste",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/justinmk/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/justinmk/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/justinmk/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/justinmk/neovim/branches{/branch}",
            "clone_url": "https://github.com/justinmk/neovim.git",
            "collaborators_url": "https://api.github.com/repos/justinmk/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/justinmk/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/justinmk/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/justinmk/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/justinmk/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/justinmk/neovim/contributors",
            "created_at": "2014-02-28T23:17:54Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/justinmk/neovim/deployments",
            "description": "somewhere in todo.txt",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/justinmk/neovim/downloads",
            "events_url": "https://api.github.com/repos/justinmk/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/justinmk/neovim/forks",
            "full_name": "justinmk/neovim",
            "git_commits_url": "https://api.github.com/repos/justinmk/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/justinmk/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/justinmk/neovim/git/tags{/sha}",
            "git_url": "git://github.com/justinmk/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": false,
            "has_wiki": false,
            "homepage": "http://neovim.io",
            "hooks_url": "https://api.github.com/repos/justinmk/neovim/hooks",
            "html_url": "https://github.com/justinmk/neovim",
            "id": 17302877,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/justinmk/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/justinmk/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/justinmk/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/justinmk/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/justinmk/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/justinmk/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/justinmk/neovim/merges",
            "milestones_url": "https://api.github.com/repos/justinmk/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNzMwMjg3Nw==",
            "notifications_url": "https://api.github.com/repos/justinmk/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/justinmk/neovim/pulls{/number}",
            "pushed_at": "2024-09-09T15:32:07Z",
            "releases_url": "https://api.github.com/repos/justinmk/neovim/releases{/id}",
            "size": 278955,
            "ssh_url": "git@github.com:justinmk/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/justinmk/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/justinmk/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/justinmk/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/justinmk/neovim/subscription",
            "svn_url": "https://github.com/justinmk/neovim",
            "tags_url": "https://api.github.com/repos/justinmk/neovim/tags",
            "teams_url": "https://api.github.com/repos/justinmk/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/justinmk/neovim/git/trees{/sha}",
            "updated_at": "2023-07-25T13:51:02Z",
            "url": "https://api.github.com/repos/justinmk/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/4448",
    "id": 62689821,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/4448",
    "labels": [
        {
            "color": "c2e0c6",
            "default": true,
            "description": "feature request",
            "id": 77997476,
            "name": "enhancement",
            "node_id": "MDU6TGFiZWw3Nzk5NzQ3Ng==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/enhancement"
        },
        {
            "color": "FEF2C0",
            "default": false,
            "description": "performance, latency, cpu/memory usage",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "locked": true,
    "merge_commit_sha": "82d52b229df711b710862ce772603ea55113a32e",
    "merged_at": "2019-08-27T23:56:03Z",
    "milestone": {
        "closed_at": "2019-09-18T04:28:47Z",
        "closed_issues": 219,
        "created_at": "2018-12-30T22:10:04Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2019-09-15T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/21",
        "id": 3930226,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/21/labels",
        "node_id": "MDk6TWlsZXN0b25lMzkzMDIyNg==",
        "number": 21,
        "open_issues": 0,
        "state": "closed",
        "title": "0.4",
        "updated_at": "2022-05-04T11:57:42Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/21"
    },
    "node_id": "MDExOlB1bGxSZXF1ZXN0NjI2ODk4MjE=",
    "number": 4448,
    "patch_url": "https://github.com/neovim/neovim/pull/4448.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/4448/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3157baed83b7e94f2ff92e6fd97e85dab41a1c94",
    "title": "paste: redesign, fixes, 10x speedup",
    "updated_at": "2024-09-05T07:12:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/4448",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
        "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
        "followers_url": "https://api.github.com/users/justinmk/followers",
        "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
        "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/justinmk",
        "id": 1359421,
        "login": "justinmk",
        "node_id": "MDQ6VXNlcjEzNTk0MjE=",
        "organizations_url": "https://api.github.com/users/justinmk/orgs",
        "received_events_url": "https://api.github.com/users/justinmk/received_events",
        "repos_url": "https://api.github.com/users/justinmk/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/justinmk"
    }
}