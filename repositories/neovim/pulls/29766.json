{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29766/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29766/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/29766"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/29766"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29766/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/caeac23f79d2f25b3439fc4bd990f26fb26822a0"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": {
        "commit_message": "fix(scrollbind): properly take filler/virtual lines into account",
        "commit_title": "Merge pull request #29766 from lewis6991/fix/scrollbind",
        "enabled_by": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        },
        "merge_method": "rebase"
    },
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5522,
            "forks_count": 5522,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1780,
            "open_issues_count": 1780,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-08-06T02:02:19Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 281986,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80581,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-08-06T00:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80581,
            "watchers_count": 80581,
            "web_commit_signoff_required": false
        },
        "sha": "c9b129a02ab46fc80c81f3f9cabed4040a7462c0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem:\n\n`'scrollbind'` does not work properly if the window being scrolled\nautomatically contains any filler/virtual lines (except for diff filler\nlines).\n\nThis is because when the scrollbind check is done, the logic only\nconsiders changes to topline which are represented as line numbers.\n\nSolution:\n\nWrite the logic for determine the scroll amount to take into account\nfiller/virtual lines.\n\nFixes #29751",
    "closed_at": "2024-07-31T10:33:32Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1683581230"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683581230"
                }
            },
            "author_association": "MEMBER",
            "body": "Using `plines_win()` may be incorrect here, as that counts the number of screen lines, while `scrollup()` and `scrolldown()` may scroll by screen lines or text lines depending on the value of the 'smoothscroll' option.\r\n\r\nActually, previously (and in Vim) the opposite problem may have existed, where the number of text lines is always used.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-18T22:49:43Z",
            "diff_hunk": "@@ -2145,23 +2147,40 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;\n+\n+  if (orig_topline == old_topline) {\n+    return -topfill_diff;\n+  }\n+\n+  int count = -abs(topfill_diff);\n+\n+  int top = MIN(orig_topline, old_topline);\n+  int bot = MAX(orig_topline, old_topline);\n+  int buflen = orig_wp->w_buffer->b_ml.ml_line_count;\n+  for (int i = top + 1; i <= bot; i++) {\n+    count += plines_win(orig_wp, i, buflen);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1683581230",
            "id": 1683581230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kWWku",
            "original_commit_id": "9ae088a34dc68d32788c116d68bdfe4cd19e1018",
            "original_line": 2164,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187027570,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683581230/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-18T22:49:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683581230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1683583734"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683583734"
                }
            },
            "author_association": "MEMBER",
            "body": "I haven't put any work in to make this work for smooth scroll, which afaik is still a bit experimental/new. So that'll need more changes.\n\nEither way, using plines should still be better than using text lines as `scrollup()`/`scrolldown()` specifically handle topfill, so we need to send numbers to it which include filler lines.\n\nWhat I'm not sure about is whether the number we pass should include folds or not.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-18T22:54:43Z",
            "diff_hunk": "@@ -2145,23 +2147,40 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;\n+\n+  if (orig_topline == old_topline) {\n+    return -topfill_diff;\n+  }\n+\n+  int count = -abs(topfill_diff);\n+\n+  int top = MIN(orig_topline, old_topline);\n+  int bot = MAX(orig_topline, old_topline);\n+  int buflen = orig_wp->w_buffer->b_ml.ml_line_count;\n+  for (int i = top + 1; i <= bot; i++) {\n+    count += plines_win(orig_wp, i, buflen);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1683583734",
            "id": 1683583734,
            "in_reply_to_id": 1683581230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kWXL2",
            "original_commit_id": "9ae088a34dc68d32788c116d68bdfe4cd19e1018",
            "original_line": 2164,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187031188,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683583734/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-18T22:55:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683583734",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1683589897"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683589897"
                }
            },
            "author_association": "MEMBER",
            "body": "I was talking about wrapped lines, not filler lines. Also, why is `buflen` passed as the third argument of `plines_win()`? That'll always be true. The alternative I'm suggesting is to use `win_get_fill(orig_wp, i) + 1` instead.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-18T23:05:49Z",
            "diff_hunk": "@@ -2145,23 +2147,40 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;\n+\n+  if (orig_topline == old_topline) {\n+    return -topfill_diff;\n+  }\n+\n+  int count = -abs(topfill_diff);\n+\n+  int top = MIN(orig_topline, old_topline);\n+  int bot = MAX(orig_topline, old_topline);\n+  int buflen = orig_wp->w_buffer->b_ml.ml_line_count;\n+  for (int i = top + 1; i <= bot; i++) {\n+    count += plines_win(orig_wp, i, buflen);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1683589897",
            "id": 1683589897,
            "in_reply_to_id": 1683581230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kWYsJ",
            "original_commit_id": "9ae088a34dc68d32788c116d68bdfe4cd19e1018",
            "original_line": 2164,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187043192,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683589897/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-18T23:10:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683589897",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1683594361"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683594361"
                }
            },
            "author_association": "MEMBER",
            "body": "I know, the changes here don't improve the situation for wrapped lines, but I don't think regresses it either. Or does it regress because plines respects wrapping? If so I can avoid using plines.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-18T23:14:26Z",
            "diff_hunk": "@@ -2145,23 +2147,40 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;\n+\n+  if (orig_topline == old_topline) {\n+    return -topfill_diff;\n+  }\n+\n+  int count = -abs(topfill_diff);\n+\n+  int top = MIN(orig_topline, old_topline);\n+  int bot = MAX(orig_topline, old_topline);\n+  int buflen = orig_wp->w_buffer->b_ml.ml_line_count;\n+  for (int i = top + 1; i <= bot; i++) {\n+    count += plines_win(orig_wp, i, buflen);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1683594361",
            "id": 1683594361,
            "in_reply_to_id": 1683581230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kWZx5",
            "original_commit_id": "9ae088a34dc68d32788c116d68bdfe4cd19e1018",
            "original_line": 2164,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187049245,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683594361/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-18T23:14:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683594361",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1683629918"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683629918"
                }
            },
            "author_association": "MEMBER",
            "body": "I think it does regress. When a line is wrapped is one window, it's more common for the corresponding line to also be wrapped (and occupy the same number of screen lines) in the other window. When scrolling over such a line with 'nosmoothscroll', the old behavior works correctly, but the new behavior doesn't.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-19T00:30:34Z",
            "diff_hunk": "@@ -2145,23 +2147,40 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;\n+\n+  if (orig_topline == old_topline) {\n+    return -topfill_diff;\n+  }\n+\n+  int count = -abs(topfill_diff);\n+\n+  int top = MIN(orig_topline, old_topline);\n+  int bot = MAX(orig_topline, old_topline);\n+  int buflen = orig_wp->w_buffer->b_ml.ml_line_count;\n+  for (int i = top + 1; i <= bot; i++) {\n+    count += plines_win(orig_wp, i, buflen);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1683629918",
            "id": 1683629918,
            "in_reply_to_id": 1683581230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kWide",
            "original_commit_id": "9ae088a34dc68d32788c116d68bdfe4cd19e1018",
            "original_line": 2164,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187094860,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683629918/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-19T00:30:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1683629918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1684049370"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684049370"
                }
            },
            "author_association": "MEMBER",
            "body": "The `orig_topline` name sounds confusing as it's not clear that it's newer than `old_topline`.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-19T08:36:20Z",
            "diff_hunk": "@@ -2145,23 +2147,39 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1684049370",
            "id": 1684049370,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kYI3a",
            "original_commit_id": "9d6e409d315ccef796b0d0b2214b6c44d26f5dd9",
            "original_line": 2152,
            "original_position": 35,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187691830,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684049370/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-19T08:41:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684049370",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1684055230"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684055230"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't seems correct. I think it should be like this:\r\n```suggestion\r\n  int count = orig_topline > old_topline ? -topfill_diff : topfill_diff;\r\n```",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-19T08:41:18Z",
            "diff_hunk": "@@ -2145,23 +2147,39 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;\n+\n+  if (orig_topline == old_topline) {\n+    return -topfill_diff;\n+  }\n+\n+  int count = -abs(topfill_diff);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1684055230",
            "id": 1684055230,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kYKS-",
            "original_commit_id": "9d6e409d315ccef796b0d0b2214b6c44d26f5dd9",
            "original_line": 2158,
            "original_position": 41,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187691830,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684055230/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-19T08:41:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684055230",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1684100612"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684100612"
                }
            },
            "author_association": "MEMBER",
            "body": "I agree, but I couldn't think of a better name. Any suggestions? Maybe `ref_topline` and `ref_old_topline`, or `base_topline` and `base_old_topline`?",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-19T09:19:20Z",
            "diff_hunk": "@@ -2145,23 +2147,39 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *orig_wp, int old_topline, int topfill_diff)\n+{\n+  int orig_topline = orig_wp->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1684100612",
            "id": 1684100612,
            "in_reply_to_id": 1684049370,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kYVYE",
            "original_commit_id": "9d6e409d315ccef796b0d0b2214b6c44d26f5dd9",
            "original_line": 2152,
            "original_position": 35,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2187771827,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684100612/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-19T09:19:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684100612",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1684547887"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684547887"
                }
            },
            "author_association": "MEMBER",
            "body": "Hmm, I meant it's not clear that \"orig\" is newer than old. There is still an \"orig\" here.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-19T15:29:47Z",
            "diff_hunk": "@@ -2145,23 +2147,39 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *ref_wp, int ref_old_topline, int topfill_diff)\n+{\n+  int ref_orig_topline = ref_wp->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1684547887",
            "id": 1684547887,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kaCkv",
            "original_commit_id": "d447ce5c766b3215673005d296d5851a5eaffa57",
            "original_line": 2152,
            "original_position": 35,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2188523276,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684547887/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-19T15:29:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684547887",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1684549064"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684549064"
                }
            },
            "author_association": "MEMBER",
            "body": "Sorry, that's meant to say `ref_topline`.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-19T15:30:53Z",
            "diff_hunk": "@@ -2145,23 +2147,39 @@ void do_check_scrollbind(bool check)\n   old_leftcol = curwin->w_leftcol;\n }\n \n+static int get_scrollbind_amount(win_T *ref_wp, int ref_old_topline, int topfill_diff)\n+{\n+  int ref_orig_topline = ref_wp->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1684549064",
            "id": 1684549064,
            "in_reply_to_id": 1684547887,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kaC3I",
            "original_commit_id": "d447ce5c766b3215673005d296d5851a5eaffa57",
            "original_line": 2152,
            "original_position": 35,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2188525241,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684549064/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-19T15:30:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1684549064",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1686344388"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1686344388"
                }
            },
            "author_association": "MEMBER",
            "body": "You need to use `plines_m_win_fill(wp, 1, wp->w_topline)` here too.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-22T10:39:57Z",
            "diff_hunk": "@@ -5593,34 +5594,29 @@ static void ex_swapname(exarg_T *eap)\n /// (1998-11-02 16:21:01  R. Edward Ralston <eralston@computer.org>)\n static void ex_syncbind(exarg_T *eap)\n {\n-  linenr_T topline;\n-  int y;\n-  linenr_T old_linenr = curwin->w_cursor.lnum;\n+  linenr_T topline;  // Target topline (including fill)\n \n   setpcmark();\n \n-  // determine max topline\n+  // determine max (virtual) topline\n   if (curwin->w_p_scb) {\n     topline = curwin->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1686344388",
            "id": 1686344388,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kg5LE",
            "original_commit_id": "8dd60c17e618dd55d7b3fe0d2cc3b9a2e41fba01",
            "original_line": 5603,
            "original_position": 22,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 2191233308,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1686344388/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-22T10:39:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1686344388",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1686555161"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1686555161"
                }
            },
            "author_association": "MEMBER",
            "body": "Fast path for the common case\r\n```suggestion\r\n  if (!win_may_fill(wp)) {\r\n    return last - first + 1;\r\n  }\r\n  int count = 0;\r\n```",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-22T13:28:01Z",
            "diff_hunk": "@@ -907,6 +907,19 @@ int plines_m_win(win_T *wp, linenr_T first, linenr_T last, int max)\n   return MIN(max, count);\n }\n \n+/// Return number of window lines a physical line range will occupy.\n+/// Only considers real and filler lines.\n+///\n+/// Mainly used for calculating scrolling offsets.\n+int plines_m_win_fill(win_T *wp, linenr_T first, linenr_T last)\n+{\n+  int count = 0;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1686555161",
            "id": 1686555161,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5khsoZ",
            "original_commit_id": "8dd60c17e618dd55d7b3fe0d2cc3b9a2e41fba01",
            "original_line": 916,
            "original_position": 10,
            "original_start_line": null,
            "path": "src/nvim/plines.c",
            "position": null,
            "pull_request_review_id": 2191581223,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1686555161/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-22T13:28:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1686555161",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1687965894"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1687965894"
                }
            },
            "author_association": "MEMBER",
            "body": "Thinking about this again, the computation of the amount to scroll here isn't correct. When the two windows have buffers with different line counts and the topline at the longer buffer is larger than the line count of the shorter buffer, scrolling the longer buffer shouldn't scroll the shorter buffer because `w_scbind_pos` of the shorter buffer is always beyond its line count. But here `w_scbind_pos` is always within line count, which leads to incorrect scrolling.\r\n\r\nBefore:\r\n[Before.webm](https://github.com/user-attachments/assets/e76e4266-61bb-4a80-9afc-fabe3968e89a)\r\n\r\nAfter:\r\n[After.webm](https://github.com/user-attachments/assets/c9063023-6ad0-4fd5-a42c-0a6a10d50a1f)",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-23T12:20:57Z",
            "diff_hunk": "@@ -2173,35 +2189,33 @@ void check_scrollbind(linenr_T topline_diff, int leftcol_diff)\n       continue;\n     }\n \n+    bool did_ver = false;\n+\n     // do the vertical scroll\n     if (want_ver) {\n       if (old_curwin->w_p_diff && curwin->w_p_diff) {\n         diff_set_topline(old_curwin, curwin);\n+        did_ver = true;\n       } else {\n-        curwin->w_scbind_pos += topline_diff;\n-        topline = (linenr_T)curwin->w_scbind_pos;\n-        if (topline > curbuf->b_ml.ml_line_count) {\n-          topline = curbuf->b_ml.ml_line_count;\n-        }\n-        if (topline < 1) {\n-          topline = 1;\n-        }\n-\n-        y = topline - curwin->w_topline;\n+        int y = get_scrollbind_amount(old_curwin, old_topline, topfill_diff);\n         if (y > 0) {\n           scrollup(curwin, y, false);\n         } else {\n           scrolldown(curwin, -y, false);\n         }\n+        curwin->w_scbind_pos = curwin->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1687965894",
            "id": 1687965894,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5knFDG",
            "original_commit_id": "f4d6f0ed509430546ea2aa80a5a45ee680587a63",
            "original_line": 2206,
            "original_position": 101,
            "original_start_line": 2200,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2193828374,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1687965894/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-07-23T12:20:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1687965894",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1688066593"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1688066593"
                }
            },
            "author_association": "MEMBER",
            "body": "Thanks, fixed with testcases.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-23T13:28:25Z",
            "diff_hunk": "@@ -2173,35 +2189,33 @@ void check_scrollbind(linenr_T topline_diff, int leftcol_diff)\n       continue;\n     }\n \n+    bool did_ver = false;\n+\n     // do the vertical scroll\n     if (want_ver) {\n       if (old_curwin->w_p_diff && curwin->w_p_diff) {\n         diff_set_topline(old_curwin, curwin);\n+        did_ver = true;\n       } else {\n-        curwin->w_scbind_pos += topline_diff;\n-        topline = (linenr_T)curwin->w_scbind_pos;\n-        if (topline > curbuf->b_ml.ml_line_count) {\n-          topline = curbuf->b_ml.ml_line_count;\n-        }\n-        if (topline < 1) {\n-          topline = 1;\n-        }\n-\n-        y = topline - curwin->w_topline;\n+        int y = get_scrollbind_amount(old_curwin, old_topline, topfill_diff);\n         if (y > 0) {\n           scrollup(curwin, y, false);\n         } else {\n           scrolldown(curwin, -y, false);\n         }\n+        curwin->w_scbind_pos = curwin->w_topline;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1688066593",
            "id": 1688066593,
            "in_reply_to_id": 1687965894,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kndoh",
            "original_commit_id": "f4d6f0ed509430546ea2aa80a5a45ee680587a63",
            "original_line": 2206,
            "original_position": 101,
            "original_start_line": 2200,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2193993872,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1688066593/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-07-23T13:28:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1688066593",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1689615545"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689615545"
                }
            },
            "author_association": "MEMBER",
            "body": "This doesn't seem correct. This assignment should happen before the loop above.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-24T11:36:25Z",
            "diff_hunk": "@@ -5593,45 +5594,43 @@ static void ex_swapname(exarg_T *eap)\n /// (1998-11-02 16:21:01  R. Edward Ralston <eralston@computer.org>)\n static void ex_syncbind(exarg_T *eap)\n {\n-  linenr_T topline;\n-  int y;\n-  linenr_T old_linenr = curwin->w_cursor.lnum;\n+  linenr_T vtopline;  // Target topline (including fill)\n \n   setpcmark();\n \n-  // determine max topline\n+  // determine max (virtual) topline\n   if (curwin->w_p_scb) {\n-    topline = curwin->w_topline;\n+    vtopline = plines_m_win_fill(curwin, 1, curwin->w_topline);\n     FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n       if (wp->w_p_scb && wp->w_buffer) {\n-        y = wp->w_buffer->b_ml.ml_line_count - get_scrolloff_value(curwin);\n-        if (topline > y) {\n-          topline = y;\n-        }\n+        linenr_T y = plines_m_win_fill(wp, 1, wp->w_buffer->b_ml.ml_line_count)\n+                     - get_scrolloff_value(curwin);\n+        vtopline = MIN(vtopline, y);\n       }\n     }\n-    if (topline < 1) {\n-      topline = 1;\n-    }\n+    vtopline = MAX(vtopline, 1);\n   } else {\n-    topline = 1;\n+    vtopline = 1;\n   }\n \n   // Set all scrollbind windows to the same topline.\n   FOR_ALL_WINDOWS_IN_TAB(wp, curtab) {\n     if (wp->w_p_scb) {\n-      y = topline - wp->w_topline;\n+      int y = vtopline - plines_m_win_fill(wp, 1, wp->w_topline);\n       if (y > 0) {\n         scrollup(wp, y, true);\n       } else {\n         scrolldown(wp, -y, true);\n       }\n-      wp->w_scbind_pos = topline;\n+      wp->w_scbind_pos = vtopline;\n       redraw_later(wp, UPD_VALID);\n       cursor_correct(wp);\n       wp->w_redr_status = true;\n     }\n   }\n+\n+  linenr_T old_linenr = curwin->w_cursor.lnum;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1689615545",
            "id": 1689615545,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5ktXy5",
            "original_commit_id": "6afe9a2fd68e55f18c3c123571d327be52b92154",
            "original_line": 5632,
            "original_position": 62,
            "original_start_line": null,
            "path": "src/nvim/ex_docmd.c",
            "position": null,
            "pull_request_review_id": 2196453191,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689615545/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-24T11:41:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689615545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1689730383"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689730383"
                }
            },
            "author_association": "MEMBER",
            "body": "Doing this is more expensive than before. I wonder if there is a way to avoid doing this everytime.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-24T12:45:16Z",
            "diff_hunk": "@@ -2096,17 +2096,23 @@ static void display_showcmd(void)\n   grid_line_flush();\n }\n \n+int get_vtopline(win_T *wp)\n+{\n+  return plines_m_win_fill(wp, 1, wp->w_topline) - wp->w_topfill;\n+}\n+\n /// When \"check\" is false, prepare for commands that scroll the window.\n /// When \"check\" is true, take care of scroll-binding after the window has\n /// scrolled.  Called from normal_cmd() and edit().\n void do_check_scrollbind(bool check)\n {\n   static win_T *old_curwin = NULL;\n-  static linenr_T old_topline = 0;\n-  static int old_topfill = 0;\n+  static linenr_T old_vtopline = 0;\n   static buf_T *old_buf = NULL;\n   static colnr_T old_leftcol = 0;\n \n+  int vtopline = get_vtopline(curwin);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1689730383",
            "id": 1689730383,
            "line": 2110,
            "node_id": "PRRC_kwDOAPphoM5ktz1P",
            "original_commit_id": "bb261980b70e00687e3034200f855447d64a9fd8",
            "original_line": 2110,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": 21,
            "pull_request_review_id": 2196639076,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689730383/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-24T12:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689730383",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1689739355"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689739355"
                }
            },
            "author_association": "MEMBER",
            "body": "cc @bfredl",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-24T12:50:49Z",
            "diff_hunk": "@@ -2096,17 +2096,23 @@ static void display_showcmd(void)\n   grid_line_flush();\n }\n \n+int get_vtopline(win_T *wp)\n+{\n+  return plines_m_win_fill(wp, 1, wp->w_topline) - wp->w_topfill;\n+}\n+\n /// When \"check\" is false, prepare for commands that scroll the window.\n /// When \"check\" is true, take care of scroll-binding after the window has\n /// scrolled.  Called from normal_cmd() and edit().\n void do_check_scrollbind(bool check)\n {\n   static win_T *old_curwin = NULL;\n-  static linenr_T old_topline = 0;\n-  static int old_topfill = 0;\n+  static linenr_T old_vtopline = 0;\n   static buf_T *old_buf = NULL;\n   static colnr_T old_leftcol = 0;\n \n+  int vtopline = get_vtopline(curwin);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1689739355",
            "id": 1689739355,
            "in_reply_to_id": 1689730383,
            "line": 2110,
            "node_id": "PRRC_kwDOAPphoM5kt2Bb",
            "original_commit_id": "bb261980b70e00687e3034200f855447d64a9fd8",
            "original_line": 2110,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": 21,
            "pull_request_review_id": 2196650903,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689739355/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-24T12:50:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689739355",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1689822135"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689822135"
                }
            },
            "author_association": "MEMBER",
            "body": "The static variables still need to be updated.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-24T13:34:59Z",
            "diff_hunk": "@@ -2106,42 +2106,44 @@ int get_vtopline(win_T *wp)\n /// scrolled.  Called from normal_cmd() and edit().\n void do_check_scrollbind(bool check)\n {\n+  if (!check || !curwin->w_p_scb) {\n+    return;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1689822135",
            "id": 1689822135,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kuKO3",
            "original_commit_id": "21c45b245d001f0c6b666cdd29fa3e45ab627609",
            "original_line": 2110,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2196770618,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689822135/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-24T13:35:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689822135",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1689830518"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689830518"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, just realised.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-24T13:39:00Z",
            "diff_hunk": "@@ -2106,42 +2106,44 @@ int get_vtopline(win_T *wp)\n /// scrolled.  Called from normal_cmd() and edit().\n void do_check_scrollbind(bool check)\n {\n+  if (!check || !curwin->w_p_scb) {\n+    return;",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1689830518",
            "id": 1689830518,
            "in_reply_to_id": 1689822135,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5kuMR2",
            "original_commit_id": "21c45b245d001f0c6b666cdd29fa3e45ab627609",
            "original_line": 2110,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 2196781038,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689830518/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-24T13:39:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1689830518",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/29766#discussion_r1696534565"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/29766"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1696534565"
                }
            },
            "author_association": "MEMBER",
            "body": "This should be efficient now as `plines_m_win_fill` now invokes just one iterator on the marktree.",
            "commit_id": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
            "created_at": "2024-07-30T08:17:34Z",
            "diff_hunk": "@@ -2096,17 +2096,23 @@ static void display_showcmd(void)\n   grid_line_flush();\n }\n \n+int get_vtopline(win_T *wp)\n+{\n+  return plines_m_win_fill(wp, 1, wp->w_topline) - wp->w_topfill;\n+}\n+\n /// When \"check\" is false, prepare for commands that scroll the window.\n /// When \"check\" is true, take care of scroll-binding after the window has\n /// scrolled.  Called from normal_cmd() and edit().\n void do_check_scrollbind(bool check)\n {\n   static win_T *old_curwin = NULL;\n-  static linenr_T old_topline = 0;\n-  static int old_topfill = 0;\n+  static linenr_T old_vtopline = 0;\n   static buf_T *old_buf = NULL;\n   static colnr_T old_leftcol = 0;\n \n+  int vtopline = get_vtopline(curwin);",
            "html_url": "https://github.com/neovim/neovim/pull/29766#discussion_r1696534565",
            "id": 1696534565,
            "in_reply_to_id": 1689730383,
            "line": 2110,
            "node_id": "PRRC_kwDOAPphoM5lHxAl",
            "original_commit_id": "bb261980b70e00687e3034200f855447d64a9fd8",
            "original_line": 2110,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": 21,
            "pull_request_review_id": 2206992093,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1696534565/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-07-30T08:17:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1696534565",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "The commit message is missing a 't' at the end",
            "created_at": "2024-07-19T08:30:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2238654588",
            "id": 2238654588,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6Fbyh8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2238654588/reactions"
            },
            "updated_at": "2024-07-21T10:04:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2238654588",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The same change may also be needed in `ex_syncbind()`.\r\n\r\nI don't think it does. It might need some adjustment to account for filler, but I don't know exactly what.",
            "created_at": "2024-07-21T10:04:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2241552281",
            "id": 2241552281,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6Fm1-Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241552281/reactions"
            },
            "updated_at": "2024-07-21T10:04:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241552281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, I've had a go. I think this is right.",
            "created_at": "2024-07-21T10:46:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2241563518",
            "id": 2241563518,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6Fm4t-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241563518/reactions"
            },
            "updated_at": "2024-07-21T10:46:38Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2241563518",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@luukvbaal do you have any idea how we can refactor `decor_virt_lines` so it doesn't consider folding state and have that logic outside? For context I want to change `decor_virt_lines()` to take a `start_row` and `end_row` as opposed to `lnum` to make calculating filler lines more efficient for scrollbind.",
            "created_at": "2024-07-24T16:37:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2248458922",
            "id": 2248458922,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GBMKq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2248458922/reactions"
            },
            "updated_at": "2024-07-24T16:37:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2248458922",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Sorry I haven't had time to look into this really and it looked like you and zeer had it covered. I also don't really use 'scrollbind'/diff mode so I'm not that familiar with how it even is supposed to work.\r\n\r\nFor my understanding, is it not a bit ambiguous what is a \"useful\" scroll amount to keep scrollbound windows in sync in the presence of filler lines? At least when it concerns windows with the same buffer but already different toplines, or even different buffers with different number of filler lines? I think the only thing that would make sense is to always scroll the same number of screen lines, regardless of the number of filler lines. Is that what we're trying to achieve here?\r\n\r\n> do you have any idea how we can refactor decor_virt_lines so it doesn't consider folding state and have that logic outside?\r\n\r\nI could take a look, but why do we want this? It seems to me that even when checking a line range, whether lines in that range are folded and thus showing filler lines or not is still relevant?\r\n\r\n",
            "created_at": "2024-07-24T19:41:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2248769715",
            "id": 2248769715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GCYCz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2248769715/reactions"
            },
            "updated_at": "2024-07-24T19:41:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2248769715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I think the only thing that would make sense is to always scroll the same number of screen lines, regardless of the number of filler lines. Is that what we're trying to achieve here?\n\nYep. You can see the issue being fixed here by running `:Gitsigns blame` where the virtual lines are messing up scrollbind.\n\nThis change fixes all the logic by changing from physical lines to screen lines. The problem with that is it involves a lot of line and marktree scanning which I'd like to optimise.\n\n> I could take a look, but why do we want this? It seems to me that even when checking a line range, whether lines in that range are folded and thus showing filler lines or not is still relevant?\n\nYeah maybe. At the moment this change doesn't consider folded lines at all (future improvement?), but for now I want to at least make sure everything is handled consistently. And tbh I'm not fully convinced scrollbind needs to consider folds since all the calculations are for everything above topline. If the user wants scrollbind with folds, then they just need to ensure the folds are consistent in each window and then it should work regardless.\n\nAt the very least I want to pass a range into `decor_virt_lines()` as opposed to calling it for each individual line.",
            "created_at": "2024-07-24T21:26:03Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2248928564",
            "id": 2248928564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GC-00",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2248928564/reactions"
            },
            "updated_at": "2024-07-24T21:26:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2248928564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> At the very least I want to pass a range into decor_virt_lines() as opposed to calling it for each individual line.\r\n\r\nThat seems fine to me. But rather than refactoring to handle the folds elsewhere, I think it should then handle folds for the entire range. `decor_virt_lines()` should still return what it does currently, even if undocumented. I.e. the number of \"active\" virtual lines. When checking a range, virtual lines will be active depending on whether it's above/below line is folded. I can't imagine how glancing over that fact for scrollbind would make sense, even if it only checks lines above the current topline?",
            "created_at": "2024-07-25T14:13:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2250429543",
            "id": 2250429543,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GItRn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2250429543/reactions"
            },
            "updated_at": "2024-07-25T14:13:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2250429543",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I can't imagine how glancing over that fact for scrollbind would make sense, even if it only checks lines above the current topline?\r\n\r\nNo where else in scrollbind does it take into account folded lines, so considering it for only virtual lines (always) will lead to edge case bugs in addition to being less efficient.\r\n\r\nI also found the fold logic in `decor_virt_lines()` confusing. The code that needs to know about active virtual lines for a specific line number should just call `decor_virt_lines()` with the appropriate range. I don't understand the discontinuity with `row`, `start_row` and `end_row`. This shouldn't all be mixed together.\r\n\r\nThe has_fold argument is quite convoluted also since the function also calls `hasFolding` for the line above.",
            "created_at": "2024-07-25T15:38:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2250718141",
            "id": 2250718141,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GJzu9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2250718141/reactions"
            },
            "updated_at": "2024-07-25T15:41:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2250718141",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> No where else in scrollbind does it take into account folded lines, so considering it for only virtual lines (always) will lead to edge case bugs in addition to being less efficient.\r\n\r\nI don't think scrollbind needs to take into account folded lines either, at least not the hidden/shown height difference of the hidden buffer lines. But surely a function that returns the number of virtual lines should return the number of **active** virtual lines, not also include those that are hidden for whatever reason (in this case because they are attached to a closed fold).\r\n\r\nYes, the `decor_virt_lines` arguments are (somewhat needlessly) confusing for performance reasons. Because it is called from `win_line()` where `has_fold` is already known, and `lines` is populated for further use. But also called from other places where that doesn't hold.\r\n\r\nIf you are convinced that we need a function that returns the number of virtual lines for a certain range, regardless of whether they are folded or not, perhaps that should just be a separate function. Updating the existing function to properly handle folds for the entire range seems to make more sense to me though. That it is less efficient seems besides the point if it is the only correct solution.",
            "created_at": "2024-07-25T16:02:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2250807981",
            "id": 2250807981,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GKJqt",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2250807981/reactions"
            },
            "updated_at": "2024-07-25T16:02:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2250807981",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I don't think scrollbind needs to take into account folded lines either, at least not the hidden/shown height difference of the hidden buffer lines. But surely a function that returns the number of virtual lines should return the number of active virtual lines, not also include those that are hidden for whatever reason (in this case because they are attached to a closed fold).\n\nNo. Whether virtual lines are active or not is a distinction which different callers may or may not care about. win_line wants active, scrollbind does not. And quite frankly should be done at a higher level and not directly in the decor functions.\n\n> Yes, the decor_virt_lines arguments are (somewhat needlessly) confusing for performance reasons. Because it is called from win_line() where has_fold is already known, and lines is populated for further use. But also called from other places where that doesn't hold.\n\nHonestly, seems like a micro-op to me. If saving a single call to `hasFolding` is so important, you should do it for the other line too in a function that's specialised specifically for win_line in drawline.c. I expect in practice this optimisation makes a negligible impact. As opposed to scrollbind that needs to scan everything above the topline on many normal mode operations.\n\n> If you are convinced that we need a function that returns the number of virtual lines for a certain range, regardless of whether they are folded or not, perhaps that should just be a separate function.\n\nIdeally we have one general function, and layer other functions on top for more specialised use cases. If win_line is already passing a pointer for the virt_lines, then doesn't it have all the information it needs to figure out the active virtual lines?\n\nRegardless, has_fold is too weird and should go/(be done differently), and whether active/all virtual lines are needed could be an option.\n\n> Updating the existing function to properly handle folds for the entire range seems to make more sense to me though.\n\nIt only makes sense if it's needed. Would be nice, but not needed here. It could be used to optimise plines.c.\n\n---\n\nOne thing that I don't understand about the function is that the folding variables only affect the bounds of the iterator. I tried hard coding the bounds of the iterator to be the largest value they need to be but that didn't work. Surely the bounds just need to be big enough to iterate the lines we care about and the actual selection of the marks is filtered in the loop body? Do you know why that doesn't work? If we can hard code the bounds to be larger, then we can avoid all calls to `hasFolding`?",
            "created_at": "2024-07-25T18:17:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2251130434",
            "id": 2251130434,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GLYZC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2251130434/reactions"
            },
            "updated_at": "2024-07-25T18:17:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2251130434",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Whether virtual lines are active or not is a distinction which different callers may or may not care about. win_line wants active, scrollbind does not. And quite frankly should be done at a higher level and not directly in the decor functions.\r\n\r\nCan you explain why it doesn't? I am missing the reason why scrollbind shouldn't ignore inactive virtual lines. Repeating myself here but in my mind anything plines adjacent counting the number of virtual lines surely only cares about ones that are actually visible. Whether hidden by a closed fold, `invalid` extmark property (which I notice isn't handled in `decor_virt_lines()` #29858), or otherwise.\r\n\r\n> Honestly, seems like a micro-op to me. If saving a single call to hasFolding is so important, you should do it for the other line too in a function that's specialised specifically for win_line in drawline.c. I expect in practice this optimisation makes a negligible impact.\r\n\r\nI'm inclined to agree but you should argue that with @zeertzjq, who added it [here](https://github.com/neovim/neovim/pull/21930#issuecomment-1399469275).\r\n\r\n> As opposed to scrollbind that needs to scan everything above the topline on many normal mode operations.\r\n\r\nDoes it make a non-negligible impact there? Even though that still seems irrelevant to me if it is necessary for correctness.\r\n\r\n> Ideally we have one general function, and layer other functions on top for more specialised use cases. If win_line is already passing a pointer for the virt_lines, then doesn't it have all the information it needs to figure out the active virtual lines?\r\n\r\nNot currently no, the information of whether it belongs to a \"below\" or \"above\" line is lost when returned to win_line(). I suppose it could be passed along and handled back at the call site but I'm not sure that would make it more clear.\r\n\r\n> One thing that I don't understand about the function is that the folding variables only affect the bounds of the iterator. I tried hard coding the bounds of the iterator to be the largest value they need to be but that didn't work. Surely the bounds just need to be big enough to iterate the lines we care about and the actual selection of the marks is filtered in the loop body? Do you know why that doesn't work? If we can hard code the bounds to be larger, then we can avoid all calls to hasFolding?\r\n\r\nNot quite sure I understand. The only reason we are dealing with any bounds to begin with, as opposed to a single line, is because win_line() draws virtual lines for both the previous and currently drawn line, depending on the `virt_lines_above` property. We are only adjusting the bounds so as to filter out virtual lines belonging to folded lines, so that they won't be drawn. Could be done inside the loop body too yeah, and would have to be when handling a larger range, but adjusting the bounds is more efficient currently. I don't see how that could avoid calling `hasFolding()`, unless you mean just returning all virtual lines, and handling it in `win_line()`, given that the returned lines also store the line they belong to. Which again I'm not sure would be an improvement.",
            "created_at": "2024-07-25T18:46:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2251180808",
            "id": 2251180808,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GLksI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2251180808/reactions"
            },
            "updated_at": "2024-07-25T19:15:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2251180808",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Can you explain why it doesn't? I am missing the reason why scrollbind shouldn't ignore inactive virtual lines. Repeating myself here but in my mind anything plines adjacent counting the number of virtual lines surely only cares about ones that are actually visible. Whether hidden by a closed fold, invalid extmark property (which I notice isn't handled in decor_virt_lines() https://github.com/neovim/neovim/pull/29858), or otherwise.\r\n\r\nScrollbind and folds both predate Neovim, and scrollbind is just designed to not consider folds. Changing to consider folds is neither correct or wrong, but changing it now will cause unnecessary, and likely unwanted changes in behaviour. The only objective of this PR, is for virtual lines to be properly accounted for so they are treated the same as physical lines.\r\n\r\nVim's version of virtual lines are implemented completely differenly as they are treated like physical lines and don't require the changes in this PR, but this PR achieves the same behaviour of vim with virtual lines and scrollbind.\r\n\r\nFiller lines also predate Neovim, however scrollbind has very special handling for diff mode, and produces behaviour similar to what this PR does with virtual lines. In fact once we have this change. It may be possible to re-implement large parts of `diff.c` directly in Lua.\r\n\r\n> Does it make a non-negligible impact there? Even though that still seems irrelevant to me if it is necessary for correctness.\r\n\r\nI haven't measured, but if you're scrolling the bottom of a 10000 line file, it's going to be at least two magnitudes worse than calling `hasFolding` twice for each line in a redraw.\r\n\r\n> Not quite sure I understand. The only reason we are dealing with any bounds to begin with, as opposed to a single line, is because win_line() draws virtual lines for both the previous and currently drawn line, depending on the virt_lines_above property. We are only adjusting the bounds so as to filter out virtual lines belonging to folded lines, so that they won't be drawn. Could be done inside the loop body too yeah, and would have to be when handling a larger range, but adjusting the bounds is more efficient currently. I don't see how that could avoid calling hasFolding(), unless you mean just returning all virtual lines, and handling it in win_line(), given that the returned lines also store the line they belong to. Which again I'm not sure would be an improvement.\r\n\r\nThanks I think I understand it now.",
            "created_at": "2024-07-26T10:45:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2252492920",
            "id": 2252492920,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GQlB4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252492920/reactions"
            },
            "updated_at": "2024-07-26T10:45:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252492920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Ok, I've changed `decor_virt_lines()` with the following:\r\n\r\n- It now handles a range.\r\n- Removed `has_fold` argument.\r\n- Added `active_only` argument which controls whether folds are considered or not.\r\n- Encapsulated all the fold related logic into a `virt_line_row_is_active()` predicate which is called in the loop.\r\n  - This for me makes the function much easier to reason about.\r\n\r\nFor lines that don't have virtual lines this should be more efficient as it should avoid any calls to `hasFolding()`, whereas before it was called at least once for any buffer containing at least one virtual line.\r\n\r\nFor lines that do have virtual lines, this will be slightly less efficient:\r\n- For lines with a single virtual lines mark, `hasFolding()` is always called twice.\r\n   - Virtual lines are rare enough for this not to be worth optimizing, IMO.\r\n- For lines with multiple virtual lines marks, `hasFolding()` is called 2x the amount of marks.\r\n   - This could be optimized, but having multiple virtual lines marks on a single line is very rare.\r\n\r\n\r\n\r\n",
            "created_at": "2024-07-26T13:05:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2252724873",
            "id": 2252724873,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GRdqJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252724873/reactions"
            },
            "updated_at": "2024-07-26T13:09:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252724873",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Heh, this is funny.\r\n\r\nGiven:\r\n\r\n```c\r\nstatic bool virt_line_row_is_active(win_T *wp, int row, bool above)\r\n{\r\n  int draw_row = row + (above ? 0 : 1);\r\n  bool row_below_fold = draw_row > 0 && hasFolding(wp, draw_row, NULL, NULL);\r\n  bool row_has_fold = hasFolding(wp, draw_row + 1, NULL, NULL);\r\n\r\n  int active_start_row = row_below_fold ? draw_row : MAX(draw_row - 1, 0);\r\n  int active_end_row = row_has_fold ? draw_row : draw_row + 1;\r\n\r\n  return row >= active_start_row && row < active_end_row;\r\n}\r\n```\r\n\r\nSpecialize for `above`:\r\n\r\n```c\r\nstatic bool virt_line_row_is_active(win_T *wp, int row, bool above)\r\n{\r\n  if (above) {\r\n    bool row_below_fold = row + 1 > 0 && hasFolding(wp, row + 1, NULL, NULL);\r\n    bool row_has_fold = hasFolding(wp, row + 2, NULL, NULL);\r\n\r\n    int active_start_row = row_below_fold ? row + 1 : row;\r\n    int active_end_row = row_has_fold ? row + 1 : row + 2;\r\n\r\n    return row >= active_start_row && row < active_end_row;\r\n  } else {\r\n    bool row_below_fold = row > 0 && hasFolding(wp, row, NULL, NULL);\r\n    bool row_has_fold = hasFolding(wp, row + 1, NULL, NULL);\r\n\r\n    int active_start_row = row_below_fold ? row : MAX(row - 1, 0);\r\n    int active_end_row = row_has_fold ? row : row + 1;\r\n\r\n    return row >= active_start_row && row < active_end_row;\r\n  }\r\n}\r\n```\r\n\r\nWhich reduces to:\r\n\r\n```c\r\nstatic bool virt_line_row_is_active(win_T *wp, int row, bool above)\r\n{\r\n  if (above) {\r\n    bool row_below_fold = hasFolding(wp, row + 1, NULL, NULL);\r\n    return row >= (row_below_fold ? row + 1 : row);\r\n  } else {\r\n    bool row_has_fold = hasFolding(wp, row + 1, NULL, NULL);\r\n    return row < (row_has_fold ? row : row + 1);\r\n  }\r\n}\r\n```\r\n\r\nwhich reduces to:\r\n\r\n```c\r\nstatic bool virt_line_row_is_active(win_T *wp, int row, bool above)\r\n{\r\n  return !hasFolding(wp, row + 1, NULL, NULL);\r\n}\r\n```\r\n\r\nSo it seems we do not need to know if the virtual line is above or not.\r\n\r\nDid I mess up somewhere?\r\n ",
            "created_at": "2024-07-26T13:48:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2252807813",
            "id": 2252807813,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GRx6F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252807813/reactions"
            },
            "updated_at": "2024-07-26T13:49:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252807813",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "That's correct. Whether a virtual line is folded is decided by whether the line it's attached to is folded.",
            "created_at": "2024-07-26T14:04:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2252847120",
            "id": 2252847120,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GR7gQ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252847120/reactions"
            },
            "updated_at": "2024-07-26T14:04:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2252847120",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Any more feedback before I merge?",
            "created_at": "2024-07-30T08:19:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/29766#issuecomment-2257756291",
            "id": 2257756291,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
            "node_id": "IC_kwDOAPphoM6GkqCD",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2257756291/reactions"
            },
            "updated_at": "2024-07-30T08:19:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2257756291",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/29766/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/29766/commits",
    "created_at": "2024-07-17T11:23:53Z",
    "diff_url": "https://github.com/neovim/neovim/pull/29766.diff",
    "draft": false,
    "head": {
        "label": "lewis6991:fix/scrollbind",
        "ref": "fix/scrollbind",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lewis6991/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lewis6991/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lewis6991/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lewis6991/neovim/branches{/branch}",
            "clone_url": "https://github.com/lewis6991/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lewis6991/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lewis6991/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lewis6991/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lewis6991/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lewis6991/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lewis6991/neovim/contributors",
            "created_at": "2020-11-24T21:47:43Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lewis6991/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lewis6991/neovim/downloads",
            "events_url": "https://api.github.com/repos/lewis6991/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lewis6991/neovim/forks",
            "full_name": "lewis6991/neovim",
            "git_commits_url": "https://api.github.com/repos/lewis6991/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lewis6991/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lewis6991/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lewis6991/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lewis6991/neovim/hooks",
            "html_url": "https://github.com/lewis6991/neovim",
            "id": 315760150,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lewis6991/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lewis6991/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lewis6991/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lewis6991/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lewis6991/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lewis6991/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lewis6991/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lewis6991/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzMTU3NjAxNTA=",
            "notifications_url": "https://api.github.com/repos/lewis6991/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lewis6991/neovim/pulls{/number}",
            "pushed_at": "2024-08-02T18:04:58Z",
            "releases_url": "https://api.github.com/repos/lewis6991/neovim/releases{/id}",
            "size": 275253,
            "ssh_url": "git@github.com:lewis6991/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lewis6991/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lewis6991/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lewis6991/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lewis6991/neovim/subscription",
            "svn_url": "https://github.com/lewis6991/neovim",
            "tags_url": "https://api.github.com/repos/lewis6991/neovim/tags",
            "teams_url": "https://api.github.com/repos/lewis6991/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lewis6991/neovim/git/trees{/sha}",
            "updated_at": "2024-02-06T12:43:15Z",
            "url": "https://api.github.com/repos/lewis6991/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "caeac23f79d2f25b3439fc4bd990f26fb26822a0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
            "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
            "followers_url": "https://api.github.com/users/lewis6991/followers",
            "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
            "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lewis6991",
            "id": 7904185,
            "login": "lewis6991",
            "node_id": "MDQ6VXNlcjc5MDQxODU=",
            "organizations_url": "https://api.github.com/users/lewis6991/orgs",
            "received_events_url": "https://api.github.com/users/lewis6991/received_events",
            "repos_url": "https://api.github.com/users/lewis6991/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lewis6991"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/29766",
    "id": 1973474635,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/29766",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "573a71469d37cc35f72bfc929f4ce1156833df9f",
    "merged_at": "2024-07-31T10:33:32Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM51oNVL",
    "number": 29766,
    "patch_url": "https://github.com/neovim/neovim/pull/29766.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/29766/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/caeac23f79d2f25b3439fc4bd990f26fb26822a0",
    "title": "fix(scrollbind): properly take filler/virtual lines into account",
    "updated_at": "2024-07-31T10:57:14Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/29766",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
        "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
        "followers_url": "https://api.github.com/users/lewis6991/followers",
        "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
        "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lewis6991",
        "id": 7904185,
        "login": "lewis6991",
        "node_id": "MDQ6VXNlcjc5MDQxODU=",
        "organizations_url": "https://api.github.com/users/lewis6991/orgs",
        "received_events_url": "https://api.github.com/users/lewis6991/received_events",
        "repos_url": "https://api.github.com/users/lewis6991/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lewis6991"
    }
}