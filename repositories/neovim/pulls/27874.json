{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27874/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27874/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27874"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27874"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27874/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/de48fbbd5f8800bd7f1909a6fb41e53e871cf74c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5704,
            "forks_count": 5704,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1834,
            "open_issues_count": 1834,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-18T23:26:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 295086,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83399,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-19T02:35:58Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83399,
            "watchers_count": 83399,
            "web_commit_signoff_required": false
        },
        "sha": "7d771c3eeef5b4dca9ebc5ed6f7ca03f2b26b6bc",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem:  Lua callbacks for \"msg_show\" events with vim.ui_attach() are\r\n          executed when it is not safe.\r\nSolution: Disallow non-fast API calls for \"msg_show\" event callbacks.\r\n          Make sure fast APIs do not modify Nvim state.",
    "closed_at": "2024-11-14T17:56:56Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1526940697"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1526940697"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  } else if (*p != NUL && *p != '\"' && !eap->skip && called_emsg == saved_called_emsg) {\r\n```",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-03-15T23:00:46Z",
            "diff_hunk": "@@ -2347,7 +2346,7 @@ void ex_function(exarg_T *eap)\n   // Makes 'exe \"func Test()\\n...\\nendfunc\"' work.\n   if (*p == '\\n') {\n     line_arg = p + 1;\n-  } else if (*p != NUL && *p != '\"' && !eap->skip && !did_emsg) {\n+  } else if (*p != NUL && *p != '\"' && !eap->skip && called_emsg > saved_called_emsg) {",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1526940697",
            "id": 1526940697,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5bA0QZ",
            "original_commit_id": "c9e225965a3ebf3930857c16dbbdb319e7e87357",
            "original_line": 2349,
            "original_position": 15,
            "original_start_line": null,
            "path": "src/nvim/eval/userfunc.c",
            "position": null,
            "pull_request_review_id": 1940785894,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1526940697/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-03-15T23:00:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1526940697",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1827518736"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827518736"
                }
            },
            "author_association": "MEMBER",
            "body": "Coalescing multiple error callbacks into one might be good but then we need to preserve the individual `error` messages and display all of them at  once we are ready to handle the callback.  ",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-04T10:36:50Z",
            "diff_hunk": "@@ -219,8 +222,11 @@ static int nlua_luv_cfpcall(lua_State *lstate, int nargs, int nresult, int flags\n     }\n     const char *error = lua_tostring(lstate, -1);\n \n-    multiqueue_put(main_loop.events, nlua_luv_error_event,\n-                   xstrdup(error), (void *)(intptr_t)kCallback);\n+    if (!event_error_queued) {\n+      multiqueue_put(main_loop.events, nlua_luv_error_event,\n+                     xstrdup(error), (void *)(intptr_t)kCallback);\n+      event_error_queued = true;",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1827518736",
            "id": 1827518736,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5s7bkQ",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 228,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2412709632,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827518736/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-04T10:36:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827518736",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1827521208"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827521208"
                }
            },
            "author_association": "MEMBER",
            "body": "It probably will look better to structure this like `if (fast) { ... the fast stuff } else { the old code}` ",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-04T10:37:54Z",
            "diff_hunk": "@@ -1605,9 +1611,10 @@ Object nlua_call_ref(LuaRef ref, const char *name, Array args, LuaRetMode mode,\n     nlua_push_Object(lstate, &args.items[i], 0);\n   }\n \n-  if (nlua_pcall(lstate, nargs, 1)) {\n-    // if err is passed, the caller will deal with the error.\n-    if (err) {\n+  bool fast = name && strcmp(name, \"msg_show\") == 0;\n+  if (fast ? nlua_fast_cfpcall(lstate, nargs, 1, -1) : nlua_pcall(lstate, nargs, 1)) {",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1827521208",
            "id": 1827521208,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5s7cK4",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 1615,
            "original_position": 69,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2412714154,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827521208/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-04T10:37:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827521208",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1827528157"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827528157"
                }
            },
            "author_association": "MEMBER",
            "body": "To make this scalable we should add this as a flag to `api/ui_events.h` to mark the events which need this . I could implement that part myself on top of your work here.",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-04T10:42:16Z",
            "diff_hunk": "@@ -1605,9 +1611,10 @@ Object nlua_call_ref(LuaRef ref, const char *name, Array args, LuaRetMode mode,\n     nlua_push_Object(lstate, &args.items[i], 0);\n   }\n \n-  if (nlua_pcall(lstate, nargs, 1)) {\n-    // if err is passed, the caller will deal with the error.\n-    if (err) {\n+  bool fast = name && strcmp(name, \"msg_show\") == 0;",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1827528157",
            "id": 1827528157,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5s7d3d",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 1614,
            "original_position": 68,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2412726545,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827528157/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-04T10:42:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827528157",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1827531324"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827531324"
                }
            },
            "author_association": "MEMBER",
            "body": "This is to avoid recursiveness. If one msg_show event handler itself _causes_ an error we need to avoid emitting that error multiple times, which presumably will be the same every time.\r\n\r\nBut yeah I suppose this solution might hide multiple different errors.",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-04T10:44:45Z",
            "diff_hunk": "@@ -219,8 +222,11 @@ static int nlua_luv_cfpcall(lua_State *lstate, int nargs, int nresult, int flags\n     }\n     const char *error = lua_tostring(lstate, -1);\n \n-    multiqueue_put(main_loop.events, nlua_luv_error_event,\n-                   xstrdup(error), (void *)(intptr_t)kCallback);\n+    if (!event_error_queued) {\n+      multiqueue_put(main_loop.events, nlua_luv_error_event,\n+                     xstrdup(error), (void *)(intptr_t)kCallback);\n+      event_error_queued = true;",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1827531324",
            "id": 1827531324,
            "in_reply_to_id": 1827518736,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5s7eo8",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 228,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2412731627,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827531324/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-04T10:44:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827531324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1827536393"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827536393"
                }
            },
            "author_association": "MEMBER",
            "body": "It would be fine if this is _only_ done for `msg_show` (and other UI fast events) as a quick hack for now, but not affecting other usages of this function. ",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-04T10:48:19Z",
            "diff_hunk": "@@ -219,8 +222,11 @@ static int nlua_luv_cfpcall(lua_State *lstate, int nargs, int nresult, int flags\n     }\n     const char *error = lua_tostring(lstate, -1);\n \n-    multiqueue_put(main_loop.events, nlua_luv_error_event,\n-                   xstrdup(error), (void *)(intptr_t)kCallback);\n+    if (!event_error_queued) {\n+      multiqueue_put(main_loop.events, nlua_luv_error_event,\n+                     xstrdup(error), (void *)(intptr_t)kCallback);\n+      event_error_queued = true;",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1827536393",
            "id": 1827536393,
            "in_reply_to_id": 1827518736,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5s7f4J",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 228,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2412740925,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827536393/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-04T10:48:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1827536393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1829516711"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1829516711"
                }
            },
            "author_association": "MEMBER",
            "body": "This and possibly other recursion checks are no longer necessary because I added automatic detachment for when a vim.ui_attach callback produces excessive errors.",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-05T15:03:40Z",
            "diff_hunk": "@@ -219,8 +222,11 @@ static int nlua_luv_cfpcall(lua_State *lstate, int nargs, int nresult, int flags\n     }\n     const char *error = lua_tostring(lstate, -1);\n \n-    multiqueue_put(main_loop.events, nlua_luv_error_event,\n-                   xstrdup(error), (void *)(intptr_t)kCallback);\n+    if (!event_error_queued) {\n+      multiqueue_put(main_loop.events, nlua_luv_error_event,\n+                     xstrdup(error), (void *)(intptr_t)kCallback);\n+      event_error_queued = true;",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1829516711",
            "id": 1829516711,
            "in_reply_to_id": 1827518736,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5tDDWn",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 228,
            "original_position": 47,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2415900153,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1829516711/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-05T15:03:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1829516711",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27874#discussion_r1829517278"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27874"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1829517278"
                }
            },
            "author_association": "MEMBER",
            "body": "I took a stab at this because I first implemented the automatic detachment per UI extension where further information from the generator was necessary in C. Later decided that was excessive. Hope what I ended up with isn't too far off what you had in mind.",
            "commit_id": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
            "created_at": "2024-11-05T15:04:00Z",
            "diff_hunk": "@@ -1605,9 +1611,10 @@ Object nlua_call_ref(LuaRef ref, const char *name, Array args, LuaRetMode mode,\n     nlua_push_Object(lstate, &args.items[i], 0);\n   }\n \n-  if (nlua_pcall(lstate, nargs, 1)) {\n-    // if err is passed, the caller will deal with the error.\n-    if (err) {\n+  bool fast = name && strcmp(name, \"msg_show\") == 0;",
            "html_url": "https://github.com/neovim/neovim/pull/27874#discussion_r1829517278",
            "id": 1829517278,
            "in_reply_to_id": 1827528157,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5tDDfe",
            "original_commit_id": "9dddc56259b062055013544b9092da83c116112a",
            "original_line": 1614,
            "original_position": 68,
            "original_start_line": null,
            "path": "src/nvim/lua/executor.c",
            "position": null,
            "pull_request_review_id": 2415901107,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1829517278/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-07T14:54:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1829517278",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "I spent an hour trying to write a test for this but was unsuccessful. The problem is apparent in #27855 (or when using noice.nvim).\r\n\r\nI could also just accumulate a bunch of these small changes in #27855 where testing for it should be easier. But more smaller PR's is more better, unless that isn't true without tests :) For now I'll keep trying to make dedicated PR's for problems I come across.\r\n\r\nThis particular problem also seems like it could happen in other places too (a while loop that is not exited because did_emsg was reset by a callback).",
            "created_at": "2024-03-15T16:52:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000064150",
            "id": 2000064150,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53No6W",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000064150/reactions"
            },
            "updated_at": "2024-03-20T22:30:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000064150",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Actually ext_messages callback may cause Nvim to crash in many cases, because code calling `*msg` functions don't expect it to change state.",
            "created_at": "2024-03-15T21:42:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000483678",
            "id": 2000483678,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53PPVe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000483678/reactions"
            },
            "updated_at": "2024-03-15T21:42:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000483678",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Hmm, does it? The messages are batched and (usually) flushed in normal_redraw() where changing state should be allowed?\n\nBut yeah if they are flushed where it isn't allowed I guess that should be prevented.\n(P.S. On phone, not actually sure what I wrote is true)",
            "created_at": "2024-03-15T22:00:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000537630",
            "id": 2000537630,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53Pcge",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000537630/reactions"
            },
            "updated_at": "2024-03-15T22:05:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000537630",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "`msg_start()` calls `msg_ext_ui_flush()`",
            "created_at": "2024-03-15T22:26:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000582268",
            "id": 2000582268,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53PnZ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000582268/reactions"
            },
            "updated_at": "2024-03-15T22:26:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000582268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Okay, yeah msg_start seems kind of redundant in the situation where ext_messages is used in core and the message grid is removed.\n\nAs in, flushing inside msg_start doesn't seem necessary. Perhaps we can insert a special chunk to indicate the start of a new message.",
            "created_at": "2024-03-15T22:36:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000590188",
            "id": 2000590188,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53PpVs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000590188/reactions"
            },
            "updated_at": "2024-03-15T23:10:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000590188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The handler may call api functions that reset it, leaving :function active after an error.\r\n\r\nIs there at least an interactive example where this happens?",
            "created_at": "2024-03-15T23:02:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000607878",
            "id": 2000607878,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53PtqG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000607878/reactions"
            },
            "updated_at": "2024-03-15T23:02:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000607878",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there at least an interactive example where this happens?\n\nStill on mobile but if you checkout my ext PR and run `nvim --clean`, you should see the issue when trying to redefine an existing function. I.e.\n```vim\n:func Foo()<CR>\nbar<CR>\nendf<CR>\n:func Foo()<CR>\n```\n\nI think it was try_start() in nvim_buf_set_lines() that unsets did_emsg.",
            "created_at": "2024-03-15T23:15:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2000615967",
            "id": 2000615967,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53Pvof",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000615967/reactions"
            },
            "updated_at": "2024-03-15T23:22:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2000615967",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Actually ext_messages callback may cause Nvim to crash in many cases, because code calling *msg functions don't expect it to change state.\r\n\r\n> I think this should be solved in API calls instead\r\n\r\nShould we try to avoid both issues at once by not flushing messages where it can lead to these problems?\r\n\r\nI.e. instead of having msg_start/end() flush messages, insert some kind of special chunk to separate messages, or stash the events to emit them when it is safe. @bfredl",
            "created_at": "2024-03-18T10:11:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2003452201",
            "id": 2003452201,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53akEp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2003452201/reactions"
            },
            "updated_at": "2024-03-18T10:11:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2003452201",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "The current commit avoids the `:function` problem this PR originally tried to fix. Also fixes this crash for example:\r\n\r\n```lua\r\nnvim --clean -S test.lua\r\n-- emit any message\r\n\r\n-- test.lua\r\nvim.ui_attach(vim.api.nvim_create_namespace(''), {ext_messages = true}, function(event, ...)\r\n  if event == \"msg_show\" then\r\n    vim.fn.getchar()\r\n  end\r\nend)\r\n```",
            "created_at": "2024-03-19T07:35:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2006113772",
            "id": 2006113772,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53kt3s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2006113772/reactions"
            },
            "updated_at": "2024-03-19T16:54:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2006113772",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "### Status:\r\nPostponed to 0.11 cycle and considering to change the signature for the vim.ui_attach ext_messages callbacks @folke. Not touching the event itself, since the issue does not apply to remote UIs. Not strictly necessary but vim.ui_attach is still experimental. If we are throttling the message callbacks, it makes more sense to emit a single message event with an array of all the emitted messages, rather than multiple events.",
            "created_at": "2024-03-19T09:10:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2006428463",
            "id": 2006428463,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53l6sv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2006428463/reactions"
            },
            "updated_at": "2024-11-04T08:04:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2006428463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@luukvbaal makes sense!\r\n\r\nI'll fix the Noice side when needed :)",
            "created_at": "2024-03-19T16:52:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2007676051",
            "id": 2007676051,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM53qrST",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2007676051/reactions"
            },
            "updated_at": "2024-03-19T16:52:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2007676051",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Another approach for the unsafety we could take is something like the following. Instead of adding a layer of batching in the _c code_, what we will do is to mark some `ui_attach` callback as being fast-unsafe (similar as for low-level libluv calbacks). We will then need to add extra msg_ event which is is unrestricted, which marks the right spot for a core implementation to translate the collected data (now in the _lua code_, which can filter whatever data it needs to keep) into API calls to show windows as needed. \r\n\r\nThe benefit is some preserved flexibility and consistency for other plugin consumers. some plugins might not need core API calls in the msg_show handler at all, but might show messages in some completely external way (by using libuv io, subprocesses etc), and for these there is no need for throttling.\r\n\r\nThe tricky part is when this extra notification needs to be done. one point is `msg_scroll_flush()`, but we also want to do it before `update_screen()` if there is both pending messages and other window changes, so all window redraws including message windows can then happen for the same `update_screen()` batch. \r\n\r\nAnd sorry for the delay in me responding to this kind of PR:s. Substantial enhancements to the `vim.ui_attach` mechanism will be one of my priorities now in the 0.11 cycle. ",
            "created_at": "2024-06-14T10:12:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2167705853",
            "id": 2167705853,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6BNJD9",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167705853/reactions"
            },
            "updated_at": "2024-06-14T10:12:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167705853",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Thanks for your feedback @bfredl; that indeed sounds preferable to the route taken here. Feel free to close this PR when you intend to work on this particular issue or I may repurpose this PR to the proposed solution when I (hopefully) resume work on the ext_ui stuff.\r\n\r\n(I'm still available for small fixes and stuff but I think I will need to commit to another stretch of full-time work to really try to drive the core ext UI home.)",
            "created_at": "2024-06-14T11:38:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2167838665",
            "id": 2167838665,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6BNpfJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167838665/reactions"
            },
            "updated_at": "2024-06-14T11:38:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2167838665",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@bfredl one issue I still see even with that approach is that some fast-safe api functions are perhaps not actually \"safe\" in this particular context.\r\n\r\nI.e. the `:function` issue that originally prompted this PR is still reproducible with e.g. `nvim_get_runtime_file()` which is marked api-fast but also calls `try_end()` which modifies some global variables that messes with the `:function` logic. Granted that might be a rather niche issue but it at least indicates that it is not a complete solution. Although it could be that this isolates the problem to just that `did_emsg` issue. Presumably api-fast functions don't modify any/much other Nvim state.",
            "created_at": "2024-06-14T16:50:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2168416632",
            "id": 2168416632,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6BP2l4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168416632/reactions"
            },
            "updated_at": "2024-06-14T16:50:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168416632",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/blob/ba70404c558169b813f51d5a0bb71cd540555c93/src/nvim/api/private/helpers.c#L109-L112\r\n\r\nIt could be that interpreting this suggestion as applicable for api-fast functions resolves that issue. But IDK how we would go about enforcing that...",
            "created_at": "2024-06-14T17:11:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2168445982",
            "id": 2168445982,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6BP9we",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168445982/reactions"
            },
            "updated_at": "2024-06-14T17:11:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168445982",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "well, would need to fix that by getting rid of the TRY_WRAP in `get_nvim_runtime_file` then. I presume it might be some errors thrown by regexes we need to convert to error returns. ",
            "created_at": "2024-06-14T19:43:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2168653253",
            "id": 2168653253,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6BQwXF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168653253/reactions"
            },
            "updated_at": "2024-06-14T19:43:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168653253",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Yes that particular case is easy enough to resolve. I was moreso suggesting that we might look for a way to make sure things like this don't happen in other places/regresses i.e. some custom lint rule for api-fast functions.",
            "created_at": "2024-06-14T19:57:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2168672713",
            "id": 2168672713,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6BQ1HJ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168672713/reactions"
            },
            "updated_at": "2024-06-14T19:57:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2168672713",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> what we will do is to mark some ui_attach callback as being fast-unsafe (similar as for low-level libluv calbacks). We will then need to add extra msg_ event which is is unrestricted\r\n\r\nRebased and updated the PR to do this. Do we actually need a new event to notify message handlers when it is safe to display messages? The handler could just `vim.schedule()` inside the fast context right? Avoids the need to identify the appropriate place to send this notification which may be tricky as you said.\r\n\r\nPing @folke since I previously [informed](https://github.com/neovim/neovim/issues/28772#issuecomment-2119296186) you to the contrary. Is scheduling sufficient or do you think a new event would be helpful?",
            "created_at": "2024-11-04T08:15:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2454060895",
            "id": 2454060895,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6SRf9f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454060895/reactions"
            },
            "updated_at": "2024-11-04T08:15:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454060895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@luukvbaal yep, should be fine for noice. I've changed the implementation since and do more `nvim_redraw` flushes now which solves some of the issues I had.\r\n\r\nI also retry failed attempts at rendering (new) windows during textlock and other conditions.\r\n\r\nRegarding the redraw flushes, I honestly always thought that redraw was not possible during blocking events or when input was requested. It's only very recently that I learned that it's just the automatic flushing and internal redraws are disabled during those events. I didn't know I could still trigger manual redraw flushes. Kinda stupid I didn't know this before :)",
            "created_at": "2024-11-04T10:27:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2454339198",
            "id": 2454339198,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6SSj5-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454339198/reactions"
            },
            "updated_at": "2024-11-04T10:27:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2454339198",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I just updated Noice to work again, but one thing that I'm not sure how to fix is `msg_show` with `confirm` kind.\r\nThere's probably other related issues as well.\r\n\r\nIt seems that when a `confirm` is active, `scheduled` callbacks all wait to execute till the `confirm` is done.\r\n\r\nThis means, there's no way for noice to display the confirm message the user needs to handle.\r\n\r\nAny ideas?",
            "created_at": "2024-11-15T08:00:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2478173360",
            "id": 2478173360,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6Tteyw",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478173360/reactions"
            },
            "updated_at": "2024-11-15T08:00:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478173360",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right, so maybe we do need a new event to indicate pending messages may be displayed (https://github.com/neovim/neovim/pull/27874#issuecomment-2167705853).\r\n\r\nAlternatively we could exclude some `msg_show` events, that we know to be safe (or must make safe because the event loop is delayed waiting for input) from the fast context. Although that would kind of defeat the purpose of blanket marking all msg_show events as fast in the first place.",
            "created_at": "2024-11-15T08:37:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2478235324",
            "id": 2478235324,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6Ttt68",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478235324/reactions"
            },
            "updated_at": "2024-11-15T08:37:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478235324",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Some sort of safe event would be great indeed.",
            "created_at": "2024-11-15T08:41:50Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2478242856",
            "id": 2478242856,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6Ttvwo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478242856/reactions"
            },
            "updated_at": "2024-11-15T08:41:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478242856",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "For now I'm thinking the prompt events themselves can serve as that event: #31224.",
            "created_at": "2024-11-15T10:42:31Z",
            "html_url": "https://github.com/neovim/neovim/pull/27874#issuecomment-2478531906",
            "id": 2478531906,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
            "node_id": "IC_kwDOAPphoM6Tu2VC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478531906/reactions"
            },
            "updated_at": "2024-11-15T10:42:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2478531906",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27874/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27874/commits",
    "created_at": "2024-03-15T16:45:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27874.diff",
    "draft": false,
    "head": {
        "label": "luukvbaal:funcerr",
        "ref": "funcerr",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/luukvbaal/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/luukvbaal/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/luukvbaal/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/luukvbaal/neovim/branches{/branch}",
            "clone_url": "https://github.com/luukvbaal/neovim.git",
            "collaborators_url": "https://api.github.com/repos/luukvbaal/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/luukvbaal/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/luukvbaal/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/luukvbaal/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/luukvbaal/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/luukvbaal/neovim/contributors",
            "created_at": "2022-07-05T23:21:47Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/luukvbaal/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/luukvbaal/neovim/downloads",
            "events_url": "https://api.github.com/repos/luukvbaal/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/luukvbaal/neovim/forks",
            "full_name": "luukvbaal/neovim",
            "git_commits_url": "https://api.github.com/repos/luukvbaal/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/luukvbaal/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/luukvbaal/neovim/git/tags{/sha}",
            "git_url": "git://github.com/luukvbaal/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/luukvbaal/neovim/hooks",
            "html_url": "https://github.com/luukvbaal/neovim",
            "id": 510922471,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/luukvbaal/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/luukvbaal/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/luukvbaal/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/luukvbaal/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/luukvbaal/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/luukvbaal/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/luukvbaal/neovim/merges",
            "milestones_url": "https://api.github.com/repos/luukvbaal/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOHnQO5w",
            "notifications_url": "https://api.github.com/repos/luukvbaal/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
                "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
                "followers_url": "https://api.github.com/users/luukvbaal/followers",
                "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
                "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/luukvbaal",
                "id": 31730729,
                "login": "luukvbaal",
                "node_id": "MDQ6VXNlcjMxNzMwNzI5",
                "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
                "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
                "repos_url": "https://api.github.com/users/luukvbaal/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/luukvbaal",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/luukvbaal/neovim/pulls{/number}",
            "pushed_at": "2024-11-18T12:30:38Z",
            "releases_url": "https://api.github.com/repos/luukvbaal/neovim/releases{/id}",
            "size": 292762,
            "ssh_url": "git@github.com:luukvbaal/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/luukvbaal/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/luukvbaal/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/luukvbaal/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/luukvbaal/neovim/subscription",
            "svn_url": "https://github.com/luukvbaal/neovim",
            "tags_url": "https://api.github.com/repos/luukvbaal/neovim/tags",
            "teams_url": "https://api.github.com/repos/luukvbaal/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/luukvbaal/neovim/git/trees{/sha}",
            "updated_at": "2024-11-14T07:20:32Z",
            "url": "https://api.github.com/repos/luukvbaal/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
            "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
            "followers_url": "https://api.github.com/users/luukvbaal/followers",
            "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
            "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/luukvbaal",
            "id": 31730729,
            "login": "luukvbaal",
            "node_id": "MDQ6VXNlcjMxNzMwNzI5",
            "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
            "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
            "repos_url": "https://api.github.com/users/luukvbaal/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/luukvbaal",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27874",
    "id": 1774646590,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27874",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "UI messages, log messages, errors, warnings, feedback",
            "id": 5637083595,
            "name": "messages",
            "node_id": "LA_kwDOAPphoM8AAAABT_8Ryw",
            "url": "https://api.github.com/repos/neovim/neovim/labels/messages"
        }
    ],
    "locked": false,
    "merge_commit_sha": "05d354e2165c2c331a33949d49095eef3503a32f",
    "merged_at": "2024-11-14T17:56:56Z",
    "milestone": {
        "closed_at": null,
        "closed_issues": 99,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        },
        "description": "",
        "due_on": "2024-12-25T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 53,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-11-18T20:49:34Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM5pxvU-",
    "number": 27874,
    "patch_url": "https://github.com/neovim/neovim/pull/27874.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27874/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/de48fbbd5f8800bd7f1909a6fb41e53e871cf74c",
    "title": "fix(messages)!: vim.ui_attach message callbacks are unsafe",
    "updated_at": "2024-11-15T10:42:32Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27874",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/31730729?v=4",
        "events_url": "https://api.github.com/users/luukvbaal/events{/privacy}",
        "followers_url": "https://api.github.com/users/luukvbaal/followers",
        "following_url": "https://api.github.com/users/luukvbaal/following{/other_user}",
        "gists_url": "https://api.github.com/users/luukvbaal/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/luukvbaal",
        "id": 31730729,
        "login": "luukvbaal",
        "node_id": "MDQ6VXNlcjMxNzMwNzI5",
        "organizations_url": "https://api.github.com/users/luukvbaal/orgs",
        "received_events_url": "https://api.github.com/users/luukvbaal/received_events",
        "repos_url": "https://api.github.com/users/luukvbaal/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/luukvbaal/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/luukvbaal/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/luukvbaal",
        "user_view_type": "public"
    }
}