{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27408/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27408/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/27408"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/27408"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27408/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/407a77c96cbd495cb25eb8fd1fe66c2c10086e07"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5259,
            "forks_count": 5259,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1730,
            "open_issues_count": 1730,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-02-20T01:37:56Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 253965,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 74120,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-02-20T01:31:12Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 74120,
            "watchers_count": 74120,
            "web_commit_signoff_required": false
        },
        "sha": "a376d979bda103fa9998d05c3cc4ba56d3c3cece",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Problem: renamed buffer isn't visible on `:ls` (if existed in some window before) and cannot be present as an alternate file. \r\nSolution: load it and switch `buflisted` to `true` if the old buffer was attached to a window. ",
    "closed_at": "2024-02-14T20:11:30Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489716639"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489716639"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    it('new buffer remains unlisted if the old was not in window before', function()\r\n```",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T16:01:32Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489716639",
            "id": 1489716639,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yy0Wf",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2446,
            "original_position": 4,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1880687253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489716639/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-14T16:03:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489716639",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489717889"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489717889"
                }
            },
            "author_association": "MEMBER",
            "body": "I think we can merge this into the previous case. \"new buffer remains unloaded and unlisted if the old was not shown in a window\"",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T16:02:25Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer remains unloaded if the old was not in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489717889",
            "id": 1489717889,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yy0qB",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2466,
            "original_position": 24,
            "original_start_line": null,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1880687253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489717889/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-02-14T16:03:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489717889",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489718774"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489718774"
                }
            },
            "author_association": "MEMBER",
            "body": "Same with this two cases too, they could be merged into a single case \"renamed buffer is loaded and listed if it was in a window before\"",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T16:03:02Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer remains unloaded if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local bufloaded = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.api.nvim_buf_is_loaded(newbufnr)\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, bufloaded)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is listed if the old was in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local win =  vim.api.nvim_get_current_win()\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        vim.api.nvim_win_set_buf(win, oldbufnr)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        local newbufnr = vim.fn.bufadd(new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(true, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is loaded if the old was in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489718774",
            "id": 1489718774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yy032",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2508,
            "original_position": 66,
            "original_start_line": 2486,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1880687253,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489718774/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-14T16:03:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489718774",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489803394"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489803394"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Honestly, initially I broke it into separate cases because I couldn't find how to return double value by `exec_lua`. Please suggest an alternative (if exists) to returning table and then unpacking it.",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T17:03:10Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer remains unloaded if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local bufloaded = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.api.nvim_buf_is_loaded(newbufnr)\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, bufloaded)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is listed if the old was in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local win =  vim.api.nvim_get_current_win()\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        vim.api.nvim_win_set_buf(win, oldbufnr)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        local newbufnr = vim.fn.bufadd(new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(true, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is loaded if the old was in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489803394",
            "id": 1489803394,
            "in_reply_to_id": 1489718774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YzJiC",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2508,
            "original_position": 66,
            "original_start_line": 2486,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1880822526,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489803394/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-14T17:03:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489803394",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489820243"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489820243"
                }
            },
            "author_association": "MEMBER",
            "body": "what's the issue about returning a table and unpacking? You can also simply do `assert(buflisted, \"....\")`, etc., inside exec_lua to avoid communication over RPC.\r\n\r\nOr something like (it'd be better):\r\n\r\n```lua\r\nlocal bufnr = exec_lua [[....]]\r\n\r\neq(true, exec_lua([[ return buflisted(...) ]], bufnr))\r\neq(true, exec_lua([[ return vim.api.nvim_buf_is_loaded(...) ]], bufnr))\r\n```",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T17:17:15Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer remains unloaded if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local bufloaded = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.api.nvim_buf_is_loaded(newbufnr)\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, bufloaded)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is listed if the old was in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local win =  vim.api.nvim_get_current_win()\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        vim.api.nvim_win_set_buf(win, oldbufnr)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        local newbufnr = vim.fn.bufadd(new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(true, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is loaded if the old was in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489820243",
            "id": 1489820243,
            "in_reply_to_id": 1489718774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YzNpT",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2508,
            "original_position": 66,
            "original_start_line": 2486,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1880850549,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489820243/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-14T17:20:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489820243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489856691"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489856691"
                }
            },
            "author_association": "MEMBER",
            "body": "I think you can return a table like this:\r\n\r\n```lua\r\nlocal result = exec_lua [[\r\n ...\r\n return {\r\n   listed = buflisted,\r\n   loaded = vim.api.nvim_buf_is_loaded(...)\r\n }\r\n]]\r\n```\r\n",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T17:49:03Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer remains unloaded if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local bufloaded = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.api.nvim_buf_is_loaded(newbufnr)\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, bufloaded)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is listed if the old was in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local win =  vim.api.nvim_get_current_win()\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        vim.api.nvim_win_set_buf(win, oldbufnr)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        local newbufnr = vim.fn.bufadd(new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(true, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is loaded if the old was in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489856691",
            "id": 1489856691,
            "in_reply_to_id": 1489718774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5YzWiz",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2508,
            "original_position": 66,
            "original_start_line": 2486,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1880909248,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489856691/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-14T17:49:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489856691",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/27408#discussion_r1489938211"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/27408"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489938211"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The dictionary looks simpler than triple `exec_lua` however thanks for all suggestions. ",
            "commit_id": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
            "created_at": "2024-02-14T19:05:37Z",
            "diff_hunk": "@@ -2443,6 +2443,90 @@ describe('LSP', function()\n       eq(0, lines)\n       os.remove(new)\n     end)\n+    it('Ensures if the new buffer remains unlisted if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer remains unloaded if the old was not in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local bufloaded = exec_lua(\n+        [[\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        local newbufnr = vim.fn.bufadd(new)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        return vim.api.nvim_buf_is_loaded(newbufnr)\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(false, bufloaded)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is listed if the old was in window before', function()\n+      local old = tmpname()\n+      write_file(old, 'Test content')\n+      local new = tmpname()\n+      os.remove(new) -- only reserve the name, file must not exist for the test scenario\n+      local buflisted = exec_lua(\n+        [[\n+        local win =  vim.api.nvim_get_current_win()\n+        local old = select(1, ...)\n+        local oldbufnr = vim.fn.bufadd(old)\n+        vim.api.nvim_win_set_buf(win, oldbufnr)\n+        local new = select(2, ...)\n+        vim.lsp.util.rename(old, new)\n+        local newbufnr = vim.fn.bufadd(new)\n+        return vim.bo[newbufnr].buflisted\n+      ]],\n+        old,\n+        new\n+      )\n+      eq(true, buflisted)\n+      os.remove(new)\n+    end)\n+    it('Ensures if the new buffer is loaded if the old was in window before', function()",
            "html_url": "https://github.com/neovim/neovim/pull/27408#discussion_r1489938211",
            "id": 1489938211,
            "in_reply_to_id": 1489718774,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Yzqcj",
            "original_commit_id": "814d8ec70c9648c8e596a9f61e728b34d80e445f",
            "original_line": 2508,
            "original_position": 66,
            "original_start_line": 2486,
            "path": "test/functional/plugin/lsp_spec.lua",
            "position": null,
            "pull_request_review_id": 1881049267,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489938211/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-02-14T19:06:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1489938211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "A similar (but more comprehensive) attempt: #24975 ",
            "created_at": "2024-02-10T21:06:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/27408#issuecomment-1937144642",
            "id": 1937144642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
            "node_id": "IC_kwDOAPphoM5zdntC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937144642/reactions"
            },
            "updated_at": "2024-02-10T21:06:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937144642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@tomtomjhj I created this PR just to fix buffer visibility on `:ls` (and switching between buffers). I converted it back to draft for looking what happens in your change (and possibly replacing `bufload` and setting `buflisted` by something that also implies sending possible missing client notification). \r\n\r\nIt would be good to make some minor fixes before your PR is ready. \r\n\r\n",
            "created_at": "2024-02-10T21:26:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/27408#issuecomment-1937182374",
            "id": 1937182374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
            "node_id": "IC_kwDOAPphoM5zdw6m",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937182374/reactions"
            },
            "updated_at": "2024-02-10T21:26:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937182374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I wouldn't be a primary reviewer for this, but please also describe in the commit and the PR: what problem this PR tries to fix, and write tests if possible.",
            "created_at": "2024-02-10T21:29:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/27408#issuecomment-1937183767",
            "id": 1937183767,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
            "node_id": "IC_kwDOAPphoM5zdxQX",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937183767/reactions"
            },
            "updated_at": "2024-02-10T21:29:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1937183767",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@mfussenegger do I need to squash the commits (because of `lintcommit`) or it can be squashed at merge?",
            "created_at": "2024-02-14T19:51:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/27408#issuecomment-1944490707",
            "id": 1944490707,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
            "node_id": "IC_kwDOAPphoM5z5pLT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1944490707/reactions"
            },
            "updated_at": "2024-02-14T19:51:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1944490707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> @mfussenegger do I need to squash the commits (because of `lintcommit`) or it can be squashed at merge?\r\n\r\nI can squash at merge",
            "created_at": "2024-02-14T20:10:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/27408#issuecomment-1944515298",
            "id": 1944515298,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
            "node_id": "IC_kwDOAPphoM5z5vLi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1944515298/reactions"
            },
            "updated_at": "2024-02-14T20:10:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1944515298",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> switch buflisted to true if the old buffer was attached to a window.\r\n\r\nI think the buflisted of the new buffer should inherit the old buffers's, regardless of wheter it was visible or not.\r\n\r\n(btw that's what my PR does: it renames the buffer without changing the identity of the buffer)",
            "created_at": "2024-02-15T16:08:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/27408#issuecomment-1946425164",
            "id": 1946425164,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
            "node_id": "IC_kwDOAPphoM50BBdM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1946425164/reactions"
            },
            "updated_at": "2024-02-15T16:16:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1946425164",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/19489738?v=4",
                "events_url": "https://api.github.com/users/tomtomjhj/events{/privacy}",
                "followers_url": "https://api.github.com/users/tomtomjhj/followers",
                "following_url": "https://api.github.com/users/tomtomjhj/following{/other_user}",
                "gists_url": "https://api.github.com/users/tomtomjhj/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tomtomjhj",
                "id": 19489738,
                "login": "tomtomjhj",
                "node_id": "MDQ6VXNlcjE5NDg5NzM4",
                "organizations_url": "https://api.github.com/users/tomtomjhj/orgs",
                "received_events_url": "https://api.github.com/users/tomtomjhj/received_events",
                "repos_url": "https://api.github.com/users/tomtomjhj/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tomtomjhj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tomtomjhj/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tomtomjhj"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/27408/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/27408/commits",
    "created_at": "2024-02-10T00:31:09Z",
    "diff_url": "https://github.com/neovim/neovim/pull/27408.diff",
    "draft": false,
    "head": {
        "label": "przepompownia:lsp-mv-buflisted",
        "ref": "lsp-mv-buflisted",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/przepompownia/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/przepompownia/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/przepompownia/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/przepompownia/neovim/branches{/branch}",
            "clone_url": "https://github.com/przepompownia/neovim.git",
            "collaborators_url": "https://api.github.com/repos/przepompownia/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/przepompownia/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/przepompownia/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/przepompownia/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/przepompownia/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/przepompownia/neovim/contributors",
            "created_at": "2023-09-25T21:56:41Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/przepompownia/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/przepompownia/neovim/downloads",
            "events_url": "https://api.github.com/repos/przepompownia/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/przepompownia/neovim/forks",
            "full_name": "przepompownia/neovim",
            "git_commits_url": "https://api.github.com/repos/przepompownia/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/przepompownia/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/przepompownia/neovim/git/tags{/sha}",
            "git_url": "git://github.com/przepompownia/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/przepompownia/neovim/hooks",
            "html_url": "https://github.com/przepompownia/neovim",
            "id": 696503495,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/przepompownia/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/przepompownia/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/przepompownia/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/przepompownia/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/przepompownia/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/przepompownia/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/przepompownia/neovim/merges",
            "milestones_url": "https://api.github.com/repos/przepompownia/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKYPMxw",
            "notifications_url": "https://api.github.com/repos/przepompownia/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
                "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
                "followers_url": "https://api.github.com/users/przepompownia/followers",
                "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
                "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/przepompownia",
                "id": 11404453,
                "login": "przepompownia",
                "node_id": "MDQ6VXNlcjExNDA0NDUz",
                "organizations_url": "https://api.github.com/users/przepompownia/orgs",
                "received_events_url": "https://api.github.com/users/przepompownia/received_events",
                "repos_url": "https://api.github.com/users/przepompownia/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/przepompownia"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/przepompownia/neovim/pulls{/number}",
            "pushed_at": "2024-02-19T05:27:53Z",
            "releases_url": "https://api.github.com/repos/przepompownia/neovim/releases{/id}",
            "size": 244822,
            "ssh_url": "git@github.com:przepompownia/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/przepompownia/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/przepompownia/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/przepompownia/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/przepompownia/neovim/subscription",
            "svn_url": "https://github.com/przepompownia/neovim",
            "tags_url": "https://api.github.com/repos/przepompownia/neovim/tags",
            "teams_url": "https://api.github.com/repos/przepompownia/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/przepompownia/neovim/git/trees{/sha}",
            "updated_at": "2023-11-16T21:29:36Z",
            "url": "https://api.github.com/repos/przepompownia/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
            "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
            "followers_url": "https://api.github.com/users/przepompownia/followers",
            "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
            "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/przepompownia",
            "id": 11404453,
            "login": "przepompownia",
            "node_id": "MDQ6VXNlcjExNDA0NDUz",
            "organizations_url": "https://api.github.com/users/przepompownia/orgs",
            "received_events_url": "https://api.github.com/users/przepompownia/received_events",
            "repos_url": "https://api.github.com/users/przepompownia/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/przepompownia"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/27408",
    "id": 1720126795,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/27408",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d09957e0a06f350443c750d9838b5f1016c0cccc",
    "merged_at": "2024-02-14T20:11:29Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5mhw1L",
    "number": 27408,
    "patch_url": "https://github.com/neovim/neovim/pull/27408.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/27408/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/407a77c96cbd495cb25eb8fd1fe66c2c10086e07",
    "title": "fix(lsp): rename: load and list new buffer if attached to window",
    "updated_at": "2024-02-15T16:16:59Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/27408",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/11404453?v=4",
        "events_url": "https://api.github.com/users/przepompownia/events{/privacy}",
        "followers_url": "https://api.github.com/users/przepompownia/followers",
        "following_url": "https://api.github.com/users/przepompownia/following{/other_user}",
        "gists_url": "https://api.github.com/users/przepompownia/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/przepompownia",
        "id": 11404453,
        "login": "przepompownia",
        "node_id": "MDQ6VXNlcjExNDA0NDUz",
        "organizations_url": "https://api.github.com/users/przepompownia/orgs",
        "received_events_url": "https://api.github.com/users/przepompownia/received_events",
        "repos_url": "https://api.github.com/users/przepompownia/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/przepompownia/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/przepompownia/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/przepompownia"
    }
}