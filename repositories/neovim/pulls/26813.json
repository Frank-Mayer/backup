{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26813/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26813/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26813"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26813"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26813/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26813"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/3b13ed8c7ffd6d22328fbd3f0ac378694761d4a9"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5142,
            "forks_count": 5142,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1740,
            "open_issues_count": 1740,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-16T01:33:17Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247954,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72793,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-16T01:52:35Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72793,
            "watchers_count": 72793,
            "web_commit_signoff_required": false
        },
        "sha": "310fb2efc36cb65cbbaf5bfc81595f301e98a8b7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "NOTE: all referenced commits have been shifted by one, first commit now contains benchmarks.\r\n\r\n### 1. Breakindent and strcmp()\r\n`win_lbr_chartabsize()` recomputes `breakindent` of a line up to 2 times in order to determine the size of the character. [The function for computing breakindent](https://github.com/neovim/neovim/blob/0a598c13b1863ba1aff378027c4376e3ab7048ee/src/nvim/indent.c#L785) caches the last result, but as part of checking if the cached value could be used it strcmp's the given line to the cached (copied) line. Since `win_lbr_chartabsize()` is often called in a loop and none of the parameters that affect `breakindent` change, this results in strcmp being called for 2 identical lines (worst case for strcmp) for every character in the line starting from the first wrapped row (even though the value is almost never affects the final size of that character).\r\n\r\nThe first commit fixes the ussue of repeatedly comparing the lines by caching the indentation value in the `chartabsize_T` struct. I also decided to preserve the size of the structure by removing `cts_has_virt_text` and changing `cts_row` to `virt_row` since it is used only for virtual text and can be set to negative value if the line does not contain virtual text.\r\n\r\n### 2. Unnecessary loop\r\n`getvcol()` computes virtual column until the last position by iterating until the current position reaches the first byte of the character containing the last position. To compute the first byte of the character, it uses an extra loop at the start to find if the position is past the end of the line and sets it to the end of the line before computing the index of its first byte.\r\n\r\nThe second commit substitutes comparison with the first byte of the last position with checking if next position is greater than the last position, which allows removing the loop at the start.\r\n\r\n### 3. Non-ascii characters are decoded multiple times.\r\nIn `getvcol()`, when the size of a Unicode character is computed, the character is decoded and validated (all bytes are read again) once in [`utf_ptr2cells()`](https://github.com/neovim/neovim/blob/0a598c13b1863ba1aff378027c4376e3ab7048ee/src/nvim/mbyte.c#L512). Then, when the pointer is advanced to the next character, its length is computed again (by reading all its bytes) in [`utfc_ptr2len()`](https://github.com/neovim/neovim/blob/0a598c13b1863ba1aff378027c4376e3ab7048ee/src/nvim/mbyte.c#L848), and then it is (possibly) decoded again in [`utf_composinglike()`](https://github.com/neovim/neovim/blob/0a598c13b1863ba1aff378027c4376e3ab7048ee/src/nvim/mbyte.c#L712). The next character is decoded once in `utf_composinglike()`, then its length is computed in `utfc_ptr2len()`, then it is (possibly) decoded a second time if it is a composing character, or it goes though all the steps the first character went. Typically a single Unicode character will be decoded twice and its length will be computed twice per one iteration.\r\nAdditionally, the function for decoding a character ([`utf_ptr2char()`](https://github.com/neovim/neovim/blob/0a598c13b1863ba1aff378027c4376e3ab7048ee/src/nvim/mbyte.c#L598)) is and'ing all bytes with masks like `0x3f` to remove the utf8 `10` and `11` bits, but since we know their values, we can subtract these bits instead of and'ing them with masks, which makes it possible to combine all the subtracted bits into one constant.\r\n\r\nThe issue of duplicate decoding and checking is fixed by adding 3 new functions: `utf_ptr2CharInfo()`, `ptr2CharInfo()` and `utfc_next()`, and modifying `getvcol()`. The first function decodes a character like `utf_ptr2char()`, but this new function returns more information about the decoded character (like its length and whether it is valid). The second function uses the first function to decode a multibyte character, but does a quick return if the character is single byte. The third function works like `utfc_ptr2len()`, but reuses previously decoded characters and also returns the last decoded character which is used on the next iteration of 'getvcol()` loop. The second and third functions are always inline because majority of the time they will be used on ascii characters and not inlining them would add overhead of a function call for the most common usecase.\r\n\r\nI verified that `ptr2CharInfo()` and the new version of `utf_ptr2char()` return correct code points for all characters 1-4 bytes long (and some 5 and 6 byte characters) and return a negative value/first byte otherwise.\r\n\r\n### 4. Optimizing other places that compute text size.\r\nIf wrapping is enabled, `screenpos()` will compute the screen size of all lines above the current line (in [`plines_win_nofold()`](https://github.com/neovim/neovim/blob/bbd5c6363c25e8fbbfb962f8f6c5ea1800d431ca/src/nvim/plines.c#L796)), but only `getvcol()` has the optimized loop for computing character sizes. This function and many other have to use either `win_lbr_chartabsize()` or `lbr_chartabsize()` to compute text size or position. Although both functions have a fast path and check for the same\\* conditions as `getvcol()`, all of the checks have to be performed on each iteration. Additionally, Unicode characters are decoded multiple times, like in `getvcol()`.\r\n\r\nThe fourth commit splits the character size functions into 'regular' and 'fast' versions (`win_lbr_chartabsize()` -> `charsize_regular()`, `win_nolbr_chartabsize()` ~> `charsize_fast()`, `win_linetabsize_cts()` -> `linesize_regular()`, `linesize_fast()`). Checks for which version to use are computed when 'charsize' argument is initialized.\r\nOther functions inside plines.c also have access to the `int_charsize_fast()` which is always inlined.\r\nBoth versions of 'charsize' functions now also take decoded characters as arguments instead of decoding them from the pointer, which allows to reuse decoded characters in all other places.\r\n\r\n### Other changes\r\n\r\n1. [Condition in `getvcol()`](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/plines.c#L517) originally checked for tab behavior and used `win_lbr_chartabsize()` if tabs were drawn as '^I'. But `win_lbr_chartabsize()` didn't explicitly check for that and called either `win_chartabsize()` or `win_nolbr_chartabsize()`, both of which checked the same tab behavior as `getvcol()`, but in [`== TAB` condition](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/plines.c#L46). My version makes `getvcol()` use fast path regardless of whether tabs have variable width or are displayed as '^I'.\r\n2. [Docs](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/runtime/doc/mbyte.txt#L664) say that 'overlong sequences are not handled specially and displayed like a valid character'. I don't know how relevant this is since many places that I modified didn't originally handle overlong ascii characters as ascii (e.g. [`== TAB` in getvcol](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/plines.c#L534) and other places, [BYTE2LEN](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/plines.c#L550) which would handle overlong '^A' as a double-width character, [`ascii_iswhite(*ptr)`](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/edit.c#L4353)). My version handles them correctly only in some places.\r\n3. Potential bug in [`coladvance2()`](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/cursor.c#L147): the `head` variable should probably be reset on every iteration of the loop, like in [`win_line()`](https://github.com/neovim/neovim/blob/ec7453804421f738955a5f4460f44172318d42ff/src/nvim/drawline.c#L1355). `win_lbr_chartabsize()` might not reset `*headp` if it calls `win_chartabsize()` or `win_nolbr_chartbasize()`, so `*headp` might contain 'head' value of one of the previous characters. This would be the case if wrapping is enabled and a double-width character intersect window edge. Then it would set `head` to 1 and it would stay 1 for all characters after it. \r\n4. 'win_lbr_chartbasize()` recomputed the same width for tab if was displayed like ^I and was moved by virtual text. I changed the condition to check for special tab behavior.\r\n\r\n### Benchmarks\r\n\r\nTo verify that my changes actually improve performance, I wrote a Lua script that runs `screenpos()` 10'000 times in a loop and measures the difference in time returned by os.clock(). I don't know how GC and JIT affect the measurements, but most results are within 1% of the average for the test. Both the original and modified versions were compiled in release mode with Clang 14 and GCC 11.4 on Ubuntu x86-64 (WSL). Screen size is 224x57, wrapping is enabled.\r\nThere are 12 different tests in total: 4 with 10'000 characters in one line (long wrapped line), 4 with 100 lines with 220 characters each (long lines, none are wrapped), and 4 with 100 lines with 440 characters each (each line takes 2 screen rows). The results are measured for ascii 'i', and for 2 byte 'À', with and without `breakindent`. Time is in microseconds.\r\n`screenpos()` was computed for the end of the last line, the file was scrolled to the end. \r\nI also did 4 additional test that measured the time it takes to insert 10'000 characters (with `vim.cmd\"normal! 10000ix\"`) for the same 2 characters with and without `breakindent`. Time is in **milliseconds**.\r\n\r\nGCC. Results with `nobreakindent`:\r\n||insert 10000 i|insert 10000 À|10'000 i|10'000 À|220 i| 220 À|440 i| 440 À|\r\n|-|-|-|-|-|-|-|-|-|\r\n|original|1292|6165|54|384|189|555|184|541|\r\n|this|640|2385|41|160|58|204|55|198|\r\n\r\nGCC. Results with `breakindent`:\r\n||insert 10000 i|insert 10000 À|10'000 i|10'000 À|220 i| 220 À|440 i| 440 À|\r\n|-|-|-|-|-|-|-|-|-|\r\n|original|44673|99308|4314|10039|343|767|679|1149|\r\n|this|4129|7604|276|559|341|608|344|600|\r\n\r\nClang, `nobreakindent`:\r\n||insert 10000 i|insert 10000 À|10'000 i|10'000 À|220 i| 220 À|440 i| 440 À|\r\n|-|-|-|-|-|-|-|-|-|\r\n|original|1371|4145|58|264|203|453|195|373|\r\n|this|630|2068|37|137|62|180|63|175|\r\n\r\nClang, `breakindent`:\r\n||insert 10000 i|insert 10000 À|10'000 i|10'000 À|220 i| 220 À|440 i| 440 À|\r\n|-|-|-|-|-|-|-|-|-|\r\n|original|46048|94520|4324|10467|464|705|761|1181|\r\n|this|4059|5666|264|383|330|448|360|494|\r\n\r\n\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26813#discussion_r1438872335"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26813"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438872335"
                }
            },
            "author_association": "MEMBER",
            "body": "this publicly visible function should be called `utf_ptr2CharInfo`. The internal helper function should be named something which indicated that (`utf_ptr2CharInfo_impl` is a pattern we have used elsewhere for implementation functions which are not meant to be called directly ). ",
            "commit_id": "3b13ed8c7ffd6d22328fbd3f0ac378694761d4a9",
            "created_at": "2023-12-31T12:00:17Z",
            "diff_hunk": "@@ -59,3 +62,62 @@ static inline int mb_strcmp_ic(bool ic, const char *s1, const char *s2)\n // multi-byte characters if needed. Only use with \"p\" > \"s\" !\n #define MB_PTR_BACK(s, p) \\\n   (p -= utf_head_off((char *)(s), (char *)(p) - 1) + 1)\n+\n+static inline CharInfo ptr2CharInfo(char const *p_in)\n+  REAL_FATTR_NONNULL_ALL REAL_FATTR_PURE REAL_FATTR_WARN_UNUSED_RESULT REAL_FATTR_ALWAYS_INLINE;\n+\n+/// Convert a UTF-8 byte sequence to a Unicode code point.\n+/// Handles ascii, multibyte sequiences and illegal sequences.\n+///\n+/// @param[in]  p_in  String to convert.\n+///\n+/// @return information abouth the character. When the sequence is illegal,\n+/// 'value' is negative, 'len' is 1.\n+static inline CharInfo ptr2CharInfo(char const *const p_in)",
            "html_url": "https://github.com/neovim/neovim/pull/26813#discussion_r1438872335",
            "id": 1438872335,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vw3MP",
            "original_commit_id": "7358fd36af6fa5864d5e1232a0d28069749ee415",
            "original_line": 76,
            "original_position": 32,
            "original_start_line": null,
            "path": "src/nvim/mbyte.h",
            "position": null,
            "pull_request_review_id": 1799645908,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26813",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438872335/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-31T12:00:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438872335",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26813#discussion_r1438872700"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26813"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438872700"
                }
            },
            "author_association": "MEMBER",
            "body": "normally we don't require typed ints for these, but as there is a constraint this struct has to be equal in representation to a `uint64_t`, maybe we should use two `u/int32_t` in this case. And/or perhaps write some comment about this.",
            "commit_id": "3b13ed8c7ffd6d22328fbd3f0ac378694761d4a9",
            "created_at": "2023-12-31T12:02:38Z",
            "diff_hunk": "@@ -55,3 +55,13 @@ typedef struct {\n   bool vc_fail;   ///< What to do with invalid characters: if true, fail,\n                   ///< otherwise use '?'.\n } vimconv_T;\n+\n+typedef struct {\n+  int value;  /// code point\n+  int len;  /// length in bytes",
            "html_url": "https://github.com/neovim/neovim/pull/26813#discussion_r1438872700",
            "id": 1438872700,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vw3R8",
            "original_commit_id": "7358fd36af6fa5864d5e1232a0d28069749ee415",
            "original_line": 62,
            "original_position": 7,
            "original_start_line": 60,
            "path": "src/nvim/mbyte_defs.h",
            "position": null,
            "pull_request_review_id": 1799646165,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26813",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438872700/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-12-31T12:02:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1438872700",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26813#discussion_r1451675252"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26813"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451675252"
                }
            },
            "author_association": "MEMBER",
            "body": "This name is strange without a `utf_` prefix. Maybe name it `utf_char_composinglike()`?",
            "commit_id": "3b13ed8c7ffd6d22328fbd3f0ac378694761d4a9",
            "created_at": "2024-01-14T07:45:29Z",
            "diff_hunk": "@@ -722,6 +788,15 @@ bool utf_composinglike(const char *p1, const char *p2)\n   return arabic_combine(utf_ptr2char(p1), c2);\n }\n \n+/// Check if the next character is a composing character when it\n+/// comes after the first. For Arabic sometimes \"ab\" is replaced with \"c\", which\n+/// behaves like a composing character.\n+bool composinglike(int32_t const first, int32_t const next)",
            "html_url": "https://github.com/neovim/neovim/pull/26813#discussion_r1451675252",
            "id": 1451675252,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Whs50",
            "original_commit_id": "96da97ab7ecb4ce93f68e2c38fc4978c2e6cc8a6",
            "original_line": 794,
            "original_position": 160,
            "original_start_line": null,
            "path": "src/nvim/mbyte.c",
            "position": null,
            "pull_request_review_id": 1820167616,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26813",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451675252/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-01-14T07:45:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1451675252",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "NONE",
            "body": "I was looking at how to further optimize `win_lbr_chartabsize()` and it looks like some combinations of virtual text, double-width charaters and breakindent don't work as expected. For example, these 4 lines should probably end at the same virtual column:\r\n![image](https://github.com/neovim/neovim/assets/65824523/9ef26c0a-179c-4920-8001-efd78604a8a3)\r\n(white is regular text, red is virtual text. '?' is a double-width character. Virtual text in the third line contains the double-width char even though it is not displayed as red).\r\n\r\nI assume that this is what's happening:\r\nThe first line's end column is different because ['>' character is counted](https://github.com/neovim/neovim/blob/6f6abd8c02f66a71f1ad46c4596cadd5709898f4/src/nvim/plines.c#L252) before applying breakindent, and the double-width character is not yet considered to be in the last column.\r\nThe third line's end column is different because the width of virtual text is [calculated without considering wrapping](https://github.com/neovim/neovim/blob/6f6abd8c02f66a71f1ad46c4596cadd5709898f4/src/nvim/api/extmark.c#L1160), and width of '>' for a double-width character in the last column is not added.\r\n\r\n",
            "created_at": "2023-12-31T06:24:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1872688940",
            "id": 1872688940,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5vnvcs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872688940/reactions"
            },
            "updated_at": "2023-12-31T06:24:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872688940",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> The first line's end column is different because ['>' character is counted](https://github.com/neovim/neovim/blob/6f6abd8c02f66a71f1ad46c4596cadd5709898f4/src/nvim/plines.c#L252) before applying breakindent\r\n\r\nAre you referring to the 'breakindent' on the second screen line, or the third?",
            "created_at": "2023-12-31T07:18:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1872760106",
            "id": 1872760106,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5voA0q",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872760106/reactions"
            },
            "updated_at": "2023-12-31T07:18:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872760106",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "author_association": "NONE",
            "body": "First line in the file, second screen row.\r\n\r\nWindow width is 100. `breakindentopt=shift:2`, so it would add 2 cells to the next row of a line.\r\n\r\nVirtual text will have a width of 197 cells. The first real character after virtual text is 2 cells. Total size is 199.\r\n\r\nAfter computing total size, the function checks if `vcol + size - 2` is in last of its row. 0 + 199 - 2 is 197. Virtual column 197 is column 97 of a second row. Last column is 99, so head and size are not incremented.",
            "created_at": "2023-12-31T09:10:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1872888782",
            "id": 1872888782,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5vogPO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872888782/reactions"
            },
            "updated_at": "2023-12-31T09:10:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872888782",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Impressive work! One small comment:\r\n\r\n>  measures the difference in time returned by os.clock(). \r\n\r\nThat function is not safe for (fast) benchmarking; prefer `vim.uv.hrtime()`, which has a higher resolution.\r\n\r\nAnd maybe consider adding these tests to `test/benchmark`, if possible?",
            "created_at": "2023-12-31T11:11:06Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1872922707",
            "id": 1872922707,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5voohT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872922707/reactions"
            },
            "updated_at": "2023-12-31T11:11:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1872922707",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "> That function is not safe for (fast) benchmarking; prefer `vim.uv.hrtime()`, which has a higher resolution.\r\n\r\nI had noticed that the scripts in 'test/benchmarks' used libuv's `hrtime()` instead of 'os.clock()' and ran some of my benchmarks with it to see if there was any significant difference, but the results were largely the same (average with `hrtime()` had around 10 decimal digits while `os.clock()` only had 1-4, but the results were within 1us of each other). \r\n\r\nSince I ran my benchmarks manually and couldn't find a way to copy anything from within neovim to the Windows clipboard, I used `os.clock()` to save some time on typing the results.\r\n\r\n> And maybe consider adding these tests to `test/benchmark`, if possible?\r\n\r\nI will write proper benchmarks and make them the new first commit.",
            "created_at": "2024-01-01T23:55:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1873531564",
            "id": 1873531564,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5vq9Ks",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873531564/reactions"
            },
            "updated_at": "2024-01-01T23:55:41Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873531564",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "NONE",
            "body": "Do the optional s390x checks test if Neovim works on a big endian architecture?\r\nIf yes, than they are failing probably because `utf_ptr2CharInfo()` assumes the system is little-endian. ",
            "created_at": "2024-01-02T00:08:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1873536258",
            "id": 1873536258,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5vq-UC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873536258/reactions"
            },
            "updated_at": "2024-01-02T00:08:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873536258",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Do the optional s390x checks test if Neovim works on a big endian architecture?\r\n\r\nYes.",
            "created_at": "2024-01-02T00:11:36Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1873537242",
            "id": 1873537242,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5vq-ja",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 1,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873537242/reactions"
            },
            "updated_at": "2024-01-02T00:11:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873537242",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> If yes, than they are failing probably because utf_ptr2CharInfo() assumes the system is little-endian.\r\n\r\nAnd yes. All failures are indeed relevant.",
            "created_at": "2024-01-02T10:44:29Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1873865344",
            "id": 1873865344,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5vsOqA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873865344/reactions"
            },
            "updated_at": "2024-01-02T10:44:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1873865344",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "NONE",
            "body": "I rewrote the benchmarks and put them in [test/benchmark/screenpos_spec.lua](https://github.com/VanaIgr/neovim/blob/bffa5d952036e96044a4d99aa85a855cf93e263e/test/benchmark/screenpos_spec.lua), but when I ran them, I noticed that they were much slower that the ones I ran manually.\r\n\r\nClang, nobreakindent:\r\n||10'000i|10'000À|220i|220À|440i|440À|\r\n|-|-|-|-|-|-|-|\r\n|manual| 37 | 137 | 62 | 180 | 63 | 175|\r\n|new|180|310|190|320|190|310|\r\n\r\nI thought this might be because each call to `helpers.funcs.screenpos()` is a RPC, so I modified the benchmarks to instead send a Vimscript function that executes a Lua chunk that runs the loop and does the measurements. This does produce the results similar to the ones I measured manually. \r\n\r\nIs there a simpler way to execute Lua code inside Neovim and return the results to the benchmarks?\r\n\r\nThe benchmarks I pushed still measure the time outside the loop to make them similar to my original benchmarks. ",
            "created_at": "2024-01-03T21:02:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1875967961",
            "id": 1875967961,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5v0P_Z",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1875967961/reactions"
            },
            "updated_at": "2024-01-14T02:10:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1875967961",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a simpler way to execute Lua code inside Neovim and return the results to the benchmarks?\r\n\r\nYes, use `exec_lua` from helpers module. ",
            "created_at": "2024-01-05T09:24:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1878365060",
            "id": 1878365060,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5v9ZOE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1878365060/reactions"
            },
            "updated_at": "2024-01-05T09:24:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1878365060",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
                "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
                "followers_url": "https://api.github.com/users/bfredl/followers",
                "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
                "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/bfredl",
                "id": 1363104,
                "login": "bfredl",
                "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
                "organizations_url": "https://api.github.com/users/bfredl/orgs",
                "received_events_url": "https://api.github.com/users/bfredl/received_events",
                "repos_url": "https://api.github.com/users/bfredl/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/bfredl"
            }
        },
        {
            "author_association": "NONE",
            "body": "I added the benchmarks.\r\n\r\n\r\n",
            "created_at": "2024-01-07T23:18:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1880211269",
            "id": 1880211269,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5wEb9F",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 3,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880211269/reactions"
            },
            "updated_at": "2024-01-07T23:18:55Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880211269",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "NONE",
            "body": "I also added `plines.h` to clint.py `check_includes_ignore` list, since it uses functions from `mbyte.h` to define `init_chartabsize()` and `adv_chartabsize()`. \r\nSince both are convenience functions, I can also inline them and remove the dependency on `mbyte.h`.\r\n\r\n\r\n\r\n",
            "created_at": "2024-01-08T00:08:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1880235975",
            "id": 1880235975,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5wEh_H",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880235975/reactions"
            },
            "updated_at": "2024-01-08T00:08:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1880235975",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "NONE",
            "body": "I removed both functions. Now `plines.h` only includes mbyte_defs.",
            "created_at": "2024-01-13T02:57:22Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1890270756",
            "id": 1890270756,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5wqz4k",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890270756/reactions"
            },
            "updated_at": "2024-01-13T02:57:22Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890270756",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "NONE",
            "body": "I also found a couple of issues:\r\n\r\n1. Blockwise put doesn't add correct number of spaces for multibyte characters.\r\n\r\nThe loop that determines the number of spaces to add to the pasted text to align it ([link](https://github.com/neovim/neovim/blob/786089013d33666a2acb5ba86fb34c716a9cab26/src/nvim/ops.c#L3293)) advances the pointer by a single byte. This is not correct for multibyte characters, since all trailing bytes would be counted separately as 4 cell wide '\\<xx\\>'. This issue is also present in vim.\r\nFor example, copying the text at the top (blockwise, without virtualedit) and pasting it before the b's at the bottom while in blockwise visual mode would result in this:\r\n![image](https://github.com/neovim/neovim/assets/65824523/2da78925-6bfc-4a1a-90c1-00a516d3aaa6) ![image](https://github.com/neovim/neovim/assets/65824523/d698bc2a-3bc8-4f60-aa77-6d7f0d22c3de)\r\nThis can be fixed by using `MB_PTR_ADV(cts.cts_ptr)` instead of `cts.cts_ptr++`, and changing the loop to iterate until the end of the string.\r\n\r\nThis still wouldn't work correctly for tabs, since all widths are computed at virtual column 0, but tab width changes depending on its position. I thought there also may be some issues if the tab's width is greater than window width and breakindent in enabled (since the size of breakindent in this case would be added to the total width of the pasted line) but for some reason this doesn't happen.\r\n\r\n2. Lisp indenting doesn't use correct line number.\r\n\r\nIn [2 places](https://github.com/neovim/neovim/blob/786089013d33666a2acb5ba86fb34c716a9cab26/src/nvim/indent.c#L1275) in `get_lisp_indent()` , the 'lnum' argument for `init_chartabsize_arg()` is `(colnr_T)(that - line)` (which computes the index of the current byte, not the line number).\r\nThis can affect the results if the line at that position contains virtual text:\r\n![image](https://github.com/neovim/neovim/assets/65824523/c819000f-3696-483c-a12a-7ca7e699e8bb)\r\n![image](https://github.com/neovim/neovim/assets/65824523/f179859e-eb29-46f4-aa22-92dac898ecdb) ![image](https://github.com/neovim/neovim/assets/65824523/fbfef993-7ec7-40b3-81d7-45c0b0d4a5df)\r\n\r\nThere is also [one place](https://github.com/neovim/neovim/blob/786089013d33666a2acb5ba86fb34c716a9cab26/src/nvim/indent.c#L1270) in this function in which character is assumed to be 1 byte long and 1 cell wide. I don't know if this can cause any issues.",
            "created_at": "2024-01-13T04:01:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1890293346",
            "id": 1890293346,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5wq5Zi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890293346/reactions"
            },
            "updated_at": "2024-01-13T04:03:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890293346",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Can you mention the user-facing consequences in `:help news` (e.g. \"performance of 'breakindent', foo, bar, etc., is now 3x faster for long lines, etc, etc\"\r\n\r\nhttps://github.com/neovim/neovim/blob/2dc439c672facaeb8e51ef6aa20efc0e7092eee2/runtime/doc/news.txt#L129 \r\n\r\nAlso would be ideal if the commit message contains the explanation from the PR description, especially the list of problems addressed.",
            "created_at": "2024-01-13T17:28:41Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1890601210",
            "id": 1890601210,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5wsEj6",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890601210/reactions"
            },
            "updated_at": "2024-01-13T17:29:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1890601210",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "NONE",
            "body": "Is there anything else I should do?",
            "created_at": "2024-01-16T01:28:39Z",
            "html_url": "https://github.com/neovim/neovim/pull/26813#issuecomment-1892941356",
            "id": 1892941356,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
            "node_id": "IC_kwDOAPphoM5w0_4s",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1892941356/reactions"
            },
            "updated_at": "2024-01-16T01:28:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1892941356",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26813/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26813/commits",
    "created_at": "2023-12-31T00:53:57Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26813.diff",
    "draft": false,
    "head": {
        "label": "VanaIgr:screen-pos-speedup",
        "ref": "screen-pos-speedup",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/VanaIgr/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/VanaIgr/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/VanaIgr/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/VanaIgr/neovim/branches{/branch}",
            "clone_url": "https://github.com/VanaIgr/neovim.git",
            "collaborators_url": "https://api.github.com/repos/VanaIgr/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/VanaIgr/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/VanaIgr/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/VanaIgr/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/VanaIgr/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/VanaIgr/neovim/contributors",
            "created_at": "2023-12-05T22:08:59Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/VanaIgr/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/VanaIgr/neovim/downloads",
            "events_url": "https://api.github.com/repos/VanaIgr/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/VanaIgr/neovim/forks",
            "full_name": "VanaIgr/neovim",
            "git_commits_url": "https://api.github.com/repos/VanaIgr/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/VanaIgr/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/VanaIgr/neovim/git/tags{/sha}",
            "git_url": "git://github.com/VanaIgr/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/VanaIgr/neovim/hooks",
            "html_url": "https://github.com/VanaIgr/neovim",
            "id": 727936921,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/VanaIgr/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/VanaIgr/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/VanaIgr/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/VanaIgr/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/VanaIgr/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/VanaIgr/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/VanaIgr/neovim/merges",
            "milestones_url": "https://api.github.com/repos/VanaIgr/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOK2NvmQ",
            "notifications_url": "https://api.github.com/repos/VanaIgr/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
                "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
                "followers_url": "https://api.github.com/users/VanaIgr/followers",
                "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
                "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/VanaIgr",
                "id": 65824523,
                "login": "VanaIgr",
                "node_id": "MDQ6VXNlcjY1ODI0NTIz",
                "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
                "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
                "repos_url": "https://api.github.com/users/VanaIgr/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/VanaIgr"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/VanaIgr/neovim/pulls{/number}",
            "pushed_at": "2024-01-15T05:25:53Z",
            "releases_url": "https://api.github.com/repos/VanaIgr/neovim/releases{/id}",
            "size": 245293,
            "ssh_url": "git@github.com:VanaIgr/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/VanaIgr/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/VanaIgr/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/VanaIgr/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/VanaIgr/neovim/subscription",
            "svn_url": "https://github.com/VanaIgr/neovim",
            "tags_url": "https://api.github.com/repos/VanaIgr/neovim/tags",
            "teams_url": "https://api.github.com/repos/VanaIgr/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/VanaIgr/neovim/git/trees{/sha}",
            "updated_at": "2023-12-13T20:00:37Z",
            "url": "https://api.github.com/repos/VanaIgr/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "3b13ed8c7ffd6d22328fbd3f0ac378694761d4a9",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
            "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
            "followers_url": "https://api.github.com/users/VanaIgr/followers",
            "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
            "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/VanaIgr",
            "id": 65824523,
            "login": "VanaIgr",
            "node_id": "MDQ6VXNlcjY1ODI0NTIz",
            "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
            "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
            "repos_url": "https://api.github.com/users/VanaIgr/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/VanaIgr"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26813",
    "id": 1660535726,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26813",
    "labels": [
        {
            "color": "FEF2C0",
            "default": false,
            "description": "issues reporting performance problems",
            "id": 101930601,
            "name": "performance",
            "node_id": "MDU6TGFiZWwxMDE5MzA2MDE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/performance"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "Enable CI for s390x",
            "id": 6154834276,
            "name": "ci-s390x",
            "node_id": "LA_kwDOAPphoM8AAAABbttRZA",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci-s390x"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6457d7db1183f9958b50d7ebe033047848194f70",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 235,
        "created_at": "2023-02-02T14:11:43Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1363104?v=4",
            "events_url": "https://api.github.com/users/bfredl/events{/privacy}",
            "followers_url": "https://api.github.com/users/bfredl/followers",
            "following_url": "https://api.github.com/users/bfredl/following{/other_user}",
            "gists_url": "https://api.github.com/users/bfredl/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/bfredl",
            "id": 1363104,
            "login": "bfredl",
            "node_id": "MDQ6VXNlcjEzNjMxMDQ=",
            "organizations_url": "https://api.github.com/users/bfredl/orgs",
            "received_events_url": "https://api.github.com/users/bfredl/received_events",
            "repos_url": "https://api.github.com/users/bfredl/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/bfredl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bfredl/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/bfredl"
        },
        "description": "",
        "due_on": "2024-03-01T08:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/36",
        "id": 8997654,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/36/labels",
        "node_id": "MI_kwDOAPphoM4AiUsW",
        "number": 36,
        "open_issues": 141,
        "state": "open",
        "title": "0.10",
        "updated_at": "2024-01-15T23:44:03Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/36"
    },
    "node_id": "PR_kwDOAPphoM5i-cOu",
    "number": 26813,
    "patch_url": "https://github.com/neovim/neovim/pull/26813.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26813/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/3b13ed8c7ffd6d22328fbd3f0ac378694761d4a9",
    "title": "perf: make screen size and position calculations more efficient",
    "updated_at": "2024-01-16T01:35:25Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26813",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/65824523?v=4",
        "events_url": "https://api.github.com/users/VanaIgr/events{/privacy}",
        "followers_url": "https://api.github.com/users/VanaIgr/followers",
        "following_url": "https://api.github.com/users/VanaIgr/following{/other_user}",
        "gists_url": "https://api.github.com/users/VanaIgr/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/VanaIgr",
        "id": 65824523,
        "login": "VanaIgr",
        "node_id": "MDQ6VXNlcjY1ODI0NTIz",
        "organizations_url": "https://api.github.com/users/VanaIgr/orgs",
        "received_events_url": "https://api.github.com/users/VanaIgr/received_events",
        "repos_url": "https://api.github.com/users/VanaIgr/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/VanaIgr/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/VanaIgr/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/VanaIgr"
    }
}