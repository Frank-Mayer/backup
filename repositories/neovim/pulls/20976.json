{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20976/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20976/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/20976"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/20976"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20976/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/501b5ec875e0e9fda617bcbf62f86c80b938e67b"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5531,
            "forks_count": 5531,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1778,
            "open_issues_count": 1778,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-08-20T01:30:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 282327,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 80980,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-08-20T00:20:26Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 80980,
            "watchers_count": 80980,
            "web_commit_signoff_required": false
        },
        "sha": "de500095b1adc675999315e70307b3425dca089c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Add `vim.fs.realpath()` (which is just a wrapper for `vim.loop.fs_realpath`) and use it in `vim.fs.normalize()`. `vim.fs.normalize()` can be used on files that do not exist. In these cases, `realpath()` returns nil, so `normalize()` returns the \"unreal\" path instead.\n",
    "closed_at": "2024-08-18T02:21:15Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014898276"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014898276"
                }
            },
            "author_association": "MEMBER",
            "body": "[quick comment on mobile]\n\nLuv is already a part of our API and is documented via `:help luvref` so there is no need for a redundant wrapper here.",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-06T21:51:37Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.\n+function M.realpath(path)\n+  return vim.loop.fs_realpath(path)",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014898276",
            "id": 1014898276,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM48fh5k",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 247,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 50,
            "pull_request_review_id": 1169656950,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014898276/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-06T21:51:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014898276",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014904660"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014904660"
                }
            },
            "author_association": "MEMBER",
            "body": "In general we should strongly avoid redundant wrappers.  OTOH,\r\n\r\n1. vim.loop is low-level\r\n2. when we introduce \"topic\" modules like `vim.fs`, there is an expectation that they cover the topic, so all related functions can be discovered there.\r\n3. We may enhance wrappers added here in the future. If plugins are all using low-level stuff, they won't get those improvements.\r\n\r\nThe \"three namespaces\" of the Nvim stdlib are vimscript, Lua `vim.*`, and RPC API. IMO, luv is not part of that supported space, it's low level, like FFI.\r\n",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-06T22:37:13Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.\n+function M.realpath(path)\n+  return vim.loop.fs_realpath(path)",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014904660",
            "id": 1014904660,
            "in_reply_to_id": 1014898276,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM48fjdU",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 247,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 50,
            "pull_request_review_id": 1169663029,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014904660/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-06T22:39:24Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014904660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014906112"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014906112"
                }
            },
            "author_association": "MEMBER",
            "body": "Perhaps we should do these kind of \"resolve\" tasks in `vim.fs.realpath`, or `vim.fs.resolve`.\r\n\r\nFor comparison, \r\n\r\n- python has\r\n    - [abspath](https://docs.python.org/3/library/os.path.html#os.path.abspath)\r\n    - [normpath](https://docs.python.org/3/library/os.path.html#os.path.normpath)\r\n    - [realpath](https://docs.python.org/3/library/os.path.html#os.path.realpath)\r\n- nodejs has\r\n    - [resolve](https://nodejs.org/api/path.html#pathresolvepaths)\r\n    - [normalize](https://nodejs.org/api/path.html#pathnormalizepath)",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-06T22:44:47Z",
            "diff_hunk": "@@ -2306,10 +2307,13 @@ find({names}, {opts})                                          *vim.fs.find()*\n         (table) The paths of all matching files or directories\n \n normalize({path})                                         *vim.fs.normalize()*\n-    Normalize a path to a standard format. A tilde (~) character at the\n-    beginning of the path is expanded to the user's home directory and any\n-    backslash (\\) characters are converted to forward slashes (/). Environment\n-    variables are also expanded.\n+    Normalize a path to a standard format.\n+\n+    A tilde (~) character at the beginning of the path is expanded to the\n+    user's home directory and any backslash (\\) characters are converted to",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014906112",
            "id": 1014906112,
            "line": 2313,
            "node_id": "PRRC_kwDOAPphoM48fj0A",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 2313,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 25,
            "pull_request_review_id": 1169665092,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014906112/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-06T22:45:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014906112",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014906250"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014906250"
                }
            },
            "author_association": "MEMBER",
            "body": ">vim.loop is low-level\r\n\r\nI don’t feel strongly about it, but this was the reason for introducing this. I have heard in the past that `vim.loop` is *caveat emptor* territory, so this is just a way to provide a “user facing” interface to this one particular API.\r\n\r\nOtherwise I agree about redundant wrappers. ",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-06T22:45:14Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.\n+function M.realpath(path)\n+  return vim.loop.fs_realpath(path)",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014906250",
            "id": 1014906250,
            "in_reply_to_id": 1014898276,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM48fj2K",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 247,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 50,
            "pull_request_review_id": 1169665309,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014906250/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-06T22:45:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014906250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014907318"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014907318"
                }
            },
            "author_association": "MEMBER",
            "body": "> luv is not part of that supported space, it's low level, like FFI.\n\nErr, that is news to me, and quite concerning since **many** plugins are using `vim.loop`. I've always understood it as being very supported.\n\nWas it then a mistake to include the luv documentation in our runtime?",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-06T22:52:46Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.\n+function M.realpath(path)\n+  return vim.loop.fs_realpath(path)",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014907318",
            "id": 1014907318,
            "in_reply_to_id": 1014898276,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM48fkG2",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 247,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 50,
            "pull_request_review_id": 1169666468,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014907318/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-06T22:52:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014907318",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014910067"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014910067"
                }
            },
            "author_association": "MEMBER",
            "body": "> quite concerning since many plugins are using vim.loop\r\n\r\nNothing to be concerned about, but it is similar story as FFI: we exposed a low-level thing that we don't own. \r\n\r\n> Was it then a mistake to include the luv documentation in our runtime?\r\n\r\nNo, it's useful and used :)",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-06T23:11:22Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.\n+function M.realpath(path)\n+  return vim.loop.fs_realpath(path)",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014910067",
            "id": 1014910067,
            "in_reply_to_id": 1014898276,
            "line": 247,
            "node_id": "PRRC_kwDOAPphoM48fkxz",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 247,
            "original_position": 50,
            "original_start_line": null,
            "path": "runtime/lua/vim/fs.lua",
            "position": 50,
            "pull_request_review_id": 1169669393,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014910067/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-06T23:11:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014910067",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014951509"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014951509"
                }
            },
            "author_association": "MEMBER",
            "body": "Maybe we don't need `realpath` at all and just use `normalize` for that purpose. One benefit of `realpath` is that it returns `nil` if the file does not exist which is useful in some situations. We could have `normalize` return a second boolean parameter that covers this use-case.",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-07T02:19:01Z",
            "diff_hunk": "@@ -2306,10 +2307,13 @@ find({names}, {opts})                                          *vim.fs.find()*\n         (table) The paths of all matching files or directories\n \n normalize({path})                                         *vim.fs.normalize()*\n-    Normalize a path to a standard format. A tilde (~) character at the\n-    beginning of the path is expanded to the user's home directory and any\n-    backslash (\\) characters are converted to forward slashes (/). Environment\n-    variables are also expanded.\n+    Normalize a path to a standard format.\n+\n+    A tilde (~) character at the beginning of the path is expanded to the\n+    user's home directory and any backslash (\\) characters are converted to",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014951509",
            "id": 1014951509,
            "in_reply_to_id": 1014906112,
            "line": 2313,
            "node_id": "PRRC_kwDOAPphoM48fu5V",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 2313,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 25,
            "pull_request_review_id": 1169722032,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014951509/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-07T02:19:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014951509",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1014953424"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014953424"
                }
            },
            "author_association": "MEMBER",
            "body": "It's probably useful to have separation of \"resolve\" and \"normalize\". After all, one can always do normalize(resolve())--but not the inverse if we don't have both.",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-07T02:24:53Z",
            "diff_hunk": "@@ -2306,10 +2307,13 @@ find({names}, {opts})                                          *vim.fs.find()*\n         (table) The paths of all matching files or directories\n \n normalize({path})                                         *vim.fs.normalize()*\n-    Normalize a path to a standard format. A tilde (~) character at the\n-    beginning of the path is expanded to the user's home directory and any\n-    backslash (\\) characters are converted to forward slashes (/). Environment\n-    variables are also expanded.\n+    Normalize a path to a standard format.\n+\n+    A tilde (~) character at the beginning of the path is expanded to the\n+    user's home directory and any backslash (\\) characters are converted to",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1014953424",
            "id": 1014953424,
            "in_reply_to_id": 1014906112,
            "line": 2313,
            "node_id": "PRRC_kwDOAPphoM48fvXQ",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 2313,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 25,
            "pull_request_review_id": 1169724595,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014953424/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-07T02:24:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1014953424",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1015554957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1015554957"
                }
            },
            "author_association": "MEMBER",
            "body": "It's not clear to me what the difference is between `resolve` and `normalize` in your suggestion.\r\n\r\n> * python has ...\r\n> * nodejs has ...\r\n\r\nI think taking inspiration from other stdlibs is a good idea as that lets users rely on existing mental models. We just need to pick one. Some of `vim.fs` is already based on penlight, which has `abspath` and `normpath`.\r\n\r\n`abspath` does not use the `realpath` system function: it simply prepends the cwd to the given file (so it's really just `fnamemodify(path, ':p')`). This is useful in some cases, and might be worth adding.\r\n\r\n`normpath` (what we call `normalize`) does the job of resolving `./` and `../` segments as well as symlinks. But it does not make the path absolute. So again, we would not be able to use `fs_realpath` for this either.\r\n\r\nLet me know what API you'd like to see.",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-07T15:21:53Z",
            "diff_hunk": "@@ -2306,10 +2307,13 @@ find({names}, {opts})                                          *vim.fs.find()*\n         (table) The paths of all matching files or directories\n \n normalize({path})                                         *vim.fs.normalize()*\n-    Normalize a path to a standard format. A tilde (~) character at the\n-    beginning of the path is expanded to the user's home directory and any\n-    backslash (\\) characters are converted to forward slashes (/). Environment\n-    variables are also expanded.\n+    Normalize a path to a standard format.\n+\n+    A tilde (~) character at the beginning of the path is expanded to the\n+    user's home directory and any backslash (\\) characters are converted to",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1015554957",
            "id": 1015554957,
            "in_reply_to_id": 1014906112,
            "line": 2313,
            "node_id": "PRRC_kwDOAPphoM48iCON",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 2313,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 25,
            "pull_request_review_id": 1170595801,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1015554957/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2022-11-07T15:21:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1015554957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1016410706"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016410706"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "```suggestion\r\n---@alias errmsg string|nil\r\n---@alias errcode string|nil\r\n\r\n----- Convert a path to an absolute path, resolving symlinks.\r\n---\r\n---@param path (string) Path to convert to an absolute path\r\n---@return string|nil,errmsg,errcode Absolute path, or a `fail` tuple\r\n---        if the file or directory does not exist.\r\n```",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-08T10:09:41Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1016410706",
            "id": 1016410706,
            "line": 245,
            "node_id": "PRRC_kwDOAPphoM48lTJS",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 245,
            "original_position": 48,
            "original_start_line": 241,
            "path": "runtime/lua/vim/fs.lua",
            "position": 48,
            "pull_request_review_id": 1171782827,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016410706/reactions"
            },
            "side": "RIGHT",
            "start_line": 241,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-11-08T10:16:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016410706",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1016420845"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016420845"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think that `fs_realpath` requires a deeper look, since we're not handling all the cases where this function can fail.\r\n\r\n_see https://github.com/isaacs/fs.realpath/blob/c1a831d877138d9ee66f4dfbf2a8a80e0a899268/index.js#L16-L22 for a potential solution_\r\n\r\nfrom https://docs.libuv.org/en/v1.x/fs.html#c.uv_fs_realpath\r\n\r\n> \r\n>  **Warning**:  This function has certain platform-specific caveats that were discovered when used in Node.\r\n> \r\n>   * macOS and other BSDs: this function will fail with UV_ELOOP if more than 32 symlinks are\r\n>     found while resolving the given path.  This limit is hardcoded and cannot be sidestepped.\r\n>   * Windows: while this function works in the common case, there are a number of corner cases\r\n>     where it doesn't:\r\n>     - Paths in ramdisk volumes created by tools which sidestep the Volume Manager (such as ImDisk)\r\n>       cannot be resolved.\r\n>     - Inconsistent casing when using drive letters.\r\n>     - Resolved path bypasses subst'd drives.\r\n> \r\n>     While this function can still be used, it's not recommended if scenarios such as the\r\n>     above need to be supported.\r\n>     The background story and some more details on these issues can be checked [here](https://github.com/nodejs/node/issues/7726).\r\n",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-11-08T10:15:31Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p\n+end\n+\n+--- Convert a path to an absolute path, resolving symlinks.\n+---\n+---@param path (string) Path to convert to an absolute path\n+---@return (string|nil) Absolute path, or nil if the file or directory does not\n+---        exist.",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1016420845",
            "id": 1016420845,
            "in_reply_to_id": 1016410706,
            "line": 245,
            "node_id": "PRRC_kwDOAPphoM48lVnt",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 245,
            "original_position": 48,
            "original_start_line": 241,
            "path": "runtime/lua/vim/fs.lua",
            "position": 48,
            "pull_request_review_id": 1171782827,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016420845/reactions"
            },
            "side": "RIGHT",
            "start_line": 241,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-11-08T10:16:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1016420845",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59826753?v=4",
                "events_url": "https://api.github.com/users/kylo252/events{/privacy}",
                "followers_url": "https://api.github.com/users/kylo252/followers",
                "following_url": "https://api.github.com/users/kylo252/following{/other_user}",
                "gists_url": "https://api.github.com/users/kylo252/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/kylo252",
                "id": 59826753,
                "login": "kylo252",
                "node_id": "MDQ6VXNlcjU5ODI2NzUz",
                "organizations_url": "https://api.github.com/users/kylo252/orgs",
                "received_events_url": "https://api.github.com/users/kylo252/received_events",
                "repos_url": "https://api.github.com/users/kylo252/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/kylo252/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kylo252/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/kylo252"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1037079907"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1037079907"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "A comment regarding Windows `vim.loop.fs_realpath` will return backslashes so it'll defeat the propose of doing the `gsub()` before calling it",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2022-12-01T13:00:14Z",
            "diff_hunk": "@@ -227,7 +231,20 @@ end\n ---@return (string) Normalized path\n function M.normalize(path)\n   vim.validate({ path = { path, 's' } })\n-  return (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+  local p = (path:gsub('^~/', vim.env.HOME .. '/'):gsub('%$([%w_]+)', vim.env):gsub('\\\\', '/'))\n+\n+  -- Try to also convert the path to an absolute path with symlinks resolved, but if the path does\n+  -- not yet exist simply return it as-is.\n+  return M.realpath(p) or p",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1037079907",
            "id": 1037079907,
            "line": 238,
            "node_id": "PRRC_kwDOAPphoM490JVj",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 238,
            "original_position": 41,
            "original_start_line": 234,
            "path": "runtime/lua/vim/fs.lua",
            "position": 41,
            "pull_request_review_id": 1200944967,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1037079907/reactions"
            },
            "side": "RIGHT",
            "start_line": 234,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2022-12-01T13:00:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1037079907",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4576770?v=4",
                "events_url": "https://api.github.com/users/mike325/events{/privacy}",
                "followers_url": "https://api.github.com/users/mike325/followers",
                "following_url": "https://api.github.com/users/mike325/following{/other_user}",
                "gists_url": "https://api.github.com/users/mike325/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mike325",
                "id": 4576770,
                "login": "mike325",
                "node_id": "MDQ6VXNlcjQ1NzY3NzA=",
                "organizations_url": "https://api.github.com/users/mike325/orgs",
                "received_events_url": "https://api.github.com/users/mike325/received_events",
                "repos_url": "https://api.github.com/users/mike325/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mike325/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mike325/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mike325"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/20976#discussion_r1064231070"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/20976"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1064231070"
                }
            },
            "author_association": "MEMBER",
            "body": "> It's not clear to me what the difference is between resolve and normalize in your suggestion.\r\n\r\n@gpanders in both of my above comments, intention was that `normalize` only does stuff that doesn't read from the environment. whereas `resolve` resolves against the environment/filesystem/etc.\r\n\r\ndoes that answer your question?",
            "commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "created_at": "2023-01-09T00:51:16Z",
            "diff_hunk": "@@ -2306,10 +2307,13 @@ find({names}, {opts})                                          *vim.fs.find()*\n         (table) The paths of all matching files or directories\n \n normalize({path})                                         *vim.fs.normalize()*\n-    Normalize a path to a standard format. A tilde (~) character at the\n-    beginning of the path is expanded to the user's home directory and any\n-    backslash (\\) characters are converted to forward slashes (/). Environment\n-    variables are also expanded.\n+    Normalize a path to a standard format.\n+\n+    A tilde (~) character at the beginning of the path is expanded to the\n+    user's home directory and any backslash (\\) characters are converted to",
            "html_url": "https://github.com/neovim/neovim/pull/20976#discussion_r1064231070",
            "id": 1064231070,
            "in_reply_to_id": 1014906112,
            "line": 2313,
            "node_id": "PRRC_kwDOAPphoM4_buCe",
            "original_commit_id": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
            "original_line": 2313,
            "original_position": 25,
            "original_start_line": null,
            "path": "runtime/doc/lua.txt",
            "position": 25,
            "pull_request_review_id": 1239863661,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1064231070/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-01-09T00:51:30Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1064231070",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/20976/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/20976/commits",
    "created_at": "2022-11-06T20:33:32Z",
    "diff_url": "https://github.com/neovim/neovim/pull/20976.diff",
    "draft": false,
    "head": {
        "label": "gpanders:normalize-realpath",
        "ref": "normalize-realpath",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-08-19T11:43:09Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 276474,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "501b5ec875e0e9fda617bcbf62f86c80b938e67b",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/20976",
    "id": 1112057846,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/20976",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2dc59455fcea9e9f3e111072516ff0a6a2d1fe34",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5CSKf2",
    "number": 20976,
    "patch_url": "https://github.com/neovim/neovim/pull/20976.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/20976/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/501b5ec875e0e9fda617bcbf62f86c80b938e67b",
    "title": "Add vim.fs.realpath() and use it in vim.fs.normalize()",
    "updated_at": "2024-08-18T02:21:15Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/20976",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}