{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15398/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15398/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/15398"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/15398"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15398/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/9843109bc71827c261ca2d94a711060cd4784fde"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5096,
            "forks_count": 5096,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1716,
            "open_issues_count": 1716,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T01:20:52Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248449,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72293,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-02T00:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72293,
            "watchers_count": 72293,
            "web_commit_signoff_required": false
        },
        "sha": "50b30de2007961718cc11811a30f6b0f35c3c793",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Closes #2995.\r\n\r\ncloses https://github.com/neovim/neovim/issues/2761",
    "closed_at": "2021-08-22T00:23:11Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r691250202"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691250202"
                }
            },
            "author_association": "MEMBER",
            "body": "can we just use `do_cmdline_cmd` here? That avoids exposing do_autocmd_event(). Performance of `do_cmdline_cmd` is small compared to the cost of the rest of this codepath. It's also more readable.",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-18T13:41:59Z",
            "diff_hunk": "@@ -5034,6 +5035,15 @@ static void nv_ident(cmdarg_T *cap)\n     g_tag_at_cursor = true;\n     do_cmdline_cmd(buf);\n     g_tag_at_cursor = false;\n+\n+    if (cmdchar == 'K' && !kp_ex && !kp_help) {\n+      // Start insert mode in terminal buffer\n+      restart_edit = 'i';\n+\n+      add_map((char_u *)\"<buffer> <esc> <Cmd>call jobstop(&channel)<CR>\", TERM_FOCUS, true);\n+      do_autocmd_event(EVENT_TERMCLOSE, (char_u *)\"<buffer>\", false, false, (char_u *)\"bdelete!\",\n+                       false, AUGROUP_DEFAULT);",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r691250202",
            "id": 691250202,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI1MDIwMg==",
            "original_commit_id": "570b6730f9feb95d7cb4f75340adabcfb608f297",
            "original_line": 5045,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 732881081,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691250202/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T13:42:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691250202",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r691255267"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691255267"
                }
            },
            "author_association": "MEMBER",
            "body": "Avoid deleting lines in the oldtests. It makes merging upstream changes much easier if the lines exist, but are either commented-out (for 1-2 lines) or skipped.\r\n\r\nTo avoid indenting the skipped lines (again to avoid merge-conflicts from upstream), we can do an early-return here:\r\n\r\n```\r\nif !has(\"unix\") || has('nvim')  \" Nvim K uses :terminal. #15398\r\n```\r\n",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-18T13:47:31Z",
            "diff_hunk": "@@ -1226,29 +1226,6 @@ func Test_normal23_K()\n   set iskeyword-=%\n   set iskeyword-=\\|\n \n-  \" Only expect \"man\" to work on Unix\n-  if !has(\"unix\")",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r691255267",
            "id": 691255267,
            "line": 1230,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI1NTI2Nw==",
            "original_commit_id": "570b6730f9feb95d7cb4f75340adabcfb608f297",
            "original_line": 1230,
            "original_position": 5,
            "original_start_line": null,
            "path": "src/nvim/testdir/test_normal.vim",
            "position": 4,
            "pull_request_review_id": 732888016,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691255267/reactions"
            },
            "side": "LEFT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T13:47:31Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691255267",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r691299143"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/691299143"
                }
            },
            "author_association": "MEMBER",
            "body": "~~Sure, I'll just use `do_autocmd` (it parses a string like `do_cmdline_cmd` so is equally readable).~~\r\n\r\nNevermind, `do_autocmd` doesn't like read-only strings. `do_cmdline_cmd` it is.",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-18T14:34:17Z",
            "diff_hunk": "@@ -5034,6 +5035,15 @@ static void nv_ident(cmdarg_T *cap)\n     g_tag_at_cursor = true;\n     do_cmdline_cmd(buf);\n     g_tag_at_cursor = false;\n+\n+    if (cmdchar == 'K' && !kp_ex && !kp_help) {\n+      // Start insert mode in terminal buffer\n+      restart_edit = 'i';\n+\n+      add_map((char_u *)\"<buffer> <esc> <Cmd>call jobstop(&channel)<CR>\", TERM_FOCUS, true);\n+      do_autocmd_event(EVENT_TERMCLOSE, (char_u *)\"<buffer>\", false, false, (char_u *)\"bdelete!\",\n+                       false, AUGROUP_DEFAULT);",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r691299143",
            "id": 691299143,
            "in_reply_to_id": 691250202,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MTI5OTE0Mw==",
            "original_commit_id": "570b6730f9feb95d7cb4f75340adabcfb608f297",
            "original_line": 5045,
            "original_position": 21,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 732948823,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691299143/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-18T14:39:29Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/691299143",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r693292457"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292457"
                }
            },
            "author_association": "MEMBER",
            "body": "avoid abbreviated ex command names in scripts/core. Does the calcuatlion of `buf_size` need to change?",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-21T02:52:07Z",
            "diff_hunk": "@@ -4931,7 +4931,8 @@ static void nv_ident(cmdarg_T *cap)\n         snprintf(buf, buf_size, \".,.+%\" PRId64, (int64_t)(cap->count0 - 1));\n       }\n \n-      STRCAT(buf, \"! \");\n+      do_cmdline_cmd(\"tabnew\");\n+      STRCAT(buf, \"term \");",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r693292457",
            "id": 693292457,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI5MjQ1Nw==",
            "original_commit_id": "5a37a1e12793cbafa0ebf3103e4ef9ddea20ef46",
            "original_line": 4935,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 735460230,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292457/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-21T02:52:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292457",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r693292573"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292573"
                }
            },
            "author_association": "MEMBER",
            "body": "even if it doesn't apply to pydoc, doesn't it make sense to skip this for non-zero `v:event.status` ?",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-21T02:53:19Z",
            "diff_hunk": "@@ -5028,6 +5029,14 @@ static void nv_ident(cmdarg_T *cap)\n     g_tag_at_cursor = true;\n     do_cmdline_cmd(buf);\n     g_tag_at_cursor = false;\n+\n+    if (cmdchar == 'K' && !kp_ex && !kp_help) {\n+      // Start insert mode in terminal buffer\n+      restart_edit = 'i';\n+\n+      add_map((char_u *)\"<buffer> <esc> <Cmd>call jobstop(&channel)<CR>\", TERM_FOCUS, true);\n+      do_cmdline_cmd(\"autocmd TermClose <buffer> bdelete!\");",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r693292573",
            "id": 693292573,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI5MjU3Mw==",
            "original_commit_id": "5a37a1e12793cbafa0ebf3103e4ef9ddea20ef46",
            "original_line": 5038,
            "original_position": 20,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 735460301,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292573/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-21T02:53:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292573",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r693292661"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292661"
                }
            },
            "author_association": "MEMBER",
            "body": "Yes, I have that change locally and was testing it when I made the discovery about pydoc. I'll push it soon.",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-21T02:54:42Z",
            "diff_hunk": "@@ -5028,6 +5029,14 @@ static void nv_ident(cmdarg_T *cap)\n     g_tag_at_cursor = true;\n     do_cmdline_cmd(buf);\n     g_tag_at_cursor = false;\n+\n+    if (cmdchar == 'K' && !kp_ex && !kp_help) {\n+      // Start insert mode in terminal buffer\n+      restart_edit = 'i';\n+\n+      add_map((char_u *)\"<buffer> <esc> <Cmd>call jobstop(&channel)<CR>\", TERM_FOCUS, true);\n+      do_cmdline_cmd(\"autocmd TermClose <buffer> bdelete!\");",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r693292661",
            "id": 693292661,
            "in_reply_to_id": 693292573,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI5MjY2MQ==",
            "original_commit_id": "5a37a1e12793cbafa0ebf3103e4ef9ddea20ef46",
            "original_line": 5038,
            "original_position": 20,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 735460373,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292661/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-21T02:54:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693292661",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r693293053"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693293053"
                }
            },
            "author_association": "MEMBER",
            "body": ">  Does the calcuatlion of buf_size need to change?\r\n\r\nIt's currently `n*2 + 30 + STRLEN(&keywordprg)` where `n` is the length of the identifier being queried. I don't know how or why this number was decided on for the buffer size but we are still within these bounds.",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-21T02:58:11Z",
            "diff_hunk": "@@ -4931,7 +4931,8 @@ static void nv_ident(cmdarg_T *cap)\n         snprintf(buf, buf_size, \".,.+%\" PRId64, (int64_t)(cap->count0 - 1));\n       }\n \n-      STRCAT(buf, \"! \");\n+      do_cmdline_cmd(\"tabnew\");\n+      STRCAT(buf, \"term \");",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r693293053",
            "id": 693293053,
            "in_reply_to_id": 693292457,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzI5MzA1Mw==",
            "original_commit_id": "5a37a1e12793cbafa0ebf3103e4ef9ddea20ef46",
            "original_line": 4935,
            "original_position": 6,
            "original_start_line": null,
            "path": "src/nvim/normal.c",
            "position": null,
            "pull_request_review_id": 735460615,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693293053/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-21T02:58:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693293053",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r693416988"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693416988"
                }
            },
            "author_association": "MEMBER",
            "body": "Just for reference: it's also fine to put retry() around the test assertion. It'll fail correctly/informatively. ",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-22T00:04:32Z",
            "diff_hunk": "@@ -31,7 +31,7 @@ describe('K', function()\n \n     -- K on the text \"K_spec_out\" resolves to `!echo fnord >> K_spec_out`.\n     feed('i'..test_file..'<ESC>K')\n-    feed('<CR>') -- Press ENTER\n+    retry(nil, nil, function() eq(1, eval('filereadable(\"'..test_file..'\")')) end)\n     eq({'fnord'}, eval(\"readfile('\"..test_file..\"')\"))",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r693416988",
            "id": 693416988,
            "line": 35,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzQxNjk4OA==",
            "original_commit_id": "1a4aa2d15cb1e44d213139e99ff268a1612a407f",
            "original_line": 35,
            "original_position": 15,
            "original_start_line": null,
            "path": "test/functional/normal/K_spec.lua",
            "position": 15,
            "pull_request_review_id": 735528314,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693416988/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2021-08-22T00:04:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693416988",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/15398#discussion_r693417007"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/15398"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/693417007"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nlocal eq, clear, eval, feed, retry =\r\n  helpers.eq, helpers.clear, helpers.eval, helpers.feed, helpers.retry\r\n```",
            "commit_id": "9843109bc71827c261ca2d94a711060cd4784fde",
            "created_at": "2021-08-22T00:04:59Z",
            "diff_hunk": "@@ -1,6 +1,6 @@\n local helpers = require('test.functional.helpers')(after_each)\n-local eq, clear, eval, feed =\n-  helpers.eq, helpers.clear, helpers.eval, helpers.feed\n+local eq, neq, clear, eval, feed, retry =\n+  helpers.eq, helpers.neq, helpers.clear, helpers.eval, helpers.feed, helpers.retry",
            "html_url": "https://github.com/neovim/neovim/pull/15398#discussion_r693417007",
            "id": 693417007,
            "line": null,
            "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5MzQxNzAwNw==",
            "original_commit_id": "1a4aa2d15cb1e44d213139e99ff268a1612a407f",
            "original_line": 3,
            "original_position": 5,
            "original_start_line": 2,
            "path": "test/functional/normal/K_spec.lua",
            "position": null,
            "pull_request_review_id": 735528331,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693417007/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2021-08-22T00:04:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/693417007",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "1 test failing: \r\n```\r\ntest/functional/ui/messages_spec.lua:1225: fails on unix CI\r\n[  ERROR   ] 1 error, listed below:\r\n[  ERROR   ] test/functional/normal/K_spec.lua @ 27: K invokes non-prefixed 'keywordprg' as shell command\r\ntest/functional/helpers.lua:111: Vim:E484: Can't open file K_spec_out\r\n```\r\n\r\npython files are a way to test this qualitatively: https://github.com/neovim/neovim/blob/7215d356949bf07960cc3a3d8b83772635d729d0/runtime/ftplugin/python.vim#L127-L131\r\n\r\nTechnically we need to go a bit further to mimic the old `:!` behavior, e.g.\r\n- enter terminal-mode (\"insert\" mode) automatically\r\n- add a buffer-local `:tnoremap <esc>` which kills the buffer\r\n    - restore the original buffer and its `@#` (alternative) buffer\r\n    - or open a new tab and close it",
            "created_at": "2021-08-16T18:09:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-899713373",
            "id": 899713373,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41oIld",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899713373/reactions"
            },
            "updated_at": "2021-08-16T18:16:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899713373",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> 1 test failing:\r\n> \r\n> ```\r\n> test/functional/ui/messages_spec.lua:1225: fails on unix CI\r\n> [  ERROR   ] 1 error, listed below:\r\n> [  ERROR   ] test/functional/normal/K_spec.lua @ 27: K invokes non-prefixed 'keywordprg' as shell command\r\n> test/functional/helpers.lua:111: Vim:E484: Can't open file K_spec_out\r\n> ```\r\n\r\nI'm looking into this. It looks like this is happening because `:term` is asynchronous while `:!` is not, e.g. the test for equality in `K_spec.lua` is happening before the `:term {cmd}` finishes executing. I guess we need a way to signal to the test to wait until the terminal command finishes, but I'm not yet sure how to accomplish that.",
            "created_at": "2021-08-16T18:18:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-899719715",
            "id": 899719715,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41oKIj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899719715/reactions"
            },
            "updated_at": "2021-08-16T18:18:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899719715",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> because `:term` is asynchronous while `:!` is not, e.g. the test for equality in `K_spec.lua` is happening before the `:term {cmd}` finishes executing. I guess we need a way to signal to the test to wait until the terminal command finishes\r\n\r\ncan use retry() https://github.com/neovim/neovim/blob/7215d356949bf07960cc3a3d8b83772635d729d0/test/functional/autocmd/termxx_spec.lua#L23\r\n\r\n",
            "created_at": "2021-08-16T18:49:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-899739037",
            "id": 899739037,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41oO2d",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899739037/reactions"
            },
            "updated_at": "2021-08-16T18:49:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899739037",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Technically we need to go a bit further to mimic the old `:!` behavior, e.g.\r\n> \r\n>     * enter terminal-mode (\"insert\" mode) automatically\r\n> \r\n>     * add a buffer-local `:tnoremap <esc>` which kills the buffer\r\n>       \r\n>       * restore the original buffer and its `@#` (alternative) buffer\r\n>       * or open a new tab and close it\r\n\r\nI like the new tab approach, so I went with that. I tested this with pydoc as you suggested and it works pretty well for me.",
            "created_at": "2021-08-16T19:16:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-899756512",
            "id": 899756512,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41oTHg",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899756512/reactions"
            },
            "updated_at": "2021-08-16T19:16:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899756512",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "There is still a failing test in `test_normal.vim`:\r\n\r\nhttps://github.com/neovim/neovim/blob/4ba74953b514397b6c061edafe614917925b3a77/src/nvim/testdir/test_normal.vim#L1243-L1250\r\n\r\nThis is failing because `execute('term ...')` doesn't return a string like `execute('!...')` does.\r\n\r\nThe `K_spec.lua` test already checks for this case, so can we just delete this one?",
            "created_at": "2021-08-16T19:29:43Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-899763766",
            "id": 899763766,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41oU42",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899763766/reactions"
            },
            "updated_at": "2021-08-16T19:30:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/899763766",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "This is working pretty nicely, but behavior is weird if `K` is performed on an unknown symbol. Try it in a python file on a random symbol that pydoc doesn't understand. It just closes without any message. Can we either (1) prevent it from closing (show whatever pydoc exit code/message), or (2) check the exit code and show a generic message?\r\n\r\nI guess we need https://github.com/neovim/neovim/pull/15406 first?",
            "created_at": "2021-08-19T13:28:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-901916545",
            "id": 901916545,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41wieB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901916545/reactions"
            },
            "updated_at": "2021-08-22T00:02:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901916545",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> This is working pretty nicely, but behavior is weird if `K` is performed on an unknown symbol. Try it in a python file on a random symbol that pydoc doesn't understand. It just closes without any message. Can we either (1) prevent it from closing (show whatever pydoc exit code/message), or (2) check the exit code and show a generic message?\r\n> \r\n> I guess we need #15406 first?\r\n\r\nYep, #15406 dovetails with this one quite nicely. We can add the v:event.status check to the TermClose autcommand.",
            "created_at": "2021-08-19T13:31:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-901918440",
            "id": 901918440,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM41wi7o",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901918440/reactions"
            },
            "updated_at": "2021-08-22T00:02:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/901918440",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > This is working pretty nicely, but behavior is weird if `K` is performed on an unknown symbol. Try it in a python file on a random symbol that pydoc doesn't understand. It just closes without any message. Can we either (1) prevent it from closing (show whatever pydoc exit code/message), or (2) check the exit code and show a generic message?\r\n> > I guess we need #15406 first?\r\n> \r\n> Yep, #15406 dovetails with this one quite nicely. We can add the v:event.status check to the TermClose autcommand.\r\n\r\nHrm, so at least with `pydoc` it looks like it still returns with exit code 0 even on an unknown symbol, it just returns early. However I consider this a problem with `pydoc` specifically (they really should be returning a non-zero exit code in such cases, I think) so I think we should still move forward.",
            "created_at": "2021-08-21T02:47:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/15398#issuecomment-903042478",
            "id": 903042478,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
            "node_id": "IC_kwDOAPphoM4101Wu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/903042478/reactions"
            },
            "updated_at": "2021-08-21T02:47:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/903042478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/15398/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/15398/commits",
    "created_at": "2021-08-16T17:44:54Z",
    "diff_url": "https://github.com/neovim/neovim/pull/15398.diff",
    "draft": false,
    "head": {
        "label": "gpanders:terminal-keywordprg",
        "ref": "terminal-keywordprg",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 1,
            "forks_count": 1,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2023-12-28T14:34:45Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 238861,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "9843109bc71827c261ca2d94a711060cd4784fde",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/15398",
    "id": 713627777,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/15398",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "built-in :terminal or :shell",
            "id": 212696822,
            "name": "terminal",
            "node_id": "MDU6TGFiZWwyMTI2OTY4MjI=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/terminal"
        }
    ],
    "locked": false,
    "merge_commit_sha": "a90513c24bd8f789fba980509a4bdd1d7fc890ec",
    "merged_at": "2021-08-22T00:23:11Z",
    "milestone": null,
    "node_id": "MDExOlB1bGxSZXF1ZXN0NzEzNjI3Nzc3",
    "number": 15398,
    "patch_url": "https://github.com/neovim/neovim/pull/15398.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/15398/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/9843109bc71827c261ca2d94a711060cd4784fde",
    "title": "feat(keywordprg): use :terminal for external commands",
    "updated_at": "2023-12-27T17:06:10Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/15398",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}