{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26745/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26745/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26745"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26745"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26745/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/9d181a6adc4f6b1bdab8c8706e399e38f6612c00"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5414,
            "forks_count": 5414,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1725,
            "open_issues_count": 1725,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-27T22:51:37Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 271477,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 78533,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-28T01:40:20Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 78533,
            "watchers_count": 78533,
            "web_commit_signoff_required": false
        },
        "sha": "339129ebc9503883a3f060d3eff620d67a9eadaf",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Deprecate vim.diagnostic.goto_prev() and vim.diagnostic.goto_next() in favor of a unified vim.diagnostic.jump() interface.\r\n\r\nWe cannot name the function \"goto()\" because “goto” is a reserved keyword in some versions of Lua and some of our tooling (specifically stylua and luacheck) fail to parse.\r\n\r\nvim.diagnostic.jump() also allows moving to a specific diagnostic and moving by multiple diagnostics at a time (useful for creating mappings that use v:count).\r\n",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1436515656"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436515656"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    deprecated in favor of |vim.diagnostic.goto()|. Use\r\n    `vim.diagnostic.goto({count = 1})` and `vim.diagnostic.goto({count = -1})`, respectively.\r\n```\r\n\r\nit would be even better if we can guide users how they are supposed to migrate more explicitly.",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-26T15:51:58Z",
            "diff_hunk": "@@ -393,6 +393,14 @@ release.\n • Configuring |diagnostic-signs| using |:sign-define| or |sign_define()|. Use\n   the \"signs\" key of |vim.diagnostic.config()| instead.\n \n+• |vim.diagnostic| functions:\n+  - |vim.diagnostic.goto_next()| and |vim.diagnostic.goto_prev()| are\n+    deprecated in favor of |vim.diagnostic.goto()|",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1436515656",
            "id": 1436515656,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vn31I",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 398,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1796448963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436515656/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-26T16:04:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436515656",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1436516323"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436516323"
                }
            },
            "author_association": "MEMBER",
            "body": "~~I think this should be `win_id`. See L496 (L501) in `diagnostic_move_pos`, this is already using `opts.win_id` so `winid` would be a breaking change.~~\r\n\r\nEDIT: but since this is a new API, correcting the parameter name to be `winid` for better consistency (`winid` is used somewhere else, not `win_id`) would be a good idea. We probably just need to make `win_id` for the old \"deprecated\" APIs should work.",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-26T15:53:54Z",
            "diff_hunk": "@@ -834,8 +848,82 @@ end\n ---                    diagnostics at the new cursor position (as if \"cursor\" were passed to\n ---                    the \"scope\" option).\n ---         - win_id: (number, default 0) Window ID\n+---@deprecated\n function M.goto_next(opts)\n-  return diagnostic_move_pos(opts, M.get_next_pos(opts))\n+  vim.deprecate('vim.diagnostic.goto_next()', 'vim.diagnostic.goto()', '0.12')\n+  local next = M.get_next(opts)\n+  if next then\n+    return diagnostic_move_pos(opts, { next.lnum, next.col })\n+  end\n+end\n+\n+--- @class vim.diagnostic.GotoOptions\n+--- @field diagnostic Diagnostic?\n+--- @field count number?\n+--- @field namespace number?\n+--- @field cursor_position number[]?\n+--- @field wrap boolean?\n+--- @field severity DiagnosticSeverity?\n+--- @field float boolean|table|nil\n+--- @field win_id number?\n+\n+--- Move to a diagnostic.\n+---\n+--- @param opts vim.diagnostic.GotoOptions A table with the following optional keys:\n+---               - diagnostic: (table) The diagnostic item to move to |diagnostic-structure|.\n+---                                     Mutually exclusive with \"count\", \"namespace\", and \"severity\".\n+---               - count: (number) The number of diagnostics to move by. A positive integer moves\n+---                                 forward by {count} diagnostics, while a negative integer moves\n+---                                 backward by {count} diagnostics. Mutually exclusive with\n+---                                 \"diagnostic\".\n+---               - namespace: (number) Only consider diagnostics from the given namespace. Only used\n+---                                     when \"count\" is non-nil.\n+---               - cursor_position: (table) Cursor position as a (row, col) tuple. Used to find the\n+---                                          nearest diagnostic when \"count\" is used. Only used when\n+---                                          \"count\" is non-nil.\n+---               - wrap: (boolean) Whether to wrap around the file or not. Similar to 'wrapscan'.\n+---                                 Default true.\n+---               - severity: Only consider diagnostics that match the given |diagnostic-severity|.\n+---                           Only used when \"count\" is non-nil.\n+---               - float: (boolean or table) If \"true\", call |vim.diagnostic.open_float()| after\n+---                                           moving. If a table, also pass the table as the {opts}\n+---                                           parameter to |vim.diagnostic.open_float()|. Unless\n+---                                           overridden, the float will show diagnostics at the new\n+---                                           cursor position (as if \"cursor\" were used as the\n+---                                           \"scope\" option).\n+---               - winid: (number) Window ID. Default 0 (current window).",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1436516323",
            "id": 1436516323,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vn3_j",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 902,
            "original_position": 123,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": null,
            "pull_request_review_id": 1796448963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436516323/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-26T16:12:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436516323",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1436516803"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436516803"
                }
            },
            "author_association": "MEMBER",
            "body": "Please consider suggesting more explicit alternative, e.g. `vim.diagnostic.goto({ count = -1 })` along with the helptag.",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-26T15:55:07Z",
            "diff_hunk": "@@ -116,9 +116,19 @@ internally and are no longer exposed as part of the API. Instead, use\n - *vim.lsp.diagnostic.set_underline()*\n - *vim.lsp.diagnostic.set_virtual_text()*\n \n+DIAGNOSTIC API\n Configuring |diagnostic-signs| with |:sign-define| or |sign_define()| is no\n longer supported. Use the \"signs\" key of |vim.diagnostic.config()| instead.\n \n+- *vim.diagnostic.goto_next()*\tUse |vim.diagnostic.goto()| instead.\n+- *vim.diagnostic.goto_prev()*\tUse |vim.diagnostic.goto()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1436516803",
            "id": 1436516803,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vn4HD",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 124,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 1796448963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436516803/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-26T15:59:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436516803",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1436517428"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436517428"
                }
            },
            "author_association": "MEMBER",
            "body": "This section `*vim.diagnostic.goto_prev()*` should also be removed? (probably catched by CI)",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-26T15:56:43Z",
            "diff_hunk": "@@ -570,42 +560,43 @@ get_prev({opts})                                   *vim.diagnostic.get_prev()*\n     Return: ~\n         Diagnostic|nil Previous diagnostic\n \n-get_prev_pos({opts})                           *vim.diagnostic.get_prev_pos()*\n-    Return the position of the previous diagnostic in the current buffer.\n-\n-    Parameters: ~\n-      • {opts}  (table|nil) See |vim.diagnostic.goto_next()|\n-\n-    Return: ~\n-        table|false Previous diagnostic position as a (row, col) tuple or\n-        false if there is no prior diagnostic\n-\n-goto_next({opts})                                 *vim.diagnostic.goto_next()*\n-    Move to the next diagnostic.\n+goto({opts})                                           *vim.diagnostic.goto()*\n+    Move to a diagnostic.\n \n     Parameters: ~\n-      • {opts}  (table|nil) Configuration table with the following keys:\n+      • {opts}  vim.diagnostic.GotoOptions A table with the following optional keys:\n+                • diagnostic: (table) The diagnostic item to move to\n+                  |diagnostic-structure|. Mutually exclusive with \"count\",\n+                  \"namespace\", and \"severity\".\n+                • count: (number) The number of diagnostics to move by. A\n+                  positive integer moves forward by {count} diagnostics, while\n+                  a negative integer moves backward by {count} diagnostics.\n+                  Mutually exclusive with \"diagnostic\".\n                 • namespace: (number) Only consider diagnostics from the given\n-                  namespace.\n-                • cursor_position: (cursor position) Cursor position as a\n-                  (row, col) tuple. See |nvim_win_get_cursor()|. Defaults to\n-                  the current cursor position.\n-                • wrap: (boolean, default true) Whether to loop around file or\n-                  not. Similar to 'wrapscan'.\n-                • severity: See |diagnostic-severity|.\n-                • float: (boolean or table, default true) If \"true\", call\n-                  |vim.diagnostic.open_float()| after moving. If a table, pass\n-                  the table as the {opts} parameter to\n+                  namespace. Only used when \"count\" is non-nil.\n+                • cursor_position: (table) Cursor position as a (row, col)\n+                  tuple. Used to find the nearest diagnostic when \"count\" is\n+                  used. Only used when \"count\" is non-nil.\n+                • wrap: (boolean) Whether to wrap around the file or not.\n+                  Similar to 'wrapscan'. Default true.\n+                • severity: Only consider diagnostics that match the given\n+                  |diagnostic-severity|. Only used when \"count\" is non-nil.\n+                • float: (boolean or table) If \"true\", call\n+                  |vim.diagnostic.open_float()| after moving. If a table, also\n+                  pass the table as the {opts} parameter to\n                   |vim.diagnostic.open_float()|. Unless overridden, the float\n                   will show diagnostics at the new cursor position (as if\n-                  \"cursor\" were passed to the \"scope\" option).\n-                • win_id: (number, default 0) Window ID\n+                  \"cursor\" were used as the \"scope\" option).\n+                • winid: (number) Window ID. Default 0 (current window).\n+\n+    Return: ~\n+        Diagnostic ?|nil @The diagnostic moved to, if any.\n \n goto_prev({opts})                                 *vim.diagnostic.goto_prev()*\n     Move to the previous diagnostic in the current buffer.\n \n     Parameters: ~\n-      • {opts}  (table|nil) See |vim.diagnostic.goto_next()|\n+      • {opts}  (table|nil) See |vim.diagnostic.goto_next()| deprecated",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1436517428",
            "id": 1436517428,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vn4Q0",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 599,
            "original_position": 83,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 1796448963,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436517428/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-26T16:12:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436517428",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1436521003"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436521003"
                }
            },
            "author_association": "MEMBER",
            "body": "The link is (more) important, though. ",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-26T16:06:13Z",
            "diff_hunk": "@@ -393,6 +393,14 @@ release.\n • Configuring |diagnostic-signs| using |:sign-define| or |sign_define()|. Use\n   the \"signs\" key of |vim.diagnostic.config()| instead.\n \n+• |vim.diagnostic| functions:\n+  - |vim.diagnostic.goto_next()| and |vim.diagnostic.goto_prev()| are\n+    deprecated in favor of |vim.diagnostic.goto()|",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1436521003",
            "id": 1436521003,
            "in_reply_to_id": 1436515656,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Vn5Ir",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 398,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1796456483,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436521003/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-26T16:06:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436521003",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1437157377"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437157377"
                }
            },
            "author_association": "MEMBER",
            "body": "Agreed that having a link to the new function is more valuable. The link provides the full documentation of the new API.",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-27T17:03:46Z",
            "diff_hunk": "@@ -393,6 +393,14 @@ release.\n • Configuring |diagnostic-signs| using |:sign-define| or |sign_define()|. Use\n   the \"signs\" key of |vim.diagnostic.config()| instead.\n \n+• |vim.diagnostic| functions:\n+  - |vim.diagnostic.goto_next()| and |vim.diagnostic.goto_prev()| are\n+    deprecated in favor of |vim.diagnostic.goto()|",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1437157377",
            "id": 1437157377,
            "in_reply_to_id": 1436515656,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VqUgB",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 398,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 1797373291,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437157377/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T17:03:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437157377",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1437159957"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437159957"
                }
            },
            "author_association": "MEMBER",
            "body": "I want to leave the link to `vim.diagnostic.jump()` in place. I changed it to the following:\r\n\r\n```\r\n- *vim.diagnostic.goto_next()*\tUse |vim.diagnostic.jump()| with `{count = 1}` instead.\r\n- *vim.diagnostic.goto_prev()*\tUse |vim.diagnostic.jump()| with `{count = -1}` instead.\r\n```\r\n",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-27T17:09:39Z",
            "diff_hunk": "@@ -116,9 +116,19 @@ internally and are no longer exposed as part of the API. Instead, use\n - *vim.lsp.diagnostic.set_underline()*\n - *vim.lsp.diagnostic.set_virtual_text()*\n \n+DIAGNOSTIC API\n Configuring |diagnostic-signs| with |:sign-define| or |sign_define()| is no\n longer supported. Use the \"signs\" key of |vim.diagnostic.config()| instead.\n \n+- *vim.diagnostic.goto_next()*\tUse |vim.diagnostic.goto()| instead.\n+- *vim.diagnostic.goto_prev()*\tUse |vim.diagnostic.goto()| instead.",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1437159957",
            "id": 1437159957,
            "in_reply_to_id": 1436516803,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VqVIV",
            "original_commit_id": "955916006e49ee43d76952e7e463014bd1272149",
            "original_line": 124,
            "original_position": 9,
            "original_start_line": null,
            "path": "runtime/doc/deprecated.txt",
            "position": null,
            "pull_request_review_id": 1797377260,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437159957/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T17:09:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437159957",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1437167870"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437167870"
                }
            },
            "author_association": "MEMBER",
            "body": "What is the default?",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-27T17:26:47Z",
            "diff_hunk": "@@ -635,6 +588,38 @@ is_disabled({bufnr}, {namespace})               *vim.diagnostic.is_disabled()*\n     Return: ~\n         (boolean)\n \n+jump({opts})                                           *vim.diagnostic.jump()*\n+    Move to a diagnostic.\n+\n+    Parameters: ~\n+      • {opts}  vim.diagnostic.JumpOptions A table with the following optional keys:\n+                • diagnostic: (table) The diagnostic item to move to\n+                  |diagnostic-structure|. Mutually exclusive with \"count\",\n+                  \"namespace\", and \"severity\".\n+                • count: (number) The number of diagnostics to move by. A\n+                  positive integer moves forward by {count} diagnostics, while\n+                  a negative integer moves backward by {count} diagnostics.\n+                  Mutually exclusive with \"diagnostic\".\n+                • namespace: (number) Only consider diagnostics from the given\n+                  namespace. Only used when \"count\" is non-nil.\n+                • cursor_position: (table) Cursor position as a (row, col)\n+                  tuple. Used to find the nearest diagnostic when \"count\" is\n+                  used. Only used when \"count\" is non-nil.\n+                • wrap: (boolean) Whether to wrap around the file or not.\n+                  Similar to 'wrapscan'. Default true.\n+                • severity: Only consider diagnostics that match the given\n+                  |diagnostic-severity|. Only used when \"count\" is non-nil.\n+                • float: (boolean or table) If \"true\", call",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1437167870",
            "id": 1437167870,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VqXD-",
            "original_commit_id": "40918d143d3c73f0ee204d0526cb56b409cf79b7",
            "original_line": 615,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 1797388895,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437167870/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T17:26:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437167870",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26745#discussion_r1437170520"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26745"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437170520"
                }
            },
            "author_association": "MEMBER",
            "body": "Updated the docs to include default values/behaviors for all fields.",
            "commit_id": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
            "created_at": "2023-12-27T17:32:51Z",
            "diff_hunk": "@@ -635,6 +588,38 @@ is_disabled({bufnr}, {namespace})               *vim.diagnostic.is_disabled()*\n     Return: ~\n         (boolean)\n \n+jump({opts})                                           *vim.diagnostic.jump()*\n+    Move to a diagnostic.\n+\n+    Parameters: ~\n+      • {opts}  vim.diagnostic.JumpOptions A table with the following optional keys:\n+                • diagnostic: (table) The diagnostic item to move to\n+                  |diagnostic-structure|. Mutually exclusive with \"count\",\n+                  \"namespace\", and \"severity\".\n+                • count: (number) The number of diagnostics to move by. A\n+                  positive integer moves forward by {count} diagnostics, while\n+                  a negative integer moves backward by {count} diagnostics.\n+                  Mutually exclusive with \"diagnostic\".\n+                • namespace: (number) Only consider diagnostics from the given\n+                  namespace. Only used when \"count\" is non-nil.\n+                • cursor_position: (table) Cursor position as a (row, col)\n+                  tuple. Used to find the nearest diagnostic when \"count\" is\n+                  used. Only used when \"count\" is non-nil.\n+                • wrap: (boolean) Whether to wrap around the file or not.\n+                  Similar to 'wrapscan'. Default true.\n+                • severity: Only consider diagnostics that match the given\n+                  |diagnostic-severity|. Only used when \"count\" is non-nil.\n+                • float: (boolean or table) If \"true\", call",
            "html_url": "https://github.com/neovim/neovim/pull/26745#discussion_r1437170520",
            "id": 1437170520,
            "in_reply_to_id": 1437167870,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5VqXtY",
            "original_commit_id": "40918d143d3c73f0ee204d0526cb56b409cf79b7",
            "original_line": 615,
            "original_position": 86,
            "original_start_line": null,
            "path": "runtime/doc/diagnostic.txt",
            "position": null,
            "pull_request_review_id": 1797392905,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437170520/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T17:32:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1437170520",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/24499#issuecomment-1658752117 mentions a `vim.goto()` or `vim.cursor()` function which abstracts over the concept of \"moving the cursor to a position\" and accepts a [\"position\"](https://github.com/neovim/neovim/issues/25509) object as an argument. I do think `goto_next()` and `goto_prev()` should be removed, but I don't want to break the interface twice (once to add `jump()`, and again later for `vim.goto()` or whatever), so I think I will close this in anticipation of going in that direction instead.\r\n\r\nSee: https://github.com/neovim/neovim/issues/26782",
            "created_at": "2023-12-28T14:18:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/26745#issuecomment-1871218159",
            "id": 1871218159,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26745",
            "node_id": "IC_kwDOAPphoM5viIXv",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871218159/reactions"
            },
            "updated_at": "2023-12-28T14:34:40Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1871218159",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Re-opening in light of the revival of https://github.com/neovim/neovim/pull/16230. `vim.diagnostic.jump({ count = math.max, wrap = false })` can be used for \"goto last\" (similar for \"goto first\").",
            "created_at": "2024-04-25T02:12:02Z",
            "html_url": "https://github.com/neovim/neovim/pull/26745#issuecomment-2076196319",
            "id": 2076196319,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26745",
            "node_id": "IC_kwDOAPphoM57wD3f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076196319/reactions"
            },
            "updated_at": "2024-04-25T02:12:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2076196319",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26745/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26745/commits",
    "created_at": "2023-12-26T15:34:01Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26745.diff",
    "draft": false,
    "head": {
        "label": "gpanders:diagnostic-goto",
        "ref": "diagnostic-goto",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/gpanders/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/gpanders/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/gpanders/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/gpanders/neovim/branches{/branch}",
            "clone_url": "https://github.com/gpanders/neovim.git",
            "collaborators_url": "https://api.github.com/repos/gpanders/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/gpanders/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/gpanders/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/gpanders/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/gpanders/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/gpanders/neovim/contributors",
            "created_at": "2021-06-11T03:58:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/gpanders/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/gpanders/neovim/downloads",
            "events_url": "https://api.github.com/repos/gpanders/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/gpanders/neovim/forks",
            "full_name": "gpanders/neovim",
            "git_commits_url": "https://api.github.com/repos/gpanders/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/gpanders/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/gpanders/neovim/git/tags{/sha}",
            "git_url": "git://github.com/gpanders/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/gpanders/neovim/hooks",
            "html_url": "https://github.com/gpanders/neovim",
            "id": 375899052,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/gpanders/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/gpanders/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/gpanders/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/gpanders/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/gpanders/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/gpanders/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/gpanders/neovim/merges",
            "milestones_url": "https://api.github.com/repos/gpanders/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzU4OTkwNTI=",
            "notifications_url": "https://api.github.com/repos/gpanders/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
                "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
                "followers_url": "https://api.github.com/users/gpanders/followers",
                "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
                "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/gpanders",
                "id": 8965202,
                "login": "gpanders",
                "node_id": "MDQ6VXNlcjg5NjUyMDI=",
                "organizations_url": "https://api.github.com/users/gpanders/orgs",
                "received_events_url": "https://api.github.com/users/gpanders/received_events",
                "repos_url": "https://api.github.com/users/gpanders/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/gpanders"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/gpanders/neovim/pulls{/number}",
            "pushed_at": "2024-05-27T13:08:26Z",
            "releases_url": "https://api.github.com/repos/gpanders/neovim/releases{/id}",
            "size": 264337,
            "ssh_url": "git@github.com:gpanders/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/gpanders/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/gpanders/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/gpanders/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/gpanders/neovim/subscription",
            "svn_url": "https://github.com/gpanders/neovim",
            "tags_url": "https://api.github.com/repos/gpanders/neovim/tags",
            "teams_url": "https://api.github.com/repos/gpanders/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/gpanders/neovim/git/trees{/sha}",
            "updated_at": "2022-01-07T19:38:08Z",
            "url": "https://api.github.com/repos/gpanders/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
            "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
            "followers_url": "https://api.github.com/users/gpanders/followers",
            "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/gpanders",
            "id": 8965202,
            "login": "gpanders",
            "node_id": "MDQ6VXNlcjg5NjUyMDI=",
            "organizations_url": "https://api.github.com/users/gpanders/orgs",
            "received_events_url": "https://api.github.com/users/gpanders/received_events",
            "repos_url": "https://api.github.com/users/gpanders/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/gpanders"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26745",
    "id": 1657332125,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26745",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        },
        {
            "color": "0052CC",
            "default": false,
            "description": "",
            "id": 6664957181,
            "name": "ci:skip-news",
            "node_id": "LA_kwDOAPphoM8AAAABjUMs_Q",
            "url": "https://api.github.com/repos/neovim/neovim/labels/ci:skip-news"
        }
    ],
    "locked": false,
    "merge_commit_sha": "aea7e2b4ac9d6a239a4b718ae737d4f62d26f2d5",
    "merged_at": null,
    "milestone": {
        "closed_at": null,
        "closed_issues": 19,
        "created_at": "2023-12-07T23:09:35Z",
        "creator": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk"
        },
        "description": "",
        "due_on": "2024-10-31T07:00:00Z",
        "html_url": "https://github.com/neovim/neovim/milestone/41",
        "id": 10283236,
        "labels_url": "https://api.github.com/repos/neovim/neovim/milestones/41/labels",
        "node_id": "MI_kwDOAPphoM4AnOjk",
        "number": 41,
        "open_issues": 55,
        "state": "open",
        "title": "0.11",
        "updated_at": "2024-05-26T17:54:08Z",
        "url": "https://api.github.com/repos/neovim/neovim/milestones/41"
    },
    "node_id": "PR_kwDOAPphoM5iyOGd",
    "number": 26745,
    "patch_url": "https://github.com/neovim/neovim/pull/26745.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
            "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
            "followers_url": "https://api.github.com/users/mfussenegger/followers",
            "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
            "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/mfussenegger",
            "id": 38700,
            "login": "mfussenegger",
            "node_id": "MDQ6VXNlcjM4NzAw",
            "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
            "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
            "repos_url": "https://api.github.com/users/mfussenegger/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/mfussenegger"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26745/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/9d181a6adc4f6b1bdab8c8706e399e38f6612c00",
    "title": "feat(diagnostic): add vim.diagnostic.jump()",
    "updated_at": "2024-05-24T14:51:30Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26745",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/8965202?v=4",
        "events_url": "https://api.github.com/users/gpanders/events{/privacy}",
        "followers_url": "https://api.github.com/users/gpanders/followers",
        "following_url": "https://api.github.com/users/gpanders/following{/other_user}",
        "gists_url": "https://api.github.com/users/gpanders/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/gpanders",
        "id": 8965202,
        "login": "gpanders",
        "node_id": "MDQ6VXNlcjg5NjUyMDI=",
        "organizations_url": "https://api.github.com/users/gpanders/orgs",
        "received_events_url": "https://api.github.com/users/gpanders/received_events",
        "repos_url": "https://api.github.com/users/gpanders/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/gpanders/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gpanders/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/gpanders"
    }
}