{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23569/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23569/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/23569"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/23569"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23569/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/23569"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/db95352f61c47e4d82d011d4efc1c23edb7416d7"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4762,
            "forks_count": 4762,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1673,
            "open_issues_count": 1673,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-07-17T22:27:39Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 247442,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 67470,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-07-17T23:45:16Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 67470,
            "watchers_count": 67470,
            "web_commit_signoff_required": false
        },
        "sha": "4c7cec4e293495e69c105f883905f78af4c151c0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "[Request for Comment]\r\n@lewis6991 \r\n@bfredl \r\n@sakhnik \r\n@zeertzjq \r\n\r\nFrom the author of the linematch alignment algorithm, I bring you charmatch!\r\n\r\nbefore:\r\n![before](https://github.com/neovim/neovim/assets/32371757/d8e32883-2457-4ec2-b4d1-ef62fe6f587f)\r\n\r\nafter:\r\n![after](https://github.com/neovim/neovim/assets/32371757/11030c41-5f1e-4f94-8738-455f39261acd)\r\n\r\ncharmatch leverages the existing linematch algorithm to perform a similar diff optimization for highlighting of modified characters between lines of buffers in diff mode.\r\n\r\nThe result of the charmatch algorithm is similarly a set of decisions represented by integers. these integers are then parsed to produce an array containing the highlighting information for a diff hunk.\r\n\r\nThe results are stored as so for a diff of these two files:\r\n```\r\n----------------\r\n| A    | AZBZC |\r\n| B    |       |\r\n| C    |       |\r\n----------------\r\n```\r\n![arrayexample](https://github.com/neovim/neovim/assets/32371757/cc88e775-7d9b-4a46-a816-7368a34b2c27)\r\n\r\nHere I represent \\n 'newline' as 'n' for the purposes of this diagram.\r\n\r\n```\r\ndiff_T->charmatchp\r\nbuf 0 start\r\n|     buf 1 start\r\n|     |\r\nAnBnCnAZBZCn\r\n000000010100\r\n```\r\n\r\nThe newline characters are used in calculation of the highlight grouping, as newlines will always break a highlight group\r\n\r\nThe grouping optimization will attempt to create a highlight solution with the smallest amount of groups (marked highlighted, marked not highlighted) possible, explained more further down.\r\n\r\nThe array stores '1's to indicate highlighted, and 0's to represent not highlighted.\r\n\r\nThis array is unique to each diff hunk (`diff_T`), and is stored in an added array pointer for `diff_T` struct\r\n\r\n```c\r\ntypedef struct diffblock_S diff_T;\r\nstruct diffblock_S {\r\n  ...\r\n  size_t n_charmatch;\r\n  int* charmatchp; // values for charmatch\r\n};\r\n```\r\n\r\nThe charmatch alignment algorithm is ran once a diff hunk is scrolled into view.\r\n\r\n## Grouping optimization\r\nAlso introduced in this pull request is an improvement for the existing linematch algorithm as well as the charmatch algorithm.\r\nPreviously, I stored the decisions as an array at every gridpoint of the charmatch grid `diffcmppath_T`\r\n\r\nThe path is now stored by pointers of `diffcmppath_T` structs from one another. The advantage of using pointers instead of structs is that the current optimal path no longer needs to be copied as an array, as was previously done here:\r\n\r\n```c\r\nstatic void update_path_flat(diffcmppath_T *diffcmppath, int score, size_t to, size_t from,\r\n                             const int choice)\r\n{\r\n  size_t path_idx = diffcmppath[from].df_path_idx;\r\n\r\n  for (size_t k = 0; k < path_idx; k++) {\r\n    diffcmppath[to].df_decision[k] = diffcmppath[from].df_decision[k];\r\n  }\r\n\r\n  diffcmppath[to].df_decision[path_idx] = choice;\r\n  diffcmppath[to].df_lev_score = score;\r\n  diffcmppath[to].df_path_idx = path_idx + 1;\r\n}\r\n```\r\n\r\nI've replaced that with adding a pointer reference:\r\n\r\n```c\r\n      int score = diffcmppath[unwrapped_idx_from].df_lev_score + matched_chars;\r\n      if (score > diffcmppath[unwrapped_idx_to].df_lev_score) {\r\n        diffcmppath[unwrapped_idx_to].df_path_n = 1;\r\n        diffcmppath[unwrapped_idx_to].df_decision[0] = &diffcmppath[unwrapped_idx_from];\r\n        diffcmppath[unwrapped_idx_to].df_choice[0] = *choice;\r\n        diffcmppath[unwrapped_idx_to].df_lev_score = score;\r\n      } else if (score == diffcmppath[unwrapped_idx_to].df_lev_score) {\r\n        size_t k = diffcmppath[unwrapped_idx_to].df_path_n++;\r\n        diffcmppath[unwrapped_idx_to].df_decision[k] = &diffcmppath[unwrapped_idx_from];\r\n        diffcmppath[unwrapped_idx_to].df_choice[k] = *choice;\r\n      }\r\n```\r\nThe pointer reference allows equally scored comparison paths to be evaluated after populating the comparison tensor. This secondary optimization is for grouping. It is possible for two different comparison paths to score equally\r\nwhen it comes to matching the characters with each other, but the grouping of the comparison is not factored into the score.\r\n\r\nA comparison with fewer highlight groups (charmatch) or less separated filler lines (linematch) is more readable, and more useful. (examples pictured)\r\n\r\nI perform the secondary grouping optimization through a tree traversal with memoization to find the path which contains the least amount of changes in comparison (eg least amount of highlights of a line)\r\n\r\n```\r\n// returns the minimum amount of path changes from start to end\r\nstatic size_t test_charmatch_paths(diffcmppath_T *node, int lastdecision) {\r\n\r\n  // memoization\r\n  if (node->df_choice_mem[lastdecision] == -1) {\r\n    if (node->df_path_n == 0) {\r\n      // we have reached the end of the tree\r\n      node->df_choice_mem[lastdecision] = 0;\r\n    } else {\r\n      size_t minimum_turns = SIZE_MAX; // the minimum amount of turns required to reach the end\r\n      for (size_t i = 0; i < node->df_path_n; i++) {\r\n        // recurse\r\n        size_t t = test_charmatch_paths(node->df_decision[i], node->df_choice[i]) +\r\n                                       (lastdecision != node->df_choice[i] ? 1 : 0);\r\n        if (t < minimum_turns) {\r\n          node->df_optimal_choice = i;\r\n          minimum_turns = t;\r\n        }\r\n      }\r\n      node->df_choice_mem[lastdecision] = minimum_turns;\r\n    }\r\n  }\r\n  return node->df_choice_mem[lastdecision];\r\n\r\n}\r\n```\r\n\r\nfor example:\r\n\r\n```\r\n(01)  (11)      (01)  (11)\r\nSKIP1 COMPARE01 SKIP1 COMPARE01\r\n```\r\nconsists of 3 changes of 'choice'\r\n\r\n```\r\n(01)  (01)  (11)      (11)\r\nSKIP1 SKIP1 COMPARE01 COMPARE01\r\n```\r\nconsists of 1 change of 'choice'\r\n\r\nAnd the single change of choice results in improved grouping for both highlights, and filler line positioning, and is thus preferred by the aforementioned grouping optimization tree search algorithm.\r\n\r\nlinematch before grouping optimization:\r\n![linematchgroupingbefore](https://github.com/neovim/neovim/assets/32371757/f054c92b-17df-4971-8461-91bf32fbc59a)\r\n\r\nlinematch after grouping optimization:\r\n![linematchgroupingafter](https://github.com/neovim/neovim/assets/32371757/cef7aced-42c2-4ebe-913d-3b135e274618)\r\n\r\ncharmatch before grouping optimization:\r\n![charmatchbeforegrouping](https://github.com/neovim/neovim/assets/32371757/a15db652-5140-4a5d-9970-6ce4f9a4f432)\r\n\r\ncharmatch after grouping optimization:\r\n![charmatchaftergrouping](https://github.com/neovim/neovim/assets/32371757/afa20640-8cfd-4e86-9241-2bf9bbadd4e6)\r\n\r\n![Charmatchdiagrampng](https://github.com/neovim/neovim/assets/32371757/a7140158-7ab8-4aee-867b-1fc06f0d7b59)\r\n\r\nthe diffoption chardiff is given with a number like so:\r\n```\r\nset diffopt+=chardiff:10\r\n```\r\nthe number specifies the summation of the length of the text to be diffed.\r\nit will first try to character wise diff all of the lines of the two (or more) diff blocks, if that exceeds the limit, it will then attempt to diff them matching line-wise. Pictures here illustrate:\r\n![10](https://github.com/neovim/neovim/assets/32371757/285b6b48-d04f-469a-9a1b-f19e639fb0db)\r\n![23](https://github.com/neovim/neovim/assets/32371757/670a1bb0-652e-443f-b7f0-37bf2b9ebbdc)\r\n![100](https://github.com/neovim/neovim/assets/32371757/9b541504-b9f4-441d-aa8f-017547a225c4)\r\n\r\n\r\n\r\n## Todo\r\n- [ ] check for memory leaks\r\n- [ ] write tests for new features\r\n- [ ] include another diff unit like 'word' instead of character-wise\r\n",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Haven't read the full write-up yet, but can the grouping optimization be pulled into a separate PR?",
            "created_at": "2023-05-10T11:31:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/23569#issuecomment-1542026759",
            "id": 1542026759,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23569",
            "node_id": "IC_kwDOAPphoM5b6XYH",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1542026759/reactions"
            },
            "updated_at": "2023-05-10T11:31:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1542026759",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I created a separate pull request for the grouping optimization https://github.com/neovim/neovim/pull/23611",
            "created_at": "2023-05-13T13:56:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/23569#issuecomment-1546658613",
            "id": 1546658613,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23569",
            "node_id": "IC_kwDOAPphoM5cMCM1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1546658613/reactions"
            },
            "updated_at": "2023-05-13T13:56:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1546658613",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "can someone point me to where in the source code a word definition (:set iskeyword / iskeyword=@,48-57,_,192-255 ) is used to increment the cursor positon? I've been trying to find it. I'd like to add some functionality for a word diff that uses the current \"iskeyword\" definition to define the word for a word-based diff, instead of character wise.",
            "created_at": "2023-05-23T19:25:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/23569#issuecomment-1560008179",
            "id": 1560008179,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23569",
            "node_id": "IC_kwDOAPphoM5c-9Xz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1560008179/reactions"
            },
            "updated_at": "2023-05-23T19:25:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1560008179",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> where in the source code a word definition (:set iskeyword / iskeyword=@,48-57,_,192-255 ) is used to increment the cursor positon?\r\n\r\n[buf_init_chartab](https://github.com/neovim/neovim/blob/28f1f65bb30768db3423dc6eb39b2d75dfaba326/src/nvim/charset.c#L88) uses 'iskeyword' to set `g_chartab`, which is used by [vim_iswordc](https://github.com/neovim/neovim/blob/28f1f65bb30768db3423dc6eb39b2d75dfaba326/src/nvim/charset.c#L800) to decide a \"word\". Example of advancing over a `<word>`: https://github.com/neovim/neovim/blob/28f1f65bb30768db3423dc6eb39b2d75dfaba326/src/nvim/mapping.c#L610-L617",
            "created_at": "2023-06-05T02:02:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/23569#issuecomment-1575928350",
            "id": 1575928350,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23569",
            "node_id": "IC_kwDOAPphoM5d7sIe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1575928350/reactions"
            },
            "updated_at": "2023-06-05T02:02:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1575928350",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The current version I have on this pull request works for word-diff and char-diff. It seems to be working fine, I'm planning to add a bunch tests for it and the code might be able to be simplified further or atleast move some things to functions to make it look cleaner\r\n\r\nword diff is activated with:\r\nset diffopt+=worddiff:100\r\nand char diff is activated with:\r\nset diffopt+=chardiff:100",
            "created_at": "2023-06-10T12:59:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/23569#issuecomment-1585654395",
            "id": 1585654395,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23569",
            "node_id": "IC_kwDOAPphoM5egyp7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 4,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585654395/reactions"
            },
            "updated_at": "2023-06-10T12:59:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1585654395",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/23569/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/23569/commits",
    "created_at": "2023-05-10T11:07:43Z",
    "diff_url": "https://github.com/neovim/neovim/pull/23569.diff",
    "draft": true,
    "head": {
        "label": "jwhite510:charmatch5",
        "ref": "charmatch5",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/jwhite510/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/jwhite510/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/jwhite510/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/jwhite510/neovim/branches{/branch}",
            "clone_url": "https://github.com/jwhite510/neovim.git",
            "collaborators_url": "https://api.github.com/repos/jwhite510/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/jwhite510/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/jwhite510/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/jwhite510/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/jwhite510/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/jwhite510/neovim/contributors",
            "created_at": "2021-03-27T20:08:15Z",
            "default_branch": "document_1",
            "deployments_url": "https://api.github.com/repos/jwhite510/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/jwhite510/neovim/downloads",
            "events_url": "https://api.github.com/repos/jwhite510/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/jwhite510/neovim/forks",
            "full_name": "jwhite510/neovim",
            "git_commits_url": "https://api.github.com/repos/jwhite510/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/jwhite510/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/jwhite510/neovim/git/tags{/sha}",
            "git_url": "git://github.com/jwhite510/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/jwhite510/neovim/hooks",
            "html_url": "https://github.com/jwhite510/neovim",
            "id": 352166879,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/jwhite510/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/jwhite510/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/jwhite510/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/jwhite510/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/jwhite510/neovim/labels{/name}",
            "language": "Vim script",
            "languages_url": "https://api.github.com/repos/jwhite510/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/jwhite510/neovim/merges",
            "milestones_url": "https://api.github.com/repos/jwhite510/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNTIxNjY4Nzk=",
            "notifications_url": "https://api.github.com/repos/jwhite510/neovim/notifications{?since,all,participating}",
            "open_issues": 1,
            "open_issues_count": 1,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
                "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
                "followers_url": "https://api.github.com/users/jwhite510/followers",
                "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
                "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jwhite510",
                "id": 32371757,
                "login": "jwhite510",
                "node_id": "MDQ6VXNlcjMyMzcxNzU3",
                "organizations_url": "https://api.github.com/users/jwhite510/orgs",
                "received_events_url": "https://api.github.com/users/jwhite510/received_events",
                "repos_url": "https://api.github.com/users/jwhite510/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jwhite510"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/jwhite510/neovim/pulls{/number}",
            "pushed_at": "2023-07-17T22:27:28Z",
            "releases_url": "https://api.github.com/repos/jwhite510/neovim/releases{/id}",
            "size": 251204,
            "ssh_url": "git@github.com:jwhite510/neovim.git",
            "stargazers_count": 6,
            "stargazers_url": "https://api.github.com/repos/jwhite510/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/jwhite510/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/jwhite510/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/jwhite510/neovim/subscription",
            "svn_url": "https://github.com/jwhite510/neovim",
            "tags_url": "https://api.github.com/repos/jwhite510/neovim/tags",
            "teams_url": "https://api.github.com/repos/jwhite510/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/jwhite510/neovim/git/trees{/sha}",
            "updated_at": "2021-12-10T20:56:23Z",
            "url": "https://api.github.com/repos/jwhite510/neovim",
            "visibility": "public",
            "watchers": 6,
            "watchers_count": 6,
            "web_commit_signoff_required": false
        },
        "sha": "db95352f61c47e4d82d011d4efc1c23edb7416d7",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
            "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
            "followers_url": "https://api.github.com/users/jwhite510/followers",
            "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
            "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/jwhite510",
            "id": 32371757,
            "login": "jwhite510",
            "node_id": "MDQ6VXNlcjMyMzcxNzU3",
            "organizations_url": "https://api.github.com/users/jwhite510/orgs",
            "received_events_url": "https://api.github.com/users/jwhite510/received_events",
            "repos_url": "https://api.github.com/users/jwhite510/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/jwhite510"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/23569",
    "id": 1345201310,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/23569",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "",
            "id": 3010934759,
            "name": "diff",
            "node_id": "MDU6TGFiZWwzMDEwOTM0NzU5",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diff"
        }
    ],
    "locked": false,
    "merge_commit_sha": "24ae5651cbda625a5d292fdae717aa0fea46c7ba",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5QLiSe",
    "number": 23569,
    "patch_url": "https://github.com/neovim/neovim/pull/23569.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/23569/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/db95352f61c47e4d82d011d4efc1c23edb7416d7",
    "title": "charmatch - cross line character-wise diff highlighting + grouping optimization for comparison",
    "updated_at": "2023-07-17T22:27:37Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/23569",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/32371757?v=4",
        "events_url": "https://api.github.com/users/jwhite510/events{/privacy}",
        "followers_url": "https://api.github.com/users/jwhite510/followers",
        "following_url": "https://api.github.com/users/jwhite510/following{/other_user}",
        "gists_url": "https://api.github.com/users/jwhite510/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/jwhite510",
        "id": 32371757,
        "login": "jwhite510",
        "node_id": "MDQ6VXNlcjMyMzcxNzU3",
        "organizations_url": "https://api.github.com/users/jwhite510/orgs",
        "received_events_url": "https://api.github.com/users/jwhite510/received_events",
        "repos_url": "https://api.github.com/users/jwhite510/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/jwhite510/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jwhite510/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/jwhite510"
    }
}