{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28543/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28543/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/28543"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/28543"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28543/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/bf6f029d30798fc61f471221a10280032afa3458"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5302,
            "forks_count": 5302,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1707,
            "open_issues_count": 1707,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-05-06T22:57:03Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 269189,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 76833,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-05-07T01:04:30Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 76833,
            "watchers_count": 76833,
            "web_commit_signoff_required": false
        },
        "sha": "2becec289c77a359087ab6322276811aea9e87c8",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "**Problem**:\r\n\r\nThe current implementation of inlay hints contradicts our dev guidelines.\r\nhttps://github.com/neovim/neovim/blob/a41546d4ac60cecc48b83f85ea9d53ee2fb7dfbb/runtime/doc/develop.txt#L313-L317\r\n\r\n**Solution**:\r\n\r\nImplement globally enabling inlay hints.",
    "closed_at": "2024-05-02T13:16:20Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582243148"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243148"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nâ€¢ `vim.lsp.inlay_hint.enable()` can now take effect on all buffers.\r\n```",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T16:58:55Z",
            "diff_hunk": "@@ -151,6 +151,8 @@ BREAKING CHANGES IN HEAD                                    *news-breaking-dev*\n The following breaking changes were made during the development cycle to\n unreleased features on Nvim HEAD.\n \n+â€¢ `vim.lsp.inlay_hint.enable()` now can take effect on all buffers.",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582243148",
            "id": 1582243148,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eTx1M",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 154,
            "original_position": 4,
            "original_start_line": null,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2027183394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243148/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T17:07:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243148",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582243379"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243379"
                }
            },
            "author_association": "MEMBER",
            "body": "Is the scope always the buffer?",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T17:01:13Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582243379",
            "id": 1582243379,
            "line": 8,
            "node_id": "PRRC_kwDOAPphoM5eTx4z",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 8,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 6,
            "pull_request_review_id": 2027183394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243379/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T17:07:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243379",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582243895"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243895"
                }
            },
            "author_association": "MEMBER",
            "body": "Why did you remove the `not bufstate` condition here?",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T17:04:36Z",
            "diff_hunk": "@@ -34,7 +53,7 @@ function M.on_inlayhint(err, result, ctx, _)\n     return\n   end\n   local bufstate = bufstates[bufnr]\n-  if not bufstate or not bufstate.enabled then\n+  if not bufstate.enabled then",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582243895",
            "id": 1582243895,
            "line": 50,
            "node_id": "PRRC_kwDOAPphoM5eTyA3",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 50,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 35,
            "pull_request_review_id": 2027183394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243895/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T17:07:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582243895",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582244083"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582244083"
                }
            },
            "author_association": "MEMBER",
            "body": "Again: Why not check that `bufstate` isn't nil first?",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T17:06:03Z",
            "diff_hunk": "@@ -154,7 +169,7 @@ function M.get(filter)\n   end\n \n   local bufstate = bufstates[bufnr]\n-  if not (bufstate and bufstate.client_hints) then\n+  if not bufstate.client_hints then",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582244083",
            "id": 1582244083,
            "line": 166,
            "node_id": "PRRC_kwDOAPphoM5eTyDz",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 166,
            "original_position": 63,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 57,
            "pull_request_review_id": 2027183394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582244083/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T17:07:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582244083",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582244108"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582244108"
                }
            },
            "author_association": "MEMBER",
            "body": "We're not allowing `bufnr` to be nil anymore though right?",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T17:06:21Z",
            "diff_hunk": "@@ -206,9 +221,6 @@ local function clear(bufnr)\n   if bufnr == nil or bufnr == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582244108",
            "id": 1582244108,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eTyEM",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 221,
            "original_position": 68,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2027183394,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582244108/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T17:07:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582244108",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582417268"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582417268"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Thanks, just forgot to remove the judgment here",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T22:15:06Z",
            "diff_hunk": "@@ -206,9 +221,6 @@ local function clear(bufnr)\n   if bufnr == nil or bufnr == 0 then",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582417268",
            "id": 1582417268,
            "in_reply_to_id": 1582244108,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eUcV0",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 221,
            "original_position": 68,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2027381250,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582417268/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T22:15:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582417268",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582422486"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582422486"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Because I changed `bufstates` to a `vim.defaulttable`, which makes every time the indexed `bufstates[bufnr]` does not exist, it will create a new `bufstate` according to the factory method, which makes `bufstates[bufnr] ~= nil` will no longer make sense because it will always be `true`.",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T22:24:33Z",
            "diff_hunk": "@@ -34,7 +53,7 @@ function M.on_inlayhint(err, result, ctx, _)\n     return\n   end\n   local bufstate = bufstates[bufnr]\n-  if not bufstate or not bufstate.enabled then\n+  if not bufstate.enabled then",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582422486",
            "id": 1582422486,
            "in_reply_to_id": 1582243895,
            "line": 50,
            "node_id": "PRRC_kwDOAPphoM5eUdnW",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 50,
            "original_position": 41,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 35,
            "pull_request_review_id": 2027388224,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582422486/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T22:24:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582422486",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1582423910"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582423910"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "It could be enabled globally because we do not only expect to be enabled on buffers that exist now but also for the buffers that will be created in the future.",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-04-28T22:31:19Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1582423910",
            "id": 1582423910,
            "in_reply_to_id": 1582243379,
            "line": 8,
            "node_id": "PRRC_kwDOAPphoM5eUd9m",
            "original_commit_id": "2c92cde04bd802c55f4673b89af51f20b0c673f9",
            "original_line": 8,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 6,
            "pull_request_review_id": 2027389375,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582423910/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-04-28T22:31:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1582423910",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587002490"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587002490"
                }
            },
            "author_association": "MEMBER",
            "body": "This is listed on breaking changes but doesn't specify which behavior breaks. You should explicitly specify that the behavior when `buffer = nil` has changed",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T02:46:43Z",
            "diff_hunk": "@@ -151,6 +151,8 @@ BREAKING CHANGES IN HEAD                                    *news-breaking-dev*\n The following breaking changes were made during the development cycle to\n unreleased features on Nvim HEAD.\n \n+â€¢ `vim.lsp.inlay_hint.enable()` can now take effect on all buffers.\n+",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587002490",
            "id": 1587002490,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5el7x6",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 152,
            "original_position": 5,
            "original_start_line": 154,
            "path": "runtime/doc/news.txt",
            "position": null,
            "pull_request_review_id": 2034726310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587002490/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T03:36:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587002490",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587019091"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587019091"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  return setmetatable({ applied = {} }, {\r\n    __index = globalstate,\r\n    __newindex = function(state, key, value)\r\n      if globalstate[key] == value then\r\n        rawset(state, key, nil)\r\n      else\r\n        rawset(state, key, value)\r\n      end\r\n    end,\r\n  })\r\n```",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T03:24:13Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)\n+      else\n+        rawset(state, key, value)\n+      end\n+    end,\n+  })\n+  return bufstate",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587019091",
            "id": 1587019091,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5el_1T",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 31,
            "original_position": 31,
            "original_start_line": 20,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034726310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587019091/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T03:36:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587019091",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587019533"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587019533"
                }
            },
            "author_association": "MEMBER",
            "body": "Is this not problematic? If you explicitly bufstate to a value equal to globalstate, and then change the value of globalstate, it will change the value for the buffer even though it already is supposed to have a local value",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T03:25:15Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587019533",
            "id": 1587019533,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5el_8N",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": 24,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034726310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587019533/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T03:41:32Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587019533",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587023577"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587023577"
                }
            },
            "author_association": "MEMBER",
            "body": "Are we sure this should use valid buffers instead of loaded buffers?",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T03:34:21Z",
            "diff_hunk": "@@ -392,11 +409,28 @@ function M.enable(enable, filter)\n   end\n \n   vim.validate({ enable = { enable, 'boolean', true }, filter = { filter, 'table', true } })\n+  enable = enable == nil or enable\n   filter = filter or {}\n-  if enable == false then\n-    _disable(filter.bufnr)\n+\n+  if filter.bufnr == nil then\n+    globalstate.enabled = enable\n+    for bufnr, _ in pairs(bufstates) do\n+      if api.nvim_buf_is_valid(bufnr) then",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587023577",
            "id": 1587023577,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5emA7Z",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 418,
            "original_position": 241,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034726310,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587023577/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-02T03:36:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587023577",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587049857"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587049857"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "There doesn't seem to be a clear convention for what to do in this situation, so I deliberately designed it like this.\r\n\r\n>If you explicitly bufstate to a value equal to globalstate, and then change the value of globalstate, it will change the value for the buffer even though it already is supposed to have a local value\r\n\r\nSo, this is what I want to achieve.\r\n\r\nIf we expose variables to users, the situation is simple, as long as the local variable exists, we use the local variable; otherwise we use the global variable. This is very similar to what you expected.\r\n\r\nBut if the API we exposed is functions like `enable`, Itâ€™s hard to say whether the above approach is correct or not. Because there is no way to remove \"local variables\" by using `enable`. Once the user manages a buffer's `bufstate`, it means that they must manage it all the time, there's no way to make them follow the `globalstate`.\r\n\r\nThe logic behind this design is that if it can be globally `enable` or locally `enable`, when the user selects local `enable`, we think the user's purpose is to distinguish the local state from the global state. I think this design is good for interaction,\r\n\r\nYou can think about whether what you said is similar to what I said. When the user explicitly sets the previously unequal `bufstate` to be equal to `globalstate`, he is probably thinking \"this buffer is no longer special\" rather than \"no matter what the `globalstate` is, this `bufstate` should be like this.\"",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T04:34:18Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587049857",
            "id": 1587049857,
            "in_reply_to_id": 1587019533,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5emHWB",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": 24,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034793816,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587049857/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T04:34:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587049857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587070871"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587070871"
                }
            },
            "author_association": "MEMBER",
            "body": "I'm still not fully convinced. But I'll refer to @justinmk as he's the best person to ask for this kind of thing",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T05:15:33Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587070871",
            "id": 1587070871,
            "in_reply_to_id": 1587019533,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5emMeX",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": 24,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034834535,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587070871/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T05:15:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587070871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587123990"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587123990"
                }
            },
            "author_association": "MEMBER",
            "body": "simply ternary\r\n```lua\r\nreturn setmetatable({applied = {}}, {\r\n    __index = globalstate,\r\n    __newindex = function(state, key, value)\r\n        rawset(state, key, (globalstate[key] == value) and nil or value)\r\n    end\r\n})\r\n```",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T06:26:07Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)\n+      else\n+        rawset(state, key, value)\n+      end\n+    end,\n+  })\n+  return bufstate",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587123990",
            "id": 1587123990,
            "in_reply_to_id": 1587019091,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5emZcW",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 31,
            "original_position": 31,
            "original_start_line": 20,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034921814,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587123990/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T06:26:07Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587123990",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/41671631?v=4",
                "events_url": "https://api.github.com/users/glepnir/events{/privacy}",
                "followers_url": "https://api.github.com/users/glepnir/followers",
                "following_url": "https://api.github.com/users/glepnir/following{/other_user}",
                "gists_url": "https://api.github.com/users/glepnir/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/glepnir",
                "id": 41671631,
                "login": "glepnir",
                "node_id": "MDQ6VXNlcjQxNjcxNjMx",
                "organizations_url": "https://api.github.com/users/glepnir/orgs",
                "received_events_url": "https://api.github.com/users/glepnir/received_events",
                "repos_url": "https://api.github.com/users/glepnir/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/glepnir/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/glepnir/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/glepnir"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587128250"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587128250"
                }
            },
            "author_association": "MEMBER",
            "body": "> simply ternary\r\n> \r\n> ```lua\r\n> return setmetatable({applied = {}}, {\r\n>     __index = globalstate,\r\n>     __newindex = function(state, key, value)\r\n>         rawset(state, key, (globalstate[key] == value) and nil or value)\r\n>     end\r\n> })\r\n> ```\r\n\r\nThis is incorrect. `nil or value` will always return `value`, the `nil` value will never be chosen. But you could do something like:\r\n\r\n```lua\r\nreturn setmetatable({ applied = {} }, {\r\n    __index = globalstate,\r\n    __newindex = function(state, key, value)\r\n        rawset(state, key, (globalstate[key] ~= value) and value or nil)\r\n    end\r\n})\r\n```",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T06:30:13Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)\n+      else\n+        rawset(state, key, value)\n+      end\n+    end,\n+  })\n+  return bufstate",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587128250",
            "id": 1587128250,
            "in_reply_to_id": 1587019091,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5emae6",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 31,
            "original_position": 31,
            "original_start_line": 20,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2034929409,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587128250/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T06:46:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587128250",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587294998"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587294998"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I'd say I write this in such a verbose way is I want to emphasize that the `bufstates` is an array of `bufstate`s, and we can only get `bufstate` from it, not anything else. Maybe the effect is not very obvious? I might change it.",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T08:57:14Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)\n+      else\n+        rawset(state, key, value)\n+      end\n+    end,\n+  })\n+  return bufstate",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587294998",
            "id": 1587294998,
            "in_reply_to_id": 1587019091,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5enDMW",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 31,
            "original_position": 31,
            "original_start_line": 20,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2035191916,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587294998/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T08:57:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587294998",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587420960"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587420960"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n                    buffer, or nil for all.\r\n```",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T10:44:01Z",
            "diff_hunk": "@@ -1611,7 +1611,7 @@ enable({enable}, {filter})                       *vim.lsp.inlay_hint.enable()*\n     Parameters: ~\n       â€¢ {enable}  (`boolean?`) true/nil to enable, false to disable\n       â€¢ {filter}  (`table?`) Optional filters |kwargs|, or `nil` for all.\n-                  â€¢ {bufnr} (`integer?`) Buffer number, or 0/nil for current\n+                  â€¢ {bufnr} (`integer?`) Buffer number, or 0 for current\n                     buffer.",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587420960",
            "id": 1587420960,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5enh8g",
            "original_commit_id": "35955a0e70df7155a48e5594f4d8a2536c6d0a3d",
            "original_line": 1615,
            "original_position": 6,
            "original_start_line": null,
            "path": "runtime/doc/lsp.txt",
            "position": null,
            "pull_request_review_id": 2035398727,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587420960/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-02T10:44:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587420960",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587430306"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587430306"
                }
            },
            "author_association": "MEMBER",
            "body": "~~buffer-local should always override global. the global should act as the \"default\" in the absence of a buffer-local setting. this is well-established by e.g. buffer-local options.~~\r\n\r\nEdit: see https://github.com/neovim/neovim/pull/28543/files#r1587469247",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T10:49:22Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587430306",
            "id": 1587430306,
            "in_reply_to_id": 1587019533,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5enkOi",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 25,
            "original_position": 25,
            "original_start_line": 24,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2035411993,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587430306/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T11:20:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587430306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587440644"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587440644"
                }
            },
            "author_association": "MEMBER",
            "body": "off topic for this PR: \r\n\r\nUsually the correct and strongly preferred way to store buffer-local state is to use a buffer-local variable. Then if a buffer is deleted, its state is also deleted, without needing any lifecycle management. So this `bufstates` pattern should be avoided.\r\n\r\nSince you're looking at this code, do you see any reason why these flags can't be stored as a `vim.b` (`b:`) variable? (That change should be a separate PR, if we decide to explore it.) One reason might be performance, thus this may need to wait until after https://github.com/neovim/neovim/issues/12544#issuecomment-1116794687",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T10:54:52Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587440644",
            "id": 1587440644,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM5enmwE",
            "original_commit_id": "35955a0e70df7155a48e5594f4d8a2536c6d0a3d",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 19,
            "pull_request_review_id": 2035424114,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587440644/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-02T10:56:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587440644",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587469247"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587469247"
                }
            },
            "author_association": "MEMBER",
            "body": "Looks like this erases all the buffer-local states. That seems to match `vim.diagnostic.enable()`: https://github.com/neovim/neovim/blob/e778e0116198470ba037b9426f4ff7fa5cb7f880/runtime/lua/vim/diagnostic.lua#L2046-L2053\r\n\r\nThat seems a bit \"destructive\". I tend to think that global enable() should act like a gate: \r\n\r\n- if globally enabled, then defer to the buffer-local flag\r\n- if globally disabled, don't check the buffer-local flag\r\n\r\nBut since this matches `vim.diagnostic.enable()` I think we can go with this for now. ",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T11:20:15Z",
            "diff_hunk": "@@ -392,11 +409,28 @@ function M.enable(enable, filter)\n   end\n \n   vim.validate({ enable = { enable, 'boolean', true }, filter = { filter, 'table', true } })\n+  enable = enable == nil or enable\n   filter = filter or {}\n-  if enable == false then\n-    _disable(filter.bufnr)\n+\n+  if filter.bufnr == nil then\n+    globalstate.enabled = enable\n+    for bufnr, _ in pairs(bufstates) do\n+      if api.nvim_buf_is_loaded(bufnr) then\n+        if enable == false then\n+          _disable(bufnr)\n+        else\n+          _enable(bufnr)\n+        end",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587469247",
            "id": 1587469247,
            "line": 417,
            "node_id": "PRRC_kwDOAPphoM5entu_",
            "original_commit_id": "35955a0e70df7155a48e5594f4d8a2536c6d0a3d",
            "original_line": 417,
            "original_position": 246,
            "original_start_line": 419,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 240,
            "pull_request_review_id": 2035472613,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587469247/reactions"
            },
            "side": "RIGHT",
            "start_line": 413,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T11:20:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587469247",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587499796"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587499796"
                }
            },
            "author_association": "MEMBER",
            "body": "> I'd say I write this in such a verbose way is I want to emphasize that the `bufstates` is an array of `bufstate`s, and we can only get `bufstate` from it, not anything else. Maybe the effect is not very obvious? I might change it.\r\n\r\nI understand, but it's already very clear. It's pretty obvious that an item in a list named `bufstates` will be a single bufstate, so the compact form should be strongly preferred",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T11:42:01Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)\n+      else\n+        rawset(state, key, value)\n+      end\n+    end,\n+  })\n+  return bufstate",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587499796",
            "id": 1587499796,
            "in_reply_to_id": 1587019091,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5en1MU",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 31,
            "original_position": 31,
            "original_start_line": 20,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2035520446,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587499796/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-02T11:42:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587499796",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/29580810?v=4",
                "events_url": "https://api.github.com/users/famiu/events{/privacy}",
                "followers_url": "https://api.github.com/users/famiu/followers",
                "following_url": "https://api.github.com/users/famiu/following{/other_user}",
                "gists_url": "https://api.github.com/users/famiu/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/famiu",
                "id": 29580810,
                "login": "famiu",
                "node_id": "MDQ6VXNlcjI5NTgwODEw",
                "organizations_url": "https://api.github.com/users/famiu/orgs",
                "received_events_url": "https://api.github.com/users/famiu/received_events",
                "repos_url": "https://api.github.com/users/famiu/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/famiu/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/famiu/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/famiu"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587548052"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587548052"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think it should be possible to store `bufstate` as a `vim.b` variable. Formerly there was no requirement to prepare `bufstate` for every buffer, so we only create them when `enable` inlay hints on a buffer. Maybe it's just because this method is the most direct, and there doesn't seem to be any other LSP-related places using `vim.b`.",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T12:25:08Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587548052",
            "id": 1587548052,
            "in_reply_to_id": 1587440644,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM5eoA-U",
            "original_commit_id": "35955a0e70df7155a48e5594f4d8a2536c6d0a3d",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 19,
            "pull_request_review_id": 2035599215,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587548052/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-02T12:25:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587548052",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1587609798"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587609798"
                }
            },
            "author_association": "MEMBER",
            "body": "> Maybe it's just because this method is the most direct, \r\n\r\nDirect how? I would expect that leveraging a buffer-local variable avoids the need for logic to \"cleanup\" old state in this long-lived container.\r\n\r\n> and there doesn't seem to be any other LSP-related places using `vim.b`.\r\n\r\nI wouldn't take that as precedent, since (1) it might be driven by the performance consideration mentioned above, and (2) I think LSP features are typically per-client instead of per-buffer.",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-02T13:09:23Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1587609798",
            "id": 1587609798,
            "in_reply_to_id": 1587440644,
            "line": 19,
            "node_id": "PRRC_kwDOAPphoM5eoQDG",
            "original_commit_id": "35955a0e70df7155a48e5594f4d8a2536c6d0a3d",
            "original_line": 19,
            "original_position": 19,
            "original_start_line": null,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": 19,
            "pull_request_review_id": 2035702492,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587609798/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-05-02T13:09:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1587609798",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/28543#discussion_r1589264454"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/28543"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1589264454"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "See https://github.com/neovim/neovim/pull/28627. Both are wrong.",
            "commit_id": "bf6f029d30798fc61f471221a10280032afa3458",
            "created_at": "2024-05-03T14:10:16Z",
            "diff_hunk": "@@ -4,13 +4,32 @@ local ms = require('vim.lsp.protocol').Methods\n local api = vim.api\n local M = {}\n \n----@class (private) vim.lsp.inlay_hint.bufstate\n+---@class (private) vim.lsp.inlay_hint.globalstate Global state for inlay hints\n+---@field enabled boolean Whether inlay hints are enabled for this scope\n+---@type vim.lsp.inlay_hint.globalstate\n+local globalstate = {\n+  enabled = false,\n+}\n+\n+---@class (private) vim.lsp.inlay_hint.bufstate: vim.lsp.inlay_hint.globalstate Buffer local state for inlay hints\n ---@field version? integer\n ---@field client_hints? table<integer, table<integer, lsp.InlayHint[]>> client_id -> (lnum -> hints)\n ---@field applied table<integer, integer> Last version of hints applied to this line\n----@field enabled boolean Whether inlay hints are enabled for this buffer\n ---@type table<integer, vim.lsp.inlay_hint.bufstate>\n-local bufstates = {}\n+local bufstates = vim.defaulttable(function(_)\n+  local bufstate = { applied = {} }\n+  setmetatable(bufstate, {\n+    __index = globalstate,\n+    __newindex = function(state, key, value)\n+      if globalstate[key] == value then\n+        rawset(state, key, nil)\n+      else\n+        rawset(state, key, value)\n+      end\n+    end,\n+  })\n+  return bufstate",
            "html_url": "https://github.com/neovim/neovim/pull/28543#discussion_r1589264454",
            "id": 1589264454,
            "in_reply_to_id": 1587019091,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5eukBG",
            "original_commit_id": "11c992bc2aa09b9195a3d3c654ed70513f64c3fd",
            "original_line": 31,
            "original_position": 31,
            "original_start_line": 20,
            "path": "runtime/lua/vim/lsp/inlay_hint.lua",
            "position": null,
            "pull_request_review_id": 2038242150,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1589264454/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-05-03T14:15:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1589264454",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "I kept the commit history as clean as possible to make it easier to review. Thereby reducing the risk of merging this PR before the release of 0.10.",
            "created_at": "2024-04-28T05:46:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/28543#issuecomment-2081342104",
            "id": 2081342104,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28543",
            "node_id": "IC_kwDOAPphoM58DsKY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081342104/reactions"
            },
            "updated_at": "2024-04-28T05:58:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081342104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@MariaSolOs More explanations for why make `bufstates` as a `vim.defaulttable`:\r\n\r\n1. To make `bufstate`s inherit values from the `globalstate`, we need `setmetatable` for them. Instead of defining a factory function for `bufstate`, I think creating them when indexing `bufstates` will be simpler and more effective, this approach also avoids thinking about when this factory function should be called.\r\n2. As you can see we can avoid a lot of judgment for whether the `bufstates[bufnr]` exists.\r\n\r\nBut now I admit that this idea is not perfect. The `on_win` callback of the `nvim_set_decoration_provider` is called too trivially, if the `vim.defaulttable` takes effect here, there will be many tables in the `bufstates`. Even a temporary window like a completion candidate window of `nvim-cmp`, will have its own `bufstate` in `bufstate`. Although this won't produce a fatal error, I think it's better to avoid it. In fact, all my changes since the opening of this PR have been to optimize this problem.\r\n\r\nCurrently, to avoid this situation, I made `on_win` cannot trigger the factory function when `bufstates[bufnr]` does not exist by utilizing `rawget` instead of indexing directly inside it.",
            "created_at": "2024-04-28T22:54:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/28543#issuecomment-2081686918",
            "id": 2081686918,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28543",
            "node_id": "IC_kwDOAPphoM58FAWG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081686918/reactions"
            },
            "updated_at": "2024-04-28T22:54:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081686918",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@ofseed thanks for explaining! I must confess that that level of manipulation of metatables is beyond my expertise, so I'll let others comment on the correctness of the implementation.",
            "created_at": "2024-04-29T06:08:15Z",
            "html_url": "https://github.com/neovim/neovim/pull/28543#issuecomment-2081951854",
            "id": 2081951854,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28543",
            "node_id": "IC_kwDOAPphoM58GBBu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081951854/reactions"
            },
            "updated_at": "2024-04-29T06:08:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2081951854",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62502207?v=4",
                "events_url": "https://api.github.com/users/MariaSolOs/events{/privacy}",
                "followers_url": "https://api.github.com/users/MariaSolOs/followers",
                "following_url": "https://api.github.com/users/MariaSolOs/following{/other_user}",
                "gists_url": "https://api.github.com/users/MariaSolOs/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/MariaSolOs",
                "id": 62502207,
                "login": "MariaSolOs",
                "node_id": "MDQ6VXNlcjYyNTAyMjA3",
                "organizations_url": "https://api.github.com/users/MariaSolOs/orgs",
                "received_events_url": "https://api.github.com/users/MariaSolOs/received_events",
                "repos_url": "https://api.github.com/users/MariaSolOs/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/MariaSolOs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/MariaSolOs/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/MariaSolOs"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Since you mentioned this life cycle management issue, I wonder if I should change the way `bufstates` are managed here before this PR is merged.\r\n\r\nI explained [above](https://github.com/neovim/neovim/pull/28543#issuecomment-2081686918) why using `vim.defaulttable` manage `bufstates`.\r\n> (1) To make `bufstate`s inherit values from the `globalstate`, we need `setmetatable` for them. Instead of defining a factory function for `bufstate`, I think creating them when indexing `bufstates` will be simpler and more effective, this approach also avoids thinking about when this factory function should be called.\r\n> (2) As you can see we can avoid a lot of judgment for whether the `bufstates[bufnr]` exists.\r\n\r\nIf we changed the implementation to `vim.b...` in the future, we still need judgments for nil check, and then add them back, this makes (2) moot. For (1), Itâ€™s not too troublesome to use factory functions or manage life cycles, we can create `bufstate` by a factor function when `LspAttach` and delete them when `LspDettach` or on buffer detach. Also avoiding potential performance issues.\r\n\r\n",
            "created_at": "2024-05-02T12:25:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/28543#issuecomment-2090372058",
            "id": 2090372058,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28543",
            "node_id": "IC_kwDOAPphoM58mIva",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2090372058/reactions"
            },
            "updated_at": "2024-05-02T12:25:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2090372058",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Since you mentioned this life cycle management issue, I wonder if I should change the way `bufstates` are managed here before this PR is merged.\r\n\r\nSeparate PR seems preferable since that exploration is orthogonal, i.e. it shouldn't change the general behavior/interface decided in this PR.",
            "created_at": "2024-05-02T13:12:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/28543#issuecomment-2090468633",
            "id": 2090468633,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28543",
            "node_id": "IC_kwDOAPphoM58mgUZ",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2090468633/reactions"
            },
            "updated_at": "2024-05-02T13:12:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2090468633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/28543/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/28543/commits",
    "created_at": "2024-04-28T05:42:20Z",
    "diff_url": "https://github.com/neovim/neovim/pull/28543.diff",
    "draft": false,
    "head": {
        "label": "ofseed:enable-all",
        "ref": "enable-all",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ofseed/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ofseed/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ofseed/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ofseed/neovim/branches{/branch}",
            "clone_url": "https://github.com/ofseed/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ofseed/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ofseed/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ofseed/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ofseed/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ofseed/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ofseed/neovim/contributors",
            "created_at": "2021-11-30T18:13:03Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ofseed/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ofseed/neovim/downloads",
            "events_url": "https://api.github.com/repos/ofseed/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ofseed/neovim/forks",
            "full_name": "ofseed/neovim",
            "git_commits_url": "https://api.github.com/repos/ofseed/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ofseed/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ofseed/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ofseed/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ofseed/neovim/hooks",
            "html_url": "https://github.com/ofseed/neovim",
            "id": 433537354,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ofseed/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ofseed/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ofseed/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ofseed/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ofseed/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/ofseed/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ofseed/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ofseed/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOGddBSg",
            "notifications_url": "https://api.github.com/repos/ofseed/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
                "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
                "followers_url": "https://api.github.com/users/ofseed/followers",
                "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
                "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ofseed",
                "id": 61115159,
                "login": "ofseed",
                "node_id": "MDQ6VXNlcjYxMTE1MTU5",
                "organizations_url": "https://api.github.com/users/ofseed/orgs",
                "received_events_url": "https://api.github.com/users/ofseed/received_events",
                "repos_url": "https://api.github.com/users/ofseed/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ofseed"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ofseed/neovim/pulls{/number}",
            "pushed_at": "2024-05-06T04:20:21Z",
            "releases_url": "https://api.github.com/repos/ofseed/neovim/releases{/id}",
            "size": 263374,
            "ssh_url": "git@github.com:ofseed/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ofseed/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ofseed/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ofseed/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ofseed/neovim/subscription",
            "svn_url": "https://github.com/ofseed/neovim",
            "tags_url": "https://api.github.com/repos/ofseed/neovim/tags",
            "teams_url": "https://api.github.com/repos/ofseed/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ofseed/neovim/git/trees{/sha}",
            "updated_at": "2024-05-06T04:20:26Z",
            "url": "https://api.github.com/repos/ofseed/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "bf6f029d30798fc61f471221a10280032afa3458",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
            "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
            "followers_url": "https://api.github.com/users/ofseed/followers",
            "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ofseed",
            "id": 61115159,
            "login": "ofseed",
            "node_id": "MDQ6VXNlcjYxMTE1MTU5",
            "organizations_url": "https://api.github.com/users/ofseed/orgs",
            "received_events_url": "https://api.github.com/users/ofseed/received_events",
            "repos_url": "https://api.github.com/users/ofseed/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ofseed"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/28543",
    "id": 1844230239,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/28543",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "d5063f4b290e1c4262f7ced6d425ff2d7a2e2045",
    "merged_at": "2024-05-02T13:16:20Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5t7Lhf",
    "number": 28543,
    "patch_url": "https://github.com/neovim/neovim/pull/28543.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/28543/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/bf6f029d30798fc61f471221a10280032afa3458",
    "title": "feat(lsp): vim.lsp.inlay_hint.enable(nil) applies to all buffers",
    "updated_at": "2024-05-03T14:10:16Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/28543",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/61115159?v=4",
        "events_url": "https://api.github.com/users/ofseed/events{/privacy}",
        "followers_url": "https://api.github.com/users/ofseed/followers",
        "following_url": "https://api.github.com/users/ofseed/following{/other_user}",
        "gists_url": "https://api.github.com/users/ofseed/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ofseed",
        "id": 61115159,
        "login": "ofseed",
        "node_id": "MDQ6VXNlcjYxMTE1MTU5",
        "organizations_url": "https://api.github.com/users/ofseed/orgs",
        "received_events_url": "https://api.github.com/users/ofseed/received_events",
        "repos_url": "https://api.github.com/users/ofseed/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ofseed/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ofseed/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ofseed"
    }
}