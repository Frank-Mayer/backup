{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/21811/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21811/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/21811"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/21811"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21811/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/21811"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/e04acb1459760af829ed08276cb51ebd0ea6a95c"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "FIRST_TIME_CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5605,
            "forks_count": 5605,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1776,
            "open_issues_count": 1776,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-09-30T22:27:30Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 287362,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82117,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-01T02:33:57Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82117,
            "watchers_count": 82117,
            "web_commit_signoff_required": false
        },
        "sha": "2f32b1996744b8ad4ab00f11e09f17c27ad7d866",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "## Overview\r\n\r\nAn idiomatic way to interact with autocommands using Lua.\r\n\r\n- `vim.augroup` is indexable by arbitrary group names and returns an \"Augroup\" object\r\n  - an Augroup has methods `:get()`, `:clear()`, `:create()`, and `:del()`\r\n  - can be called with a function as the argument to define multiple autocommands in the group (see \"Example usage\" below)\r\n- `vim.autocmd` is indexable by event name(s) and returns an \"Event\" object\r\n  - functions `vim.autocmd:get()` and `vim.autocmd:clear()` behaves the same as `nvim_get_autocmds()` and `nvim_clear_autocmds()` respectively\r\n  - an Event has methods `:get()`, `:clear()`, and `:exec()`\r\n  - an Event can be called with a Lua function or an Ex command string prefixed with \":\" to create an autocommand\r\n  - specify a pattern or patterns by indexing an Event\r\n- `vim.autocmd.buf`\r\n  - operates on the current buffer or can be indexed with a bufnr\r\n  - otherwise same behavior as `vim.autocmd`\r\n\r\n\r\n## Example usage\r\n```lua\r\nvim.autocmd.UIEnter(\":echo 'Hello!'\")\r\n\r\nvim.autocmd.TextYankPost(function()\r\n  vim.highlight.on_yank()\r\nend)\r\n\r\n-- check if we need to reload the file\r\nvim.autocmd[{ \"FocusGained\", \"TermClose\", \"TermLeave\" }](function()\r\n  vim.cmd.checktime()\r\nend)\r\n\r\nvim.autocmd.FileType[{ \"qf\", \"man\", \"help\" }](function()\r\n  vim.opt_local.number = false\r\n  vim.opt_local.relativenumber = false\r\n  vim.opt_local.wrap = true\r\nend)\r\n\r\nvim.autocmd.User.PluginEvent(function()\r\n  print(\"callback executed\")\r\nend, { desc = \"callback for Plugin\" })\r\n\r\nvim.autocmd.User.PluginEvent:exec()  -- \"callback executed\"\r\n\r\n-- create an autocommand for the current buffer\r\nvim.autocmd.buf.InsertLeave(\":echo 'job done'\")\r\n\r\n-- get a list of autocommands in the current buffer\r\nassert(1 == #vim.autocmd:get({ buffer = 0 }))\r\n-- or\r\nassert(1 == #vim.autocmd.buf:get())\r\n\r\n-- create an autocommand in a specific buffer\r\nvim.autocmd.buf[2].BufEnter(\":echo 'you found me'\")\r\n\r\n-- creates the group and defines its autocommands\r\nvim.augroup.cursorline(function(au)\r\n  au:clear()\r\n  au.WinEnter(\":setlocal cursorline\")\r\n  au.WinLeave(\":setlocal nocursorline\")\r\nend)\r\n\r\nassert(#vim.autocmd:get({ group = \"cursorline\" }) == 2)\r\nassert(#vim.augroup.cursorline:get() == 2)\r\nassert(#vim.augroup.cursorline:get({ event = \"WinEnter\" }) == 1)\r\n\r\nvim.augroup.cursorline:del()\r\n\r\nlocal group_exists = pcall(function()\r\n  vim.autocmd:get({ group = \"cursorline\" })\r\nend)\r\nassert(group_exists == false)\r\n-- or\r\nassert(vim.augroup.cursorline:get() == nil)\r\n```\r\n\r\n## Todo\r\n- more tests\r\n- docs\r\n- the current implementation resides in `runtime/lua/vim/_auto`; should it be moved elsewhere?\r\n- consider the visibility of fields in `vim.autocmd`, `vim.augroup`, Event, and Augroup objects\r\n- general design\r\n\r\n---\r\n\r\nI think this would be awesome to have as part of the `vim` module and I would love to hear everyone's thoughts!",
    "closed_at": null,
    "comment_data": [],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Just some random thoughts:\r\n\r\n\r\n- Not sure if the value gain is worth the negative.\r\n  - Pro: Less typing(?)\r\n  - Cons: More surface API, leading to more fragmentation, more to learn, more to test, more that can break, and harder to read for people not familiar with all APIs\r\n\r\nE.g. comparing:\r\n\r\n```lua\r\nvim.autocmd.TextYankPost(function()\r\n  vim.highlight.on_yank()\r\nend)\r\n```\r\n\r\n```lua\r\nvim.api.nvim_create_autocmd('TextYankPost', {\r\n  callback = function()\r\n    vim.highlight.on_yank()\r\n  end\r\n})\r\n```\r\n\r\nThis seems a rather thin layer and maybe not substantial enough?\r\n\r\n\r\n- Not sure what to make of using tables as keys to tables. It may advocate a pattern that may be a bad idea as the hashing/equality is based on identity. This is probably intentional for the API but I think it could have a good chance of confusing people, especially those new to Lua.\r\n\r\n```lua\r\nlocal d = {}\r\nlocal key1 = { \"x\", \"y\" }\r\nd[key1] = 10\r\nd[{ \"x\", \"y\" }] = 20\r\nprint(vim.inspect(d))\r\nd[key1] = 30\r\nprint(vim.inspect(d))\r\n```\r\n\r\nOutputs:\r\n\r\n```\r\n{\r\n  [{ \"x\", \"y\" }] = 10,\r\n  [{ \"x\", \"y\" }] = 20\r\n}\r\n{\r\n  [{ \"x\", \"y\" }] = 30,\r\n  [{ \"x\", \"y\" }] = 20\r\n}\r\n```\r\n\r\n\r\n\r\nProbably relates to https://github.com/neovim/neovim/issues/20632\r\n",
            "created_at": "2023-01-15T09:33:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383102401",
            "id": 1383102401,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5ScHfB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383102401/reactions"
            },
            "updated_at": "2023-01-15T09:36:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383102401",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I agree with @mfussenegger: in general we do _not_ want to add a thin convenience wrapper over the Nvim API; `vim.api.nvim_create_autocmd` works perfectly fine from Lua, and the first step for any such proposal would be to identify concrete _problems_ with the current API -- not just \"would be nice if this looked more Lua-y!\"\r\n\r\n(Keymappings and options were a bit of a different situation: for the former, the Nvim API was relatively clunky for technical reasons, and for the later the API wasn't fully in place yet -- and unsurprisingly especially the latter create a _lot_ of confusion, so in the future we're doubly careful around adding Lua wrappers. In particular, we _don't_ want to propagate the object-pattern from `vim.opt` -- quite the opposite, in fact!)",
            "created_at": "2023-01-15T11:16:07Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383122946",
            "id": 1383122946,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5ScMgC",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383122946/reactions"
            },
            "updated_at": "2023-01-15T11:44:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383122946",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> in general we do _not_ want to add a thin convenience wrapper over the Nvim API; `vim.api.nvim_create_autocmd` works perfectly fine from Lua\r\n\r\n💯 , though `nvim_create_autocmd` feels clunky to me, and although this PR might not be there yet, there is room for meaningful improvement.\r\n\r\n\r\n# Suggestion: introduce `nvim_on`, deprecate `nvim_create_autocmd`\r\n\r\n1. `nvim_create_autocmd` is a verbose name, we should name it `nvim_on`.\r\n2. why was `callback` a named parameter? there will always be a callback, typing out \"callback\" is verbose and redundant.\r\n3. similar for `pattern,` naming it in the caller every time is totally redundant, because the values are obviously patterns.\r\n4. `command` should not exist. If the handler is a string, treat it as Vimscript, else as a Lua function.\r\n\r\n# Suggestions (for this PR as-is)\r\n\r\n- name it `vim.on()`, not `vim.autocmd`.\r\n    - leaves the door open for `vim.on()` to subscribe to RPC events or other kinds of events in the future?\r\n- we can avoid `vim.augroup`. \"augroups\" are just namespaces: https://github.com/neovim/neovim/pull/28441\r\n    - creating/deleting augroups should use the same functions as any other namespaces.\r\n- no OOP. just return a handler id.\r\n- `vim.un({id})` to unsubscribe/unregister/dispose an event handler\r\n    - similar to `nvim_create_autocmd()`, handler can delete itself if it returns true?\r\n\r\nPlease avoid OOP stuff like this:\r\n\r\n    vim.augroup.cursorline:del()\r\n\r\nWait until much later until it is blindingly clear that this kind of thing is really needed. Do not start with these special objects. Just let plugins work with handles (ids), just like how namespaces already work. (Related: https://github.com/neovim/neovim/pull/28441)\r\n",
            "created_at": "2023-01-15T21:04:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383252583",
            "id": 1383252583,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5ScsJn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383252583/reactions"
            },
            "updated_at": "2024-09-29T00:46:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383252583",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think tj added callback and command as separate arguments because API functions didn't have multi-typed arguments, which I think a lot of us assumed (me included) was not allowed in the API. `nvim create_user_command` was added later which broke this convention.\n\nFor `pattern`, it defaults to `*` which is what you want most of the time so it becomes optional. I think this was the right decision.\n\n> how can we avoid vim.augroup, is it really needed?\n\nI would like this too but I think it is fundamentally needed as it acts like a namespace. We could maybe fold this into nvim namespaces?",
            "created_at": "2023-01-15T21:45:34Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383260883",
            "id": 1383260883,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5ScuLT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383260883/reactions"
            },
            "updated_at": "2023-01-15T21:47:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383260883",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "NONE",
            "body": "I see where you're all coming from; I really appreciate the suggestions and feedback!\r\n\r\nOne of the things that I wanted to address with this PR is the tedium of creating multiple autocommands in the same group:\r\n```lua\r\nvim.augroup.cursorline(function(au)\r\n  au:clear()\r\n  au.WinEnter(\":setlocal cul\")\r\n  au.WinLeave(\":setlocal nocul\")\r\nend)\r\n```\r\nI know it's not quite there yet but having a separate block of code that defines everything in a group feels \"just right\", and maybe this pattern (OOP stuff not included) can be applied to other parts of the API:\r\n```lua\r\nvim.ns.some_namespace(function(...)\r\n  -- do stuff in some_namespace\r\nend)\r\n```\r\nI haven't used namespaces so I'm not sure if this tracks but maybe someone can chime in with thoughts on this? Does it feel \"just right\"? Is this also something to avoid?\r\n\r\n**EDIT**\r\nLess OOP:\r\n```lua\r\nvim.augroup.cursorline(function(au, clear)\r\n  clear()\r\n  au.WinEnter(\":setlocal cul\")\r\n  au.WinLeave(\":setlocal nocul\")\r\nend)\r\n```",
            "created_at": "2023-01-16T00:13:51Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383295871",
            "id": 1383295871,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5Sc2t_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383295871/reactions"
            },
            "updated_at": "2023-01-16T00:27:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383295871",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34922961?v=4",
                "events_url": "https://api.github.com/users/sanman1k98/events{/privacy}",
                "followers_url": "https://api.github.com/users/sanman1k98/followers",
                "following_url": "https://api.github.com/users/sanman1k98/following{/other_user}",
                "gists_url": "https://api.github.com/users/sanman1k98/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sanman1k98",
                "id": 34922961,
                "login": "sanman1k98",
                "node_id": "MDQ6VXNlcjM0OTIyOTYx",
                "organizations_url": "https://api.github.com/users/sanman1k98/orgs",
                "received_events_url": "https://api.github.com/users/sanman1k98/received_events",
                "repos_url": "https://api.github.com/users/sanman1k98/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sanman1k98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sanman1k98/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sanman1k98"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I feel like this is like the old vimscript pattern\r\n```lua\r\nvim.augroup.cursorline(function(au, clear)\r\n  clear()\r\n  au.WinEnter(\":setlocal cul\")\r\n  au.WinLeave(\":setlocal nocul\")\r\nend)\r\n```\r\nwhere you got like `augroup`, `clear` `end`\r\nI always really disliked this pattern because 99% of the people need the clear\r\nI really like it the way it was now introduced with the autocmd api where `clear=true` was just a default\r\n\r\nI feel like readding this `clear()` command is an anti-pattern",
            "created_at": "2023-01-16T06:44:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383563559",
            "id": 1383563559,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5Sd4En",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383563559/reactions"
            },
            "updated_at": "2023-01-16T06:44:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383563559",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/81827001?v=4",
                "events_url": "https://api.github.com/users/max397574/events{/privacy}",
                "followers_url": "https://api.github.com/users/max397574/followers",
                "following_url": "https://api.github.com/users/max397574/following{/other_user}",
                "gists_url": "https://api.github.com/users/max397574/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/max397574",
                "id": 81827001,
                "login": "max397574",
                "node_id": "MDQ6VXNlcjgxODI3MDAx",
                "organizations_url": "https://api.github.com/users/max397574/orgs",
                "received_events_url": "https://api.github.com/users/max397574/received_events",
                "repos_url": "https://api.github.com/users/max397574/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/max397574/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/max397574/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/max397574"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "What's wrong with\r\n```lua\r\nvim.api.nvim_create_autocmd('FileType', {\r\ngroup = vim.api.nvim_create_augroup('foo', { clear = true }),\r\npattern = 'lua',\r\ncommand = 'echo \"foo\"',\r\n})\r\nvim.api.nvim_create_autocmd('FileType', {\r\ngroup = 'foo',\r\npattern = 'vim',\r\ncommand = 'echo \"bar\"',\r\n})\r\n...\r\n```\r\nIt's both more expressive and more flexible than the old Vimscript pattern (which there is zero reason to cargo-cult).",
            "created_at": "2023-01-16T08:31:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383663103",
            "id": 1383663103,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SeQX_",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 8,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 8,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383663103/reactions"
            },
            "updated_at": "2023-01-16T08:31:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383663103",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> nvim_create_autocmd is a verbose name, we should name it nvim_on.\r\n\r\nI think the verbose part is the `nvim_`,  `create` creates symmetry with `del` and adds semantic meaning. `autocmd` fits the general naming scheme of `{verb}_{qualifier}`.\r\n\r\nWe also have `nvim_create_augroup` etc..\r\n\r\n\r\n> why was callback a named parameter? there will always be a callback, typing out \"callback\" is verbose and redundant.\r\n> similar for pattern, naming it in the caller every time is totally redundant, because the values are obviously patterns.\r\n\r\n\r\nMakes it easier to extend the API, and having functions with too many parameters gets clunky too.\r\n\r\nAll parameters:\r\n\r\n- event\r\n- pattern\r\n- group\r\n- buffer\r\n- desc\r\n- callback\r\n- command\r\n\r\nIf looking at more complete examples, it becomes more apparent that optimizing for the short variants isn't necessarily an improvement. For example I'd prefer the current version over something like this:\r\n\r\n```lua\r\n\r\nvim.on('FileType', 'python', function()\r\n  ...\r\nend, {\r\n  buffer = bufnr,\r\n  desc = 'My description'\r\n})\r\n\r\n-- Or if shuffling opts and function\r\n\r\nvim.on('FileType', 'python', { buffer = bufnr, desc = 'My Description' }, function()\r\n  ...\r\nend)\r\n```\r\n\r\nOr a use case where the pattern is usually omitted:\r\n\r\n```lua\r\nvim.on('LspAttach', '*', function()\r\nend, { desc = 'My description' })\r\n\r\nvim.on('LspAttach', '*', { desc = 'My Description' }, function()\r\nend)\r\n\r\nvim.on('LspAttach', '*', {}, function()\r\nend)\r\n\r\n---\r\n\r\nvim.api.nvim_create_autocmd('LspAttach', {\r\n  desc = 'My description',\r\n  callback = function()\r\n  end\r\nend)\r\n```\r\n\r\nHaving short syntax would also further promote omitting the description. Not sure if we should encourage that.\r\nAnother aspect is discovery. People coming from vim looking for Lua alternative are probably searching for `autocmd`, not for `on`. (Although this probably shouldn't have too much weight)\r\n\r\n\r\n> name it vim.on(), not vim.autocmd.\r\n> leaves the door open for vim.on() to subscribe to RPC events or other kinds of events in the future?\r\n\r\n\r\nContra point:\r\n\r\n - Removes the symmetry with set/create/del we have in other places. (`keymap.set`, `keymap.del`)\r\n - Risky that other kind of events would fit the same scheme\r\n - There is `on_key`, why does one have no qualifier, but another does?\r\n\r\n\r\n---\r\n\r\nFor what's worth I think the existing `create_autocmd` API is well designed. Folding `callback` and `command` into one would have been nice to model that it's mutually exclusive (assuming it is?), but Lewis explained why it wasn't.\r\n\r\nI'd rather see the `nvim_` prefix removed.\r\n\r\n",
            "created_at": "2023-01-16T11:47:59Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383932109",
            "id": 1383932109,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SfSDN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383932109/reactions"
            },
            "updated_at": "2023-01-16T11:47:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383932109",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> I'd rather see the nvim_ prefix removed.\r\n\r\nThis and the forced arity checks (mostly for empty `opts`).\r\n\r\nHowever, this has already had a decent amount of discussion and the result was that `vim.*` (high level) should have its own variant of `vim.api.*` (low level). Sometimes these variants won't differ much (like here it seems), but I'd rather fill out all the gaps in `vim.*` so `vim.api.*` becomes internal use + RPC only, then Lua users can ignore it completely. Similar to how `vim.fs.*` is adding functions already available in `vim.loop.*`",
            "created_at": "2023-01-16T12:04:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383951710",
            "id": 1383951710,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SfW1e",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383951710/reactions"
            },
            "updated_at": "2023-01-16T12:04:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383951710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "\r\n> * Removes the symmetry with set/create/del we have in other places. (`keymap.set`, `keymap.del`)\r\n\r\n\"on\" is a verb for setting event handlers, so there is intentionally no symmetry with things that aren't event handlers. \r\n\r\n> * Risky that other kind of events would fit the same scheme\r\n\r\n?\r\n\r\n> * There is `on_key`, why does one have no qualifier, but another does?\r\n\r\n`vim.on` or `nvim_on` doesn't have a qualifier because it's the main interface for the bulk of Nvim events. The various `on_foo` variants are special cases that manage their own handler registery, for better or worse. In theory they shouldn't be needed because almost everything could fit into the global event registry which historically was called \"autocmd\".\r\n\r\nUsing \"on\" prefix for all such event/callback stuff is very discoverable.\r\n\r\n> > I'd rather see the nvim_ prefix removed.\r\n> \r\n> This and the forced arity checks (mostly for empty `opts`).\r\n\r\nI'm starting to lean towards this. Accepting Lua callbacks in API functions, implies a Lua interface to the API. So we need to make that ergonomic.\r\n\r\n> For example I'd prefer the current version over something like this:\r\n> \r\n> ```\r\n> -- Or if shuffling opts and function\r\n> vim.on('FileType', 'python', { buffer = bufnr, desc = 'My Description' }, function()\r\n>   ...\r\n> end)\r\n> ```\r\n\r\nWhat's not to like about this one? :)\r\n\r\n- The callback is the most verbose part, so putting it last helps readability.\r\n- `vim.on('FileType',…)` reads so nicely. `create_blah({callback=...}` is awkward.\r\n\r\nGenerally, we need a unified \"event\" interface or at least common conventions. Autocmds are a historical implementation detail.",
            "created_at": "2023-01-16T12:35:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1383991552",
            "id": 1383991552,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SfgkA",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 4,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 4,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383991552/reactions"
            },
            "updated_at": "2023-01-16T12:35:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1383991552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> why was callback a named parameter? there will always be a callback, typing out \"callback\" is verbose and redundant.\r\n\r\n> I think tj added callback and command as separate arguments because API functions didn't have multi-typed arguments\r\n\r\nThere is `command` and `callback`. `command` is always a string (ex command), `callback` can be a string (vim script function) or a lua function.\r\n\r\nWithout this, it would be another `nvim_set_keymap` situation, where rhs is ignored if `callback` is in opts. But I guess you could argue that having vim script function as callbacks isn't even necessary in the first place, and just make it lua functions or strings as ex commands.",
            "created_at": "2023-01-16T14:58:53Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384181965",
            "id": 1384181965,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgPDN",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384181965/reactions"
            },
            "updated_at": "2023-01-16T15:02:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384181965",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Without this, it would be another nvim_set_keymap situation, where rhs is ignored if callback is in opts. But I guess you could argue that having vim script function as callbacks isn't even necessary in the first place, and just make it lua functions or strings as ex commands.\r\n\r\nSee `nvim_create_user_command`. Command can be either a string **OR** and Lua function.",
            "created_at": "2023-01-16T15:19:17Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384204393",
            "id": 1384204393,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgUhp",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384204393/reactions"
            },
            "updated_at": "2024-09-29T00:05:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384204393",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> See nvim_create_user_command. Command can be either a string OR and Lua function.\r\n\r\nBut not a Vimscript function. ",
            "created_at": "2023-01-16T15:24:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384210015",
            "id": 1384210015,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgV5f",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384210015/reactions"
            },
            "updated_at": "2024-09-29T00:05:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384210015",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I think that's orthogonal to this. We could if we wanted support funcrefs for API usage in vimscript. Not that anybody is asking for that.",
            "created_at": "2023-01-16T15:28:30Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384215571",
            "id": 1384215571,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgXQT",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384215571/reactions"
            },
            "updated_at": "2024-09-29T00:06:05Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384215571",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7904185?v=4",
                "events_url": "https://api.github.com/users/lewis6991/events{/privacy}",
                "followers_url": "https://api.github.com/users/lewis6991/followers",
                "following_url": "https://api.github.com/users/lewis6991/following{/other_user}",
                "gists_url": "https://api.github.com/users/lewis6991/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lewis6991",
                "id": 7904185,
                "login": "lewis6991",
                "node_id": "MDQ6VXNlcjc5MDQxODU=",
                "organizations_url": "https://api.github.com/users/lewis6991/orgs",
                "received_events_url": "https://api.github.com/users/lewis6991/received_events",
                "repos_url": "https://api.github.com/users/lewis6991/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lewis6991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lewis6991/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lewis6991"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No it's not. This (string being reserved for vimscript functions) is exactly the reason why `nvim_create_autocmd` needed separate keywords for `command` and `callback`.\r\n\r\n(_If_ we had wanted to support vimscript functions for user commands -- which we chose not to, having learned the lesson from the kvetching about `nvim_create_autocmd` -- we would have needed to use separate keywords as well.)",
            "created_at": "2023-01-16T15:31:05Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384218259",
            "id": 1384218259,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgX6T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384218259/reactions"
            },
            "updated_at": "2024-09-29T00:06:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384218259",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": ">> Removes the symmetry with set/create/del we have in other places. (keymap.set, keymap.del)\r\n> \"on\" is a verb for setting event handlers, so there is intentionally no symmetry with things that aren't event handlers.\r\n\r\nBut `create` of `create_autocmd` has symmetry with `nvim_del_autocmd`. The `create` implies that there are other options as well. With `.on` that is less obvious.\r\n\r\n\r\n>> Risky that other kind of events would fit the same scheme\r\n> ?\r\n\r\nI meant that it's not a given that the same function signature would match for other events. Assuming we'd use `on(event, pattern, opts, callback)` it's not sure that another event system or source would have a `pattern`. For example with `LspAttach` there was already a discussion what best fits the `pattern` as there is also the client-id.\r\n\r\nOne could even view keymap handlers as event handlers.\r\n\r\n>> What's not to like about this one? :)\r\n>> - The callback is the most verbose part, so putting it last helps readability.\r\n\r\nThat the optional `opts` are not the last, so you cannot leave them out. Always feels a bit of a compromise to me. You either end up putting the optional param in-between or you've a clunky verbose function in the middle and trailing opts.\r\n\r\n\r\nBut my goal wasn't to get into more bike-shedding or enumeration of preferences. I merely wanted to highlight that there is no _clear_ improvement for all cases. (And if you disagree with that, I'd at least say that the improvement is so minor that it's not worth duplicating an API + its documentation and create extra tests. There is no new functionality gained. One API is not more powerful then the other, it's really _only_ about verbosity. I'd rather spend the API surface budget on other things where a high level API has significant distance to lower level APIs)\r\n",
            "created_at": "2023-01-16T16:06:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384257028",
            "id": 1384257028,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SghYE",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 7,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 7,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384257028/reactions"
            },
            "updated_at": "2023-01-16T16:11:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384257028",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> See nvim_create_user_command. Command can be either a string OR and Lua function.\r\n\r\nOf course, that's what I've said :) nvim_create_autocmd could be just like nvim_create_user_command, if you didn't need vim script functions as callbacks. But I guess it was decided that this was needed, so having a single parameter that's either string or a function was not enough.",
            "created_at": "2023-01-16T16:14:16Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384269868",
            "id": 1384269868,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5Sgkgs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384269868/reactions"
            },
            "updated_at": "2024-09-29T00:55:54Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384269868",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/59243201?v=4",
                "events_url": "https://api.github.com/users/ii14/events{/privacy}",
                "followers_url": "https://api.github.com/users/ii14/followers",
                "following_url": "https://api.github.com/users/ii14/following{/other_user}",
                "gists_url": "https://api.github.com/users/ii14/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ii14",
                "id": 59243201,
                "login": "ii14",
                "node_id": "MDQ6VXNlcjU5MjQzMjAx",
                "organizations_url": "https://api.github.com/users/ii14/orgs",
                "received_events_url": "https://api.github.com/users/ii14/received_events",
                "repos_url": "https://api.github.com/users/ii14/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ii14/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ii14/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ii14"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "@justinmk I like `vim.on`, but to delete an event handler, `vim.off` instead of `vim.un` probably makes more sense?",
            "created_at": "2023-01-16T16:36:13Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384301710",
            "id": 1384301710,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgsSO",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 2,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384301710/reactions"
            },
            "updated_at": "2023-01-16T16:36:13Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384301710",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/292349?v=4",
                "events_url": "https://api.github.com/users/folke/events{/privacy}",
                "followers_url": "https://api.github.com/users/folke/followers",
                "following_url": "https://api.github.com/users/folke/following{/other_user}",
                "gists_url": "https://api.github.com/users/folke/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/folke",
                "id": 292349,
                "login": "folke",
                "node_id": "MDQ6VXNlcjI5MjM0OQ==",
                "organizations_url": "https://api.github.com/users/folke/orgs",
                "received_events_url": "https://api.github.com/users/folke/received_events",
                "repos_url": "https://api.github.com/users/folke/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/folke/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/folke/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/folke"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'll just leave a few notes here:\r\n\r\n> nvim_create_autocmd is a verbose name, we should name it nvim_on.\r\n- This I don't have a big problem with, but it seems like a huge overhaul of \"event listening\" inside of neovim. It seems more far reaching than autocmds (and users can just do `local on = vim.api.nvim_create_autocmd`)\r\n\r\n> why was callback a named parameter? there will always be a callback, typing out \"callback\" is verbose and redundant.\r\n- Current API supports using commands (a string, with `command`), lua functions (a lua funcref, with `callback`) and viml functions (a viml func name as a string, with `callback`). This was done so that we could use viml functions, if people defined them OR they could copy in their old commands, which would be exactly the same as previous autocmds.\r\n\r\n> similar for pattern, naming it in the caller every time is totally redundant, because the values are obviously patterns.\r\n- For items with \"*\" as the pattern, then you do not have to supply it, I'm fine with creating a different function interface that requires you to pass a pattern, but when we made the PR, I didn't want to lock us in with a bunch of required parameters in the API if you didn't have to type them. This once again can be easily solved with wrapper functions (which I understand is the point of the PR, but I don't think the current PR adds enough value over the existing APIs)\r\n\r\n> command should not exist. If the handler is a string, treat it as Vimscript, else as a Lua function.\r\n-  I mentioned this above, I don't have strong opinions on it either way -- this was just what we had decided at the start when making the PR to try and make it clear the difference between function references and vim commands.\r\n\r\nAlso, I agree with a bunch of the points that @mfussenegger is making.",
            "created_at": "2023-01-16T16:48:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384314471",
            "id": 1384314471,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgvZn",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 6,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 6,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384314471/reactions"
            },
            "updated_at": "2024-09-29T00:56:34Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384314471",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> For what's worth I think the existing `create_autocmd` API is well designed\r\n\r\nYes, @tjdevries did a great job. No question there.\r\n\r\n> (And if you disagree with that, I'd at least say that the improvement is so minor that it's not worth duplicating an API + its documentation and create extra tests. There is no new functionality gained. One API is not more powerful then the other, it's really _only_ about verbosity.\r\n\r\nThat is definitely true under what we've currently gathered.\r\n\r\nSo to give clear guidance to @sanman1k98 : we need to sit on this for awhile. I plan to update https://github.com/neovim/neovim/issues/19156 with a concrete proposal.",
            "created_at": "2023-01-16T16:49:38Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384315653",
            "id": 1384315653,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5SgvsF",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 3,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384315653/reactions"
            },
            "updated_at": "2023-01-16T16:56:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384315653",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Oh, I'll also note that I had added the support for viml functions in hope that we could someday have same API for programmatic autocmds stuff with upstream vim (but it seems they diverged after making our API, haven't looked into it too closely)",
            "created_at": "2023-01-16T16:55:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-1384322750",
            "id": 1384322750,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM5Sgxa-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384322750/reactions"
            },
            "updated_at": "2023-01-16T16:55:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1384322750",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/4466899?v=4",
                "events_url": "https://api.github.com/users/tjdevries/events{/privacy}",
                "followers_url": "https://api.github.com/users/tjdevries/followers",
                "following_url": "https://api.github.com/users/tjdevries/following{/other_user}",
                "gists_url": "https://api.github.com/users/tjdevries/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/tjdevries",
                "id": 4466899,
                "login": "tjdevries",
                "node_id": "MDQ6VXNlcjQ0NjY4OTk=",
                "organizations_url": "https://api.github.com/users/tjdevries/orgs",
                "received_events_url": "https://api.github.com/users/tjdevries/received_events",
                "repos_url": "https://api.github.com/users/tjdevries/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/tjdevries/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/tjdevries/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/tjdevries"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "https://github.com/neovim/neovim/pull/28441 implements augroups as namespaces. After that, I assume we will only need `vim.ns` and `nvim_ns_xx()` functions instead of `vim.augroup`.\r\n\r\n`vim.on` is still a good idea imo.",
            "created_at": "2024-09-29T01:00:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/21811#issuecomment-2381043802",
            "id": 2381043802,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
            "node_id": "IC_kwDOAPphoM6N69ha",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381043802/reactions"
            },
            "updated_at": "2024-09-29T01:00:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2381043802",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/21811/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/21811/commits",
    "created_at": "2023-01-15T01:09:45Z",
    "diff_url": "https://github.com/neovim/neovim/pull/21811.diff",
    "draft": true,
    "head": {
        "label": "sanman1k98:luauto",
        "ref": "luauto",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/sanman1k98/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/sanman1k98/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/sanman1k98/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/sanman1k98/neovim/branches{/branch}",
            "clone_url": "https://github.com/sanman1k98/neovim.git",
            "collaborators_url": "https://api.github.com/repos/sanman1k98/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/sanman1k98/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/sanman1k98/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/sanman1k98/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/sanman1k98/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/sanman1k98/neovim/contributors",
            "created_at": "2023-01-12T20:02:57Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/sanman1k98/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/sanman1k98/neovim/downloads",
            "events_url": "https://api.github.com/repos/sanman1k98/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/sanman1k98/neovim/forks",
            "full_name": "sanman1k98/neovim",
            "git_commits_url": "https://api.github.com/repos/sanman1k98/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/sanman1k98/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/sanman1k98/neovim/git/tags{/sha}",
            "git_url": "git://github.com/sanman1k98/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/sanman1k98/neovim/hooks",
            "html_url": "https://github.com/sanman1k98/neovim",
            "id": 588302734,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/sanman1k98/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/sanman1k98/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/sanman1k98/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/sanman1k98/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/sanman1k98/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/sanman1k98/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/sanman1k98/neovim/merges",
            "milestones_url": "https://api.github.com/repos/sanman1k98/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIxDJjg",
            "notifications_url": "https://api.github.com/repos/sanman1k98/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/34922961?v=4",
                "events_url": "https://api.github.com/users/sanman1k98/events{/privacy}",
                "followers_url": "https://api.github.com/users/sanman1k98/followers",
                "following_url": "https://api.github.com/users/sanman1k98/following{/other_user}",
                "gists_url": "https://api.github.com/users/sanman1k98/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/sanman1k98",
                "id": 34922961,
                "login": "sanman1k98",
                "node_id": "MDQ6VXNlcjM0OTIyOTYx",
                "organizations_url": "https://api.github.com/users/sanman1k98/orgs",
                "received_events_url": "https://api.github.com/users/sanman1k98/received_events",
                "repos_url": "https://api.github.com/users/sanman1k98/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/sanman1k98/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sanman1k98/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/sanman1k98"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/sanman1k98/neovim/pulls{/number}",
            "pushed_at": "2023-01-14T23:01:25Z",
            "releases_url": "https://api.github.com/repos/sanman1k98/neovim/releases{/id}",
            "size": 225352,
            "ssh_url": "git@github.com:sanman1k98/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/sanman1k98/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/sanman1k98/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/sanman1k98/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/sanman1k98/neovim/subscription",
            "svn_url": "https://github.com/sanman1k98/neovim",
            "tags_url": "https://api.github.com/repos/sanman1k98/neovim/tags",
            "teams_url": "https://api.github.com/repos/sanman1k98/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/sanman1k98/neovim/git/trees{/sha}",
            "updated_at": "2023-01-12T19:35:30Z",
            "url": "https://api.github.com/repos/sanman1k98/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "e04acb1459760af829ed08276cb51ebd0ea6a95c",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/34922961?v=4",
            "events_url": "https://api.github.com/users/sanman1k98/events{/privacy}",
            "followers_url": "https://api.github.com/users/sanman1k98/followers",
            "following_url": "https://api.github.com/users/sanman1k98/following{/other_user}",
            "gists_url": "https://api.github.com/users/sanman1k98/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/sanman1k98",
            "id": 34922961,
            "login": "sanman1k98",
            "node_id": "MDQ6VXNlcjM0OTIyOTYx",
            "organizations_url": "https://api.github.com/users/sanman1k98/orgs",
            "received_events_url": "https://api.github.com/users/sanman1k98/received_events",
            "repos_url": "https://api.github.com/users/sanman1k98/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/sanman1k98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sanman1k98/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/sanman1k98"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/21811",
    "id": 1197837807,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/21811",
    "labels": [
        {
            "color": "FBCA04",
            "default": false,
            "description": "discussion has run its course, need decision how to proceed",
            "id": 83851236,
            "name": "needs:decision",
            "node_id": "MDU6TGFiZWw4Mzg1MTIzNg==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/needs:decision"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": "stdlib",
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "C5DEF5",
            "default": false,
            "description": "events, autocommands",
            "id": 3341085842,
            "name": "events",
            "node_id": "MDU6TGFiZWwzMzQxMDg1ODQy",
            "url": "https://api.github.com/repos/neovim/neovim/labels/events"
        }
    ],
    "locked": false,
    "merge_commit_sha": "2864fb1cb2dc5c16352e08a0d048e7f0ae1852a8",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5HZY3v",
    "number": 21811,
    "patch_url": "https://github.com/neovim/neovim/pull/21811.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/21811/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/e04acb1459760af829ed08276cb51ebd0ea6a95c",
    "title": "feat(lua): vim.on (was: vim.autocmd vim.augroup)",
    "updated_at": "2024-09-29T01:00:36Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/21811",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/34922961?v=4",
        "events_url": "https://api.github.com/users/sanman1k98/events{/privacy}",
        "followers_url": "https://api.github.com/users/sanman1k98/followers",
        "following_url": "https://api.github.com/users/sanman1k98/following{/other_user}",
        "gists_url": "https://api.github.com/users/sanman1k98/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/sanman1k98",
        "id": 34922961,
        "login": "sanman1k98",
        "node_id": "MDQ6VXNlcjM0OTIyOTYx",
        "organizations_url": "https://api.github.com/users/sanman1k98/orgs",
        "received_events_url": "https://api.github.com/users/sanman1k98/received_events",
        "repos_url": "https://api.github.com/users/sanman1k98/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/sanman1k98/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sanman1k98/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/sanman1k98"
    }
}