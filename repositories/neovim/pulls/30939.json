{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30939/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30939/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/30939"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/30939"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30939/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/30939"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/b793d43433439e606ff33af074281ab4d8a3b300"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5682,
            "forks_count": 5682,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1804,
            "open_issues_count": 1804,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-10-29T01:08:05Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 291853,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 82872,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-10-29T01:08:09Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 82872,
            "watchers_count": 82872,
            "web_commit_signoff_required": false
        },
        "sha": "34c44c355646311aa67fe53e1e5ce040789430c6",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Partial fix for #30741; option to prevent mapping not implemented.\r\n\r\n`vim.on_key()` 3rd arg is opts. {may_discard=true} for `vim.on_key()` return to control discard.\r\n\r\nThe option to prevent mapping can be implemented. It is desirable that when `vim.on_key()` is called, the lua function invokes \"C\" code to set some global variable like `on_keys_disables_mappings` for use in getchar.c; this avoids a lua call to get the value of the boolean for each key.",
    "closed_at": null,
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30939#discussion_r1819105462"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30939"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819105462"
                }
            },
            "author_association": "MEMBER",
            "body": "Why is this option needed? Previously, the spec for `fn` was that its return type is \"void\". If we now treat a `true` return value specially, we don't need to make that optional.",
            "commit_id": "b793d43433439e606ff33af074281ab4d8a3b300",
            "created_at": "2024-10-28T13:56:36Z",
            "diff_hunk": "@@ -670,28 +670,33 @@ local on_key_cbs = {} --- @type table<integer,function>\n ---          are applied, and {typed} is the key(s) before mappings are applied.\n ---          {typed} may be empty if {key} is produced by non-typed key(s) or by the\n ---          same typed key(s) that produced a previous {key}.\n+---          If {opts.may_discard} then when {fn} returns\n+---          true, {key} is ignored.\n ---          When {fn} is `nil` and {ns_id} is specified, the callback associated with\n ---          namespace {ns_id} is removed.\n ---@param ns_id integer? Namespace ID. If nil or 0, generates and returns a\n ---                      new |nvim_create_namespace()| id.\n+---@param opts table|nil Optional parameters\n+---              - may_discard {fn} controls discard (default false)",
            "html_url": "https://github.com/neovim/neovim/pull/30939#discussion_r1819105462",
            "id": 1819105462,
            "line": 679,
            "node_id": "PRRC_kwDOAPphoM5sbVi2",
            "original_commit_id": "13263eba8aa3616fa8006bc6ced78f37cda2a226",
            "original_line": 679,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": 21,
            "pull_request_review_id": 2399156579,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30939",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819105462/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-28T13:56:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819105462",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30939#discussion_r1819108030"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30939"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819108030"
                }
            },
            "author_association": "MEMBER",
            "body": "nit: while we're here we can simplify this\r\n\r\n\r\n```suggestion\r\n---          When {fn} is `nil`, the callback associated with namespace {ns_id} is removed.\r\n```",
            "commit_id": "b793d43433439e606ff33af074281ab4d8a3b300",
            "created_at": "2024-10-28T13:57:57Z",
            "diff_hunk": "@@ -670,28 +670,33 @@ local on_key_cbs = {} --- @type table<integer,function>\n ---          are applied, and {typed} is the key(s) before mappings are applied.\n ---          {typed} may be empty if {key} is produced by non-typed key(s) or by the\n ---          same typed key(s) that produced a previous {key}.\n+---          If {opts.may_discard} then when {fn} returns\n+---          true, {key} is ignored.\n ---          When {fn} is `nil` and {ns_id} is specified, the callback associated with\n ---          namespace {ns_id} is removed.",
            "html_url": "https://github.com/neovim/neovim/pull/30939#discussion_r1819108030",
            "id": 1819108030,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sbWK-",
            "original_commit_id": "13263eba8aa3616fa8006bc6ced78f37cda2a226",
            "original_line": 676,
            "original_position": 16,
            "original_start_line": 675,
            "path": "runtime/lua/vim/_editor.lua",
            "position": null,
            "pull_request_review_id": 2399160404,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30939",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819108030/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-10-28T13:57:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819108030",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30939#discussion_r1819109243"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30939"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819109243"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    local ok, rv = pcall(v[1], buf, typed_buf)\r\n```",
            "commit_id": "b793d43433439e606ff33af074281ab4d8a3b300",
            "created_at": "2024-10-28T13:58:38Z",
            "diff_hunk": "@@ -700,12 +705,19 @@ end\n function vim._on_key(buf, typed_buf)\n   local failed_ns_ids = {}\n   local failed_messages = {}\n+  local discard = false\n   for k, v in pairs(on_key_cbs) do\n-    local ok, err_msg = pcall(v, buf, typed_buf)\n+    local ok, discard_or_err_msg = pcall(v[1], buf, typed_buf)",
            "html_url": "https://github.com/neovim/neovim/pull/30939#discussion_r1819109243",
            "id": 1819109243,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sbWd7",
            "original_commit_id": "13263eba8aa3616fa8006bc6ced78f37cda2a226",
            "original_line": 710,
            "original_position": 52,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": null,
            "pull_request_review_id": 2399162388,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30939",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819109243/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-28T13:58:39Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819109243",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30939#discussion_r1819116478"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30939"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819116478"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n    it('can discard input', function()\r\n```",
            "commit_id": "b793d43433439e606ff33af074281ab4d8a3b300",
            "created_at": "2024-10-28T14:03:00Z",
            "diff_hunk": "@@ -3416,6 +3417,32 @@ describe('lua stdlib', function()\n                                                                     |\n       ]])\n     end)\n+\n+    it('option {may_discard=true}', function()",
            "html_url": "https://github.com/neovim/neovim/pull/30939#discussion_r1819116478",
            "id": 1819116478,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5sbYO-",
            "original_commit_id": "13263eba8aa3616fa8006bc6ced78f37cda2a226",
            "original_line": 3421,
            "original_position": 13,
            "original_start_line": null,
            "path": "test/functional/lua/vim_spec.lua",
            "position": null,
            "pull_request_review_id": 2399175026,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30939",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819116478/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-28T14:03:00Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819116478",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/30939#discussion_r1819465306"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/30939"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819465306"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "> Why is this option needed? Previously, the spec for `fn` was that its return type is \"void\". If we now treat a `true` return value specially, we don't need to make that optional.\r\n\r\nIt's not needed. It's there as a compatibility thing, even then it seemed a stretch. I'll remove it unless there's further comment to the contrary.",
            "commit_id": "b793d43433439e606ff33af074281ab4d8a3b300",
            "created_at": "2024-10-28T17:26:19Z",
            "diff_hunk": "@@ -670,28 +670,33 @@ local on_key_cbs = {} --- @type table<integer,function>\n ---          are applied, and {typed} is the key(s) before mappings are applied.\n ---          {typed} may be empty if {key} is produced by non-typed key(s) or by the\n ---          same typed key(s) that produced a previous {key}.\n+---          If {opts.may_discard} then when {fn} returns\n+---          true, {key} is ignored.\n ---          When {fn} is `nil` and {ns_id} is specified, the callback associated with\n ---          namespace {ns_id} is removed.\n ---@param ns_id integer? Namespace ID. If nil or 0, generates and returns a\n ---                      new |nvim_create_namespace()| id.\n+---@param opts table|nil Optional parameters\n+---              - may_discard {fn} controls discard (default false)",
            "html_url": "https://github.com/neovim/neovim/pull/30939#discussion_r1819465306",
            "id": 1819465306,
            "in_reply_to_id": 1819105462,
            "line": 679,
            "node_id": "PRRC_kwDOAPphoM5sctZa",
            "original_commit_id": "13263eba8aa3616fa8006bc6ced78f37cda2a226",
            "original_line": 679,
            "original_position": 20,
            "original_start_line": null,
            "path": "runtime/lua/vim/_editor.lua",
            "position": 21,
            "pull_request_review_id": 2399741145,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/30939",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819465306/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-10-28T17:26:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1819465306",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "There is no test for `may_discard=true`. I've looked at the test vim_spec.lua; need to feed a key that has a side effect that can be detected. Any thoughts?\r\n\r\nBTW, no need for the test if there's no chance this PR is in general acceptable.",
            "created_at": "2024-10-24T22:26:33Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2436448635",
            "id": 2436448635,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6ROUF7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2436448635/reactions"
            },
            "updated_at": "2024-10-24T22:26:33Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2436448635",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "After looking around in test/functional/lua, and at `describe('vim.on_key', ...`, as well as the goodies in `test.functional.testnvim` and friends, I think I can put together a test. But how to test the test? In particular, how to run something less than `make functionaltest`? I didn't see any hints in `neovim/test/README.md`.",
            "created_at": "2024-10-26T06:56:28Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2439402670",
            "id": 2439402670,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RZlSu",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439402670/reactions"
            },
            "updated_at": "2024-10-26T06:56:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439402670",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Aha, something _was_ in there,\r\n```\r\nTEST_FILE=test/functional/lua/vim_spec.lua TEST_FILTER='vim.on_key' make functionaltest\r\n```",
            "created_at": "2024-10-26T07:20:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2439412539",
            "id": 2439412539,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RZns7",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439412539/reactions"
            },
            "updated_at": "2024-10-26T07:20:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439412539",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@zeertzjq @justinmk Added a test. \r\n\r\nAn open question is whether the `{allow_mapping=false}` option should be added to this PR. If so, I need some implementation guidance\r\n- where to set up core global `on_key_no_mapping` for use in `vgetc()`\r\n- how to set the \"C\" global from the `lua` code `vim.on_key()`\r\n\r\nNote: while any `vim.on_key()` callback has `{allow_mapping=false}` then no mappings would occur.",
            "created_at": "2024-10-26T19:54:52Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2439718892",
            "id": 2439718892,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6Rayfs",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439718892/reactions"
            },
            "updated_at": "2024-10-26T19:54:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2439718892",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> It is desirable that when `vim.on_key()` is called, the lua function invokes \"C\" code to set some global variable like `on_keys_disables_mappings` for use in getchar.c; this avoids a lua call to get the value of the boolean for each key.\r\n\r\nWhy is that desirable? The current impl in this PR seems much more obvious, and avoids another global...",
            "created_at": "2024-10-28T14:00:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2441673642",
            "id": 2441673642,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RiPuq",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2441673642/reactions"
            },
            "updated_at": "2024-10-28T14:00:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2441673642",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "In order to future-proof this (and remove the need for `KeyInputPre` https://github.com/neovim/neovim/pull/30061), why not make the return value a string? Empty string means \"discard\", and non-empty can be used in the future to replace the char with one (or more) chars.",
            "created_at": "2024-10-28T14:07:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2441694014",
            "id": 2441694014,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RiUs-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2441694014/reactions"
            },
            "updated_at": "2024-10-28T14:07:37Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2441694014",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> > It is desirable that when `vim.on_key()` is called, the lua function invokes \"C\" code to set some global variable like `on_keys_disables_mappings` for use in getchar.c; this avoids a lua call to get the value of the boolean for each key.\r\n> \r\n> Why is that desirable? The current impl in this PR seems much more obvious, and avoids another global...\r\n\r\nThis is not part of \"can consume\"; this is for \"can prevent mapping\", see #30741. The current `getchar.c::vgetc()` has\r\n```\r\n      if (mod_mask) {           // no mapping after modifier has been read\r\n        no_mapping++;\r\n```\r\nand the idea is `if (mod_mask || on_key_disable_mapping)`. A global avoids doing another lua function invocation in `vget()`; that may not be an issue.",
            "created_at": "2024-10-28T17:39:46Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2442227420",
            "id": 2442227420,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RkW7c",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442227420/reactions"
            },
            "updated_at": "2024-10-28T17:39:46Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442227420",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> In order to future-proof this (and remove the need for `KeyInputPre` #30061), why not make the return value a string? Empty string means \"discard\", and non-empty can be used in the future to replace the char with one (or more) chars.\r\n\r\nSo the idea is `@return string?`. A `nil` return means do nothing and keep the character. A `\"\"` return means discard. And, for now, a non-empty string is an `vim.on_key()` error.",
            "created_at": "2024-10-28T17:45:04Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2442238348",
            "id": 2442238348,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RkZmM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442238348/reactions"
            },
            "updated_at": "2024-10-28T17:45:04Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442238348",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk I did \"resolve conversation\" for the changes I made in response to your comment. It always seemed more appropriate for the originator of the comment to resolve it; but I've never seen it used that way (if it's used at all).\r\n\r\nIs there a preferred protocol around that in this project?",
            "created_at": "2024-10-28T17:52:56Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2442254817",
            "id": 2442254817,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6Rkdnh",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442254817/reactions"
            },
            "updated_at": "2024-10-28T17:52:56Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442254817",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Is there a preferred protocol around that in this project?\r\n\r\nResolving decisions that are not useful for future reference, is fine. If there are non-obvious decisions/discussions, I like to keep those conversations unresolved.",
            "created_at": "2024-10-28T18:25:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/30939#issuecomment-2442320523",
            "id": 2442320523,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
            "node_id": "IC_kwDOAPphoM6RktqL",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442320523/reactions"
            },
            "updated_at": "2024-10-28T18:26:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2442320523",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/30939/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/30939/commits",
    "created_at": "2024-10-24T21:49:23Z",
    "diff_url": "https://github.com/neovim/neovim/pull/30939.diff",
    "draft": false,
    "head": {
        "label": "errael:KeyDiscard",
        "ref": "KeyDiscard",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/errael/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/errael/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/errael/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/errael/neovim/branches{/branch}",
            "clone_url": "https://github.com/errael/neovim.git",
            "collaborators_url": "https://api.github.com/repos/errael/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/errael/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/errael/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/errael/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/errael/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/errael/neovim/contributors",
            "created_at": "2024-10-07T16:01:02Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/errael/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/errael/neovim/downloads",
            "events_url": "https://api.github.com/repos/errael/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/errael/neovim/forks",
            "full_name": "errael/neovim",
            "git_commits_url": "https://api.github.com/repos/errael/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/errael/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/errael/neovim/git/tags{/sha}",
            "git_url": "git://github.com/errael/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/errael/neovim/hooks",
            "html_url": "https://github.com/errael/neovim",
            "id": 869038379,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/errael/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/errael/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/errael/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/errael/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/errael/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/errael/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/errael/neovim/merges",
            "milestones_url": "https://api.github.com/repos/errael/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOM8x5Kw",
            "notifications_url": "https://api.github.com/repos/errael/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
                "events_url": "https://api.github.com/users/errael/events{/privacy}",
                "followers_url": "https://api.github.com/users/errael/followers",
                "following_url": "https://api.github.com/users/errael/following{/other_user}",
                "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/errael",
                "id": 20450427,
                "login": "errael",
                "node_id": "MDQ6VXNlcjIwNDUwNDI3",
                "organizations_url": "https://api.github.com/users/errael/orgs",
                "received_events_url": "https://api.github.com/users/errael/received_events",
                "repos_url": "https://api.github.com/users/errael/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/errael",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/errael/neovim/pulls{/number}",
            "pushed_at": "2024-10-28T17:18:09Z",
            "releases_url": "https://api.github.com/repos/errael/neovim/releases{/id}",
            "size": 291060,
            "ssh_url": "git@github.com:errael/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/errael/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/errael/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/errael/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/errael/neovim/subscription",
            "svn_url": "https://github.com/errael/neovim",
            "tags_url": "https://api.github.com/repos/errael/neovim/tags",
            "teams_url": "https://api.github.com/repos/errael/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/errael/neovim/git/trees{/sha}",
            "updated_at": "2024-10-24T20:46:04Z",
            "url": "https://api.github.com/repos/errael/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "b793d43433439e606ff33af074281ab4d8a3b300",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
            "events_url": "https://api.github.com/users/errael/events{/privacy}",
            "followers_url": "https://api.github.com/users/errael/followers",
            "following_url": "https://api.github.com/users/errael/following{/other_user}",
            "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/errael",
            "id": 20450427,
            "login": "errael",
            "node_id": "MDQ6VXNlcjIwNDUwNDI3",
            "organizations_url": "https://api.github.com/users/errael/orgs",
            "received_events_url": "https://api.github.com/users/errael/received_events",
            "repos_url": "https://api.github.com/users/errael/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/errael",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/30939",
    "id": 2144588779,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/30939",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "libnvim, Nvim RPC API",
            "id": 103819671,
            "name": "api",
            "node_id": "MDU6TGFiZWwxMDM4MTk2NzE=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/api"
        }
    ],
    "locked": false,
    "merge_commit_sha": "492b20e36af130f1f9914e53ba712d1052db273e",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5_09Pr",
    "number": 30939,
    "patch_url": "https://github.com/neovim/neovim/pull/30939.patch",
    "requested_reviewers": [
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
            "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
            "followers_url": "https://api.github.com/users/zeertzjq/followers",
            "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/zeertzjq",
            "id": 35768171,
            "login": "zeertzjq",
            "node_id": "MDQ6VXNlcjM1NzY4MTcx",
            "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
            "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
            "repos_url": "https://api.github.com/users/zeertzjq/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/zeertzjq",
            "user_view_type": "public"
        },
        {
            "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
            "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
            "followers_url": "https://api.github.com/users/justinmk/followers",
            "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
            "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/justinmk",
            "id": 1359421,
            "login": "justinmk",
            "node_id": "MDQ6VXNlcjEzNTk0MjE=",
            "organizations_url": "https://api.github.com/users/justinmk/orgs",
            "received_events_url": "https://api.github.com/users/justinmk/received_events",
            "repos_url": "https://api.github.com/users/justinmk/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/justinmk",
            "user_view_type": "public"
        }
    ],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/30939/comments",
    "state": "open",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/b793d43433439e606ff33af074281ab4d8a3b300",
    "title": "feat(api): vim.on_key() can consume the key",
    "updated_at": "2024-10-28T18:26:17Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/30939",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/20450427?v=4",
        "events_url": "https://api.github.com/users/errael/events{/privacy}",
        "followers_url": "https://api.github.com/users/errael/followers",
        "following_url": "https://api.github.com/users/errael/following{/other_user}",
        "gists_url": "https://api.github.com/users/errael/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/errael",
        "id": 20450427,
        "login": "errael",
        "node_id": "MDQ6VXNlcjIwNDUwNDI3",
        "organizations_url": "https://api.github.com/users/errael/orgs",
        "received_events_url": "https://api.github.com/users/errael/received_events",
        "repos_url": "https://api.github.com/users/errael/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/errael/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/errael/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/errael",
        "user_view_type": "public"
    }
}