{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26551/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26551/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26551"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26551"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26551/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26551"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/c769fc3a7a4c5386c94cae3b3d65dae7f55cd331"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5066,
            "forks_count": 5066,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1721,
            "open_issues_count": 1721,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-12-19T00:15:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 246400,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 71892,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-12-19T01:02:33Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 71892,
            "watchers_count": 71892,
            "web_commit_signoff_required": false
        },
        "sha": "d65c6a0bafada059e87a11a4bcd129afc16d2e5d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": null,
    "closed_at": "2023-12-13T16:52:36Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26551#discussion_r1425147823"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26551"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425147823"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nSee the start of [drawscreen.c](drawscreen.c) for more explanations.\r\n```",
            "commit_id": "c769fc3a7a4c5386c94cae3b3d65dae7f55cd331",
            "created_at": "2023-12-13T10:22:57Z",
            "diff_hunk": "@@ -392,6 +392,68 @@ modes managed by the `state_enter` loop:\n - insert mode: `insert_{enter,check,execute}()`(`edit.c`)\n - terminal mode: `terminal_{enter,execute}()`(`terminal.c`)\n \n+## Important variables\n+\n+The current mode is stored in `State`.  The values it can have are `MODE_NORMAL`,\n+`MODE_INSERT`, `MODE_CMDLINE`, and a few others.\n+\n+The current window is `curwin`.  The current buffer is `curbuf`.  These point\n+to structures with the cursor position in the window, option values, the file\n+name, etc.\n+\n+All the global variables are declared in `globals.h`.\n+\n+### The main loop\n+\n+The main loop is implemented in state_enter. The basic idea is that Vim waits\n+for the user to type a character and processes it until another character is\n+needed.  Thus there are several places where Vim waits for a character to be\n+typed.  The `vgetc()` function is used for this.  It also handles mapping.\n+\n+Updating the screen is mostly postponed until a command or a sequence of\n+commands has finished.  The work is done by `update_screen()`, which calls\n+`win_update()` for every window, which calls `win_line()` for every line.\n+See the start of [drawscreen.c](../blob/master/src/nvim/drawscreen.c) for more explanations.",
            "html_url": "https://github.com/neovim/neovim/pull/26551#discussion_r1425147823",
            "id": 1425147823,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5U8gev",
            "original_commit_id": "e26363af552246d4aa5aacd5b599d31f0b4748f6",
            "original_line": 416,
            "original_position": 25,
            "original_start_line": null,
            "path": "src/nvim/README.md",
            "position": null,
            "pull_request_review_id": 1779308493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26551",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425147823/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-13T10:24:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425147823",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26551#discussion_r1425148124"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26551"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425148124"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nThe `:` commands are listed in [ex_cmds.lua](ex_cmds.lua).\r\n```",
            "commit_id": "c769fc3a7a4c5386c94cae3b3d65dae7f55cd331",
            "created_at": "2023-12-13T10:23:12Z",
            "diff_hunk": "@@ -392,6 +392,68 @@ modes managed by the `state_enter` loop:\n - insert mode: `insert_{enter,check,execute}()`(`edit.c`)\n - terminal mode: `terminal_{enter,execute}()`(`terminal.c`)\n \n+## Important variables\n+\n+The current mode is stored in `State`.  The values it can have are `MODE_NORMAL`,\n+`MODE_INSERT`, `MODE_CMDLINE`, and a few others.\n+\n+The current window is `curwin`.  The current buffer is `curbuf`.  These point\n+to structures with the cursor position in the window, option values, the file\n+name, etc.\n+\n+All the global variables are declared in `globals.h`.\n+\n+### The main loop\n+\n+The main loop is implemented in state_enter. The basic idea is that Vim waits\n+for the user to type a character and processes it until another character is\n+needed.  Thus there are several places where Vim waits for a character to be\n+typed.  The `vgetc()` function is used for this.  It also handles mapping.\n+\n+Updating the screen is mostly postponed until a command or a sequence of\n+commands has finished.  The work is done by `update_screen()`, which calls\n+`win_update()` for every window, which calls `win_line()` for every line.\n+See the start of [drawscreen.c](../blob/master/src/nvim/drawscreen.c) for more explanations.\n+\n+### Command-line mode\n+\n+When typing a `:`, `normal_cmd()` will call `getcmdline()` to obtain a line with\n+an Ex command.  `getcmdline()` calls a loop that will handle each typed\n+character.  It returns when hitting `<CR>` or `<Esc>` or some other character that\n+ends the command line mode.\n+\n+### Ex commands\n+\n+Ex commands are handled by the function `do_cmdline()`.  It does the generic\n+parsing of the `:` command line and calls `do_one_cmd()` for each separate\n+command.  It also takes care of while loops.\n+\n+`do_one_cmd()` parses the range and generic arguments and puts them in the\n+exarg_t and passes it to the function that handles the command.\n+\n+The `:` commands are listed in [ex_cmds.lua](../blob/master/src/nvim/ex_cmds.lua).",
            "html_url": "https://github.com/neovim/neovim/pull/26551#discussion_r1425148124",
            "id": 1425148124,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5U8gjc",
            "original_commit_id": "e26363af552246d4aa5aacd5b599d31f0b4748f6",
            "original_line": 434,
            "original_position": 43,
            "original_start_line": null,
            "path": "src/nvim/README.md",
            "position": null,
            "pull_request_review_id": 1779308493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26551",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425148124/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-13T10:24:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425148124",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26551#discussion_r1425148557"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26551"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425148557"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nThere is a table `nv_cmds` in [normal.c](normal.c) which\r\n```",
            "commit_id": "c769fc3a7a4c5386c94cae3b3d65dae7f55cd331",
            "created_at": "2023-12-13T10:23:31Z",
            "diff_hunk": "@@ -392,6 +392,68 @@ modes managed by the `state_enter` loop:\n - insert mode: `insert_{enter,check,execute}()`(`edit.c`)\n - terminal mode: `terminal_{enter,execute}()`(`terminal.c`)\n \n+## Important variables\n+\n+The current mode is stored in `State`.  The values it can have are `MODE_NORMAL`,\n+`MODE_INSERT`, `MODE_CMDLINE`, and a few others.\n+\n+The current window is `curwin`.  The current buffer is `curbuf`.  These point\n+to structures with the cursor position in the window, option values, the file\n+name, etc.\n+\n+All the global variables are declared in `globals.h`.\n+\n+### The main loop\n+\n+The main loop is implemented in state_enter. The basic idea is that Vim waits\n+for the user to type a character and processes it until another character is\n+needed.  Thus there are several places where Vim waits for a character to be\n+typed.  The `vgetc()` function is used for this.  It also handles mapping.\n+\n+Updating the screen is mostly postponed until a command or a sequence of\n+commands has finished.  The work is done by `update_screen()`, which calls\n+`win_update()` for every window, which calls `win_line()` for every line.\n+See the start of [drawscreen.c](../blob/master/src/nvim/drawscreen.c) for more explanations.\n+\n+### Command-line mode\n+\n+When typing a `:`, `normal_cmd()` will call `getcmdline()` to obtain a line with\n+an Ex command.  `getcmdline()` calls a loop that will handle each typed\n+character.  It returns when hitting `<CR>` or `<Esc>` or some other character that\n+ends the command line mode.\n+\n+### Ex commands\n+\n+Ex commands are handled by the function `do_cmdline()`.  It does the generic\n+parsing of the `:` command line and calls `do_one_cmd()` for each separate\n+command.  It also takes care of while loops.\n+\n+`do_one_cmd()` parses the range and generic arguments and puts them in the\n+exarg_t and passes it to the function that handles the command.\n+\n+The `:` commands are listed in [ex_cmds.lua](../blob/master/src/nvim/ex_cmds.lua).\n+\n+### Normal mode commands\n+\n+The Normal mode commands are handled by the `normal_cmd()` function.  It also\n+handles the optional count and an extra character for some commands.  These\n+are passed in a `cmdarg_T` to the function that handles the command.\n+\n+There is a table `nv_cmds` in [normal.c](../blob/master/src/nvim/normal.c) which",
            "html_url": "https://github.com/neovim/neovim/pull/26551#discussion_r1425148557",
            "id": 1425148557,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5U8gqN",
            "original_commit_id": "e26363af552246d4aa5aacd5b599d31f0b4748f6",
            "original_line": 442,
            "original_position": 51,
            "original_start_line": null,
            "path": "src/nvim/README.md",
            "position": null,
            "pull_request_review_id": 1779308493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26551",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425148557/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-13T10:24:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425148557",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26551#discussion_r1425150188"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26551"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425150188"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\nThere is a list with all option names in [options.lua](options.lua).\r\n```",
            "commit_id": "c769fc3a7a4c5386c94cae3b3d65dae7f55cd331",
            "created_at": "2023-12-13T10:24:46Z",
            "diff_hunk": "@@ -392,6 +392,68 @@ modes managed by the `state_enter` loop:\n - insert mode: `insert_{enter,check,execute}()`(`edit.c`)\n - terminal mode: `terminal_{enter,execute}()`(`terminal.c`)\n \n+## Important variables\n+\n+The current mode is stored in `State`.  The values it can have are `MODE_NORMAL`,\n+`MODE_INSERT`, `MODE_CMDLINE`, and a few others.\n+\n+The current window is `curwin`.  The current buffer is `curbuf`.  These point\n+to structures with the cursor position in the window, option values, the file\n+name, etc.\n+\n+All the global variables are declared in `globals.h`.\n+\n+### The main loop\n+\n+The main loop is implemented in state_enter. The basic idea is that Vim waits\n+for the user to type a character and processes it until another character is\n+needed.  Thus there are several places where Vim waits for a character to be\n+typed.  The `vgetc()` function is used for this.  It also handles mapping.\n+\n+Updating the screen is mostly postponed until a command or a sequence of\n+commands has finished.  The work is done by `update_screen()`, which calls\n+`win_update()` for every window, which calls `win_line()` for every line.\n+See the start of [drawscreen.c](../blob/master/src/nvim/drawscreen.c) for more explanations.\n+\n+### Command-line mode\n+\n+When typing a `:`, `normal_cmd()` will call `getcmdline()` to obtain a line with\n+an Ex command.  `getcmdline()` calls a loop that will handle each typed\n+character.  It returns when hitting `<CR>` or `<Esc>` or some other character that\n+ends the command line mode.\n+\n+### Ex commands\n+\n+Ex commands are handled by the function `do_cmdline()`.  It does the generic\n+parsing of the `:` command line and calls `do_one_cmd()` for each separate\n+command.  It also takes care of while loops.\n+\n+`do_one_cmd()` parses the range and generic arguments and puts them in the\n+exarg_t and passes it to the function that handles the command.\n+\n+The `:` commands are listed in [ex_cmds.lua](../blob/master/src/nvim/ex_cmds.lua).\n+\n+### Normal mode commands\n+\n+The Normal mode commands are handled by the `normal_cmd()` function.  It also\n+handles the optional count and an extra character for some commands.  These\n+are passed in a `cmdarg_T` to the function that handles the command.\n+\n+There is a table `nv_cmds` in [normal.c](../blob/master/src/nvim/normal.c) which\n+lists the first character of every\n+command.  The second entry of each item is the name of the function that\n+handles the command.\n+\n+### Insert mode commands\n+\n+When doing an `i` or `a` command, `normal_cmd()` will call the `edit()` function.\n+It contains a loop that waits for the next character and handles it.  It\n+returns when leaving Insert mode.\n+\n+### Options\n+\n+There is a list with all option names in [options.lua](../blob/master/src/nvim/options.lua).",
            "html_url": "https://github.com/neovim/neovim/pull/26551#discussion_r1425150188",
            "id": 1425150188,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5U8hDs",
            "original_commit_id": "e26363af552246d4aa5aacd5b599d31f0b4748f6",
            "original_line": 455,
            "original_position": 64,
            "original_start_line": null,
            "path": "src/nvim/README.md",
            "position": null,
            "pull_request_review_id": 1779308493,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26551",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425150188/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-13T10:24:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1425150188",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/35768171?v=4",
                "events_url": "https://api.github.com/users/zeertzjq/events{/privacy}",
                "followers_url": "https://api.github.com/users/zeertzjq/followers",
                "following_url": "https://api.github.com/users/zeertzjq/following{/other_user}",
                "gists_url": "https://api.github.com/users/zeertzjq/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/zeertzjq",
                "id": 35768171,
                "login": "zeertzjq",
                "node_id": "MDQ6VXNlcjM1NzY4MTcx",
                "organizations_url": "https://api.github.com/users/zeertzjq/orgs",
                "received_events_url": "https://api.github.com/users/zeertzjq/received_events",
                "repos_url": "https://api.github.com/users/zeertzjq/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/zeertzjq/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/zeertzjq/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/zeertzjq"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Maybe move this to the \"Nvim Lifecycle\" section (removing duplicate information, if any?",
            "created_at": "2023-12-13T10:15:48Z",
            "html_url": "https://github.com/neovim/neovim/pull/26551#issuecomment-1853633050",
            "id": 1853633050,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26551",
            "node_id": "IC_kwDOAPphoM5ufDIa",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853633050/reactions"
            },
            "updated_at": "2023-12-13T10:15:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853633050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Don't think there's much duplicate info tbh",
            "created_at": "2023-12-13T10:18:47Z",
            "html_url": "https://github.com/neovim/neovim/pull/26551#issuecomment-1853637438",
            "id": 1853637438,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26551",
            "node_id": "IC_kwDOAPphoM5ufEM-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853637438/reactions"
            },
            "updated_at": "2023-12-13T10:18:47Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853637438",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> Don't think there's much duplicate info tbh\r\n\r\nThere's that bit at the end: \r\n\r\n> The basic structure described for normal mode in 3, 4 and 5 is used for other modes managed by the state_enter loop:\r\n\r\nand the dedicated section \"Main loop\" that already exists. \r\n\r\nNo biggie, though; can always be cleaned up later.",
            "created_at": "2023-12-13T10:27:08Z",
            "html_url": "https://github.com/neovim/neovim/pull/26551#issuecomment-1853650113",
            "id": 1853650113,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26551",
            "node_id": "IC_kwDOAPphoM5ufHTB",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853650113/reactions"
            },
            "updated_at": "2023-12-13T10:27:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853650113",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Right. I'm still hesitant to touch it, I don't want to mess anything up since i'm not familiar with it.",
            "created_at": "2023-12-13T10:29:09Z",
            "html_url": "https://github.com/neovim/neovim/pull/26551#issuecomment-1853653009",
            "id": 1853653009,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26551",
            "node_id": "IC_kwDOAPphoM5ufIAR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853653009/reactions"
            },
            "updated_at": "2023-12-13T10:29:09Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1853653009",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26551/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26551/commits",
    "created_at": "2023-12-13T10:13:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26551.diff",
    "draft": false,
    "head": {
        "label": "dundargoc:docs/code-overview",
        "ref": "docs/code-overview",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/dundargoc/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/dundargoc/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/dundargoc/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/dundargoc/neovim/branches{/branch}",
            "clone_url": "https://github.com/dundargoc/neovim.git",
            "collaborators_url": "https://api.github.com/repos/dundargoc/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/dundargoc/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/dundargoc/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/dundargoc/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/dundargoc/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/dundargoc/neovim/contributors",
            "created_at": "2021-06-20T10:14:48Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/dundargoc/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/dundargoc/neovim/downloads",
            "events_url": "https://api.github.com/repos/dundargoc/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/dundargoc/neovim/forks",
            "full_name": "dundargoc/neovim",
            "git_commits_url": "https://api.github.com/repos/dundargoc/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/dundargoc/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/dundargoc/neovim/git/tags{/sha}",
            "git_url": "git://github.com/dundargoc/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": false,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/dundargoc/neovim/hooks",
            "html_url": "https://github.com/dundargoc/neovim",
            "id": 378614899,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/dundargoc/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/dundargoc/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/dundargoc/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/dundargoc/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/dundargoc/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/dundargoc/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/dundargoc/neovim/merges",
            "milestones_url": "https://api.github.com/repos/dundargoc/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkzNzg2MTQ4OTk=",
            "notifications_url": "https://api.github.com/repos/dundargoc/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
                "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
                "followers_url": "https://api.github.com/users/dundargoc/followers",
                "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
                "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/dundargoc",
                "id": 33953936,
                "login": "dundargoc",
                "node_id": "MDQ6VXNlcjMzOTUzOTM2",
                "organizations_url": "https://api.github.com/users/dundargoc/orgs",
                "received_events_url": "https://api.github.com/users/dundargoc/received_events",
                "repos_url": "https://api.github.com/users/dundargoc/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/dundargoc"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/dundargoc/neovim/pulls{/number}",
            "pushed_at": "2023-12-18T23:31:15Z",
            "releases_url": "https://api.github.com/repos/dundargoc/neovim/releases{/id}",
            "size": 243927,
            "ssh_url": "git@github.com:dundargoc/neovim.git",
            "stargazers_count": 1,
            "stargazers_url": "https://api.github.com/repos/dundargoc/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/dundargoc/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/dundargoc/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/dundargoc/neovim/subscription",
            "svn_url": "https://github.com/dundargoc/neovim",
            "tags_url": "https://api.github.com/repos/dundargoc/neovim/tags",
            "teams_url": "https://api.github.com/repos/dundargoc/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/dundargoc/neovim/git/trees{/sha}",
            "updated_at": "2023-07-31T17:43:26Z",
            "url": "https://api.github.com/repos/dundargoc/neovim",
            "visibility": "public",
            "watchers": 1,
            "watchers_count": 1,
            "web_commit_signoff_required": false
        },
        "sha": "c769fc3a7a4c5386c94cae3b3d65dae7f55cd331",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
            "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
            "followers_url": "https://api.github.com/users/dundargoc/followers",
            "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/dundargoc",
            "id": 33953936,
            "login": "dundargoc",
            "node_id": "MDQ6VXNlcjMzOTUzOTM2",
            "organizations_url": "https://api.github.com/users/dundargoc/orgs",
            "received_events_url": "https://api.github.com/users/dundargoc/received_events",
            "repos_url": "https://api.github.com/users/dundargoc/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/dundargoc"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26551",
    "id": 1642140883,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26551",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        }
    ],
    "locked": false,
    "merge_commit_sha": "c8223007d0e0a1d5dbcda31f364d1d1baee9d772",
    "merged_at": "2023-12-13T16:52:36Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5h4RTT",
    "number": 26551,
    "patch_url": "https://github.com/neovim/neovim/pull/26551.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26551/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/c769fc3a7a4c5386c94cae3b3d65dae7f55cd331",
    "title": "docs: add code-overview from wiki to src/nvim/README.md",
    "updated_at": "2023-12-13T16:58:12Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26551",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/33953936?v=4",
        "events_url": "https://api.github.com/users/dundargoc/events{/privacy}",
        "followers_url": "https://api.github.com/users/dundargoc/followers",
        "following_url": "https://api.github.com/users/dundargoc/following{/other_user}",
        "gists_url": "https://api.github.com/users/dundargoc/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/dundargoc",
        "id": 33953936,
        "login": "dundargoc",
        "node_id": "MDQ6VXNlcjMzOTUzOTM2",
        "organizations_url": "https://api.github.com/users/dundargoc/orgs",
        "received_events_url": "https://api.github.com/users/dundargoc/received_events",
        "repos_url": "https://api.github.com/users/dundargoc/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/dundargoc/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/dundargoc/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/dundargoc"
    }
}