{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31158/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31158/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31158"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31158"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31158/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31158"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/2bca3155826c59825c2696499d6a608fad1ded90"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5713,
            "forks_count": 5713,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1844,
            "open_issues_count": 1844,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-11-25T23:53:08Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 296619,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 83592,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-11-26T01:58:04Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 83592,
            "watchers_count": 83592,
            "web_commit_signoff_required": false
        },
        "sha": "0e54931b99530cd58af0434e12c58fe6243acb64",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Closes: https://github.com/neovim/neovim/issues/30729\r\n\r\nThis PR introduces two new pending operators: `[` and `]`.\r\n\r\nIn Neovim/Vim, `dip` deletes a paragraph under the current cursor. This PR now supports two new mappings, `d[ip` and `d]ip`.\r\n\r\n- `d[ip` means \"delete from the start of the paragraph to the current cursor position\"\r\n- `d]ip` means \"delete from the current cursor position to the bottom of the paragraph\"\r\n\r\nMost `{operator}{object}` pairs, for example `dap`, `yip`, `cas`, `daw`, etc etc now have a `{operator}[{object}` and `{operator}]{object}` equivalent.\r\n\r\nAnd of course, this works for custom text objects / plugins. These new `[` and `]` pending operators greatly improve the flexibility and expressiveness of Vim text objects!\r\n\r\n\r\n## How It Works\r\nWhen a user types `d]ap`, we ...\r\n\r\n1. Save the user's current cursor, `v:operator`, `operatorfunc`, and other details as needed\r\n2. Replace `operatorfunc` with our own.\r\n3. Immediately execute the replaced `operatorfunc`.\r\n\r\nAnd once executing...\r\n\r\n1. Restore the previous cursor position, previous `v:operator`, and `operatorfunc`\r\n2. If `[` or `]` was pressed, nudge the Vim `'[` or `']` marks if needed\r\n3. Execute the operation\r\n\r\nFor anyone familiar, this PR is a lua version of [vim-ninja-feet](https://github.com/tommcdo/vim-ninja-feet). Props goes to Tom for the awesome idea!\r\n\r\n\r\n## Considerations For Reviewers\r\nHere's some extra things that are not in the PR but could be useful / importing to consider.\r\n\r\n\r\n### Question 1 - Should the operator include / exclude the current line (for line-wise text objects)?\r\n\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nWhen operating over whole-lines, `[` can be thought of \"searching up\" for lines and is `]` \"searching down\". When that happens, should the current cursor's line be included in the search?\r\n\r\nFor example take this paragraph of text\r\n\r\n```\r\naaa\r\nbbbb  <-- NOTE: The user's cursor is here\r\ncc\r\n```\r\n\r\nIf we `d]ip` should the `bbbb` line also be deleted? What about if we use `d[ip`? Should the `bbbb` line be deleted or ignored also?\r\n\r\nCurrently this PR does \"always delete the line, whether we call `[` or `]`\".\r\n\r\nI was thinking maybe this could be solved in one of two ways.\r\n\r\n\r\n#### Idea 1 - 4 mappings\r\nInstead of providing `[` and `]` we provide `[/[[` and `]/]]`. So `d[ap` could include the cursor line and `d[[ap` could exclude the cursor line. A user could decide while typing if they care to include the line or not.\r\n\r\n(Note: I think Idea 2 is better, see below)\r\n\r\n#### Idea 2 - Configuration\r\nIf we anticipate that a user would always want to include the cursor line / exclude it then there isn't a need to provide a separate mapping for it. Instead we could provide configuration values such as.\r\n\r\n```\r\ng:inclusive_pending_cursor = nil / \"both\" (default, this PR's behavior)\r\ng:inclusive_pending_cursor = \"up\" (only include the cursor's line if using `[`)\r\ng:inclusive_pending_cursor = \"down\" (only include the cursor's line if using `]`)\r\ng:inclusive_pending_cursor = \"none\" (never include the cursor's line)\r\n```\r\n\r\nAnd if the user actually did want the \"4 mappings\" solution they could define their own omap that temporarily sets `g:inclusive_pending_cursor` before running the regular omap. Which I think makes this idea more flexible than the previous idea.\r\n</details>\r\n\r\n\r\n### Question 2 - Do we want to consider column info even if the text object is a line?\r\n\r\n<details>\r\n<summary>Click to expand</summary>\r\n\r\nText objects like `ip` (e.g. `dip`) operate on whole-lines. Currently, the PR respects this. When a user calls `d[ip`, it respects only the cursor's row and ignores the cursor's column position.\r\n\r\nIn visual terms imagine you have text like this\r\n\r\n```\r\naaa\r\nbb|your cursor here|tt\r\ncc\r\n```\r\n\r\nTyping `d[ip` would result in this:\r\n\r\n```\r\ncc\r\n```\r\n\r\nIf we considered the cursor's column position, the result instead would be\r\n\r\n```\r\ntt\r\ncc\r\n```\r\n\r\nIf a user did want to delete the whole row they could still do it by calling `dd` after calling `d[ip`. But I admit it is a bit wordy. What do you all think?\r\n</details>",
    "closed_at": "2024-11-15T02:12:45Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31158#discussion_r1843096429"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31158"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1843096429"
                }
            },
            "author_association": "MEMBER",
            "body": "these tests should live in `test/functional/editor` . the lua/ subdir is for the Lua \"stdlib\" (maybe we should rename that dir :)",
            "commit_id": "2bca3155826c59825c2696499d6a608fad1ded90",
            "created_at": "2024-11-15T02:00:44Z",
            "diff_hunk": "@@ -0,0 +1,1428 @@\n+--- Make sure the basic functionality of cursor-text-object works.",
            "html_url": "https://github.com/neovim/neovim/pull/31158#discussion_r1843096429",
            "id": 1843096429,
            "line": 1,
            "node_id": "PRRC_kwDOAPphoM5t22tt",
            "original_commit_id": "2bca3155826c59825c2696499d6a608fad1ded90",
            "original_line": 1,
            "original_position": 1,
            "original_start_line": null,
            "path": "test/functional/lua/cursor_pending_operator_spec.lua",
            "position": 1,
            "pull_request_review_id": 2437521782,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31158",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1843096429/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-15T02:01:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1843096429",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31158#discussion_r1843097281"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31158"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1843097281"
                }
            },
            "author_association": "MEMBER",
            "body": "no need for uppercase",
            "commit_id": "2bca3155826c59825c2696499d6a608fad1ded90",
            "created_at": "2024-11-15T02:02:20Z",
            "diff_hunk": "@@ -0,0 +1,111 @@\n+--- All function(s) that can be called externally by other Lua modules.\n+---\n+--- If a function's signature here changes in some incompatible way, this\n+--- package must get a new **major** version.\n+---\n+---@module 'vim._cursor'\n+---\n+\n+local M = {}\n+\n+local _Direction = { down = 'down', up = 'up' }\n+\n+---@class vim._cursor.Options\n+---    Describe which way to adjust the cursor and how.\n+---@field count number\n+---    The number of times to call the command. Usually is just `1`.\n+---@field direction \"down\" | \"up\"\n+---    Which way to crop the text object. \"up\" means \"operate from the cursor's\n+---    position to the up/left-most position\" and \"down\" means \"operate from\n+---    the cursor's position (including the cursor's current line, if\n+---    applicable) to the down/right-most position\".\n+\n+local _CURSOR",
            "html_url": "https://github.com/neovim/neovim/pull/31158#discussion_r1843097281",
            "id": 1843097281,
            "line": 23,
            "node_id": "PRRC_kwDOAPphoM5t227B",
            "original_commit_id": "2bca3155826c59825c2696499d6a608fad1ded90",
            "original_line": 23,
            "original_position": 23,
            "original_start_line": null,
            "path": "runtime/lua/vim/_cursor.lua",
            "position": 23,
            "pull_request_review_id": 2437522967,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31158",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1843097281/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-11-15T02:02:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1843097281",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "Hmm, this is useful but I feel that this is a bit heavy for including by default (not every plugin should be upstreamed; there's a relatively high bar). Especially the new module looks to be high-cost -- _unless_ it allows refactoring to remove similar code in (multiple) other places. Can you comment on that?",
            "created_at": "2024-11-11T08:00:11Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2467469480",
            "id": 2467469480,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TEpio",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467469480/reactions"
            },
            "updated_at": "2024-11-11T08:00:11Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467469480",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Unless it allows refactoring to remove similar code in (multiple) other places. Can you comment on that?\r\n\r\nAs far as I'm aware the only way to achieve what this PR does is to set a mark, use `v` to begin a range, provide a text object, then jump to the previous mark and then type the text operator. e.g. `mbvap'mgc`. Versus `gc]ap`. There might be a smaller way without this PR but the expressiveness and flexibility shouldn't be discounted. Vim's strength is its concise way of expressing commands and this feature would x3 every mapping that (Neo)vim has available to it.\r\n\r\n> Especially the new module looks to be high-cost\r\n\r\nI'd like to talk about that for a bit. if by new module you mean the `_cursor.lua` file, that's 49 lines of source code. Most of the lines are handling a couple edge cases. I'm assuming by cost you don't actually mean the file's contents but something else that I'm not seeing. Would you please elaborate on that?",
            "created_at": "2024-11-11T08:15:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2467497633",
            "id": 2467497633,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TEwah",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467497633/reactions"
            },
            "updated_at": "2024-11-11T08:18:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467497633",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "I'm talking about design, maintenance, and documentation cost, which does not (just) scale linearly with loc; there's an up-front cost, too. (For example, this will \"squat\" the `vim.cursor` namespace -- will this conflict with other plans?)\r\n\r\nAnd I'm not doubting the usefulness; I just want to discuss whether it's worth having this in core, all things considered. (And these costs _are_ something to consider.)",
            "created_at": "2024-11-11T08:19:54Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2467507192",
            "id": 2467507192,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TEyv4",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467507192/reactions"
            },
            "updated_at": "2024-11-11T08:21:16Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467507192",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> (For example, this will \"squat\" the vim.cursor namespace -- will this conflict with other plans?)\r\n\r\nI can rename the `_cursor.lua` file to something else. Originally I called it `_directional_pending_operator.lua` but I thought that that was a mouthful :)\r\n\r\nThe code is small enough that it could also just be inlined. I was following another PR as a guide while deciding where to place things here.\r\n\r\n> I'm talking about design, maintenance, and documentation cost, which does not (just) scale linearly with loc\r\n\r\nThat's fair I just wanted to make sure we're talking about the same thing. I figured you didn't literally mean the code as it is in the PR.\r\n\r\nWhen I made the original issue it was tagged with \"needs-owner\" which I saw is defined as \"We don't plan to work on this, but will accept high quality contributions from someone who will own the feature and follow up on bug reports.\". FWIW I'm offering to own this feature and its associated costs if that is allowed. That said, I've been using this equivalent (current state) code for 8 years without issue. It is simply heavenly!",
            "created_at": "2024-11-11T08:28:55Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2467524217",
            "id": 2467524217,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TE255",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467524217/reactions"
            },
            "updated_at": "2024-11-11T08:29:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2467524217",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Here are a bit more points to consider here:\r\n- My main concern about this is that it will not play nicely with various `[x`/`]x` plugin mappings which implement custom movements. For example, `[i`/`]i` is a fairly obvious choice for plugins which work with indent levels; `[a`/`]a` is the same for navigating arguments, etc. Those are the obvious choices, but there are more `[`/`]` motions implemented by plugins which might start with the same letter as some textobject.\r\n- Having these `[` and `]` be available only in Operator-pending mode is not really consistent with how textobjects work, which are (usually) available in both Visual and Operator-pending mode. Similar, `[`/`]` (if accepted at all) should be available in both Visual and Operator-pending mode.\r\n\r\nAll in all, I personally think that this is indeed a bit heavy custom mappings to be included by default. By that I mostly mean that it maps a heavily used pair of single characters (in what should be two heavily used modes) which is bound to introduce user troubles in the long run. The feature is interesting in on itself, but adding it should be a conscious choice by the user.",
            "created_at": "2024-11-13T12:40:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2473507857",
            "id": 2473507857,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TbrwR",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2473507857/reactions"
            },
            "updated_at": "2024-11-13T12:40:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2473507857",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> * My main concern about this is that it will not play nicely with various `[x`/`]x` plugin mappings which implement custom movements. For example, `[i`/`]i` is a fairly obvious choice for plugins which work with indent levels; `[a`/`]a` is the same for navigating arguments, etc. Those are the obvious choices, but there are more `[`/`]` motions implemented by plugins which might start with the same letter as some textobject.\r\n\r\nTo piggyback on what echasnovski says here, neovim itself [recently added a bunch of default mappings inspired by vim-unimpaired—e.g., [here](https://github.com/neovim/neovim/commit/bb7604eddafb31cd38261a220243762ee013273a) and [here](https://github.com/neovim/neovim/pull/30984), and all of them use `[` or `]` as a mapping prefix.",
            "created_at": "2024-11-13T17:11:44Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474244104",
            "id": 2474244104,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TefgI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474244104/reactions"
            },
            "updated_at": "2024-11-13T17:11:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474244104",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> To piggyback on what echasnovski says here, neovim itself [recently added a bunch of default mappings inspired by vim-unimpaired—e.g., [here](https://github.com/neovim/neovim/commit/bb7604eddafb31cd38261a220243762ee013273a) and [here](https://github.com/neovim/neovim/pull/30984), and all of them use `[` or `]` as a mapping prefix.\r\n\r\nI also thought about it, but they don't really apply here as they are created in Normal mode (no Visual and no Operator-pending mode). And it is reasonable, as they might change buffer.\r\n\r\nSame goes for `[d`/`]d`/`[D`/`]D`. Although I'd argue that it is reasonable to also have them in Visual and Operator-pending mode as they don't change buffer.",
            "created_at": "2024-11-13T17:20:57Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474266017",
            "id": 2474266017,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6Tek2h",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474266017/reactions"
            },
            "updated_at": "2024-11-13T17:20:57Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474266017",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> My main concern about this is that it will not play nicely with various [x/]x plugin mappings which implement custom movements.\r\n\r\nSo good news on this front, there is no conflict with this PR and those mappings. As in these pending operators would not prevent users from defining their own with `[` / `]` for their own purpose. If by conflict you mean not a \"mapping conflict\" but something more semantic - `d]ap` \"delete from the current position to the next paragraph\" is still consistent with `]a` \"move from the current position to the next arglist entry\". If you're still unsure then please suggest an alternative mapping.\r\n\r\n> (usually) available in both Visual and Operator-pending mode\r\n\r\nMy bad I forgot about that, adding support for `v]ap` and others would be a good addition to this PR. I can add that.\r\n\r\n> By that I mostly mean that it maps a heavily used pair of single characters which is bound to introduce user troubles in the long run\r\n\r\nWhat troubles, specifically? If you mean mapping collisions - Neovim recently [added 28 directional (pairwise) mappings](https://github.com/neovim/neovim/blob/079e5f4f9b67a5aa2c1b481ce78711bf8c76caea/runtime/lua/vim/_defaults.lua) and this PR plays well with all of them, no problem. The pending operators listed here also do not prevent users from defining their own. If you'd like say there's a potential conflict then okay, can I see a practical example of what you're describing? Rather than conflicting, the `[` and `]` actually fit quite well with a user's expectations. e.g. pairwise mappings are directional and so are these pending operators.",
            "created_at": "2024-11-13T17:32:37Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474293352",
            "id": 2474293352,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6Terho",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474293352/reactions"
            },
            "updated_at": "2024-11-13T17:37:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474293352",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My concern was about *cognitive* overload more than programmatic clashes. That said, there are limited keys on our keyboards, so maybe (a lot of) overloading is inevitable.",
            "created_at": "2024-11-13T17:37:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474305020",
            "id": 2474305020,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TeuX8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474305020/reactions"
            },
            "updated_at": "2024-11-13T17:37:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474305020",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "The cognitive overload of 2 new mappings vs the 28 that were just merged?",
            "created_at": "2024-11-13T17:38:10Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474306764",
            "id": 2474306764,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TeuzM",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474306764/reactions"
            },
            "updated_at": "2024-11-13T17:38:10Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474306764",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "If I can make a suggestion - I think value-proposition conversations like this, while important, are better suited for a chatroom / github issue rather than the PR. I'd much rather this conversation thread be about the contents of the PR rather than \"is this valuable / useful\". Especially since we've been going back and forth for a while. Would you be up for chatting about this on [GitHub discussions](https://github.com/neovim/neovim/discussions) or the [Neovim Matrix](https://app.element.io/#/room/#neovim:matrix.org)? If not, the GitHub issue? I'd like to keep this PR conversation thread about the technical contents of the PR if possible.",
            "created_at": "2024-11-13T17:40:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474312050",
            "id": 2474312050,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TewFy",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474312050/reactions"
            },
            "updated_at": "2024-11-13T17:42:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474312050",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "No, this is exactly where these discussions should happen (and they _are_ part of PR review): in the open and, more importantly, findable in the future.",
            "created_at": "2024-11-13T17:42:19Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474315876",
            "id": 2474315876,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TexBk",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474315876/reactions"
            },
            "updated_at": "2024-11-13T17:42:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474315876",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/2361214?v=4",
                "events_url": "https://api.github.com/users/clason/events{/privacy}",
                "followers_url": "https://api.github.com/users/clason/followers",
                "following_url": "https://api.github.com/users/clason/following{/other_user}",
                "gists_url": "https://api.github.com/users/clason/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/clason",
                "id": 2361214,
                "login": "clason",
                "node_id": "MDQ6VXNlcjIzNjEyMTQ=",
                "organizations_url": "https://api.github.com/users/clason/orgs",
                "received_events_url": "https://api.github.com/users/clason/received_events",
                "repos_url": "https://api.github.com/users/clason/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/clason/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/clason/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/clason",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I wasn't suggesting that as a way of hiding the chat but keeping conversation points separate. Since GitHub conversations are one flat list rather than categorized / threaded as they often should be.\r\n\r\nAnyway I'm happy to continue chatting here if that's what everyone wants.",
            "created_at": "2024-11-13T17:44:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474320821",
            "id": 2474320821,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TeyO1",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474320821/reactions"
            },
            "updated_at": "2024-11-13T17:44:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474320821",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> The cognitive overload of 2 new mappings vs the 28 that were just merged?\r\n\r\nPoint taken. I suppose I meant more the cognitive overload of \"Wait, what do `]` and `[` do in this particular {neo,}vim incantation?\" The more each key is used, the more you have to think about how the key affects *this* particular use. \r\n\r\nThat said, after reading this thread again from top to bottom, you've convinced me that the uses are separate enough and the added value is worth it. ",
            "created_at": "2024-11-13T18:05:27Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474369746",
            "id": 2474369746,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6Te-LS",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 1,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474369746/reactions"
            },
            "updated_at": "2024-11-13T18:05:27Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474369746",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/62958?v=4",
                "events_url": "https://api.github.com/users/telemachus/events{/privacy}",
                "followers_url": "https://api.github.com/users/telemachus/followers",
                "following_url": "https://api.github.com/users/telemachus/following{/other_user}",
                "gists_url": "https://api.github.com/users/telemachus/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/telemachus",
                "id": 62958,
                "login": "telemachus",
                "node_id": "MDQ6VXNlcjYyOTU4",
                "organizations_url": "https://api.github.com/users/telemachus/orgs",
                "received_events_url": "https://api.github.com/users/telemachus/received_events",
                "repos_url": "https://api.github.com/users/telemachus/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/telemachus/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/telemachus/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/telemachus",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > My main concern about this is that it will not play nicely with various [x/]x plugin mappings which implement custom movements.\r\n> \r\n> So good news on this front, there is no conflict with this PR and those mappings. As in these pending operators would not prevent users from defining their own with `[` / `]` for their own purpose. If by conflict you mean not a \"mapping conflict\" but something more semantic - `d]ap` \"delete from the current position to the next paragraph\" is still consistent with `]a` \"move from the current position to the next arglist entry\".\r\n\r\nOk, let's not call it a conflict, but definitely an issue. If this PR gets merged, both `[` and `]` are expected to *always* work as \"move from cursor position to start/end of textobject\". This introduces following situations:\r\n- User needs to review/know *all* directional `[` and `]` in order to not have conflicts with textobjects *they* use (so that they can still use standalone `[` and `]` with *any* textobject they please). As textobjects can start with any letter (although most common are `a`, `i`, `g`). This is an issue of comparing many (textobjects) with many (direction mappings).\r\n    Instead, if not merging this PR, the decision boils down to \"whether I want this type of standalone `[`/`]` mappings which bring *these* possible mappings issues\".\r\n- Same situation as the first one, but for Neovim built-ins. Having `[` and `]` built-in mappings will basically mean that in order to have them work 100% there can not be any new built-in directional `[x`/`]x` mappings with `x` matching how some built-in textobject starts. So there can not be `[a` / `[i` / `[g` built-in mappings (and maybe more if I missed some built-in textobjects or there will be in the future).\r\n    I'd much rather leave the door open for any new directional mappings without any this type of deep dive concerns.\r\n\r\n> If you're still unsure then please suggest an alternative mapping.\r\n\r\nThe `g[` and `g]` might be good alternatives, but they are already present with useful functionality (at least for someone, I'd presume).\r\nMy main solution here is to not make these default mappings and leave a choice of adding them to the user as a standalone plugin.\r\n\r\n> If you'd like say there's a potential conflict then okay, can I see a practical example of what you're describing?\r\n\r\nApart from situations described above, there is no one exact practical example. Mostly an additional instinct that introducing this type of mappings will cause *unexpected* problems and future limitations.",
            "created_at": "2024-11-13T18:05:42Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474370184",
            "id": 2474370184,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6Te-SI",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474370184/reactions"
            },
            "updated_at": "2024-11-13T18:05:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474370184",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> Point taken. I suppose I meant more the cognitive overload of \"Wait, what do ] and [ do in this particular {neo,}vim incantation?\" The more each key is used, the more you have to think about how the key affects this particular use.\r\n\r\nAlright now I understand what you meant. That said I think this is all consistent though. `]b` means \"from the current position (in the buffers list), go to the right buffer\" and `d]as` means \"from the current position, delete to the right of the sentence\". A user is learning 1 concept, `]` = \"right\", and applying it to multiple places. IMO that reinforces a person's understanding of both mappings rather than being a cognitive overload. But again, just my two cents.\r\n\r\n> That said, after reading this thread again from top to bottom, you've convinced me that the uses are separate enough and the added value is worth it.\r\n\r\nI'm really glad to hear you say that! If you have other concerns I'd be happy to help.\r\n\r\n> Ok, let's not call it a conflict, but definitely an issue. If this PR gets merged, both [ and ] are expected to always work as \"move from cursor position to start/end of textobject\". This introduces following situations: ... Apart from situations described above, there is no one exact practical example. Mostly an additional instinct that introducing this type of mappings will cause unexpected problems and future limitations.\r\n\r\n@echasnovski I understand you've got an instinct, gut feeling about this and I want to alleviate those potential concerns. I think the disconnect here is that I haven't done a good enough job so far at measuring, with actual code, the possible impact this PR could have. Partly the reason why I didn't prioritize that is because I've been using this for years (and I use > 30 text object plugins) and none of the potential conflicts that folks have raised here has actually come up in practice. So I assumed that whatever cost / risk of conflicts is small.\r\n\r\nSo how about this suggestion? I'm out of time for today but I'd like to reply back with various, minimal code scenarios (e.g. what happens if someone does map `[x` / `]x`) and let's talk about those findings. Let's get an accurate, empirical idea about cost.",
            "created_at": "2024-11-13T18:58:24Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474480660",
            "id": 2474480660,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TfZQU",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474480660/reactions"
            },
            "updated_at": "2024-11-13T19:08:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474480660",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> So how about this suggestion? I'm out of time for today but I'd like to reply back with various, minimal code scenarios (e.g. what happens if someone does map `[x` / `]x`) and let's talk about those findings. Let's get an accurate, empirical idea about cost.\r\n\r\nThe empirical idea of this being built-in is already too high in my opinion at least for this reason:\r\n\r\n> * Same situation as the first one, but for Neovim built-ins. Having `[` and `]` built-in mappings will basically mean that in order to have them work 100% there can not be any new built-in directional `[x`/`]x` mappings with `x` matching how some built-in textobject starts. So there can not be `[a` / `[i` / `[g` built-in mappings (and maybe more if I missed some built-in textobjects or there will be in the future).\r\n>       I'd much rather leave the door open for any new directional mappings without any this type of deep dive concerns.\r\n\r\nIn other words it is not a very well isolated case of adding two mappings: it affects any future considerations about new built-in textobjects and new built-in direction mappings. This is true for all new built-in mappings but it is especially true for these fundamental one character `[` and `]` ones. These are fairly hard to predict which will pop up in the future.\r\n\r\nThe case for user side is even greater as they are not limited to built-in textobjects and built-in directional mappings.\r\n\r\n------\r\n\r\nHere are some examples form *current* ecosystem:\r\n- ['mini.indentscope' defines `[i` and `]i`](https://github.com/echasnovski/mini.nvim/blob/7b4d5d48b6b5a75009d63f8f3e4ef4819b7e8139/doc/mini-indentscope.txt#L147-L148) movements by default. This means that this PR's `d]ip`/`d]i}`/etc. will (unexpectedly for the common user, I'd say) not work. \r\n- ['LazyVim/LazyVim' defines `[a` and `]a`](https://github.com/LazyVim/LazyVim/blob/0819f9396e94a4188522b6739ade3d6024d2b8a7/lua/lazyvim/plugins/treesitter.lua#L79-L82) as mappings. This means that this PR's `d]ap`/`d]a}` won't work.\r\n- ['chrisgrieser/nvim-various-textobjs'](https://github.com/chrisgrieser/nvim-various-textobjs) has a bunch of one letter textobjects. Most of them are not really useful with this PR's `[`/`]` (as they are in itself \"from cursor to ...\" type of textobjects), but this is an example that there can be a lot of not anticipated textobjects/movements which might become popular/useful that would conflict with this PR's `[` / `]`.",
            "created_at": "2024-11-13T19:24:40Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474529783",
            "id": 2474529783,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TflP3",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474529783/reactions"
            },
            "updated_at": "2024-11-13T19:26:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474529783",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "My main concern is that these mappings don't buy the user much from my point of view, I do understand they are omaps, so stepping on other bindings shouldn't be an issue.\n\nQuestions to OP, that I think would help in selling it: do you think this is as generally as useful as the unimpaired bindings are for about 80% of the userbase? I read through the code and I understand what it's doing, but I generally can't see myself ever using this sort of thing, I would say it's useful but niche. Counterpoint: there are many other text object plug-ins, my favourite being https://github.com/kana/vim-textobj-entire - why include this one and not include them? \n\nTLDR: great job, but not convinced it belongs in core at the moment",
            "created_at": "2024-11-13T20:11:23Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474691560",
            "id": 2474691560,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TgMvo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 3,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 3,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474691560/reactions"
            },
            "updated_at": "2024-11-13T20:11:23Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474691560",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> So there can not be [a / [i / [g built-in mappings (and maybe more if I missed some built-in textobjects or there will be in the future).\r\n\r\nI think it's actually the opposite. A quick test showed `d[aap` calls `[a`, not `[`, when both mappings are present. Also your example of indentscope do not conflict as `[i` / `]i` are normal mode mappings. I would need more time to show concrete code examples.\r\n\r\n> do you think this is as generally as useful as the unimpaired bindings are for about 80% of the userbase? ... I generally can't see myself ever using this sort of thing\r\n\r\nThe short answer is yes. Because these pending operators are augmenting existing mappings, they can be used in any case where a user is using text-objects. The problem that is PR solves is discoverability. People don't think to try something so they do not think to try it.\r\n\r\nEver needed to uncomment the top of a block of some commented text? `gc[ip`. Or sort parts of a dict/list because you have inline comments that you don't want to mess up? `gs]ii`. Copy just part of some text? `y]ap`. Or delete the lower part of a function? Well could be `d]ii` / `d]if` depending on your setup.\r\n\r\nI'll speak personally for a moment. I never use the built-in `:help gs`. But I do sort stuff sometimes. In the past I had to sort by doing `vip` + `:sort`. Now it's just `gsip`. Before adding that text operator I rarely ever sorted, now...I do sort stuff all the time! I believe you when you say you're not sure how often you'd use this but I think that you might surprise yourself. People don't miss what they've never had. Maybe over the next couple days you'll comment back saying \"ever since I saw this PR I'm seeing situations where it could applied everywhere\".\r\n\r\n> Counterpoint: there are many other text object plug-ins, my favourite being https://github.com/kana/vim-textobj-entire - why include this one and not include them?\r\n\r\nEveryone has a favorite text object that they use all the time but not everyone will agree with which is best / most useful. And that's why not every text object will make it into Neovim's core.\r\n\r\nBut everyone **does** have a favorite text object or text operator.\r\n\r\nThe reason why you may want to merge this PR is because these pending operators work with your favorite. And your 2nd favorite. And your 3rd favorite. And 4th. All the down to your least favorite, niche text object. And remember, your 4th favorite might be someone else's favorite. These pending operators helps you, it helps them, it helps everyone. That's why you should consider merging this PR.",
            "created_at": "2024-11-13T21:02:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474779443",
            "id": 2474779443,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TgiMz",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474779443/reactions"
            },
            "updated_at": "2024-11-13T21:04:17Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474779443",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> > So there can not be [a / [i / [g built-in mappings (and maybe more if I missed some built-in textobjects or there will be in the future).\r\n> \r\n> I think it's actually the opposite. A quick test showed `d[aap` calls `[a`, not `[`, when both mappings are present.\r\n\r\nYes, and that is the point: with `[a` present, using `d[ap`/`d[a}` is now impossible. Which makes it a conflict with `[` from this PR's mappings.\r\n\r\n> Also your example of indentscope do not conflict as `[i` / `]i` are normal mode mappings.\r\n\r\nThey are [Normal](https://github.com/echasnovski/mini.nvim/blob/7b4d5d48b6b5a75009d63f8f3e4ef4819b7e8139/lua/mini/indentscope.lua#L644-L645), [Visual](https://github.com/echasnovski/mini.nvim/blob/7b4d5d48b6b5a75009d63f8f3e4ef4819b7e8139/lua/mini/indentscope.lua#L647-L648), and [Operator-pending](https://github.com/echasnovski/mini.nvim/blob/7b4d5d48b6b5a75009d63f8f3e4ef4819b7e8139/lua/mini/indentscope.lua#L655-L656) mappings. As any motion within current buffer ideally should be.",
            "created_at": "2024-11-13T21:12:49Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2474796092",
            "id": 2474796092,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TgmQ8",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474796092/reactions"
            },
            "updated_at": "2024-11-13T21:12:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2474796092",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/24854248?v=4",
                "events_url": "https://api.github.com/users/echasnovski/events{/privacy}",
                "followers_url": "https://api.github.com/users/echasnovski/followers",
                "following_url": "https://api.github.com/users/echasnovski/following{/other_user}",
                "gists_url": "https://api.github.com/users/echasnovski/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/echasnovski",
                "id": 24854248,
                "login": "echasnovski",
                "node_id": "MDQ6VXNlcjI0ODU0MjQ4",
                "organizations_url": "https://api.github.com/users/echasnovski/orgs",
                "received_events_url": "https://api.github.com/users/echasnovski/received_events",
                "repos_url": "https://api.github.com/users/echasnovski/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/echasnovski/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/echasnovski/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/echasnovski",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> People don't think to try something so they do not think to try it.\r\n\r\nI don't think \"if we add it, people will use it\" is a good measure of what should be included in core. I can't find any objective metric that shows users are using this plugin _en masse_, like vim-unimpaired levels of usage, which to me indicates it's not solving a problem many people have. Sure, it's nice, and I will try it out for sure, but as others have mentioned the cost may be too high. And if this becomes default, why not [vim-targets](https://github.com/wellle/targets.vim) style next/last targets as well? ",
            "created_at": "2024-11-14T01:07:26Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2475140584",
            "id": 2475140584,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6Th6Xo",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2475140584/reactions"
            },
            "updated_at": "2024-11-14T01:07:26Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2475140584",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/7416158?v=4",
                "events_url": "https://api.github.com/users/craigmac/events{/privacy}",
                "followers_url": "https://api.github.com/users/craigmac/followers",
                "following_url": "https://api.github.com/users/craigmac/following{/other_user}",
                "gists_url": "https://api.github.com/users/craigmac/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/craigmac",
                "id": 7416158,
                "login": "craigmac",
                "node_id": "MDQ6VXNlcjc0MTYxNTg=",
                "organizations_url": "https://api.github.com/users/craigmac/orgs",
                "received_events_url": "https://api.github.com/users/craigmac/received_events",
                "repos_url": "https://api.github.com/users/craigmac/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/craigmac/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/craigmac/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/craigmac",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "Not clear that there's strong demand for this feature, so I agree it's premature to put this in core. Especially if it works as a plugin without changes to core.\r\n\r\nIf any changes are needed in core to make the plugin work better, let's focus on those specific changes first.",
            "created_at": "2024-11-15T02:12:45Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2477813787",
            "id": 2477813787,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6TsHAb",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2477813787/reactions"
            },
            "updated_at": "2024-11-15T02:12:45Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2477813787",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk",
                "user_view_type": "public"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "> I don't think \"if we add it, people will use it\" is a good measure of what should be included in core. \r\n\r\nYou made a personal assertion and I responded in kind with a personal assertion, that response is not part of the arguments in favor of this PR, it was a reply to you.\r\n\r\nAnyway, though I find it regrettable that this PR didn't merge, I took a few minutes to make a test - https://gist.github.com/ColinKennedy/7e632f88570be89762b0ca8372769b72. There are 15 tests of various mapping combinations. In no instance did `[` or `]` shadow any another mapping. As far as I can tell that's evidence that this PR never prevented anyone from setting their own mappings.",
            "created_at": "2024-11-22T04:31:20Z",
            "html_url": "https://github.com/neovim/neovim/pull/31158#issuecomment-2492854307",
            "id": 2492854307,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
            "node_id": "IC_kwDOAPphoM6UlfAj",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2492854307/reactions"
            },
            "updated_at": "2024-11-22T04:31:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2492854307",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31158/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31158/commits",
    "created_at": "2024-11-10T22:58:28Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31158.diff",
    "draft": false,
    "head": {
        "label": "ColinKennedy:issues/30729-add_directional_operators",
        "ref": "issues/30729-add_directional_operators",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/ColinKennedy/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/ColinKennedy/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/ColinKennedy/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/ColinKennedy/neovim/branches{/branch}",
            "clone_url": "https://github.com/ColinKennedy/neovim.git",
            "collaborators_url": "https://api.github.com/repos/ColinKennedy/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/ColinKennedy/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/ColinKennedy/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/ColinKennedy/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/ColinKennedy/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/ColinKennedy/neovim/contributors",
            "created_at": "2024-10-11T04:09:25Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/ColinKennedy/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/ColinKennedy/neovim/downloads",
            "events_url": "https://api.github.com/repos/ColinKennedy/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/ColinKennedy/neovim/forks",
            "full_name": "ColinKennedy/neovim",
            "git_commits_url": "https://api.github.com/repos/ColinKennedy/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/ColinKennedy/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/ColinKennedy/neovim/git/tags{/sha}",
            "git_url": "git://github.com/ColinKennedy/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/ColinKennedy/neovim/hooks",
            "html_url": "https://github.com/ColinKennedy/neovim",
            "id": 870996295,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/ColinKennedy/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/ColinKennedy/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/ColinKennedy/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/ColinKennedy/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/ColinKennedy/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/ColinKennedy/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/ColinKennedy/neovim/merges",
            "milestones_url": "https://api.github.com/repos/ColinKennedy/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOM-pZRw",
            "notifications_url": "https://api.github.com/repos/ColinKennedy/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
                "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
                "followers_url": "https://api.github.com/users/ColinKennedy/followers",
                "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
                "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/ColinKennedy",
                "id": 10103049,
                "login": "ColinKennedy",
                "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
                "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
                "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
                "repos_url": "https://api.github.com/users/ColinKennedy/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/ColinKennedy",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/ColinKennedy/neovim/pulls{/number}",
            "pushed_at": "2024-11-10T23:27:21Z",
            "releases_url": "https://api.github.com/repos/ColinKennedy/neovim/releases{/id}",
            "size": 285879,
            "ssh_url": "git@github.com:ColinKennedy/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/ColinKennedy/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/ColinKennedy/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/ColinKennedy/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/ColinKennedy/neovim/subscription",
            "svn_url": "https://github.com/ColinKennedy/neovim",
            "tags_url": "https://api.github.com/repos/ColinKennedy/neovim/tags",
            "teams_url": "https://api.github.com/repos/ColinKennedy/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/ColinKennedy/neovim/git/trees{/sha}",
            "updated_at": "2024-10-11T04:09:25Z",
            "url": "https://api.github.com/repos/ColinKennedy/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "2bca3155826c59825c2696499d6a608fad1ded90",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
            "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
            "followers_url": "https://api.github.com/users/ColinKennedy/followers",
            "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
            "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/ColinKennedy",
            "id": 10103049,
            "login": "ColinKennedy",
            "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
            "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
            "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
            "repos_url": "https://api.github.com/users/ColinKennedy/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/ColinKennedy",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31158",
    "id": 2171665842,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31158",
    "labels": [
        {
            "color": "c5def5",
            "default": false,
            "description": "issues or PRs involving changing the defaults",
            "id": 103777064,
            "name": "defaults",
            "node_id": "MDU6TGFiZWwxMDM3NzcwNjQ=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/defaults"
        }
    ],
    "locked": false,
    "merge_commit_sha": "41e48288a41ececaef13967d91daf213e06e75e3",
    "merged_at": null,
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6BcP2y",
    "number": 31158,
    "patch_url": "https://github.com/neovim/neovim/pull/31158.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31158/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/2bca3155826c59825c2696499d6a608fad1ded90",
    "title": "feat(defaults): add new `[` and `]` pending operators",
    "updated_at": "2024-11-22T04:31:22Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31158",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/10103049?v=4",
        "events_url": "https://api.github.com/users/ColinKennedy/events{/privacy}",
        "followers_url": "https://api.github.com/users/ColinKennedy/followers",
        "following_url": "https://api.github.com/users/ColinKennedy/following{/other_user}",
        "gists_url": "https://api.github.com/users/ColinKennedy/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/ColinKennedy",
        "id": 10103049,
        "login": "ColinKennedy",
        "node_id": "MDQ6VXNlcjEwMTAzMDQ5",
        "organizations_url": "https://api.github.com/users/ColinKennedy/orgs",
        "received_events_url": "https://api.github.com/users/ColinKennedy/received_events",
        "repos_url": "https://api.github.com/users/ColinKennedy/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/ColinKennedy/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ColinKennedy/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/ColinKennedy",
        "user_view_type": "public"
    }
}