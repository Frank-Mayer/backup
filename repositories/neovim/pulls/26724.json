{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26724/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26724/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/26724"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/26724"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26724/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/26724"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ebcc95ef3dca8d5cf749641d2ebca142277bf129"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "MEMBER",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5096,
            "forks_count": 5096,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1716,
            "open_issues_count": 1716,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-01-02T01:20:52Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248449,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 72293,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-01-02T00:18:48Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 72293,
            "watchers_count": 72293,
            "web_commit_signoff_required": false
        },
        "sha": "0b66ab42c76c41494a9d7fc715d310f1a1da929d",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Note: this PR consists of several commits, which were made in order to make diff atomic and PR easier to read/review, orthogonal to the upstream LSP model changes.\r\n\r\nFollow-up after #23750.\r\nFixes #26617.\r\n\r\n\r\n### Style improvements:\r\n\r\n1. Anonymous classes derived from `StructureLiteralType` should have a\r\n   better name. The class name can be also nested. Examples:\r\n\r\n```diff\r\n----@field serverInfo? anonym1\r\n+---@field serverInfo? lsp._anonym1.serverInfo\r\n```\r\n```diff\r\n----@field insertTextModeSupport? anonym26\r\n+---@field insertTextModeSupport? lsp._anonym26.completionItem.insertTextModeSupport\r\n```\r\n\r\n2. Add one separate empty line before each `@field` definition. Without\r\n   these, empty lines the doc can look confusing because descriptions\r\n   also may contain empty lines. See `lsp.CompletionItem` for example:\r\n\r\n```lua\r\n---The kind of this completion item. Based of the kind\r\n---an icon is chosen by the editor.\r\n---@field kind? lsp.CompletionItemKind\r\n---Tags for this completion item.\r\n---\r\n---@since 3.15.0\r\n---@field tags? lsp.CompletionItemTag[]\r\n```\r\n\r\n   It might feel like \"Tags for this completion item\" belongs to `kind`,\r\n   not `tags` due to the lack of separator blank lines. The following\r\n   (after this commit) should look much better:\r\n\r\n```diff\r\n ---The kind of this completion item. Based of the kind\r\n ---an icon is chosen by the editor.\r\n ---@field kind? lsp.CompletionItemKind\r\n+---\r\n ---Tags for this completion item.\r\n ---\r\n ---@since 3.15.0\r\n ---@field tags? lsp.CompletionItemTag[]\r\n```\r\n\r\n3. Escape some LSP-specific annotations that can't be recognized by\r\n   lua-ls. It'd be better to make them visible in LSP hover doc windows.\r\n\r\n   Example: `@sample ...`.\r\n\r\n### Fixes:\r\n\r\n1. A type may extend from more than one base types (as well as mixin\r\n   types). Previously only the first base class was being considered,\r\n   resulting incomplete base classes for `@class` definitions.\r\n\r\n   Example: `InlayHintOptions` (should have both of `resolveProvider`\r\n   and `workDoneProgress`, the latter is from `WorkDoneProgressOptions`)\r\n\r\n```diff\r\n----@class lsp.InlayHintOptions\r\n+---@class lsp.InlayHintOptions: lsp.WorkDoneProgressOptions\r\n```\r\n\r\n2. Remove `<200b>` (zero-width space) unicode characters.\r\n\r\n3. Add the missing newline at EOF.\r\n\r\n",
    "closed_at": "2023-12-27T09:48:06Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26724#discussion_r1436821011"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26724"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436821011"
                }
            },
            "author_association": "MEMBER",
            "body": "Would it cause unintended conflicts without the `_anonym`+number part?\r\n\r\nI see there's:\r\n\r\n```\r\n@class lsp._anonym50.TextDocumentFilter\r\n@class lsp._anonym49.TextDocumentFilter\r\n```\r\n\r\nI suspect if we've functions that deal with these properties it might be more useful if they were actually the same type - given that they are the same thing.",
            "commit_id": "ebcc95ef3dca8d5cf749641d2ebca142277bf129",
            "created_at": "2023-12-27T07:53:38Z",
            "diff_hunk": "@@ -154,95 +193,177 @@ function M.gen(opt)\n     'decimal',\n   }\n \n-  local function parse_type(type)\n+  ---@param documentation string\n+  local _process_documentation = function(documentation)\n+    documentation = documentation:gsub('\\n', '\\n---')\n+    -- Remove <200b> (zero-width space) unicode characters: e.g., `**/<200b>*`\n+    documentation = documentation:gsub('\\226\\128\\139', '')\n+    -- Escape annotations that are not recognized by lua-ls\n+    documentation = documentation:gsub('%^---@sample', '---\\\\@sample')\n+    return '---' .. documentation\n+  end\n+\n+  --- @class vim._gen_lsp.Type\n+  --- @field kind string a common field for all Types.\n+  --- @field name? string for ReferenceType, BaseType\n+  --- @field element? any for ArrayType\n+  --- @field items? vim._gen_lsp.Type[] for OrType, AndType\n+  --- @field key? vim._gen_lsp.Type for MapType\n+  --- @field value? string|vim._gen_lsp.Type for StringLiteralType, MapType, StructureLiteralType\n+\n+  ---@param type vim._gen_lsp.Type\n+  ---@param prefix? string Optional prefix associated with the this type, made of (nested) field name.\n+  ---             Used to generate class name for structure literal types.\n+  ---@return string\n+  local function parse_type(type, prefix)\n+    -- ReferenceType | BaseType\n     if type.kind == 'reference' or type.kind == 'base' then\n       if vim.tbl_contains(simple_types, type.name) then\n         return type.name\n       end\n       return 'lsp.' .. type.name\n+\n+    -- ArrayType\n     elseif type.kind == 'array' then\n-      return parse_type(type.element) .. '[]'\n+      return parse_type(type.element, prefix) .. '[]'\n+\n+    -- OrType\n     elseif type.kind == 'or' then\n       local val = ''\n       for _, item in ipairs(type.items) do\n-        val = val .. parse_type(item) .. '|'\n+        val = val .. parse_type(item, prefix) .. '|' --[[ @as string ]]\n       end\n       val = val:sub(0, -2)\n       return val\n+\n+    -- StringLiteralType\n     elseif type.kind == 'stringLiteral' then\n       return '\"' .. type.value .. '\"'\n+\n+    -- MapType\n     elseif type.kind == 'map' then\n-      return 'table<' .. parse_type(type.key) .. ', ' .. parse_type(type.value) .. '>'\n+      local key = assert(type.key)\n+      local value = type.value --[[ @as vim._gen_lsp.Type ]]\n+      return 'table<' .. parse_type(key, prefix) .. ', ' .. parse_type(value, prefix) .. '>'\n+\n+    -- StructureLiteralType\n     elseif type.kind == 'literal' then\n       -- can I use ---@param disabled? {reason: string}\n       -- use | to continue the inline class to be able to add docs\n       -- https://github.com/LuaLS/lua-language-server/issues/2128\n       anonymous_num = anonymous_num + 1\n-      local anonym = { '---@class anonym' .. anonymous_num }\n-      for _, field in ipairs(type.value.properties) do\n+      local anonymous_classname = 'lsp._anonym' .. anonymous_num",
            "html_url": "https://github.com/neovim/neovim/pull/26724#discussion_r1436821011",
            "id": 1436821011,
            "line": 255,
            "node_id": "PRRC_kwDOAPphoM5VpCYT",
            "original_commit_id": "ebcc95ef3dca8d5cf749641d2ebca142277bf129",
            "original_line": 255,
            "original_position": 175,
            "original_start_line": null,
            "path": "scripts/gen_lsp.lua",
            "position": 175,
            "pull_request_review_id": 1796864268,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26724",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436821011/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T07:56:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436821011",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/38700?v=4",
                "events_url": "https://api.github.com/users/mfussenegger/events{/privacy}",
                "followers_url": "https://api.github.com/users/mfussenegger/followers",
                "following_url": "https://api.github.com/users/mfussenegger/following{/other_user}",
                "gists_url": "https://api.github.com/users/mfussenegger/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/mfussenegger",
                "id": 38700,
                "login": "mfussenegger",
                "node_id": "MDQ6VXNlcjM4NzAw",
                "organizations_url": "https://api.github.com/users/mfussenegger/orgs",
                "received_events_url": "https://api.github.com/users/mfussenegger/received_events",
                "repos_url": "https://api.github.com/users/mfussenegger/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/mfussenegger/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/mfussenegger/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/mfussenegger"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/26724#discussion_r1436880405"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/26724"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436880405"
                }
            },
            "author_association": "MEMBER",
            "body": "That's a great point, which I also noticed; I was planning to have another improvement that follows this, possibly as a separate PR (since it's going to be a complicated one).\r\n\r\nEventually, we should remove the \"anonym\" thing entirely; in this particular case the class can be named as something like `lsp.TextDocumentFilter`.\r\n\r\nIn most of such cases where several structured literal types (with the same filed name) are involved, they only differ in whether a field is optional or not. For example:\r\n\r\n```diff\r\n ---@class lsp._anonym49.TextDocumentFilter\r\n+---@field language string\r\n ---@field scheme? string\r\n ---@field pattern? string\r\n\r\n ---@class lsp._anonym50.TextDocumentFilter\r\n ---@field language? string\r\n+---@field scheme string\r\n ---@field pattern? string\r\n\r\n ---@class lsp._anonym51.TextDocumentFilter\r\n ---@field language? string\r\n ---@field scheme? string\r\n+---@field pattern string\r\n```\r\n\r\nThe semantic here is either `language`, `scheme`, or `pattern` is given (but at least only one). These could be consolidated into one class:\r\n\r\n```\r\n---@class lsp.TextDocumentFilter\r\n---@field language? string\r\n---@field scheme? string\r\n---@field pattern? string\r\n```\r\n\r\nsince the \"exclusive-or\" or \"at-least-one\" semantic here is not very important for us. In principle we can do some sort of type unification and merge types if applicable.",
            "commit_id": "ebcc95ef3dca8d5cf749641d2ebca142277bf129",
            "created_at": "2023-12-27T09:32:33Z",
            "diff_hunk": "@@ -154,95 +193,177 @@ function M.gen(opt)\n     'decimal',\n   }\n \n-  local function parse_type(type)\n+  ---@param documentation string\n+  local _process_documentation = function(documentation)\n+    documentation = documentation:gsub('\\n', '\\n---')\n+    -- Remove <200b> (zero-width space) unicode characters: e.g., `**/<200b>*`\n+    documentation = documentation:gsub('\\226\\128\\139', '')\n+    -- Escape annotations that are not recognized by lua-ls\n+    documentation = documentation:gsub('%^---@sample', '---\\\\@sample')\n+    return '---' .. documentation\n+  end\n+\n+  --- @class vim._gen_lsp.Type\n+  --- @field kind string a common field for all Types.\n+  --- @field name? string for ReferenceType, BaseType\n+  --- @field element? any for ArrayType\n+  --- @field items? vim._gen_lsp.Type[] for OrType, AndType\n+  --- @field key? vim._gen_lsp.Type for MapType\n+  --- @field value? string|vim._gen_lsp.Type for StringLiteralType, MapType, StructureLiteralType\n+\n+  ---@param type vim._gen_lsp.Type\n+  ---@param prefix? string Optional prefix associated with the this type, made of (nested) field name.\n+  ---             Used to generate class name for structure literal types.\n+  ---@return string\n+  local function parse_type(type, prefix)\n+    -- ReferenceType | BaseType\n     if type.kind == 'reference' or type.kind == 'base' then\n       if vim.tbl_contains(simple_types, type.name) then\n         return type.name\n       end\n       return 'lsp.' .. type.name\n+\n+    -- ArrayType\n     elseif type.kind == 'array' then\n-      return parse_type(type.element) .. '[]'\n+      return parse_type(type.element, prefix) .. '[]'\n+\n+    -- OrType\n     elseif type.kind == 'or' then\n       local val = ''\n       for _, item in ipairs(type.items) do\n-        val = val .. parse_type(item) .. '|'\n+        val = val .. parse_type(item, prefix) .. '|' --[[ @as string ]]\n       end\n       val = val:sub(0, -2)\n       return val\n+\n+    -- StringLiteralType\n     elseif type.kind == 'stringLiteral' then\n       return '\"' .. type.value .. '\"'\n+\n+    -- MapType\n     elseif type.kind == 'map' then\n-      return 'table<' .. parse_type(type.key) .. ', ' .. parse_type(type.value) .. '>'\n+      local key = assert(type.key)\n+      local value = type.value --[[ @as vim._gen_lsp.Type ]]\n+      return 'table<' .. parse_type(key, prefix) .. ', ' .. parse_type(value, prefix) .. '>'\n+\n+    -- StructureLiteralType\n     elseif type.kind == 'literal' then\n       -- can I use ---@param disabled? {reason: string}\n       -- use | to continue the inline class to be able to add docs\n       -- https://github.com/LuaLS/lua-language-server/issues/2128\n       anonymous_num = anonymous_num + 1\n-      local anonym = { '---@class anonym' .. anonymous_num }\n-      for _, field in ipairs(type.value.properties) do\n+      local anonymous_classname = 'lsp._anonym' .. anonymous_num",
            "html_url": "https://github.com/neovim/neovim/pull/26724#discussion_r1436880405",
            "id": 1436880405,
            "in_reply_to_id": 1436821011,
            "line": 255,
            "node_id": "PRRC_kwDOAPphoM5VpQ4V",
            "original_commit_id": "ebcc95ef3dca8d5cf749641d2ebca142277bf129",
            "original_line": 255,
            "original_position": 175,
            "original_start_line": null,
            "path": "scripts/gen_lsp.lua",
            "position": 175,
            "pull_request_review_id": 1796953286,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/26724",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436880405/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-12-27T09:38:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1436880405",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            }
        }
    ],
    "comment_regular_data": [],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/26724/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/26724/commits",
    "created_at": "2023-12-23T18:16:33Z",
    "diff_url": "https://github.com/neovim/neovim/pull/26724.diff",
    "draft": false,
    "head": {
        "label": "wookayin:improve-gen-lsp",
        "ref": "improve-gen-lsp",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/wookayin/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/wookayin/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/wookayin/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/wookayin/neovim/branches{/branch}",
            "clone_url": "https://github.com/wookayin/neovim.git",
            "collaborators_url": "https://api.github.com/repos/wookayin/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/wookayin/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/wookayin/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/wookayin/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/wookayin/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/wookayin/neovim/contributors",
            "created_at": "2022-10-30T19:40:29Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/wookayin/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/wookayin/neovim/downloads",
            "events_url": "https://api.github.com/repos/wookayin/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/wookayin/neovim/forks",
            "full_name": "wookayin/neovim",
            "git_commits_url": "https://api.github.com/repos/wookayin/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/wookayin/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/wookayin/neovim/git/tags{/sha}",
            "git_url": "git://github.com/wookayin/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/wookayin/neovim/hooks",
            "html_url": "https://github.com/wookayin/neovim",
            "id": 559659867,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/wookayin/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/wookayin/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/wookayin/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/wookayin/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/wookayin/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/wookayin/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/wookayin/neovim/merges",
            "milestones_url": "https://api.github.com/repos/wookayin/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOIVu7Ww",
            "notifications_url": "https://api.github.com/repos/wookayin/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
                "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
                "followers_url": "https://api.github.com/users/wookayin/followers",
                "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
                "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/wookayin",
                "id": 1009873,
                "login": "wookayin",
                "node_id": "MDQ6VXNlcjEwMDk4NzM=",
                "organizations_url": "https://api.github.com/users/wookayin/orgs",
                "received_events_url": "https://api.github.com/users/wookayin/received_events",
                "repos_url": "https://api.github.com/users/wookayin/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/wookayin"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/wookayin/neovim/pulls{/number}",
            "pushed_at": "2024-01-01T15:26:33Z",
            "releases_url": "https://api.github.com/repos/wookayin/neovim/releases{/id}",
            "size": 244820,
            "ssh_url": "git@github.com:wookayin/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/wookayin/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/wookayin/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/wookayin/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/wookayin/neovim/subscription",
            "svn_url": "https://github.com/wookayin/neovim",
            "tags_url": "https://api.github.com/repos/wookayin/neovim/tags",
            "teams_url": "https://api.github.com/repos/wookayin/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/wookayin/neovim/git/trees{/sha}",
            "updated_at": "2022-10-30T19:25:41Z",
            "url": "https://api.github.com/repos/wookayin/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ebcc95ef3dca8d5cf749641d2ebca142277bf129",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
            "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
            "followers_url": "https://api.github.com/users/wookayin/followers",
            "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
            "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/wookayin",
            "id": 1009873,
            "login": "wookayin",
            "node_id": "MDQ6VXNlcjEwMDk4NzM=",
            "organizations_url": "https://api.github.com/users/wookayin/orgs",
            "received_events_url": "https://api.github.com/users/wookayin/received_events",
            "repos_url": "https://api.github.com/users/wookayin/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/wookayin"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/26724",
    "id": 1655926566,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/26724",
    "labels": [
        {
            "color": "c5def5",
            "default": true,
            "description": "",
            "id": 84744038,
            "name": "documentation",
            "node_id": "MDU6TGFiZWw4NDc0NDAzOA==",
            "url": "https://api.github.com/repos/neovim/neovim/labels/documentation"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 573222693,
            "name": "lua",
            "node_id": "MDU6TGFiZWw1NzMyMjI2OTM=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lua"
        },
        {
            "color": "c5def5",
            "default": false,
            "description": null,
            "id": 662566370,
            "name": "lsp",
            "node_id": "MDU6TGFiZWw2NjI1NjYzNzA=",
            "url": "https://api.github.com/repos/neovim/neovim/labels/lsp"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6c35fb421e888d0cbdfac07a5ff4579c9be7f0ec",
    "merged_at": "2023-12-27T09:48:06Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5is28m",
    "number": 26724,
    "patch_url": "https://github.com/neovim/neovim/pull/26724.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/26724/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ebcc95ef3dca8d5cf749641d2ebca142277bf129",
    "title": "fix(gen_lsp.lua): improve type name, and fix wrong type inheritance",
    "updated_at": "2023-12-27T10:07:46Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/26724",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/1009873?v=4",
        "events_url": "https://api.github.com/users/wookayin/events{/privacy}",
        "followers_url": "https://api.github.com/users/wookayin/followers",
        "following_url": "https://api.github.com/users/wookayin/following{/other_user}",
        "gists_url": "https://api.github.com/users/wookayin/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/wookayin",
        "id": 1009873,
        "login": "wookayin",
        "node_id": "MDQ6VXNlcjEwMDk4NzM=",
        "organizations_url": "https://api.github.com/users/wookayin/orgs",
        "received_events_url": "https://api.github.com/users/wookayin/received_events",
        "repos_url": "https://api.github.com/users/wookayin/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/wookayin/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wookayin/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/wookayin"
    }
}