{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31585/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31585/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/31585"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/31585"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31585/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/1eaf4637f49092a38d026ddc84840686a427b954"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 5750,
            "forks_count": 5750,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1841,
            "open_issues_count": 1841,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2024-12-17T01:03:26Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 298939,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 84221,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2024-12-17T02:03:44Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 84221,
            "watchers_count": 84221,
            "web_commit_signoff_required": false
        },
        "sha": "798f9284793ad9693c68352f5d07dafb73fd281e",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim",
            "user_view_type": "public"
        }
    },
    "body": "Problem: #31557 introduced a bug where calling `vim.diagnostic.setqflist` with `{ open = true }` attempts to open the location list instead of the diagnostics quickfix list if it didn't exist before. This is because we were using `qf_id` to decide if we should open the location list or the quickfix list ([ref](https://github.com/delatorrejuanchi/neovim/blob/6c2c77b128e74c69be0d4fd79637c742f7eaba34/runtime/lua/vim/diagnostic.lua#L873-L884)), but `qf_id` is `nil` when there is no existing diagnostics quickfix list with a given title (`'Diagnostics'` by default).\r\n\r\nSolution: revert to using `loclist` to decide whether to open the location list or the quickfix list.\r\n\r\nThis PR also adds some tests to assert the existing functionality of `vim.diagnostic.setqflist`.",
    "closed_at": "2024-12-16T14:38:57Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886153152"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886153152"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I think this is the wrong fix? The next line of code uses `qf_id` to figure out the index of the diagnostics quickfix list, and I don't know what passing `id = nil` would do (probably select the current quickfix list, which isn't necessarily the right thing).\r\n\r\nInstead, we should compute `qf_id` right after creating a new quickfix. That is, above right after `setqflist`, we should have something like:\r\n\r\n```lua\r\n    -- Get the id of the newly created quickfix list.\r\n    if qf_id == nil then\r\n      qf_id = vim.fn.getqflist({ id = 0 }).id\r\n    end\r\n```\r\n\r\nThat will ensure that `qf_id` is always set if we're dealing with the quickfix list.\r\n\r\nIf you wanted to add a test for this, I think you'd do something like:\r\n\r\n1. Create a non-diagnostics quickfix list, open it.\r\n2. Call `vim.diagnostic.setqflist({ open = true })`\r\n3. Assert that the currently opened/selected quickfix list is the qf list from step 2.\r\n\r\nI believe that with the code you have here, it would still have the qf list from step 1 open.",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T04:28:07Z",
            "diff_hunk": "@@ -871,7 +871,7 @@ local function set_list(loclist, opts)\n   end\n \n   if open then\n-    if qf_id then\n+    if not loclist then",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886153152",
            "id": 1886153152,
            "line": 874,
            "node_id": "PRRC_kwDOAPphoM5wbGnA",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 874,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 5,
            "pull_request_review_id": 2505124494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886153152/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T04:45:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886153152",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886154463"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886154463"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "nit (feel free to ignore): it might be nice to be explicit here and specify the title, rather than relying upon the default value (which happens to be \"Diagnostics\")",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T04:30:23Z",
            "diff_hunk": "@@ -3212,6 +3213,67 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })\n+\n+        vim.diagnostic.setqflist()",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886154463",
            "id": 1886154463,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5wbG7f",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 3228,
            "original_position": 24,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 2505124494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886154463/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T04:45:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886154463",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886157552"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886157552"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "nit (feel free to ignore): I'd explicitly set `open = true` here. I would also be explicit about the title.",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T04:36:05Z",
            "diff_hunk": "@@ -3212,6 +3213,67 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })\n+\n+        vim.diagnostic.setqflist()\n+        local qf_id = vim.fn.getqflist({ id = 0, nr = '$' }).id\n+\n+        return { diagnostics_qf_id, qf_id }\n+      end)\n+\n+      eq(result[1], result[2])\n+    end)\n+\n+    it('navigates to existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Other' })\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })\n+\n+        vim.diagnostic.setqflist()",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886157552",
            "id": 1886157552,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5wbHrw",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 3250,
            "original_position": 46,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 2505124494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 2,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 2,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886157552/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T04:45:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886157552",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886158190"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886158190"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "nit: I don't understand how this affects the test. We're not looking at the actual contents of the qf list. Consider removing? (same comment for the other tests you added).",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T04:37:14Z",
            "diff_hunk": "@@ -3212,6 +3213,67 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886158190",
            "id": 1886158190,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5wbH1u",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 3226,
            "original_position": 22,
            "original_start_line": 3224,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 2505124494,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886158190/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-12-16T04:45:08Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886158190",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/277474?v=4",
                "events_url": "https://api.github.com/users/jfly/events{/privacy}",
                "followers_url": "https://api.github.com/users/jfly/followers",
                "following_url": "https://api.github.com/users/jfly/following{/other_user}",
                "gists_url": "https://api.github.com/users/jfly/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/jfly",
                "id": 277474,
                "login": "jfly",
                "node_id": "MDQ6VXNlcjI3NzQ3NA==",
                "organizations_url": "https://api.github.com/users/jfly/orgs",
                "received_events_url": "https://api.github.com/users/jfly/received_events",
                "repos_url": "https://api.github.com/users/jfly/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/jfly/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jfly/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/jfly",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886742760"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886742760"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Good catch! It doesn't really affect the test.\r\n\r\nThis only matters for the `opens quickfix window when open=true` test, as a window will not be assigned unless there is at least one diagnostic.\r\n\r\nAddressed in a9fde686434a",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T12:33:28Z",
            "diff_hunk": "@@ -3212,6 +3213,67 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886742760",
            "id": 1886742760,
            "in_reply_to_id": 1886158190,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5wdWjo",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 3226,
            "original_position": 22,
            "original_start_line": 3224,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 2506065200,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886742760/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2024-12-16T12:33:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886742760",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886742920"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886742920"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed in a9fde686434a",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T12:33:36Z",
            "diff_hunk": "@@ -3212,6 +3213,67 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })\n+\n+        vim.diagnostic.setqflist()",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886742920",
            "id": 1886742920,
            "in_reply_to_id": 1886154463,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5wdWmI",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 3228,
            "original_position": 24,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 2506065460,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886742920/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T12:33:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886742920",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886743237"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886743237"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Addressed in a9fde686434a",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T12:33:50Z",
            "diff_hunk": "@@ -3212,6 +3213,67 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })\n+\n+        vim.diagnostic.setqflist()\n+        local qf_id = vim.fn.getqflist({ id = 0, nr = '$' }).id\n+\n+        return { diagnostics_qf_id, qf_id }\n+      end)\n+\n+      eq(result[1], result[2])\n+    end)\n+\n+    it('navigates to existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Other' })\n+\n+        vim.diagnostic.set(_G.diagnostic_ns, _G.diagnostic_bufnr, {\n+          _G.make_error('Error', 1, 1, 1, 1),\n+        })\n+\n+        vim.diagnostic.setqflist()",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886743237",
            "id": 1886743237,
            "in_reply_to_id": 1886157552,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5wdWrF",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 3250,
            "original_position": 46,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": null,
            "pull_request_review_id": 2506065955,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886743237/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T12:33:50Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886743237",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886800033"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886800033"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Unless I'm missing something, I believe this is fine. Let me explain my reasoning here:\r\n\r\n- if `qf_id` is `nil`, then that means we've not found an existing diagnostics quickfix\r\n- for that reason, the call to `vim.fn.setqflist` would have created a new quickfix list and made it active\r\n- `vim.fn.getqflist({ id = qf_id, nr = 0 }).nr` will return the `nr` of the current quickfix list, which is the one we just created\r\n\r\n--------\r\n\r\n- if `qf_id` is not `nil`, then that means we've found an existing diagnostics quickfix\r\n- the call to `vim.fn.setqflist` with `'u'` would have updated it, instead of creating a new one\r\n  - note that this does not make the diagnostics quickfix active, which is why we need to call `api.nvim_command(nr .. 'chistory')`\r\n- `vim.fn.getqflist({ id = qf_id, nr = 0 }).nr` will return the `nr` of the existing diagnostics quickfix\r\n\r\n> If you wanted to add a test for this, I think you'd do something like:\r\n> Create a non-diagnostics quickfix list, open it.\r\n> Call vim.diagnostic.setqflist({ open = true })\r\n> Assert that the currently opened/selected quickfix list is the qf list from step 2.\r\n\r\nWhen we call `vim.fn.setqflist` with the new diagnostics quickfix, it's also set as active as a new one is created. That means that even when `open=false`, if a quickfix list is already open, the new diagnostics quickfix list will be displayed as it's also active.\r\nWhen `open=true`, `vim.fn.getqflist({ id = qf_id, nr = 0 }).nr` will return the `nr` of the newly created diagnostics quickfix, as it's been activated when it was created.\r\n\r\nI've added a new test to describe this behavior: `sets new diagnostics quickfix as active`. Together with the other tests, it seems to me it covers the behavior we want to assert.\r\n",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T13:14:59Z",
            "diff_hunk": "@@ -871,7 +871,7 @@ local function set_list(loclist, opts)\n   end\n \n   if open then\n-    if qf_id then\n+    if not loclist then",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886800033",
            "id": 1886800033,
            "in_reply_to_id": 1886153152,
            "line": 874,
            "node_id": "PRRC_kwDOAPphoM5wdkih",
            "original_commit_id": "446c0ab0a1fb442fbb30c1bc9387cf9d878a297f",
            "original_line": 874,
            "original_position": 5,
            "original_start_line": null,
            "path": "runtime/lua/vim/diagnostic.lua",
            "position": 5,
            "pull_request_review_id": 2506162460,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886800033/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T13:15:43Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886800033",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/31585#discussion_r1886823842"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/31585"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886823842"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "With `open = false`, the new diagnostics quickfix would also be set as active.\r\n\r\nI've added `open = true`, to assert that [these lines](https://github.com/delatorrejuanchi/neovim/blob/1eaf4637f49092a38d026ddc84840686a427b954/runtime/lua/vim/diagnostic.lua#L875-L877) don't change that behavior.\r\n\r\nI'd be happy to add another test with `open=false`, if we want to be more thorough. I didn't add it because I expect that this might be changed in the future (i.e.: when `open = false`, keep the current active quickfix list but update/create a diagnostics quickfix list)",
            "commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "created_at": "2024-12-16T13:32:32Z",
            "diff_hunk": "@@ -3212,6 +3213,74 @@ describe('vim.diagnostic', function()\n     end)\n   end)\n \n+  describe('setqflist()', function()\n+    it('updates existing diagnostics quickfix if one already exists', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.setqflist({ title = 'Diagnostics' })\n+        local qf_id = vim.fn.getqflist({ id = 0, nr = '$' }).id\n+\n+        return { diagnostics_qf_id, qf_id }\n+      end)\n+\n+      eq(result[1], result[2])\n+    end)\n+\n+    it('navigates to existing diagnostics quickfix if one already exists and open=true', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Diagnostics' })\n+        local diagnostics_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Other' })\n+\n+        vim.diagnostic.setqflist({ title = 'Diagnostics', open = true })\n+        local qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        return { diagnostics_qf_id, qf_id }\n+      end)\n+\n+      eq(result[1], result[2])\n+    end)\n+\n+    it('sets new diagnostics quickfix as active when open=true', function()\n+      local result = exec_lua(function()\n+        vim.api.nvim_win_set_buf(0, _G.diagnostic_bufnr)\n+\n+        vim.fn.setqflist({}, ' ', { title = 'Other' })\n+        local other_qf_id = vim.fn.getqflist({ id = 0 }).id\n+\n+        vim.diagnostic.setqflist({ title = 'Diagnostics', open = true })",
            "html_url": "https://github.com/neovim/neovim/pull/31585#discussion_r1886823842",
            "id": 1886823842,
            "line": 3258,
            "node_id": "PRRC_kwDOAPphoM5wdqWi",
            "original_commit_id": "1eaf4637f49092a38d026ddc84840686a427b954",
            "original_line": 3258,
            "original_position": 54,
            "original_start_line": null,
            "path": "test/functional/lua/diagnostic_spec.lua",
            "position": 54,
            "pull_request_review_id": 2506201577,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886823842/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2024-12-16T13:34:25Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1886823842",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "CONTRIBUTOR",
            "body": "It seems to me some checks are failing due to flakiness, but I'm uncertain about how to proceed. If someone could point me in the right direction, that would be appreciated! 🙂 ",
            "created_at": "2024-12-15T15:23:58Z",
            "html_url": "https://github.com/neovim/neovim/pull/31585#issuecomment-2543914963",
            "id": 2543914963,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31585",
            "node_id": "IC_kwDOAPphoM6XoQ_T",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2543914963/reactions"
            },
            "updated_at": "2024-12-15T15:23:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/2543914963",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/31585/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/31585/commits",
    "created_at": "2024-12-15T14:50:02Z",
    "diff_url": "https://github.com/neovim/neovim/pull/31585.diff",
    "draft": false,
    "head": {
        "label": "delatorrejuanchi:fix-vim.diagnostic.setqflist-open-qflist",
        "ref": "fix-vim.diagnostic.setqflist-open-qflist",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/delatorrejuanchi/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/delatorrejuanchi/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/delatorrejuanchi/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/delatorrejuanchi/neovim/branches{/branch}",
            "clone_url": "https://github.com/delatorrejuanchi/neovim.git",
            "collaborators_url": "https://api.github.com/repos/delatorrejuanchi/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/delatorrejuanchi/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/delatorrejuanchi/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/delatorrejuanchi/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/delatorrejuanchi/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/delatorrejuanchi/neovim/contributors",
            "created_at": "2024-12-15T14:11:44Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/delatorrejuanchi/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/delatorrejuanchi/neovim/downloads",
            "events_url": "https://api.github.com/repos/delatorrejuanchi/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/delatorrejuanchi/neovim/forks",
            "full_name": "delatorrejuanchi/neovim",
            "git_commits_url": "https://api.github.com/repos/delatorrejuanchi/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/delatorrejuanchi/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/delatorrejuanchi/neovim/git/tags{/sha}",
            "git_url": "git://github.com/delatorrejuanchi/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/delatorrejuanchi/neovim/hooks",
            "html_url": "https://github.com/delatorrejuanchi/neovim",
            "id": 903767247,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/delatorrejuanchi/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/delatorrejuanchi/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/delatorrejuanchi/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/delatorrejuanchi/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/delatorrejuanchi/neovim/labels{/name}",
            "language": null,
            "languages_url": "https://api.github.com/repos/delatorrejuanchi/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/delatorrejuanchi/neovim/merges",
            "milestones_url": "https://api.github.com/repos/delatorrejuanchi/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDONd5kzw",
            "notifications_url": "https://api.github.com/repos/delatorrejuanchi/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
                "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
                "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
                "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
                "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/delatorrejuanchi",
                "id": 6722188,
                "login": "delatorrejuanchi",
                "node_id": "MDQ6VXNlcjY3MjIxODg=",
                "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
                "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
                "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/delatorrejuanchi",
                "user_view_type": "public"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/delatorrejuanchi/neovim/pulls{/number}",
            "pushed_at": "2024-12-16T14:45:56Z",
            "releases_url": "https://api.github.com/repos/delatorrejuanchi/neovim/releases{/id}",
            "size": 291055,
            "ssh_url": "git@github.com:delatorrejuanchi/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/delatorrejuanchi/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/delatorrejuanchi/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/delatorrejuanchi/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/delatorrejuanchi/neovim/subscription",
            "svn_url": "https://github.com/delatorrejuanchi/neovim",
            "tags_url": "https://api.github.com/repos/delatorrejuanchi/neovim/tags",
            "teams_url": "https://api.github.com/repos/delatorrejuanchi/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/delatorrejuanchi/neovim/git/trees{/sha}",
            "updated_at": "2024-12-15T14:11:44Z",
            "url": "https://api.github.com/repos/delatorrejuanchi/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "1eaf4637f49092a38d026ddc84840686a427b954",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
            "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
            "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
            "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
            "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/delatorrejuanchi",
            "id": 6722188,
            "login": "delatorrejuanchi",
            "node_id": "MDQ6VXNlcjY3MjIxODg=",
            "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
            "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
            "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/delatorrejuanchi",
            "user_view_type": "public"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/31585",
    "id": 2235832782,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/31585",
    "labels": [
        {
            "color": "C5DEF5",
            "default": false,
            "description": "",
            "id": 3361645105,
            "name": "diagnostic",
            "node_id": "MDU6TGFiZWwzMzYxNjQ1MTA1",
            "url": "https://api.github.com/repos/neovim/neovim/labels/diagnostic"
        }
    ],
    "locked": false,
    "merge_commit_sha": "6c975515c5608b500ac96fae598f0b5a48e03ddb",
    "merged_at": "2024-12-16T14:38:57Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM6FRBnO",
    "number": 31585,
    "patch_url": "https://github.com/neovim/neovim/pull/31585.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/31585/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/1eaf4637f49092a38d026ddc84840686a427b954",
    "title": "fix(diagnostic): vim.diagnostic.setqflist() opens location list on first call",
    "updated_at": "2024-12-16T14:45:56Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/31585",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/6722188?v=4",
        "events_url": "https://api.github.com/users/delatorrejuanchi/events{/privacy}",
        "followers_url": "https://api.github.com/users/delatorrejuanchi/followers",
        "following_url": "https://api.github.com/users/delatorrejuanchi/following{/other_user}",
        "gists_url": "https://api.github.com/users/delatorrejuanchi/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/delatorrejuanchi",
        "id": 6722188,
        "login": "delatorrejuanchi",
        "node_id": "MDQ6VXNlcjY3MjIxODg=",
        "organizations_url": "https://api.github.com/users/delatorrejuanchi/orgs",
        "received_events_url": "https://api.github.com/users/delatorrejuanchi/received_events",
        "repos_url": "https://api.github.com/users/delatorrejuanchi/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/delatorrejuanchi/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/delatorrejuanchi/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/delatorrejuanchi",
        "user_view_type": "public"
    }
}