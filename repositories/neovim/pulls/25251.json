{
    "_links": {
        "comments": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25251/comments"
        },
        "commits": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25251/commits"
        },
        "html": {
            "href": "https://github.com/neovim/neovim/pull/25251"
        },
        "issue": {
            "href": "https://api.github.com/repos/neovim/neovim/issues/25251"
        },
        "review_comment": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}"
        },
        "review_comments": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25251/comments"
        },
        "self": {
            "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
        },
        "statuses": {
            "href": "https://api.github.com/repos/neovim/neovim/statuses/ff3651fc1c64a873ee31e292f064be11d8c629b0"
        }
    },
    "active_lock_reason": null,
    "assignee": null,
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "auto_merge": null,
    "base": {
        "label": "neovim:master",
        "ref": "master",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/neovim/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/neovim/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/neovim/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/neovim/neovim/branches{/branch}",
            "clone_url": "https://github.com/neovim/neovim.git",
            "collaborators_url": "https://api.github.com/repos/neovim/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/neovim/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/neovim/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/neovim/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/neovim/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/neovim/neovim/contributors",
            "created_at": "2014-01-31T13:39:22Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/neovim/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/neovim/neovim/downloads",
            "events_url": "https://api.github.com/repos/neovim/neovim/events",
            "fork": false,
            "forks": 4898,
            "forks_count": 4898,
            "forks_url": "https://api.github.com/repos/neovim/neovim/forks",
            "full_name": "neovim/neovim",
            "git_commits_url": "https://api.github.com/repos/neovim/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/neovim/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/neovim/neovim/git/tags{/sha}",
            "git_url": "git://github.com/neovim/neovim.git",
            "has_discussions": true,
            "has_downloads": true,
            "has_issues": true,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/neovim/neovim/hooks",
            "html_url": "https://github.com/neovim/neovim",
            "id": 16408992,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/neovim/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/neovim/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/neovim/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/neovim/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/neovim/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/neovim/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/neovim/neovim/merges",
            "milestones_url": "https://api.github.com/repos/neovim/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "MDEwOlJlcG9zaXRvcnkxNjQwODk5Mg==",
            "notifications_url": "https://api.github.com/repos/neovim/neovim/notifications{?since,all,participating}",
            "open_issues": 1640,
            "open_issues_count": 1640,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
                "events_url": "https://api.github.com/users/neovim/events{/privacy}",
                "followers_url": "https://api.github.com/users/neovim/followers",
                "following_url": "https://api.github.com/users/neovim/following{/other_user}",
                "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/neovim",
                "id": 6471485,
                "login": "neovim",
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
                "organizations_url": "https://api.github.com/users/neovim/orgs",
                "received_events_url": "https://api.github.com/users/neovim/received_events",
                "repos_url": "https://api.github.com/users/neovim/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
                "type": "Organization",
                "url": "https://api.github.com/users/neovim"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/neovim/neovim/pulls{/number}",
            "pushed_at": "2023-09-27T01:51:23Z",
            "releases_url": "https://api.github.com/repos/neovim/neovim/releases{/id}",
            "size": 248056,
            "ssh_url": "git@github.com:neovim/neovim.git",
            "stargazers_count": 69699,
            "stargazers_url": "https://api.github.com/repos/neovim/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/neovim/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/neovim/neovim/subscription",
            "svn_url": "https://github.com/neovim/neovim",
            "tags_url": "https://api.github.com/repos/neovim/neovim/tags",
            "teams_url": "https://api.github.com/repos/neovim/neovim/teams",
            "topics": [
                "api",
                "c",
                "lua",
                "neovim",
                "nvim",
                "text-editor",
                "vim"
            ],
            "trees_url": "https://api.github.com/repos/neovim/neovim/git/trees{/sha}",
            "updated_at": "2023-09-27T01:41:06Z",
            "url": "https://api.github.com/repos/neovim/neovim",
            "visibility": "public",
            "watchers": 69699,
            "watchers_count": 69699,
            "web_commit_signoff_required": false
        },
        "sha": "fe95037cdb9b0294ca24dbd0ff82c8462d051307",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/6471485?v=4",
            "events_url": "https://api.github.com/users/neovim/events{/privacy}",
            "followers_url": "https://api.github.com/users/neovim/followers",
            "following_url": "https://api.github.com/users/neovim/following{/other_user}",
            "gists_url": "https://api.github.com/users/neovim/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/neovim",
            "id": 6471485,
            "login": "neovim",
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjY0NzE0ODU=",
            "organizations_url": "https://api.github.com/users/neovim/orgs",
            "received_events_url": "https://api.github.com/users/neovim/received_events",
            "repos_url": "https://api.github.com/users/neovim/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/neovim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neovim/subscriptions",
            "type": "Organization",
            "url": "https://api.github.com/users/neovim"
        }
    },
    "body": "Closes #24166\r\n\r\nAdded a transform functionality base on `has` that can be set on the metadata files.\r\n\r\nIf this makes sense I can add docs about it.",
    "closed_at": "2023-09-26T13:31:36Z",
    "comment_data": [
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1331591908"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1331591908"
                }
            },
            "author_association": "MEMBER",
            "body": "Instead of doing a search/replace on the raw strings, could introduce a format like `{unix:(foo),win:(bar)}` so that the \"transform\" is given in the tutor contents. \r\n\r\nFor example this line: https://github.com/neovim/neovim/blob/ca825f38732252bfe8d285c15fcf1b3d45f2c119/runtime/tutor/en/vim-01-beginner.tutor#L632\r\n\r\nwould become:\r\n\r\n     1. Type `:!{unix:(ls),win:(dir)}`{vim} to get a listing of your directory.\r\n\r\nThat should also greatly simplify the `tutor#ApplyTransform()` logic. It would just be a single `:%s` call:\r\n\r\n```\r\nif has('win32')\r\n  %s/\\C\\v\\{unix:\\(([^)]+)\\).*win:\\(([^)]+)\\)}/\\2\r\nelse\r\n  %s/\\C\\v\\{unix:\\(([^)]+)\\).*win:\\(([^)]+)\\)}/\\1\r\nendif",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-20T12:57:11Z",
            "diff_hunk": "@@ -40,5 +40,11 @@\n     \"784\": \"Adding 123 to 456 gives you 579.\",\n     \"810\": \"a) This is the first item.\",\n     \"811\": \"b) This is the second item.\"\n+  },\n+  \"transform\": {\n+    \"win32\": {\n+      \"!ls\": \"!dir\",\n+      \"!rm\": \"!del\"",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1331591908",
            "id": 1331591908,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PXnrk",
            "original_commit_id": "ca825f38732252bfe8d285c15fcf1b3d45f2c119",
            "original_line": 47,
            "original_position": 8,
            "original_start_line": null,
            "path": "runtime/tutor/en/vim-01-beginner.tutor.json",
            "position": null,
            "pull_request_review_id": 1635577163,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1331591908/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-20T13:01:58Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1331591908",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1331756597"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1331756597"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "@justinmk ugly trick here, any suggestions?",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-20T14:50:19Z",
            "diff_hunk": "@@ -724,7 +724,7 @@ NOTE: You can also read the output of an external command. For example,\n  4. [:r](:r) FILENAME              retrieves disk file FILENAME and puts it\n                              below the cursor position.\n \n- 5. [:r !dir](:r!)                  reads the output of the dir command and\n+ 5. [:r !{unix:(ls),win:(dir)}](:r!){unix:(  ),win:( )}                 reads the output of the {unix:(ls),win:(dir)} command and",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1331756597",
            "id": 1331756597,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PYP41",
            "original_commit_id": "f3e1c82f896f15f2e0bfd39d328f9acee4117102",
            "original_line": 727,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/tutor/en/vim-01-beginner.tutor",
            "position": null,
            "pull_request_review_id": 1635842203,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1331756597/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-20T14:50:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1331756597",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333019211"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333019211"
                }
            },
            "author_association": "MEMBER",
            "body": "seems fine, but could also do:\r\n\r\n```suggestion\r\n 5. [:r !{unix:(ls ),win:(dir)}](:r!)                   reads the output of the {unix:(ls),win:(dir)} command and\r\n```",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T13:04:01Z",
            "diff_hunk": "@@ -724,7 +724,7 @@ NOTE: You can also read the output of an external command. For example,\n  4. [:r](:r) FILENAME              retrieves disk file FILENAME and puts it\n                              below the cursor position.\n \n- 5. [:r !dir](:r!)                  reads the output of the dir command and\n+ 5. [:r !{unix:(ls),win:(dir)}](:r!){unix:(  ),win:( )}                 reads the output of the {unix:(ls),win:(dir)} command and",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333019211",
            "id": 1333019211,
            "in_reply_to_id": 1331756597,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PdEJL",
            "original_commit_id": "f3e1c82f896f15f2e0bfd39d328f9acee4117102",
            "original_line": 727,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/tutor/en/vim-01-beginner.tutor",
            "position": null,
            "pull_request_review_id": 1637770592,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333019211/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-21T13:04:02Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333019211",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333044087"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333044087"
                }
            },
            "author_association": "MEMBER",
            "body": "or we could drop `()` in the format, so this could be:\r\n```suggestion\r\n 5. {unix:[:r !ls](:r!)   }{win:[:r !dir](:r!)  }                 reads the output of the {unix:(ls),win:(dir)} command and\r\n```\r\n\r\nThen the `:%s` needs to be updated.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T13:18:56Z",
            "diff_hunk": "@@ -724,7 +724,7 @@ NOTE: You can also read the output of an external command. For example,\n  4. [:r](:r) FILENAME              retrieves disk file FILENAME and puts it\n                              below the cursor position.\n \n- 5. [:r !dir](:r!)                  reads the output of the dir command and\n+ 5. [:r !{unix:(ls),win:(dir)}](:r!){unix:(  ),win:( )}                 reads the output of the {unix:(ls),win:(dir)} command and",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333044087",
            "id": 1333044087,
            "in_reply_to_id": 1331756597,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PdKN3",
            "original_commit_id": "f3e1c82f896f15f2e0bfd39d328f9acee4117102",
            "original_line": 727,
            "original_position": 60,
            "original_start_line": null,
            "path": "runtime/tutor/en/vim-01-beginner.tutor",
            "position": null,
            "pull_request_review_id": 1637814152,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333044087/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-21T13:20:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333044087",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333326529"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333326529"
                }
            },
            "author_association": "MEMBER",
            "body": "one-time setup goes in a setup()\r\n\r\nper-test setup goes in before_each\r\n\r\nhttps://lunarmodules.github.io/busted/",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T16:23:52Z",
            "diff_hunk": "@@ -0,0 +1,25 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+local skip = helpers.skip\n+local eval = helpers.eval\n+local eq = helpers.eq\n+local clear = helpers.clear\n+\n+describe(':Tutor', function()\n+  clear({ args = { '-u', 'NORC' } })\n+  command(\"Tutor\")",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333326529",
            "id": 1333326529,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PePLB",
            "original_commit_id": "6bf690c0e4b882edf8c3cd29fb84be7ebf6df975",
            "original_line": 12,
            "original_position": 12,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1638267973,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333326529/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-21T16:23:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333326529",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333326925"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333326925"
                }
            },
            "author_association": "MEMBER",
            "body": "ah non-greedy, good idea :)",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T16:24:14Z",
            "diff_hunk": "@@ -220,10 +220,20 @@ function! tutor#TutorCmd(tutor_name)\n \n     call tutor#SetupVim()\n     exe \"edit \".l:to_open\n+    call tutor#ApplyTransform()\n endfunction\n \n function! tutor#TutorCmdComplete(lead,line,pos)\n     let l:tutors = s:GlobTutorials('*')\n     let l:names = uniq(sort(map(l:tutors, 'fnamemodify(v:val, \":t:r\")'), 's:Sort'))\n     return join(l:names, \"\\n\")\n endfunction\n+\n+function! tutor#ApplyTransform()\n+    if has('win32')        \n+        sil! %s/{unix:(\\(.\\{-}\\)),win:(\\(.\\{-}\\))}/\\2/g\n+    else\n+        sil! %s/{unix:(\\(.\\{-}\\)),win:(\\(.\\{-}\\))}/\\1/g",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333326925",
            "id": 1333326925,
            "line": 236,
            "node_id": "PRRC_kwDOAPphoM5PePRN",
            "original_commit_id": "6bf690c0e4b882edf8c3cd29fb84be7ebf6df975",
            "original_line": 236,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/autoload/tutor.vim",
            "position": 17,
            "pull_request_review_id": 1638268559,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333326925/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-21T16:24:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333326925",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333330888"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333330888"
                }
            },
            "author_association": "MEMBER",
            "body": "just make this one test with a `if` check.\r\n\r\na screen test is probably better, and adds a ton of coverage with a single test.  See [test/functional/example_spec.lua](https://github.com/neovim/neovim/blob/master/test/functional/example_spec.lua) for example. You can [run the test](https://github.com/neovim/neovim/blob/master/test/README.md#running-tests) like this:\r\n\r\n    TEST_FILE=test/functional/plugin/tutor_spec.lua make functionaltest",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T16:27:49Z",
            "diff_hunk": "@@ -0,0 +1,25 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+local skip = helpers.skip\n+local eval = helpers.eval\n+local eq = helpers.eq\n+local clear = helpers.clear\n+\n+describe(':Tutor', function()\n+  clear({ args = { '-u', 'NORC' } })\n+  command(\"Tutor\")\n+\n+  it('should apply transformation for Unix', function()\n+    skip(is_os('win'), 'not on Unix')\n+    feed(\"/!ls<CR>\")\n+    eq(true, eval('line(\".\")') > 1)\n+  end)\n+\n+  it('should apply transformation for Windows', function()\n+    skip(not is_os('win'), 'not on Windows')\n+    feed(\"/!dir<CR>\")\n+    eq(true, eval('line(\".\")') > 1)\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333330888",
            "id": 1333330888,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PeQPI",
            "original_commit_id": "6bf690c0e4b882edf8c3cd29fb84be7ebf6df975",
            "original_line": 63,
            "original_position": 24,
            "original_start_line": 14,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1638275632,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333330888/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-21T16:27:49Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333330888",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333548831"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333548831"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I have just learned about this 😄",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T20:04:58Z",
            "diff_hunk": "@@ -220,10 +220,20 @@ function! tutor#TutorCmd(tutor_name)\n \n     call tutor#SetupVim()\n     exe \"edit \".l:to_open\n+    call tutor#ApplyTransform()\n endfunction\n \n function! tutor#TutorCmdComplete(lead,line,pos)\n     let l:tutors = s:GlobTutorials('*')\n     let l:names = uniq(sort(map(l:tutors, 'fnamemodify(v:val, \":t:r\")'), 's:Sort'))\n     return join(l:names, \"\\n\")\n endfunction\n+\n+function! tutor#ApplyTransform()\n+    if has('win32')        \n+        sil! %s/{unix:(\\(.\\{-}\\)),win:(\\(.\\{-}\\))}/\\2/g\n+    else\n+        sil! %s/{unix:(\\(.\\{-}\\)),win:(\\(.\\{-}\\))}/\\1/g",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333548831",
            "id": 1333548831,
            "in_reply_to_id": 1333326925,
            "line": 236,
            "node_id": "PRRC_kwDOAPphoM5PfFcf",
            "original_commit_id": "6bf690c0e4b882edf8c3cd29fb84be7ebf6df975",
            "original_line": 236,
            "original_position": 17,
            "original_start_line": null,
            "path": "runtime/autoload/tutor.vim",
            "position": 17,
            "pull_request_review_id": 1638620922,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333548831/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-21T20:04:59Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333548831",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333551193"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333551193"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I didn't find a way to check the line number after the jump through the `screen` so I checked the whole line content.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T20:07:53Z",
            "diff_hunk": "@@ -0,0 +1,25 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+local skip = helpers.skip\n+local eval = helpers.eval\n+local eq = helpers.eq\n+local clear = helpers.clear\n+\n+describe(':Tutor', function()\n+  clear({ args = { '-u', 'NORC' } })\n+  command(\"Tutor\")\n+\n+  it('should apply transformation for Unix', function()\n+    skip(is_os('win'), 'not on Unix')\n+    feed(\"/!ls<CR>\")\n+    eq(true, eval('line(\".\")') > 1)\n+  end)\n+\n+  it('should apply transformation for Windows', function()\n+    skip(not is_os('win'), 'not on Windows')\n+    feed(\"/!dir<CR>\")\n+    eq(true, eval('line(\".\")') > 1)\n+  end)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333551193",
            "id": 1333551193,
            "in_reply_to_id": 1333330888,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PfGBZ",
            "original_commit_id": "6bf690c0e4b882edf8c3cd29fb84be7ebf6df975",
            "original_line": 63,
            "original_position": 24,
            "original_start_line": 14,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1638624785,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333551193/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-21T20:07:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333551193",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333574608"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333574608"
                }
            },
            "author_association": "MEMBER",
            "body": "a ternary would avoid the need for the explicit type\r\n```suggestion\r\n    local test_table = (is_os('win') and {\r\n      ...\r\n    } or {\r\n      ...\r\n    })\r\n```",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T20:35:19Z",
            "diff_hunk": "@@ -0,0 +1,67 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+local Screen = require('test.functional.ui.screen')\n+\n+describe(':Tutor', function()\n+  clear({ args = { '-u', 'NORC' } })\n+  command('set cmdheight=0')\n+  command('Tutor')\n+\n+  it('should apply transformation', function()\n+    local test_table --[[@as table]]\n+    if is_os('win') then\n+      test_table = {",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333574608",
            "id": 1333574608,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PfLvQ",
            "original_commit_id": "d1800d675197a4bf64dfa376234a9ab74658dfbc",
            "original_line": 16,
            "original_position": 16,
            "original_start_line": 14,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1638661624,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333574608/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-21T20:36:01Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333574608",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1333669447"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333669447"
                }
            },
            "author_association": "MEMBER",
            "body": "```suggestion\r\n  before_each(function()\r\n    clear({ args = { '-u', 'NORC' } })\r\n    command('set cmdheight=0')\r\n    command('Tutor')\r\n  end)\r\n```",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-21T22:45:51Z",
            "diff_hunk": "@@ -0,0 +1,62 @@\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+local Screen = require('test.functional.ui.screen')\n+\n+describe(':Tutor', function()\n+  clear({ args = { '-u', 'NORC' } })\n+  command('set cmdheight=0')\n+  command('Tutor')",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1333669447",
            "id": 1333669447,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Pfi5H",
            "original_commit_id": "6cf64c319c0f71e47ec1ad302a0badcadbf0e721",
            "original_line": 11,
            "original_position": 11,
            "original_start_line": 9,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1638815120,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333669447/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": "RIGHT",
            "subject_type": "line",
            "updated_at": "2023-09-21T22:45:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1333669447",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334312005"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334312005"
                }
            },
            "author_association": "MEMBER",
            "body": "Test seems a bit slow (300ms) but I guess `:Tutor` is kinda slow.\r\n\r\n```\r\n-------- Running tests from test/functional/plugin/tutor_spec.lua\r\nRUN      T3855 :Tutor should apply transformation: 231.00 ms OK\r\n-------- 1 test from test/functional/plugin/tutor_spec.lua (382.00 ms total)\r\n```",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T12:26:03Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)\n+      end\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334312005",
            "id": 1334312005,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Ph_xF",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 62,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639851591,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334312005/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T12:26:03Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334312005",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334316262"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334316262"
                }
            },
            "author_association": "MEMBER",
            "body": "why call expect() on each line instead of one expect() call that gives the full screen? That might be slowing down the test.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T12:30:05Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334316262",
            "id": 1334316262,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiAzm",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 60,
            "original_position": 60,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639858000,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334316262/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T12:30:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334316262",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334317467"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334317467"
                }
            },
            "author_association": "MEMBER",
            "body": "why is it searching for each case? isn't the transformed result visible without the cursor being on the result?",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T12:31:15Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334317467",
            "id": 1334317467,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiBGb",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 59,
            "original_position": 59,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639859878,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334317467/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T12:31:15Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334317467",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334359718"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334359718"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Is there a way to show how long `before_each` took? then we can distinguish if the slow down is on the `:Tutor` or loop expects.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T13:09:48Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)\n+      end\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334359718",
            "id": 1334359718,
            "in_reply_to_id": 1334312005,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiLam",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 62,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639925518,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334359718/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T13:09:48Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334359718",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334360932"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334360932"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "Can we have a screen of any size? like the whole buffer long?",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T13:10:51Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334360932",
            "id": 1334360932,
            "in_reply_to_id": 1334316262,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiLtk",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 60,
            "original_position": 60,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639927563,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334360932/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T13:10:51Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334360932",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334363604"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334363604"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "The first instance of the replace is on line 632 and the last is on line 931, if we can have a screen that long we could do just one check, but if the contents in between those lines changes the test should be updated, even if the change is not related to the transformation itself.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T13:12:53Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334363604",
            "id": 1334363604,
            "in_reply_to_id": 1334317467,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiMXU",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 59,
            "original_position": 59,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639932113,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334363604/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T13:12:53Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334363604",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334368119"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334368119"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "nevermind, I did some quick tests and it seems that `before_each` doesn't add up the time taken output.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T13:16:41Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)\n+      end\n+    end",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334368119",
            "id": 1334368119,
            "in_reply_to_id": 1334312005,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiNd3",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 62,
            "original_position": 62,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1639938959,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334368119/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T13:16:42Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334368119",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334413321"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334413321"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "To simplify we could just test a sample of transformation, one simple and one complex, and add more if needed.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T13:52:06Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334413321",
            "id": 1334413321,
            "in_reply_to_id": 1334317467,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PiYgJ",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 59,
            "original_position": 59,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1640009599,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334413321/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T13:52:06Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334413321",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334426912"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334426912"
                }
            },
            "author_association": "MEMBER",
            "body": "> if we can have a screen that long we could do just one check\r\n\r\nThe screen dimensions are up to the test author:\r\n\r\n    local screen = Screen.new(80, 100)\r\n\r\n\r\n> but if the contents in between those lines changes the test should be updated, even if the change is not related to the transformation itself.\r\n\r\nThat's fine.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T14:02:36Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334426912",
            "id": 1334426912,
            "in_reply_to_id": 1334317467,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Pib0g",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 59,
            "original_position": 59,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1640030965,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334426912/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T14:02:36Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334426912",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334427993"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334427993"
                }
            },
            "author_association": "MEMBER",
            "body": "yes, but that would result in a verbose test. Just position the screen to some part of the buffer that is representative, we don't need to test the entire buffer.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T14:03:28Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334427993",
            "id": 1334427993,
            "in_reply_to_id": 1334316262,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PicFZ",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 60,
            "original_position": 60,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1640032701,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334427993/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T14:03:28Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334427993",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1334627757"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334627757"
                }
            },
            "author_association": "CONTRIBUTOR",
            "body": "I've created a test that checks the whole 300 lines that has the transformed content and it seems to be running virtually the same speed on my machine, I pushed to see if the performance is different on CI",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-22T16:58:51Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1334627757",
            "id": 1334627757,
            "in_reply_to_id": 1334316262,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5PjM2t",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 60,
            "original_position": 60,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1640345127,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334627757/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-22T16:58:52Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1334627757",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1335099147"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1335099147"
                }
            },
            "author_association": "MEMBER",
            "body": "the screen doesn't need to be that big. just test some part of the buffer that has a couple of the interesting cases.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-24T04:25:19Z",
            "diff_hunk": "@@ -0,0 +1,696 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)\n+      end\n+    end\n+  end)\n+\n+  it('should apply transformation v2', function()\n+    local expected = is_os('win') and [[\n+  {2:  } ^1. Type :{8:!}dir to get a listing of your directory.                            |\n+  {2:  }    You already know you must hit {6:<Enter>} after this.                         |\n+  {2:  }                                                                              |\n+  {2:  } 2. Choose a filename that does not exist yet, such as TEST.                  |\n+  {2:  }                                                                              |\n+  {2:  } 3. Now type:                                                                 |\n+  {2:  }                                                                              |\n+  {2:  }        :w {16:TEST}                                                               |\n+  {2:  }                                                                              |\n+  {2:  }   (where TEST is the filename you chose.)                                    |\n+  {2:  }                                                                              |\n+  {2:  } 4. This saves the current file under the name TEST.                          |\n+  {2:  }    To verify this, type :{8:!}dir again to see your directory.                   |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: If you were to exit Neovim and start it again with nvim TEST, the file  |\n+  {2:  }      would be an exact copy of the tutorial when you saved it.               |\n+  {2:  }                                                                              |\n+  {2:  } 5. Now remove the file by typing:                                            |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:!}del TEST                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 5.3: SELECTING TEXT TO WRITE}                                         |\n+  {2:  }                                                                              |\n+  {2:  }{0: To save part of the file, type }{8:v}{0: motion }:w {16:FILENAME}{0:. }                        |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to this line.                                             |\n+  {2:  }                                                                              |\n+  {2:  } 2. Press {4:v} and move the cursor to the fifth item below. Notice that the      |\n+  {2:  }    text is highlighted.                                                      |\n+  {2:  }                                                                              |\n+  {2:  } 3. Press the {8::} character. At the bottom of the screen                        |\n+  {2:  }                                                                              |\n+  {2:  }        :{15:'<},{15:'>}                                                                |\n+  {2:  }                                                                              |\n+  {2:  }    will appear.                                                              |\n+  {2:  }                                                                              |\n+  {2:  } 4. Type                                                                      |\n+  {2:  }                                                                              |\n+  {2:  }        :w {16:TEST}                                                               |\n+  {2:  }                                                                              |\n+  {2:  }    where TEST is a filename that does not exist yet. Verify that you see     |\n+  {2:  }                                                                              |\n+  {2:  }        :{15:'<},{15:'>}{16:w} {16:TEST}                                                          |\n+  {2:  }                                                                              |\n+  {2:  }    before you press {6:<Enter>}.                                                 |\n+  {2:  }                                                                              |\n+  {2:  } 5. Neovim will write the selected lines to the file TEST. Use :{8:!}dir to see it|\n+  {2:  }    Do not remove it yet! We will use it in the next lesson.                  |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: Pressing {4:v} starts {4:Visual selection}. You can move the cursor around to   |\n+  {2:  }      make the selection bigger or smaller. Then you can use an operator to   |\n+  {2:  }      do something with the text. For example, {8:d} deletes the text.            |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 5.4: RETRIEVING AND MERGING FILES}                                    |\n+  {2:  }                                                                              |\n+  {2:  }{0: To retrieve the contents of a file, type }:r {16:FILENAME}{0:. }                       |\n+  {2:  }                                                                              |\n+  {2:  } 1. Place the cursor just above this line.                                    |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}:  After executing Step 2 you will see text from Lesson 5.3. Then move    |\n+  {2:  }       DOWN to see this lesson again.                                         |\n+  {2:  }                                                                              |\n+  {2:  } 2. Now retrieve your TEST file using the command                             |\n+  {2:  }                                                                              |\n+  {2:  }        :r {16:TEST}                                                               |\n+  {2:  }                                                                              |\n+  {2:  }    where TEST is the name of the file you used.                              |\n+  {2:  }    The file you retrieve is placed below the cursor line.                    |\n+  {2:  }                                                                              |\n+  {2:  } 3. To verify that a file was retrieved, cursor back and notice that there    |\n+  {2:  }    are now two copies of Lesson 5.3, the original and the retrieved version. |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: You can also read the output of an external command. For example,       |\n+  {2:  }                                                                              |\n+  {2:  }        :r {8:!}dir                                                               |\n+  {2:  }                                                                              |\n+  {2:  }      reads the output of the ls command and puts it below the cursor.        |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 5 SUMMARY}                                                            |\n+  {2:  }                                                                              |\n+  {2:  } 1. {4::!command} executes an external command.                                   |\n+  {2:  }                                                                              |\n+  {2:  }     Some useful examples are:                                                |\n+  {2:  }     :{8:!}dir                   - shows a directory listing                      |\n+  {2:  }     :{8:!}del FILENAME          - removes file FILENAME                          |\n+  {2:  }                                                                              |\n+  {2:  } 2. {4::w} FILENAME              writes the current Neovim file to disk with      |\n+  {2:  }                             name FILENAME.                                   |\n+  {2:  }                                                                              |\n+  {2:  } 3. {4:v}  motion  :w FILENAME   saves the Visually selected lines in file        |\n+  {2:  }                             FILENAME.                                        |\n+  {2:  }                                                                              |\n+  {2:  } 4. {4::r} FILENAME              retrieves disk file FILENAME and puts it         |\n+  {2:  }                             below the cursor position.                       |\n+  {2:  }                                                                              |\n+  {2:  } 5. {4::r !dir}                  reads the output of the dir command and          |\n+  {2:  }                             puts it below the cursor position.               |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.1: THE OPEN COMMAND}                                                |\n+  {2:  }                                                                              |\n+  {2:  }{0: Type }{8:o}{0: to open a line below the cursor and place you in Insert mode. }        |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to the line below marked {9:✓}.                               |\n+  {2:  }                                                                              |\n+  {2:  } 2. Type the lowercase letter {8:o} to {4:open} up a line BELOW the                   |\n+  {2:  }    cursor and place you in Insert mode.                                      |\n+  {2:  }                                                                              |\n+  {2:  } 3. Now type some text and press {6:<Esc>} to exit Insert mode.                   |\n+  {2:  }                                                                              |\n+  {9:✓ }{6:After typing }{13:o}{6: the cursor is placed on the open line in Insert mode.}          |\n+  {2:  }                                                                              |\n+  {2:  } 4. To open up a line ABOVE the cursor, simply type a {4:capital O}, rather       |\n+  {2:  }    than a lowercase {8:o}. Try this on the line below.                           |\n+  {2:  }                                                                              |\n+  {9:✓ }{6:Open up a line above this by typing O while the cursor is on this line.}       |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.2: THE APPEND COMMAND}                                              |\n+  {2:  }                                                                              |\n+  {2:  }{0: Type }{10:a}{0: to insert text AFTER the cursor. }                                     |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to the start of the line below marked {11:✗}.                  |\n+  {2:  }                                                                              |\n+  {2:  } 2. Press {12:e} until the cursor is on the end of \"li\".                           |\n+  {2:  }                                                                              |\n+  {2:  } 3. Type the lowercase letter {10:a} to {4:append} text AFTER the cursor.              |\n+  {2:  }                                                                              |\n+  {2:  } 4. Complete the word like the line below it. Press {6:<Esc>} to exit Insert mode.|\n+  {2:  }                                                                              |\n+  {2:  } 5. Use {12:e} to move to the next incomplete word and repeat steps 3 and 4.       |\n+  {2:  }                                                                              |\n+  {11:✗ }{6:This li will allow you to pract appendi text to a line.}                       |\n+  {9:✓ }{6:This line will allow you to practice appending text to a line.}                |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: {4:a}, {4:i} and {4:A} all go to the same Insert mode, the only                     |\n+  {2:  }      difference is where the characters are inserted.                        |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.3: ANOTHER WAY TO REPLACE}                                          |\n+  {2:  }                                                                              |\n+  {2:  }{0: Type a capital }{8:R}{0: to replace more than one character. }                        |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to the first line below marked {11:✗}. Move the cursor to      |\n+  {2:  }    the beginning of the first \"xxx\".                                         |\n+  {2:  }                                                                              |\n+  {2:  } 2. Now press {8:R} ({4:capital R}) and type the number below it in the               |\n+  {2:  }    second line, so that it replaces the \"xxx\".                               |\n+  {2:  }                                                                              |\n+  {2:  } 3. Press {6:<Esc>} to leave {4:Replace mode}. Notice that                            |\n+  {2:  }    the rest of the line remains unmodified.                                  |\n+  {2:  }                                                                              |\n+  {2:  } 4. Repeat the steps to replace the remaining \"xxx\".                          |\n+  {2:  }                                                                              |\n+  {11:✗ }{6:Adding 123 to xxx gives you xxx.}                                              |\n+  {9:✓ }{6:Adding 123 to 456 gives you 579.}                                              |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: Replace mode is like Insert mode, but every typed character             |\n+  {2:  }      replaces an existing character.                                         |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.4: COPY AND PASTE TEXT}                                             |\n+  {2:  }                                                                              |\n+  {2:  }{0: Use the }{8:y}{0: operator to copy text and }{8:p}{0: to put it. }                            |\n+  {2:  }                                                                              |\n+  {2:  } 1. Go to the line marked with {9:✓} below and place the cursor after \"a)\".       |\n+  {2:  }                                                                              |\n+  {2:  } 2. Start Visual mode with {8:v} and move the cursor to just before               |\n+  {2:  }    \"first\".                                                                  |\n+  {2:  }                                                                              |\n+  {2:  } 3. Type {8:y} to {4:yank} (copy) the highlighted text.                               |\n+  {2:  }                                                                              |\n+  {2:  } 4. Move the cursor to the end of the next line: j{12:$}                           |\n+  {2:  }                                                                              |\n+  {2:  } 5. Type {8:p} to {4:put} (paste) the text.                                           |\n+  {2:  }                                                                              |\n+  {2:  } 6. Press {10:a} and then type \"second\". Press {6:<Esc>} to leave                      |\n+  {2:  }    Insert mode.                                                              |\n+  {2:  }                                                                              |\n+  {2:  } 7. Use Visual mode to select \"item.\", yank it with {8:y}, move to the            |\n+  {2:  }    end of the next line with j{12:$} and put the text there with {8:p}                |\n+  {2:  }                                                                              |\n+  {9:✓ }{6:a) This is the first item.}                                                    |\n+  {11:✗ }{6:b)}                                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: you can use {8:y} as an operator: {8:y}{12:w} yanks one word.                        |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: you can use {8:P} to put before the cursor, rather than after.              |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.5: SET OPTION}                                                      |\n+  {2:  }                                                                              |\n+  {2:  }{0: Set an option so search and substitute commands ignore case. }                |\n+  {2:  }                                                                              |\n+  {2:  }There are many settings in Neovim that you can configure to suit your needs.  |\n+  {2:  }                                                                              |\n+  {2:  } 1. Search for 'ignore' by entering: /ignore                                  |\n+  {2:  }    Repeat several times by pressing n.                                       |\n+  {2:  }                                                                              |\n+  {2:  } 2. Set the 'ic' (Ignore case) option by entering:                            |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} ic                                                               |\n+  {2:  }                                                                              |\n+  {2:  } 3. Now search for 'ignore' again by pressing n.                              |\n+  {2:  }    Notice that Ignore and IGNORE are now also found.                         |\n+  {2:  }                                                                              |\n+  {2:  } 4. Set the 'hlsearch' and 'incsearch' options:                               |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} hls is                                                           |\n+  {2:  }                                                                              |\n+  {2:  } 5. Now type the search command again and see what happens: /ignore <Enter>   |\n+  {2:  }                                                                              |\n+  {2:  } 6. To disable ignoring case enter:                                           |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} noic                                                             |\n+  {2:  }                                                                              |\n+  {2:  } 7. To invert the value of a setting, prepend it with \"inv\":                  |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} invic                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: To remove the highlighting of matches enter:                            |\n+  {2:  }                                                                              |\n+  {2:  }        :nohlsearch                                                           |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: If you want to ignore case for just one search command, use {4:\\c}          |\n+  {2:  }      in the phrase: /ignore\\c <Enter>                                        |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6 SUMMARY}                                                            |\n+  {2:  }                                                                              |\n+  {2:  } 1. Type {8:o} to open a line BELOW the cursor and start Insert mode.             |\n+  {2:  }    Type {8:O} to open a line ABOVE the cursor.                                   |\n+  {2:  }                                                                              |\n+  {2:  } 2. Type {10:a} to insert text AFTER the cursor.                                   |\n+  {2:  }    Type {8:A} to insert text after the end of the line.                          |\n+  {2:  }                                                                              |\n+  {2:  } 3. The {12:e} command moves to the end of a word.                                 |\n+  {2:  }                                                                              |\n+  {2:  } 4. The {8:y} operator copies text, {8:p} pastes it.                                  |\n+  {2:  }                                                                              |\n+  {2:  } 5. Typing a capital {8:R} enters Replace mode until {6:<Esc>} is                     |\n+  {2:  }     pressed.                                                                 |\n+  {2:  }                                                                              |\n+  {2:  } 6. Typing \"{4::set} xxx\" sets the option \"xxx\". Some options are:                |\n+  {2:  }                                                                              |\n+  {2:  }        'ic' 'ignorecase'   ignore upper/lower case when searching            |\n+  {2:  }        'is' 'incsearch'    show partial matches for a search phrase          |\n+  {2:  }        'hls' 'hlsearch'    highlight all matching phrases                    |\n+  {2:  }                                                                              |\n+  {2:  }     You can either use the long or the short option name.                    |\n+  {2:  }                                                                              |\n+  {2:  } 7. Prepend \"no\" to switch an option off:                                     |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} noic                                                             |\n+  {2:  }                                                                              |\n+  {2:  } 8. Prepend \"inv\" to invert an option:                                        |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} invic                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 7.1: GETTING HELP}                                                    |\n+  {2:  }                                                                              |\n+  {2:  }{0: Use the online help system. }                                                 |\n+  {2:  }                                                                              |\n+  {2:  }Neovim has a comprehensive online help system.                                |\n+  {2:  }                                                                              |\n+  {2:  }To get started, try one of these three:                                       |\n+  {2:  }                                                                              |\n+  {2:  }  - press the {6:<F1>} key (if you have one)                                      |\n+  {2:  }  - type :help                                                                |\n+  {2:  }                                                                              |\n+  {2:  }Read the text in the help window to find out how the help works.              |\n+  {2:  }Type {6:<C-w><C-w>} to jump from one window to another.                           |\n+  {2:  }Type :q to close the help window.                                             |\n+  {2:  }                                                                              |\n+  {2:  }You can find help on just about any subject, by giving an argument to the     |\n+  {2:  }\":help\" command. Try these (don't forget to press <Enter>):                   |\n+  {2:  }                                                                              |\n+  {2:  }    :help {16:w}                                                                   |\n+  {2:  }    :help c_CTRL{8:-}D                                                            |\n+  {2:  }    :help insert{8:-}index                                                        |\n+  {2:  }    :help user{8:-}manual                                                         |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 7.2: CREATE A STARTUP SCRIPT}                                         |\n+  {2:  }                                                                              |\n+  {2:  }{0: Enable Neovim features. }                                                     |\n+  {2:  }                                                                              |\n+  {2:  }Neovim is a very configurable editor. You can customise it any way you like.  |\n+  {2:  }To start using more features create an \"init.vim\" file.                       |\n+  {2:  }                                                                              |\n+  {2:  } 1. Start editing the \"init.vim\" file.                                        |\n+  {2:  }                                                                              |\n+  {2:  }    :call mkdir{6:(}stdpath{6:(}{15:'config'}{6:)},{15:'p'}{6:)}                                        |\n+  {2:  }    :exe {15:'edit'} stdpath{6:(}{15:'config'}{6:)}{8:.}{15:'/init.vim'}                                 |\n+  {2:  }                                                                              |\n+  {2:  } 2. Write the file with:                                                      |\n+  {2:  }                                                                              |\n+  {2:  }    :w                                                                        |\n+  {2:  }                                                                              |\n+  {2:  }  You can add all your preferred settings to this \"init.vim\" file.            |\n+  {2:  }  For more information type :help {16:init}{8:.}{16:vim}.                                   |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 7.3: COMPLETION}                                                      |\n+  {2:  }                                                                              |\n+  {2:  }{0: Command line completion with }{6:<C-d>}{0: and }{6:<Tab>}{0:. }                               |\n+  {2:  }                                                                              |\n+  {2:  } 1. List the contents of the current directory: :{8:!}dir                         |\n+    ]] or [[\n+  {2:  } ^1. Type :{8:!}ls to get a listing of your directory.                             |\n+  {2:  }    You already know you must hit {6:<Enter>} after this.                         |\n+  {2:  }                                                                              |\n+  {2:  } 2. Choose a filename that does not exist yet, such as TEST.                  |\n+  {2:  }                                                                              |\n+  {2:  } 3. Now type:                                                                 |\n+  {2:  }                                                                              |\n+  {2:  }        :w {16:TEST}                                                               |\n+  {2:  }                                                                              |\n+  {2:  }   (where TEST is the filename you chose.)                                    |\n+  {2:  }                                                                              |\n+  {2:  } 4. This saves the current file under the name TEST.                          |\n+  {2:  }    To verify this, type :{8:!}ls again to see your directory.                    |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: If you were to exit Neovim and start it again with nvim TEST, the file  |\n+  {2:  }      would be an exact copy of the tutorial when you saved it.               |\n+  {2:  }                                                                              |\n+  {2:  } 5. Now remove the file by typing:                                            |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:!}rm TEST                                                             |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 5.3: SELECTING TEXT TO WRITE}                                         |\n+  {2:  }                                                                              |\n+  {2:  }{0: To save part of the file, type }{8:v}{0: motion }:w {16:FILENAME}{0:. }                        |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to this line.                                             |\n+  {2:  }                                                                              |\n+  {2:  } 2. Press {4:v} and move the cursor to the fifth item below. Notice that the      |\n+  {2:  }    text is highlighted.                                                      |\n+  {2:  }                                                                              |\n+  {2:  } 3. Press the {8::} character. At the bottom of the screen                        |\n+  {2:  }                                                                              |\n+  {2:  }        :{15:'<},{15:'>}                                                                |\n+  {2:  }                                                                              |\n+  {2:  }    will appear.                                                              |\n+  {2:  }                                                                              |\n+  {2:  } 4. Type                                                                      |\n+  {2:  }                                                                              |\n+  {2:  }        :w {16:TEST}                                                               |\n+  {2:  }                                                                              |\n+  {2:  }    where TEST is a filename that does not exist yet. Verify that you see     |\n+  {2:  }                                                                              |\n+  {2:  }        :{15:'<},{15:'>}{16:w} {16:TEST}                                                          |\n+  {2:  }                                                                              |\n+  {2:  }    before you press {6:<Enter>}.                                                 |\n+  {2:  }                                                                              |\n+  {2:  } 5. Neovim will write the selected lines to the file TEST. Use :{8:!}ls to see it.|\n+  {2:  }    Do not remove it yet! We will use it in the next lesson.                  |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: Pressing {4:v} starts {4:Visual selection}. You can move the cursor around to   |\n+  {2:  }      make the selection bigger or smaller. Then you can use an operator to   |\n+  {2:  }      do something with the text. For example, {8:d} deletes the text.            |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 5.4: RETRIEVING AND MERGING FILES}                                    |\n+  {2:  }                                                                              |\n+  {2:  }{0: To retrieve the contents of a file, type }:r {16:FILENAME}{0:. }                       |\n+  {2:  }                                                                              |\n+  {2:  } 1. Place the cursor just above this line.                                    |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}:  After executing Step 2 you will see text from Lesson 5.3. Then move    |\n+  {2:  }       DOWN to see this lesson again.                                         |\n+  {2:  }                                                                              |\n+  {2:  } 2. Now retrieve your TEST file using the command                             |\n+  {2:  }                                                                              |\n+  {2:  }        :r {16:TEST}                                                               |\n+  {2:  }                                                                              |\n+  {2:  }    where TEST is the name of the file you used.                              |\n+  {2:  }    The file you retrieve is placed below the cursor line.                    |\n+  {2:  }                                                                              |\n+  {2:  } 3. To verify that a file was retrieved, cursor back and notice that there    |\n+  {2:  }    are now two copies of Lesson 5.3, the original and the retrieved version. |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: You can also read the output of an external command. For example,       |\n+  {2:  }                                                                              |\n+  {2:  }        :r {8:!}ls                                                                |\n+  {2:  }                                                                              |\n+  {2:  }      reads the output of the ls command and puts it below the cursor.        |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 5 SUMMARY}                                                            |\n+  {2:  }                                                                              |\n+  {2:  } 1. {4::!command} executes an external command.                                   |\n+  {2:  }                                                                              |\n+  {2:  }     Some useful examples are:                                                |\n+  {2:  }     :{8:!}ls                    - shows a directory listing                      |\n+  {2:  }     :{8:!}rm  FILENAME          - removes file FILENAME                          |\n+  {2:  }                                                                              |\n+  {2:  } 2. {4::w} FILENAME              writes the current Neovim file to disk with      |\n+  {2:  }                             name FILENAME.                                   |\n+  {2:  }                                                                              |\n+  {2:  } 3. {4:v}  motion  :w FILENAME   saves the Visually selected lines in file        |\n+  {2:  }                             FILENAME.                                        |\n+  {2:  }                                                                              |\n+  {2:  } 4. {4::r} FILENAME              retrieves disk file FILENAME and puts it         |\n+  {2:  }                             below the cursor position.                       |\n+  {2:  }                                                                              |\n+  {2:  } 5. {4::r !ls}                   reads the output of the ls command and           |\n+  {2:  }                             puts it below the cursor position.               |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.1: THE OPEN COMMAND}                                                |\n+  {2:  }                                                                              |\n+  {2:  }{0: Type }{8:o}{0: to open a line below the cursor and place you in Insert mode. }        |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to the line below marked {9:✓}.                               |\n+  {2:  }                                                                              |\n+  {2:  } 2. Type the lowercase letter {8:o} to {4:open} up a line BELOW the                   |\n+  {2:  }    cursor and place you in Insert mode.                                      |\n+  {2:  }                                                                              |\n+  {2:  } 3. Now type some text and press {6:<Esc>} to exit Insert mode.                   |\n+  {2:  }                                                                              |\n+  {9:✓ }{6:After typing }{13:o}{6: the cursor is placed on the open line in Insert mode.}          |\n+  {2:  }                                                                              |\n+  {2:  } 4. To open up a line ABOVE the cursor, simply type a {4:capital O}, rather       |\n+  {2:  }    than a lowercase {8:o}. Try this on the line below.                           |\n+  {2:  }                                                                              |\n+  {9:✓ }{6:Open up a line above this by typing O while the cursor is on this line.}       |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.2: THE APPEND COMMAND}                                              |\n+  {2:  }                                                                              |\n+  {2:  }{0: Type }{10:a}{0: to insert text AFTER the cursor. }                                     |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to the start of the line below marked {11:✗}.                  |\n+  {2:  }                                                                              |\n+  {2:  } 2. Press {12:e} until the cursor is on the end of \"li\".                           |\n+  {2:  }                                                                              |\n+  {2:  } 3. Type the lowercase letter {10:a} to {4:append} text AFTER the cursor.              |\n+  {2:  }                                                                              |\n+  {2:  } 4. Complete the word like the line below it. Press {6:<Esc>} to exit Insert mode.|\n+  {2:  }                                                                              |\n+  {2:  } 5. Use {12:e} to move to the next incomplete word and repeat steps 3 and 4.       |\n+  {2:  }                                                                              |\n+  {11:✗ }{6:This li will allow you to pract appendi text to a line.}                       |\n+  {9:✓ }{6:This line will allow you to practice appending text to a line.}                |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: {4:a}, {4:i} and {4:A} all go to the same Insert mode, the only                     |\n+  {2:  }      difference is where the characters are inserted.                        |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.3: ANOTHER WAY TO REPLACE}                                          |\n+  {2:  }                                                                              |\n+  {2:  }{0: Type a capital }{8:R}{0: to replace more than one character. }                        |\n+  {2:  }                                                                              |\n+  {2:  } 1. Move the cursor to the first line below marked {11:✗}. Move the cursor to      |\n+  {2:  }    the beginning of the first \"xxx\".                                         |\n+  {2:  }                                                                              |\n+  {2:  } 2. Now press {8:R} ({4:capital R}) and type the number below it in the               |\n+  {2:  }    second line, so that it replaces the \"xxx\".                               |\n+  {2:  }                                                                              |\n+  {2:  } 3. Press {6:<Esc>} to leave {4:Replace mode}. Notice that                            |\n+  {2:  }    the rest of the line remains unmodified.                                  |\n+  {2:  }                                                                              |\n+  {2:  } 4. Repeat the steps to replace the remaining \"xxx\".                          |\n+  {2:  }                                                                              |\n+  {11:✗ }{6:Adding 123 to xxx gives you xxx.}                                              |\n+  {9:✓ }{6:Adding 123 to 456 gives you 579.}                                              |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: Replace mode is like Insert mode, but every typed character             |\n+  {2:  }      replaces an existing character.                                         |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.4: COPY AND PASTE TEXT}                                             |\n+  {2:  }                                                                              |\n+  {2:  }{0: Use the }{8:y}{0: operator to copy text and }{8:p}{0: to put it. }                            |\n+  {2:  }                                                                              |\n+  {2:  } 1. Go to the line marked with {9:✓} below and place the cursor after \"a)\".       |\n+  {2:  }                                                                              |\n+  {2:  } 2. Start Visual mode with {8:v} and move the cursor to just before               |\n+  {2:  }    \"first\".                                                                  |\n+  {2:  }                                                                              |\n+  {2:  } 3. Type {8:y} to {4:yank} (copy) the highlighted text.                               |\n+  {2:  }                                                                              |\n+  {2:  } 4. Move the cursor to the end of the next line: j{12:$}                           |\n+  {2:  }                                                                              |\n+  {2:  } 5. Type {8:p} to {4:put} (paste) the text.                                           |\n+  {2:  }                                                                              |\n+  {2:  } 6. Press {10:a} and then type \"second\". Press {6:<Esc>} to leave                      |\n+  {2:  }    Insert mode.                                                              |\n+  {2:  }                                                                              |\n+  {2:  } 7. Use Visual mode to select \"item.\", yank it with {8:y}, move to the            |\n+  {2:  }    end of the next line with j{12:$} and put the text there with {8:p}                |\n+  {2:  }                                                                              |\n+  {9:✓ }{6:a) This is the first item.}                                                    |\n+  {11:✗ }{6:b)}                                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: you can use {8:y} as an operator: {8:y}{12:w} yanks one word.                        |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: you can use {8:P} to put before the cursor, rather than after.              |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6.5: SET OPTION}                                                      |\n+  {2:  }                                                                              |\n+  {2:  }{0: Set an option so search and substitute commands ignore case. }                |\n+  {2:  }                                                                              |\n+  {2:  }There are many settings in Neovim that you can configure to suit your needs.  |\n+  {2:  }                                                                              |\n+  {2:  } 1. Search for 'ignore' by entering: /ignore                                  |\n+  {2:  }    Repeat several times by pressing n.                                       |\n+  {2:  }                                                                              |\n+  {2:  } 2. Set the 'ic' (Ignore case) option by entering:                            |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} ic                                                               |\n+  {2:  }                                                                              |\n+  {2:  } 3. Now search for 'ignore' again by pressing n.                              |\n+  {2:  }    Notice that Ignore and IGNORE are now also found.                         |\n+  {2:  }                                                                              |\n+  {2:  } 4. Set the 'hlsearch' and 'incsearch' options:                               |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} hls is                                                           |\n+  {2:  }                                                                              |\n+  {2:  } 5. Now type the search command again and see what happens: /ignore <Enter>   |\n+  {2:  }                                                                              |\n+  {2:  } 6. To disable ignoring case enter:                                           |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} noic                                                             |\n+  {2:  }                                                                              |\n+  {2:  } 7. To invert the value of a setting, prepend it with \"inv\":                  |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} invic                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: To remove the highlighting of matches enter:                            |\n+  {2:  }                                                                              |\n+  {2:  }        :nohlsearch                                                           |\n+  {2:  }                                                                              |\n+  {2:  }{0:NOTE}: If you want to ignore case for just one search command, use {4:\\c}          |\n+  {2:  }      in the phrase: /ignore\\c <Enter>                                        |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 6 SUMMARY}                                                            |\n+  {2:  }                                                                              |\n+  {2:  } 1. Type {8:o} to open a line BELOW the cursor and start Insert mode.             |\n+  {2:  }    Type {8:O} to open a line ABOVE the cursor.                                   |\n+  {2:  }                                                                              |\n+  {2:  } 2. Type {10:a} to insert text AFTER the cursor.                                   |\n+  {2:  }    Type {8:A} to insert text after the end of the line.                          |\n+  {2:  }                                                                              |\n+  {2:  } 3. The {12:e} command moves to the end of a word.                                 |\n+  {2:  }                                                                              |\n+  {2:  } 4. The {8:y} operator copies text, {8:p} pastes it.                                  |\n+  {2:  }                                                                              |\n+  {2:  } 5. Typing a capital {8:R} enters Replace mode until {6:<Esc>} is                     |\n+  {2:  }     pressed.                                                                 |\n+  {2:  }                                                                              |\n+  {2:  } 6. Typing \"{4::set} xxx\" sets the option \"xxx\". Some options are:                |\n+  {2:  }                                                                              |\n+  {2:  }        'ic' 'ignorecase'   ignore upper/lower case when searching            |\n+  {2:  }        'is' 'incsearch'    show partial matches for a search phrase          |\n+  {2:  }        'hls' 'hlsearch'    highlight all matching phrases                    |\n+  {2:  }                                                                              |\n+  {2:  }     You can either use the long or the short option name.                    |\n+  {2:  }                                                                              |\n+  {2:  } 7. Prepend \"no\" to switch an option off:                                     |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} noic                                                             |\n+  {2:  }                                                                              |\n+  {2:  } 8. Prepend \"inv\" to invert an option:                                        |\n+  {2:  }                                                                              |\n+  {2:  }        :{8:set} invic                                                            |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 7.1: GETTING HELP}                                                    |\n+  {2:  }                                                                              |\n+  {2:  }{0: Use the online help system. }                                                 |\n+  {2:  }                                                                              |\n+  {2:  }Neovim has a comprehensive online help system.                                |\n+  {2:  }                                                                              |\n+  {2:  }To get started, try one of these three:                                       |\n+  {2:  }                                                                              |\n+  {2:  }  - press the {6:<F1>} key (if you have one)                                      |\n+  {2:  }  - type :help                                                                |\n+  {2:  }                                                                              |\n+  {2:  }Read the text in the help window to find out how the help works.              |\n+  {2:  }Type {6:<C-w><C-w>} to jump from one window to another.                           |\n+  {2:  }Type :q to close the help window.                                             |\n+  {2:  }                                                                              |\n+  {2:  }You can find help on just about any subject, by giving an argument to the     |\n+  {2:  }\":help\" command. Try these (don't forget to press <Enter>):                   |\n+  {2:  }                                                                              |\n+  {2:  }    :help {16:w}                                                                   |\n+  {2:  }    :help c_CTRL{8:-}D                                                            |\n+  {2:  }    :help insert{8:-}index                                                        |\n+  {2:  }    :help user{8:-}manual                                                         |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 7.2: CREATE A STARTUP SCRIPT}                                         |\n+  {2:  }                                                                              |\n+  {2:  }{0: Enable Neovim features. }                                                     |\n+  {2:  }                                                                              |\n+  {2:  }Neovim is a very configurable editor. You can customise it any way you like.  |\n+  {2:  }To start using more features create an \"init.vim\" file.                       |\n+  {2:  }                                                                              |\n+  {2:  } 1. Start editing the \"init.vim\" file.                                        |\n+  {2:  }                                                                              |\n+  {2:  }    :call mkdir{6:(}stdpath{6:(}{15:'config'}{6:)},{15:'p'}{6:)}                                        |\n+  {2:  }    :exe {15:'edit'} stdpath{6:(}{15:'config'}{6:)}{8:.}{15:'/init.vim'}                                 |\n+  {2:  }                                                                              |\n+  {2:  } 2. Write the file with:                                                      |\n+  {2:  }                                                                              |\n+  {2:  }    :w                                                                        |\n+  {2:  }                                                                              |\n+  {2:  }  You can add all your preferred settings to this \"init.vim\" file.            |\n+  {2:  }  For more information type :help {16:init}{8:.}{16:vim}.                                   |\n+  {2:  }                                                                              |\n+  {2:  }{6:#}{7: Lesson 7.3: COMPLETION}                                                      |\n+  {2:  }                                                                              |\n+  {2:  }{0: Command line completion with }{6:<C-d>}{0: and }{6:<Tab>}{0:. }                               |\n+  {2:  }                                                                              |\n+  {2:  } 1. List the contents of the current directory: :{8:!}ls                          |\n+    ]]\n+\n+    local screen = Screen.new(80, 300)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1335099147",
            "id": 1335099147,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Pk_8L",
            "original_commit_id": "2e59f303d174b3d8074f0914e4d23e1abfb64b1f",
            "original_line": 670,
            "original_position": 670,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1640972515,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1335099147/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-24T04:25:19Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1335099147",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "_links": {
                "html": {
                    "href": "https://github.com/neovim/neovim/pull/25251#discussion_r1335099213"
                },
                "pull_request": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/25251"
                },
                "self": {
                    "href": "https://api.github.com/repos/neovim/neovim/pulls/comments/1335099213"
                }
            },
            "author_association": "MEMBER",
            "body": "That's good, but the whole buffer doesn't need to be tested. Test verbosity is also a consideration.",
            "commit_id": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
            "created_at": "2023-09-24T04:26:20Z",
            "diff_hunk": "@@ -0,0 +1,64 @@\n+local Screen = require('test.functional.ui.screen')\n+local helpers = require('test.functional.helpers')(after_each)\n+local clear = helpers.clear\n+local command = helpers.command\n+local feed = helpers.feed\n+local is_os = helpers.is_os\n+\n+describe(':Tutor', function()\n+  before_each(function()\n+    clear({ args = { '-u', 'NORC' } })\n+    command('set cmdheight=0')\n+    command('Tutor')\n+  end)\n+\n+  it('should apply transformation', function()\n+    local test_table = is_os('win') and {\n+      ['!dir'] = {\n+        '{2:  } 1. Type :{1:^!}{3:dir} to get a listing of your directory.                            |',\n+        '{2:  }    To verify this, type :{1:^!}{3:dir} again to see your directory.                   |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:dir} to see it|',\n+        '{2:  }        :r {1:^!}{3:dir}                                                               |',\n+        '{2:  }     :{1:^!}{3:dir}                   - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!dir}                  reads the output of the dir command and          |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:dir}                         |'\n+      },\n+      ['!del'] = {\n+        '{2:  }        :{1:^!}{3:del} TEST                                                            |',\n+        '{2:  }     :{1:^!}{3:del} FILENAME          - removes file FILENAME                          |',\n+      }\n+    } or {\n+      ['!ls'] = {\n+        '{2:  } 1. Type :{1:^!}{3:ls} to get a listing of your directory.                             |',\n+        '{2:  }    To verify this, type :{1:^!}{3:ls} again to see your directory.                    |',\n+        '{2:  } 5. Neovim will write the selected lines to the file TEST. Use :{1:^!}{3:ls} to see it.|',\n+        '{2:  }        :r {1:^!}{3:ls}                                                                |',\n+        '{2:  }     :{1:^!}{3:ls}                    - shows a directory listing                      |',\n+        '{2:  } 5. {4::r }{5:^!ls}                   reads the output of the ls command and           |',\n+        '{2:  } 1. List the contents of the current directory: :{1:^!}{3:ls}                          |'\n+      },\n+      ['!rm'] = {\n+        '{2:  }        :{1:^!}{3:rm} TEST                                                             |',\n+        '{2:  }     :{1:^!}{3:rm}  FILENAME          - removes file FILENAME                          |',\n+      }\n+    }\n+\n+    local screen = Screen.new(80, 1)\n+    screen:set_default_attr_ids({\n+      [1] = { foreground = Screen.colors.Brown, bold = true, background = Screen.colors.Yellow1 },\n+      [2] = { foreground = Screen.colors.DarkBlue, background = Screen.colors.Gray },\n+      [3] = { background = Screen.colors.Yellow },\n+      [4] = { underline = true, foreground = tonumber('0x0088ff') },\n+      [5] = { underline = true, foreground = tonumber('0x0088ff'), background = Screen.colors.Yellow },\n+    })\n+    screen:attach()\n+\n+    for search_word, search_matches in pairs(test_table) do\n+      feed('gg0<CR>')\n+      for _, expected_line in ipairs(search_matches) do\n+        feed('/' .. search_word .. '<CR>')\n+        screen:expect(expected_line)",
            "html_url": "https://github.com/neovim/neovim/pull/25251#discussion_r1335099213",
            "id": 1335099213,
            "in_reply_to_id": 1334316262,
            "line": null,
            "node_id": "PRRC_kwDOAPphoM5Pk_9N",
            "original_commit_id": "8da4c5bed68a2d860251f3c526f7fea7b6782dde",
            "original_line": 60,
            "original_position": 60,
            "original_start_line": null,
            "path": "test/functional/plugin/tutor_spec.lua",
            "position": null,
            "pull_request_review_id": 1640972554,
            "pull_request_url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1335099213/reactions"
            },
            "side": "RIGHT",
            "start_line": null,
            "start_side": null,
            "subject_type": "line",
            "updated_at": "2023-09-24T04:26:20Z",
            "url": "https://api.github.com/repos/neovim/neovim/pulls/comments/1335099213",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        }
    ],
    "comment_regular_data": [
        {
            "author_association": "MEMBER",
            "body": "This would need a test since it's non-obvious. The test should check actual tutorial contents.\r\n\r\nAlternatively we could:\r\n\r\n- change the tutorial to mention \"on Windows, use ...\" in various places.\r\n- or setup 'shell' to use powershell, which I think has both `ls` and `rm`",
            "created_at": "2023-09-20T09:53:18Z",
            "html_url": "https://github.com/neovim/neovim/pull/25251#issuecomment-1727378206",
            "id": 1727378206,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25251",
            "node_id": "IC_kwDOAPphoM5m9bMe",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727378206/reactions"
            },
            "updated_at": "2023-09-20T09:53:18Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727378206",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "That was just an idea. I can change the tutorial to mention the Windows version and change the \"expect\" metadata line numbers if that is better future maintenance.",
            "created_at": "2023-09-20T12:31:21Z",
            "html_url": "https://github.com/neovim/neovim/pull/25251#issuecomment-1727629848",
            "id": 1727629848,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25251",
            "node_id": "IC_kwDOAPphoM5m-YoY",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727629848/reactions"
            },
            "updated_at": "2023-09-20T12:31:21Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727629848",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "author_association": "MEMBER",
            "body": "> That was just an idea. I can change the tutorial to mention the Windows version and change the \"expect\" metadata line numbers if that is better future maintenance.\r\n\r\nI think this way is probably most usable for users, but think we should keep the data in the tutor definition file (see my suggestion above) rather than separately in a \"transform\" structure. That also makes the content more \"self-documenting\", even though the syntax is a bit much.",
            "created_at": "2023-09-20T13:00:01Z",
            "html_url": "https://github.com/neovim/neovim/pull/25251#issuecomment-1727680838",
            "id": 1727680838,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25251",
            "node_id": "IC_kwDOAPphoM5m-lFG",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 1,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 1,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727680838/reactions"
            },
            "updated_at": "2023-09-20T13:00:44Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727680838",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/1359421?v=4",
                "events_url": "https://api.github.com/users/justinmk/events{/privacy}",
                "followers_url": "https://api.github.com/users/justinmk/followers",
                "following_url": "https://api.github.com/users/justinmk/following{/other_user}",
                "gists_url": "https://api.github.com/users/justinmk/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/justinmk",
                "id": 1359421,
                "login": "justinmk",
                "node_id": "MDQ6VXNlcjEzNTk0MjE=",
                "organizations_url": "https://api.github.com/users/justinmk/orgs",
                "received_events_url": "https://api.github.com/users/justinmk/received_events",
                "repos_url": "https://api.github.com/users/justinmk/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/justinmk/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/justinmk/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/justinmk"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "I did as suggested, but some tricks were necessary to maintain the indentation.\r\n\r\nI'll work on the tests next.",
            "created_at": "2023-09-20T14:49:35Z",
            "html_url": "https://github.com/neovim/neovim/pull/25251#issuecomment-1727885374",
            "id": 1727885374,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25251",
            "node_id": "IC_kwDOAPphoM5m_XA-",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727885374/reactions"
            },
            "updated_at": "2023-09-20T14:49:35Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1727885374",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        },
        {
            "author_association": "CONTRIBUTOR",
            "body": "Fixed the substitution and created a functionaltest",
            "created_at": "2023-09-21T16:03:14Z",
            "html_url": "https://github.com/neovim/neovim/pull/25251#issuecomment-1729874978",
            "id": 1729874978,
            "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25251",
            "node_id": "IC_kwDOAPphoM5nG8wi",
            "performed_via_github_app": null,
            "reactions": {
                "+1": 0,
                "-1": 0,
                "confused": 0,
                "eyes": 0,
                "heart": 0,
                "hooray": 0,
                "laugh": 0,
                "rocket": 0,
                "total_count": 0,
                "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729874978/reactions"
            },
            "updated_at": "2023-09-21T16:03:14Z",
            "url": "https://api.github.com/repos/neovim/neovim/issues/comments/1729874978",
            "user": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            }
        }
    ],
    "comments_url": "https://api.github.com/repos/neovim/neovim/issues/25251/comments",
    "commits_url": "https://api.github.com/repos/neovim/neovim/pulls/25251/commits",
    "created_at": "2023-09-19T22:56:22Z",
    "diff_url": "https://github.com/neovim/neovim/pull/25251.diff",
    "draft": false,
    "head": {
        "label": "lsvmello:fix-tutor",
        "ref": "fix-tutor",
        "repo": {
            "allow_forking": true,
            "archive_url": "https://api.github.com/repos/lsvmello/neovim/{archive_format}{/ref}",
            "archived": false,
            "assignees_url": "https://api.github.com/repos/lsvmello/neovim/assignees{/user}",
            "blobs_url": "https://api.github.com/repos/lsvmello/neovim/git/blobs{/sha}",
            "branches_url": "https://api.github.com/repos/lsvmello/neovim/branches{/branch}",
            "clone_url": "https://github.com/lsvmello/neovim.git",
            "collaborators_url": "https://api.github.com/repos/lsvmello/neovim/collaborators{/collaborator}",
            "comments_url": "https://api.github.com/repos/lsvmello/neovim/comments{/number}",
            "commits_url": "https://api.github.com/repos/lsvmello/neovim/commits{/sha}",
            "compare_url": "https://api.github.com/repos/lsvmello/neovim/compare/{base}...{head}",
            "contents_url": "https://api.github.com/repos/lsvmello/neovim/contents/{+path}",
            "contributors_url": "https://api.github.com/repos/lsvmello/neovim/contributors",
            "created_at": "2023-09-18T17:29:02Z",
            "default_branch": "master",
            "deployments_url": "https://api.github.com/repos/lsvmello/neovim/deployments",
            "description": "Vim-fork focused on extensibility and usability",
            "disabled": false,
            "downloads_url": "https://api.github.com/repos/lsvmello/neovim/downloads",
            "events_url": "https://api.github.com/repos/lsvmello/neovim/events",
            "fork": true,
            "forks": 0,
            "forks_count": 0,
            "forks_url": "https://api.github.com/repos/lsvmello/neovim/forks",
            "full_name": "lsvmello/neovim",
            "git_commits_url": "https://api.github.com/repos/lsvmello/neovim/git/commits{/sha}",
            "git_refs_url": "https://api.github.com/repos/lsvmello/neovim/git/refs{/sha}",
            "git_tags_url": "https://api.github.com/repos/lsvmello/neovim/git/tags{/sha}",
            "git_url": "git://github.com/lsvmello/neovim.git",
            "has_discussions": false,
            "has_downloads": true,
            "has_issues": false,
            "has_pages": false,
            "has_projects": true,
            "has_wiki": true,
            "homepage": "https://neovim.io",
            "hooks_url": "https://api.github.com/repos/lsvmello/neovim/hooks",
            "html_url": "https://github.com/lsvmello/neovim",
            "id": 693269885,
            "is_template": false,
            "issue_comment_url": "https://api.github.com/repos/lsvmello/neovim/issues/comments{/number}",
            "issue_events_url": "https://api.github.com/repos/lsvmello/neovim/issues/events{/number}",
            "issues_url": "https://api.github.com/repos/lsvmello/neovim/issues{/number}",
            "keys_url": "https://api.github.com/repos/lsvmello/neovim/keys{/key_id}",
            "labels_url": "https://api.github.com/repos/lsvmello/neovim/labels{/name}",
            "language": "Vim Script",
            "languages_url": "https://api.github.com/repos/lsvmello/neovim/languages",
            "license": {
                "key": "other",
                "name": "Other",
                "node_id": "MDc6TGljZW5zZTA=",
                "spdx_id": "NOASSERTION",
                "url": null
            },
            "merges_url": "https://api.github.com/repos/lsvmello/neovim/merges",
            "milestones_url": "https://api.github.com/repos/lsvmello/neovim/milestones{/number}",
            "mirror_url": null,
            "name": "neovim",
            "node_id": "R_kgDOKVJ1fQ",
            "notifications_url": "https://api.github.com/repos/lsvmello/neovim/notifications{?since,all,participating}",
            "open_issues": 0,
            "open_issues_count": 0,
            "owner": {
                "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
                "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
                "followers_url": "https://api.github.com/users/lsvmello/followers",
                "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
                "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
                "gravatar_id": "",
                "html_url": "https://github.com/lsvmello",
                "id": 70452831,
                "login": "lsvmello",
                "node_id": "MDQ6VXNlcjcwNDUyODMx",
                "organizations_url": "https://api.github.com/users/lsvmello/orgs",
                "received_events_url": "https://api.github.com/users/lsvmello/received_events",
                "repos_url": "https://api.github.com/users/lsvmello/repos",
                "site_admin": false,
                "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
                "type": "User",
                "url": "https://api.github.com/users/lsvmello"
            },
            "private": false,
            "pulls_url": "https://api.github.com/repos/lsvmello/neovim/pulls{/number}",
            "pushed_at": "2023-09-26T20:45:53Z",
            "releases_url": "https://api.github.com/repos/lsvmello/neovim/releases{/id}",
            "size": 242829,
            "ssh_url": "git@github.com:lsvmello/neovim.git",
            "stargazers_count": 0,
            "stargazers_url": "https://api.github.com/repos/lsvmello/neovim/stargazers",
            "statuses_url": "https://api.github.com/repos/lsvmello/neovim/statuses/{sha}",
            "subscribers_url": "https://api.github.com/repos/lsvmello/neovim/subscribers",
            "subscription_url": "https://api.github.com/repos/lsvmello/neovim/subscription",
            "svn_url": "https://github.com/lsvmello/neovim",
            "tags_url": "https://api.github.com/repos/lsvmello/neovim/tags",
            "teams_url": "https://api.github.com/repos/lsvmello/neovim/teams",
            "topics": [],
            "trees_url": "https://api.github.com/repos/lsvmello/neovim/git/trees{/sha}",
            "updated_at": "2023-09-19T19:32:26Z",
            "url": "https://api.github.com/repos/lsvmello/neovim",
            "visibility": "public",
            "watchers": 0,
            "watchers_count": 0,
            "web_commit_signoff_required": false
        },
        "sha": "ff3651fc1c64a873ee31e292f064be11d8c629b0",
        "user": {
            "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
            "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
            "followers_url": "https://api.github.com/users/lsvmello/followers",
            "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
            "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
            "gravatar_id": "",
            "html_url": "https://github.com/lsvmello",
            "id": 70452831,
            "login": "lsvmello",
            "node_id": "MDQ6VXNlcjcwNDUyODMx",
            "organizations_url": "https://api.github.com/users/lsvmello/orgs",
            "received_events_url": "https://api.github.com/users/lsvmello/received_events",
            "repos_url": "https://api.github.com/users/lsvmello/repos",
            "site_admin": false,
            "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
            "type": "User",
            "url": "https://api.github.com/users/lsvmello"
        }
    },
    "html_url": "https://github.com/neovim/neovim/pull/25251",
    "id": 1522080629,
    "issue_url": "https://api.github.com/repos/neovim/neovim/issues/25251",
    "labels": [],
    "locked": false,
    "merge_commit_sha": "bc6fc0123d2f02b1f209cbec740665033fbb5892",
    "merged_at": "2023-09-26T13:31:35Z",
    "milestone": null,
    "node_id": "PR_kwDOAPphoM5auRt1",
    "number": 25251,
    "patch_url": "https://github.com/neovim/neovim/pull/25251.patch",
    "requested_reviewers": [],
    "requested_teams": [],
    "review_comment_url": "https://api.github.com/repos/neovim/neovim/pulls/comments{/number}",
    "review_comments_url": "https://api.github.com/repos/neovim/neovim/pulls/25251/comments",
    "state": "closed",
    "statuses_url": "https://api.github.com/repos/neovim/neovim/statuses/ff3651fc1c64a873ee31e292f064be11d8c629b0",
    "title": "feat(tutor): add content transformation",
    "updated_at": "2023-09-26T14:43:33Z",
    "url": "https://api.github.com/repos/neovim/neovim/pulls/25251",
    "user": {
        "avatar_url": "https://avatars.githubusercontent.com/u/70452831?v=4",
        "events_url": "https://api.github.com/users/lsvmello/events{/privacy}",
        "followers_url": "https://api.github.com/users/lsvmello/followers",
        "following_url": "https://api.github.com/users/lsvmello/following{/other_user}",
        "gists_url": "https://api.github.com/users/lsvmello/gists{/gist_id}",
        "gravatar_id": "",
        "html_url": "https://github.com/lsvmello",
        "id": 70452831,
        "login": "lsvmello",
        "node_id": "MDQ6VXNlcjcwNDUyODMx",
        "organizations_url": "https://api.github.com/users/lsvmello/orgs",
        "received_events_url": "https://api.github.com/users/lsvmello/received_events",
        "repos_url": "https://api.github.com/users/lsvmello/repos",
        "site_admin": false,
        "starred_url": "https://api.github.com/users/lsvmello/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/lsvmello/subscriptions",
        "type": "User",
        "url": "https://api.github.com/users/lsvmello"
    }
}